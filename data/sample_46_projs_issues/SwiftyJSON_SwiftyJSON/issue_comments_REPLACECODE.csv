issue_num,datetime,body,login,close_date
823,2017-03-27 18:54:53,"### What did you do?
I want to run swiftyjson from terminal using Marathon

to use alamofire I can simply type 
marathon add https://github.com/Alamofire/Alamofire.git
<img width=""721"" alt=""screen shot 2017-03-27 at 2 47 05 pm"" src=""https://cloud.githubusercontent.com/assets/289994/24372820/3b95bbc0-12fd-11e7-8820-d2ad06a47b4a.png"">

marathon add https://github.com/SwiftyJSON/SwiftyJSON.git  - 

Marathon is looking for swift build packages - 


Please replace this with what you did.
### What did you expect to happen?
this project should provide a native swift build package.



",johndpope,
823,2017-03-27 18:55:52,https://github.com/apple/swift-package-manager,johndpope,
822,2017-03-20 06:56:12,"is there any effort for creating a JSON object from NSObject subclass that contains the allowed properties (like: String, Number, etc ...)",murad1981,
821,2017-03-15 11:44:59,"### What did you do?

<S_CODE_TOKEN>
### What did you expect to happen?

Printing out the key and value of the json object.

### What actually happened instead?

no printing at all of key or value

### Environment

List the software versions you're using:

 - SwiftyJSON: *latest version just did pods update*
 

Please also mention which package manager you used and its version. Delete the
other package managers in this list:

 - Cocoapods: *1.2.0* (Use `pod --version` in Terminal)


### Project that demonstrates the issue

",bostonmacosx,2017-03-15 15:16:07
821,2017-03-15 15:16:07,"@bostonmacosx You should use 

    var tempJSON: JSON = JSON(parseJSON: test1)

to construct a JSON object if you are parsing from string literal.",wongzigii,2017-03-15 15:16:07
820,2017-03-13 23:14:08,"Hey guys, just wondering if there any reason why you guys don't pull from IBM's work on SwiftyJSON which seems to going well https://github.com/SwiftyJSON/SwiftyJSON/compare/master...IBM-Swift:master",maximveksler,
819,2017-03-10 09:43:28,"In your current Version the boolValue property returns false for String ""1"", which ist the most common string for bool. Why don't just use native boolValue of NSString? Or At least you should add ""1"" to your list. Here is my fix:

`
//Non-optional bool
    public var boolValue: Bool {
        get {
            switch self.type {
            case .bool:
                return self.rawBool
            case .number:
                return self.rawNumber.boolValue
            case .string:
                return (self.stringValue as? NSString)?.boolValue ?? false                
            default:
                return false
            }
        }
        set {
            self.object = newValue
        }
    }
`",zidanex,
818,2017-03-07 15:54:59,"Hello guys,

Want to take rid of Realm, and use SwiftyJSON and I'm trying to figure out how many Mb will increase my app when I submit my app on AppStore.

I hope you understand my question.
Thanks.",unittesting0,2017-03-08 02:15:17
818,2017-03-08 02:15:17,"Hey @unittesting0 ,  you will likely want to perform an ad-hoc export to see the size of each thinned variant of your app anyway. Does not test it but it may works.",wongzigii,2017-03-08 02:15:17
817,2017-03-03 01:45:49,"The PR should summarize what was changed and why. Here are some questions to
help you if you're not sure:

 - What behavior was changed?
 - What code was refactored / updated to support this change?
 - What issues are related to this PR? Or why was this change introduced?

Checklist - While not every PR needs it, new features should consider this list:

 - [ ] Does this have tests?
 - [ ] Does this have documentation?
 - [ ] Does this break the public API (Requires major version bump)?
 - [ ] Is this a new feature (Requires minor version bump)?",LiuSky,2017-03-03 01:47:09
816,2017-03-03 01:39:26,"The PR should summarize what was changed and why. Here are some questions to
help you if you're not sure:

 - What behavior was changed?
 - What code was refactored / updated to support this change?
 - What issues are related to this PR? Or why was this change introduced?

Checklist - While not every PR needs it, new features should consider this list:

 - [ ] Does this have tests?
 - [ ] Does this have documentation?
 - [ ] Does this break the public API (Requires major version bump)?
 - [ ] Is this a new feature (Requires minor version bump)?",LiuSky,2017-03-03 01:40:22
815,2017-02-28 06:40:07,"### What did you do?

On the [document](https://github.com/SwiftyJSON/SwiftyJSON#merging), I find that I can merge 2 SwiftyJSON objects, but I actually cannot find that method in the implementation; thus I cannot merge them.

Is my current version (3.1.1) not implemented with `merge` method? Should I upgrade my version current version?

Thanks,
",quanguyen,2017-02-28 09:10:11
815,2017-02-28 09:10:10,@quanguyen You're right. Mergeability is a new feature included in SwiftyJSON 3.1.4. I should bump the minor version number to follow [Semantic Versioning](http://semver.org/). Sorry about this. 😢 ,wongzigii,2017-02-28 09:10:11
815,2017-03-14 15:03:18,"me too can not use merge function, I'm using version 3.1.3 , how can I use version 3.1.4",ktinguer,2017-02-28 09:10:11
814,2017-02-26 13:39:11,"This PR strengthens the tests around the JSON.rawData() function.

The https://github.com/IBM-Swift/SwiftyJSON fork has problems serializing nested json, it returns nil. 

The SwiftyJSON/SwiftyJSON has no problems serializing nested json. It works as it should.


I have added a unittest that hopefully can cause the problem to be fixed in the IBM-Swift/SwiftyJSON fork.


# Proof of concept

This was my original proof of concept code for recreating the problem.

	func asJson() -> JSON {
		let user: JSON = [
			""name"": ""John Doe""
		]
		return [
			""alarmLevel"": 123,
			""user"": user
		]
	}
	
	func main() {
		let json = asJson()
		let s = json.rawString() ?? ""ERROR""
		print(s)
	}


Output when using SwiftyJSON/SwiftyJSON

	{
	  ""alarmLevel"" : 123,
	  ""user"" : {
	    ""name"" : ""John Doe""
	  }
	}

Output when using IBM-Swift/SwiftyJSON

    ERROR

",neoneye,2017-03-15 15:20:34
814,2017-03-15 15:20:26,LGTM Thanks so much!  @neoneye ,wongzigii,2017-03-15 15:20:34
813,2017-02-24 18:03:25,Relate to #803 ,wongzigii,2017-03-01 07:55:12
812,2017-02-24 09:34:16,"### What did you do?

I tried to use Alamofire and SwiftyJSON in a xCode playground. Because there ist no multi-module/framework support in playgrounds yet. I had to copy Alamofire files and SwityJSON source into the playground's _sources_ directory

### What did you expect to happen?

Should work!

### What actually happened instead?

Got a compiler error because both frameworks define extension to NSNumber named **isBool**.

To make it work I had to change visibilty of isBool in SwityJSON to fileprivate.

This is the problematic code:
https://github.com/SwiftyJSON/SwiftyJSON/blob/1d64b89d9aba1e82bd74a6393cfc3061250a8a80/Source/SwiftyJSON.swift#L1344-L1345 
",dirk68-fu,
812,2017-02-25 03:39:12,"Hey @dirk68-fu Did you try adding a module name before extension, for instance:

<S_CODE_TOKEN>`
Is this solve your problem?",wongzigii,
812,2017-02-27 06:43:33,"Hi,

unfortunately that does not work and results in the following error: ""Use of undeclared type 'SwiftJSON'



Sincerely,

Dirk

> Am 25.02.2017 um 04:39 schrieb Zigii Wong <notifications@github.com>:
> 
> Hey @dirk68-fu Did you try adding a module name before extension, for instance:
> 
> extension SwiftyJSON
> .NSNumber {
>     
> var isBool:...
> 
> }
> 
> Is this solve your problem?
> 
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub, or mute the thread.
> 

",dirk68-fu,
812,2017-03-08 02:17:02,"I noticed your comment is `SwiftJSON`, is it a typo? (Should be Swift**y**JSON)",wongzigii,
812,2017-03-08 06:10:39,"Sorry, that was a typo in my comment, but it does not work with ""SwiftyJSON.NSNumber"".",dirk68-fu,
811,2017-02-23 13:56:24,Moving template files into .github directory,wongzigii,2017-02-23 16:02:26
810,2017-02-22 15:52:10,Relate to #809 ,wongzigii,2017-02-23 13:52:17
809,2017-02-22 15:43:08,Add github PR & issue templates,wongzigii,2017-02-23 13:52:32
808,2017-02-22 09:16:46,"As a checked in your source code, you do not have support for this.

Would be glad if you will. Thanks!
",gregoryjose,
808,2017-02-24 12:09:22,"just add `""1""` to the array at line `883` in swiftyJSON.swift",Harshit31,
808,2017-02-24 14:14:34,"Yeah, I already figured out the solution. Maybe I just create a pull request for this. Many thanks!",gregoryjose,
807,2017-02-22 05:33:09,,jobinsjohn,2017-02-23 14:04:14
807,2017-02-23 14:04:18,Thanks! @jobinsjohn ,wongzigii,2017-02-23 14:04:14
806,2017-02-21 18:34:08,Just adding a test to make sure nested JSON gets printed correctly (which they do) that was in https://github.com/SwiftyJSON/SwiftyJSON/pull/801,gsabran,
806,2017-03-15 15:22:18,"Hey @gsabran Seems like the format is broken, would you mind fixing it? Or I will do it by myself.",wongzigii,
805,2017-02-20 14:38:57,"As an improvement for #793, fix #215 and #800 ",wongzigii,2017-02-20 15:14:09
804,2017-02-17 21:13:01,"different for optional/non-optional

stringValue now just calls string, and passes back the default """" if
it received nil

numberValue now just calls number, and passes back the default
NSNumber(0.0) if it received nil

boolValue now just calls bool, and passes back the default false
if it received nil

Added support for ""yes"" and ""true"" in bool conversion since ""y"" and ""t""
were accepted.

Updated Number and String tests to match",cwikla,
804,2017-03-08 05:22:33,No interest on this pull request? No comments?  I'd fix more stuff but not if it doesn't go anywhere.,cwikla,
803,2017-02-17 15:06:21,Related to #794 ,wongzigii,2017-02-24 17:53:29
802,2017-02-17 09:57:56,"**failed**
<S_CODE_TOKEN>
result:  json = null


**success**
<S_CODE_TOKEN>
result:  json = {""nickName"": ""hello""}

How can I fix it
",interchen,2017-02-27 01:28:27
802,2017-02-25 03:57:31,"Hey @interchen 
In your first example, `\uD83C***` is not a valid character. If you remove the duplicate `*`, JSON will be parsed successfully. Unfortunately, SwiftyJSON *does not*  provide a way to verify your character if is valid at this time. Let me know if there is any issue. :)",wongzigii,2017-02-27 01:28:27
801,2017-02-16 00:26:25,This PR addresses situations where a JSON object is nested in a dictionary / value that is itself represented as a JSON,gsabran,2017-02-20 15:25:32
801,2017-02-20 15:25:32,"Hey @gsabran Thanks for this PR, anyway #793 has been merged. I am going to close this now. Let me know If you have any issue. :) 

Cheers!",wongzigii,2017-02-20 15:25:32
801,2017-02-21 18:36:05,Nice job! I just readded a test in https://github.com/SwiftyJSON/SwiftyJSON/pull/806,gsabran,2017-02-20 15:25:32
800,2017-02-14 01:26:15,"When trying to set an array nested in my `JSON` to an empty array, nothing is happening.

<S_CODE_TOKEN>`

I currently have to do this to get it to properly set the array:

<S_CODE_TOKEN>`

This error is occurring using version `3.1.4`.",AnthonyMDev,2017-02-20 15:17:29
800,2017-02-14 05:48:09,"Is this typo? You did not close the bracket in  
`var json =  JSON([""array"": [1, 2, 3])`

",JeffGuKang,2017-02-20 15:17:29
800,2017-02-14 08:32:14,"Sorry. Yes, those were typos. I've fixed the typos. The bug report is valid.",AnthonyMDev,2017-02-20 15:17:29
800,2017-02-15 14:58:53,"Pretty strange behavior. 🤔 
<S_CODE_TOKEN>`",wongzigii,2017-02-20 15:17:29
800,2017-02-15 18:04:10,"In my use case, I was setting the array to an empty array. I didn't realize that this behavior only occurred in that situation. Good to know.",AnthonyMDev,2017-02-20 15:17:29
800,2017-02-16 10:43:40,"Maybe i find what happend
`[]` has been convert to type `[JSON]`

There is a bug  in `v3.1.4`
`object`'s setter never assign to rawArray when it is [JSON]
<S_CODE_TOKEN>

This bug fixed in #743 and #793 ",MikotoZero,2017-02-20 15:17:29
800,2017-02-16 13:30:00,"Hey @MikotoZero Thanks for your PR, I will review this If I have some spare time at this weekend. :)",wongzigii,2017-02-20 15:17:29
800,2017-02-20 15:17:29,"#793 has been merged into master. 

I've added a [MutabilityTests](https://github.com/SwiftyJSON/SwiftyJSON/blob/master/Tests/SwiftyJSONTests/MutabilityTests.swift) to track down these use cases.

Cheers. ",wongzigii,2017-02-20 15:17:29
799,2017-02-13 14:27:08,Fix #798 ,wongzigii,2017-02-14 14:58:17
798,2017-02-13 14:21:40,"There is a warning coming up if I set breakpoints within project.

<S_CODE_TOKEN>`

The console shows that LLVM and Swift compiler is compiling against optimization.",wongzigii,2017-02-14 14:58:17
797,2017-02-13 12:21:19,"Sorry for this beginner question. I use Xcode 8 and Swift 3.

In my app i get the distance between two locations from the Google Distance Matrix API (with Alamofire). This is working fine.

This is the response from Alamofire:

{
  ""status"" : ""OK"",
  ""destination_addresses"" : [
    ""Heinrich-Steinmann-Straße 12, 51147 Köln, Germany""
  ],
  ""origin_addresses"" : [
    ""Ubierring 88, 50678 Köln, Germany""
  ],
  ""rows"" : [
    {
      ""elements"" : [
        {
          ""status"" : ""OK"",
          ""distance"" : {
            ""value"" : 16617,
            ""text"" : ""16.6 km""
          },
          ""duration"" : {
            ""value"" : 1248,
            ""text"" : ""21 mins""
          }
        }
      ]
    }
  ]
}
Status:  OK

With SwiftyJSON i can access status, destination_addresses and origin_addresses like:
json[""status""].stringValue)
json[""destination_addresses""].arrayValue) 
json[""origin_addresses""].arrayValue)

With json[""rows""][""elements""][""status""] i get null.

How can i get the distance value/text and the duration value/text with SwiftyJSON?

",calvinorchiz,2017-02-13 13:40:38
797,2017-02-13 13:40:38,"Hi @calvinorchiz From what you have given, `elements` is an array which wrapping with a `[]` . :)",wongzigii,2017-02-13 13:40:38
796,2017-02-12 11:41:44,,Humoud,2017-02-15 15:04:52
796,2017-02-15 15:05:13,Thanks for your contribution. @Humoud ,wongzigii,2017-02-15 15:04:52
795,2017-02-09 05:16:11,"I am trying to call my HTTP post request with a JSON data object. I was told that I need to use `upload` method.

As I try to use the upload method.
Xcode auto complete shows
`Alamofire.upload(<#T##data:` Data##Data#>, to: <#T##URLConvertible#>)`

When I try to
`     let fullURL = God.getFullURL(apiURL: self.apiUrl)
 self.postData       = try! JSONSerialization.data(withJSONObject: postData, options: JSONSerialization.WritingOptions.prettyPrinted)
 
Alamofire.upload(postData, fullURL).responseJSON { response in
                self.responseData = response.result.value
            }`
I get an error 

> Cannot invoke 'upload' with an argument list of type '(Data, String)'

Check out 
http://stackoverflow.com/questions/42113651/swift-3-0-alamofire-4-0-extra-argument-method-in-call/42122684#42122684",jsiddharth,2017-02-11 11:58:43
794,2017-02-06 14:35:17,"See [SwiftLint](https://github.com/realm/SwiftLint)

We should add SwiftLint to CI to get our code more consistent while merging PR from contributors.

Disable Rules remains:

- [ ] force_cast
- [ ] force_try
- [ ] type_name
- [ ] file_length
- [ ] line_length
- [ ] type_body_length
- [ ] cyclomatic_complexity
- [ ] function_body_length",wongzigii,
793,2017-02-06 10:44:26,"This PR is related to bug #785

Fix problems when init with Array/Dictionary contains JSON but not `[JSON]` or `[String : JSON]` 
eg:
<S_CODE_TOKEN>

Thanks",MikotoZero,2017-02-20 11:25:40
793,2017-02-16 01:00:34,"It seems weird that `XCTAssertEqual(json[""inner_json""], [""some_field"": ""12""])` works while I'd expect `XCTAssertEqual(json[""inner_json""].rawValue, [""some_field"": ""12""])` to make more sense.
Anyway I did a similar PR https://github.com/SwiftyJSON/SwiftyJSON/pull/801 (didn't see yours) that works with `XCTAssertEqual(json[""inner_json""].rawValue, [""some_field"": ""12""])`",gsabran,2017-02-20 11:25:40
793,2017-02-16 10:22:29,"I thought `XCTAssertEqual(json[""inner_json""].rawValue, [""some_field"": ""12""])` maybe alwayz succses while `XCTAssertEqual(json[""inner_json""], [""some_field"": ""12""])` passed.
`XCTAssertEqual(json[""inner_json""], [""some_field"": ""12""])` compare `json[""inner_json""]` and `JSON([""some_field"": ""12""])`
That mean `json[""inner_json""]` and `JSON([""some_field"": ""12""])` have same `type` and `object`

Anyway I make a rawValue type test. It's still work 😊",MikotoZero,2017-02-20 11:25:40
793,2017-02-17 13:52:36,Looks good to me.,wongzigii,2017-02-20 11:25:40
793,2017-02-20 11:25:35,Merged. Thanks 💯  @MikotoZero ,wongzigii,2017-02-20 11:25:40
793,2017-02-20 16:48:53,My pleasure😁,MikotoZero,2017-02-20 11:25:40
792,2017-02-06 09:51:14,"Is there anyway to ensure that when parsing a JSON to a dictionary that the dictionary will contain data in the same order as received in the JSON (an ordered dictionary)?

I know that it is not possible in ""native"" parsing with Swift, so I'm wondering if there's a SwiftyJSON way.",nin-amsiq,2017-02-06 14:24:29
792,2017-02-06 14:24:29,"Unfortunately, dictionary is an un-order data struct in Swift and Objective-C. You might need to use an array with some kind of sort algorithm. eg. `array.sort() { $0.age < $1.age }`. Closing for now. Feel free to open it if need. :)",wongzigii,2017-02-06 14:24:29
791,2017-02-04 08:09:51,"Something wrong in this PR
i have send another instead
",MikotoZero,2017-02-06 01:08:02
790,2017-02-04 07:41:00,"I have added socket.io and swiftyjson manually to my project. But my app is not compiling and showing issue.--> invalid redeclaration of JSON.
I have also attached the sample project.
[SocketWithSwiftyJSON.zip](https://github.com/SwiftyJSON/SwiftyJSON/files/752082/SocketWithSwiftyJSON.zip)
",crickabhi,2017-02-07 12:45:27
790,2017-02-04 09:12:15,You should consider to use [CocoaPods](https://github.com/CocoaPods/CocoaPods) or [Carthage](https://github.com/Carthage/Carthage) to manage swift module.,wongzigii,2017-02-07 12:45:27
790,2017-02-07 12:45:27,"The latest [Socket.IO](https://github.com/nuclearace/Socket.IO-Client-Swift) works for me. One thing need more consideration is:  JSON is a typealias of  [String: Any] in Socket.IO. 

See https://github.com/nuclearace/Socket.IO-Client-Swift/blob/163a770abc4842250d31b8662354d0df190c2885/Source/SocketTypes.swift#L45",wongzigii,2017-02-07 12:45:27
789,2017-02-04 00:01:18,"I converted this code
<S_CODE_TOKEN>
to
<S_CODE_TOKEN>

how to get the N in array(N) ? 
If i write categoryIndex. I get no completitions, .array does not exist
categoryIndex[0 or ""string""] gives -Type 'JSON.Index' (aka 'Index<Any>') has no subscripts members

categoryIndex is JSONRawIndex? (Optional)

Can someone help?
Thanks in advance",rogomantik,
789,2017-02-04 08:53:49,"Solved by replacing
<S_CODE_TOKEN>
with
<S_CODE_TOKEN>
I haven't found any other way. Are there better ones?",rogomantik,
788,2017-02-01 14:14:32,"Fetching data correctly from API as I am printing out response and debugging shows me the results. However, the actually JSON PARSE using ""<~"" is giving weird/odd behaviour. This has randomly broke. Is there any known issues or something you are working on similar from the other side???

",haiderashfaq,
788,2017-02-01 14:14:57,@jaffacake,haiderashfaq,
788,2017-02-03 12:41:25,"Hi, 
Same here. Parsing otherwise valid JSON fails in some cases. I have, in my opinion, quite a big JSON array (70k items). I'm getting it compressed from the server (in gzip). After that I'm passing the decompressed data to SwiftyJSON  constructor `init(data: Data, options opt: JSONSerialization.ReadingOptions = .allowFragments, error: NSErrorPointer = nil) `.  I'm passing the same json data, but sometimes this line `JSONSerialization.jsonObject(with: data, options: opt)` throws: 

> Error Domain=NSCocoaErrorDomain Code=3840 ""Unable to convert data to string around character 1944859.""

In respect of the above issue I'd like to suggest something. Initially I used SwiftyJSON constructor like this `let json = JSON(data: decompressedData)`, and then my check was for a `.null`  JSON. What I expected is if the JSON is `.null`, to have the error for that set in  SwiftyJSON  `error` property, but it's not set even if `JSONSerialization.jsonObject(with: data, options: opt)` throws an exception. Then I had to switch to` let json = JSON(data: decompressedData, options: [], error: &error)` in order to obtain the error. It seems kinda inconsistent to use another error object only for the constructor when working with SwiftyJSON. Could you please, add one line in constructor that will copy the exception error to your property. ",AleksandarPetrov,
788,2017-02-03 12:54:47,"i am also facing the same issue. Not able to use swiftyJSON and socket.io swift 3.0. Please help me out.Its urgent.
<img width=""1261"" alt=""screen shot 2017-02-03 at 6 22 45 pm"" src=""https://cloud.githubusercontent.com/assets/10657329/22592074/e6240044-ea3d-11e6-9c45-fd908fb32cc4.png"">
",crickabhi,
788,2017-02-03 13:58:19,@crickabhi Looks like you have a duplicate SwiftyJSON module ? Could you please open a new issue ?,wongzigii,
788,2017-02-03 14:00:30,@AleksandarPetrov @haiderashfaq I would love to take a look at this if you guys can share a sample project to reproduce this. :),wongzigii,
788,2017-02-04 07:44:14,"@wongzigii I created a new project and added SwiftyJSON and socket.io to it and made sure that there is no duplicate SwiftyJSON module and still my project does not compile.
Therefore i have added the project. Please have a look at it and propose a desired solution.
Thanks.
[SocketWithSwiftyJSON.zip](https://github.com/SwiftyJSON/SwiftyJSON/files/752087/SocketWithSwiftyJSON.zip)
",crickabhi,
788,2017-02-04 08:29:48,"I found a way to fix my issue. Still I think that the error, that may arise in the constructor, should be stored to the local property.",AleksandarPetrov,
787,2017-02-01 11:48:23,"Hi guys, I'm still having this problem:
<S_CODE_TOKEN>

Is it possible for you to update it? It is an easy fix but a critical one for those like me that want to use carthage without the <S_CODE_TOKEN> part.

Thanks in advance,
Carmelo",cikpis,2017-02-02 03:08:51
787,2017-02-02 03:08:51,"Hi @cikpis I just uploaded a latest archive which still tagged `3.1.4`, there should not be an issue now. Thanks for filling an issue. Cheers!",wongzigii,2017-02-02 03:08:51
787,2017-02-02 06:34:46,Thanks man! Cheers!,cikpis,2017-02-02 03:08:51
787,2017-02-06 11:56:46,Hey man is not working. I just fetched it and got the same error.,cikpis,2017-02-02 03:08:51
787,2017-02-06 13:36:33,rm `Cartfile.resolve` file and run `carthage update` again.,wongzigii,2017-02-02 03:08:51
787,2017-02-06 13:49:01,Always done that before calling update :),cikpis,2017-02-02 03:08:51
786,2017-02-01 08:59:31,"I find it odd that in that optional number does not convert strings to numbers if it can, 
but numberValue does.  

As in:

        let bob : JSON = [ ""number"" : ""1.234""]
        
        print(""\(bob[""number""]) => \(bob[""number""].number) => \(bob[""number""].numberValue)"")

output:

1.234 => nil => 1.234

Threw me off for a bit.  Either they should both do it, or neither should.",cwikla,
786,2017-02-09 13:48:33,"This behavior exists with other datatypes, too, like `String`, of which I also find very odd. 

While `stringValue` will switch on the datatype to return a converted value `string` will only unwrap the datatype if it's a string. 

https://github.com/SwiftyJSON/SwiftyJSON/blob/master/Source/SwiftyJSON.swift#L898-L937

This feels like a bug, to me, as I'd expect both methods to unwrap the same way, with the only difference being `*Value` always returning a value. ",MattNewberry,
785,2017-01-31 12:51:59,"Hello, can someone please explain to me what is happening here?

<S_CODE_TOKEN>
(lldb) expr inner.description
(String) $R0 = ""{\n  \""some_field\"" : \""12\""\n}""
(lldb) expr json.description
(String) $R1 = ""unknown""

If I remove the ""+"" all is fine.",stefan-avramov,2017-02-22 14:42:31
785,2017-02-06 07:10:56,"Maybe not +'s fault.
Current initalize methods can not handle mixed element collection type unless it can be considerd as [JSON] or [String : JSON] anyway

`json` still `unkown` in this case
<S_CODE_TOKEN>
",MikotoZero,2017-02-22 14:42:31
785,2017-02-22 14:42:31,Closing. ,wongzigii,2017-02-22 14:42:31
784,2017-01-27 07:17:10,"This PR is related to bug #475 
More details there.

Thanks",dral3x,
783,2017-01-25 06:00:44,,wongzigii,2017-02-06 14:18:32
782,2017-01-24 20:47:26,"sorry if I'm just asking a newbee question but I still for a year can't properly understand why I can't do


<S_CODE_TOKEN>

I have to use myJson[""\\(myJson.count)""], but the Readme says I can use [int]. What's wrong?",djdance,2017-02-20 15:29:46
782,2017-02-17 15:12:32,Hey @djdance Sorry for the late response. Could you provide a specific sample to reproduce it?,wongzigii,2017-02-20 15:29:46
782,2017-02-20 15:29:46,I assume this issue can be closed since #793 would fix the mutability. Thanks for reporting this. ,wongzigii,2017-02-20 15:29:46
781,2017-01-16 15:45:29,"The following JSON string returns invalid when trying to get the raw data:
{""Name"": ""Michael"", ""Address"": ""Awesome street 123"", ""Age"": 24}

**The error is this:** ""Error Domain=SwiftyJSONErrorDomain Code=490 ""JSON is invalid"" UserInfo={NSLocalizedDescription=JSON is invalid}""

I've confirmed the JSON string is *valid*: http://jsonlint.com

Here's the code I'm using to test:

<S_CODE_TOKEN>
Thanks!",lmsmartins,
781,2017-03-03 03:04:04,"you should use
<S_CODE_TOKEN>",jerrywell,
780,2017-01-11 09:24:19,"I am getting memory leaks in all my models, here are some code examples:

<S_CODE_TOKEN>

<S_CODE_TOKEN>

<S_CODE_TOKEN>

I am not sure, but it looks like because I am initialising my classes from SwiftyJSON.JSON. Or am I making a mistake somewhere?",juicyfru1t,2017-01-14 14:35:22
780,2017-01-14 05:49:14,"@juicyfru1t Not sure what's wrong with you code right now? If you could provide a sample project which could demonstrate this leak, it will be able to quickly iterate on the solution if so.",wongzigii,2017-01-14 14:35:22
780,2017-01-14 08:29:17,"https://bitbucket.org/JuicyFru1t/memoryleak/overview Here only one class leaks, however in my project every does, but its call tree looks the same.",juicyfru1t,2017-01-14 14:35:22
780,2017-01-14 14:35:22,"FYI: This leak is caused by Alamofire. 

<img width=""1284"" alt=""qq20170114-0 2x"" src=""https://cloud.githubusercontent.com/assets/7384288/21955603/95b3f8c4-daa9-11e6-8db1-3a5de346c339.png"">

It seems like this issue is related to https://github.com/Alamofire/Alamofire/issues/1717.

I am going to close this now, feel free to re-open it if you need.

",wongzigii,2017-01-14 14:35:22
779,2017-01-10 18:42:50,,craiggrummitt,2017-01-12 11:35:00
779,2017-01-12 11:35:18,Thanks! @craiggrummitt ,wongzigii,2017-01-12 11:35:00
778,2017-01-05 12:32:13,"The 3.1.4 release contains the a binary compatible with swift 3.0. Is there any way to download the binary?
I know that there is a workaround, but the question is not about that.",Gujci,2017-02-02 03:11:11
778,2017-01-11 07:51:19,"@Gujci You can try the following command to build the source files on your local machine.
`carthage update --no-use-binaries SwiftyJSON`",tasanobu,2017-02-02 03:11:11
778,2017-01-11 09:34:29,"@tasanobu please read the issue, ""I know that there is a workaround"" means that I know that there is a workaround. 
The issue is not about that, it's about downloading the correct binary, not compiling it locally.
Also `github ""SwiftyJSON/SwiftyJSON"" ""master""` is a workaround, which ""forces"" carthage to compile it locally, but that is not the answer to this question.",Gujci,2017-02-02 03:11:11
778,2017-01-23 16:23:34,"@Gujci I also ran into this, so I forked the repo and uploaded a pre-built framework built with Swift `3.0.2`.

You can point your `Cartfile` here in the meantime until they (hopefully) build the next release with the latest Swift: https://github.com/solidcell/SwiftyJSON/releases

I think this is a better solution than having to run:
<S_CODE_TOKEN>
.. just because of `SwiftyJSON`.",solidcell,2017-02-02 03:11:11
778,2017-02-02 03:11:11,"Sorry for the late response. I just uploaded a latest archive which compiled with Swift 3.0.2, tagging with `3.1.4`. Cheers!",wongzigii,2017-02-02 03:11:11
777,2017-01-05 02:39:23,"Hey guys, this is more of a code review question... I'm trying to build an object which can handle responses from my API. It looks like this:
<S_CODE_TOKEN>

I'd really like to get rid of the part where I convert the JSON to a `[String: JSON]` just to nil out the properties. I'm wondering what best practice the community suggests, and if it should consider implementing such a feature in the future.

Thanks!",justinmakaila,
777,2017-02-05 16:04:36,Hey @justinmakaila Sorry for the late reply. Is https://github.com/SwiftyJSON/SwiftyJSON/issues/475 what you are looking for?,wongzigii,
777,2017-02-09 19:28:01,"@wongzigii, no, it's not. In the example above, the part I'm referring to is in the `init(json: JSON)` method. I'm trying to mutate the `json` to exclude the ""error"" or ""errors"" key. I don't want to transform it to a dictionary, nil out the values, then initialize a new JSON.",justinmakaila,
776,2017-01-03 20:12:28,"[SwiftyJSON on CP](https://cocoapods.org/?q=SwiftYJSO)
<img width=""703"" alt=""screen shot 2017-01-03 at 12 10 48 pm"" src=""https://cloud.githubusercontent.com/assets/1091114/21621405/b16914e6-d1ad-11e6-8805-bbf932efd5ad.png"">

**Fix**: amend release `3.1.4` with the correct version in `SwiftyJSON.podspec`.
**Note**: Sorry couldn't create a PR as the fix should be applied to a release. Please correct me if I am wrong.",gravicle,2017-01-10 09:49:17
776,2017-01-08 20:36:16,I second this post!,Sethmr,2017-01-10 09:49:17
776,2017-01-10 09:49:17,Sorry for late reply. I had just pushed 3.1.4 to CocoaPods. Feel free to hit me up if there is still an issue. Closing. 🚢 ,wongzigii,2017-01-10 09:49:17
775,2017-01-03 01:35:20,This is a legit and very important PR. Hope you like it 😃 ,skyline75489,2017-01-03 10:22:39
775,2017-01-03 10:20:41,"Awesome, thank you. @skyline75489 💥 ",wongzigii,2017-01-03 10:22:39
774,2017-01-02 05:41:40,"I do not anticipate your accepting of this pull request because it is a non-backward compatible change, something that you might understandably be reluctant to do in an interim release. But it might be something for you to consider for your next major release.

In my opinion, the error handling in `init(data:options:error:)` is remarkably unswifty. You should not have `NSErrorPointer` parameter, because naive implementations will fail to capture the error correctly (see [this Stack Overflow question](http://stackoverflow.com/a/41421533/1271826)).

Instead, this initializer should just be changed to `throw` errors. This code makes that change.

---

My original release notes are below:

---

The problem is that when users call `let json = JSON(data: data)`, they are not informed of the error, relying on the presence of `NSNull` value. That sort of use of non-standard sentinel value is discouraged. And the reliance of the `NSErrorPointer` is a pattern that pre-dates Swift 2 (and was intended for interacting with Objective-C API, not to be adopted within a Swift API itself). Bottom line, the error handling in  `init(data:options:error:)` was distinctly unswifty. This attempts to remedy that.

1. Change init(data:options:) to throw errors, removing the `NSErrorPointer` reference.

2. Changed existing code that called `init(data:)` to reflect this error throwing behavior.

3. Also changed default reading options to be `[]` rather than `.allowFragments`, so that it's more consistent with standard `JSONSerialization` behavior. Also, I want to stop the perpetuation of the use of `.allowFragments` as a matter of standard practice, because generally if you have a fragment of JSON, you really want to know about that error.

4. Added unit test to demonstrate error catching.",robertmryan,
774,2017-01-02 06:33:49,"Hey @robertmryan Totally agree! We are considering to drop NSErrorPointer for next major release. FYI #749. I am happy to merge this into master at that time, though. Thank you for your works. 👍 ",wongzigii,
773,2017-01-01 22:32:15,"I am trying to create a JSON where to append elements as they occur

  var jsonTPXtest: JSON =  [""events"": [:]]

  for index in 0...20 {
          jsonTPXtest[""events""][index] = [""id"":index,""x1"":0,""x2"":0]
        }

But it doesn't seem to add any element to the JSON.

",alychyana,2017-02-22 15:18:16
773,2017-01-02 13:57:16,"i did this:

	func prependObjectToJSON(_ data:JSON, newdata:JSON) -> JSON {
		let s = JSON(newdata.arrayObject! + data.arrayObject!)
		return s
	} 

	func appendObjectToJSON(_ data:JSON, newdata:JSON) -> JSON {
		let s = JSON(data.arrayObject! + newdata.arrayObject!)
		return s
	}
",alexdd55,2017-02-22 15:18:16
773,2017-02-22 15:18:16,"Hey @alychyana. Sorry for the late response. From the code you given, I assume you are trying to set the `[:]` （which is a dictionary）

<S_CODE_TOKEN>`

However, if you wanna set the array indeed, you would need to create a fixed size array.

<S_CODE_TOKEN>`
",wongzigii,2017-02-22 15:18:16
772,2016-12-31 21:05:35,"After I viewed the README and example code, I can find nothing about mapping the json value to object model.",gitwizChen,2017-02-22 14:44:47
772,2017-02-12 00:16:50,That's not SwiftyJSON is about. You're probably looking for [ObjectMapper](https://github.com/Hearst-DD/ObjectMapper),skyline75489,2017-02-22 14:44:47
772,2017-02-22 14:44:47,Closing.,wongzigii,2017-02-22 14:44:47
771,2016-12-29 00:06:32,"Environment: Xcode Version 8.2.1 (8C1002)

/Users/Ric/Workarea/SwiftStuff/SwiftTech/SwiftTech/Net.swift:11:8: Module compiled with Swift 3.0 cannot be imported in Swift 3.0.2: /Users/Ric/Workarea/SwiftStuff/SwiftTech/Carthage/Build/iOS/SwiftyJSON.framework/Modules/SwiftyJSON.swiftmodule/x86_64.swiftmodule",UncleRic,2017-01-02 08:46:07
771,2016-12-29 01:56:41,    carthage update --no-use-binaries SwiftyJSON,wongzigii,2017-01-02 08:46:07
770,2016-12-28 14:41:53,"I got an exception in the `rawData` function. My code looked like this

    let json: JSON = [""make"": ""peace""]
    let data: Data = try JSON(json).rawData()

Solution was not to create a JSON instance with another JSON instance.

    let json: JSON = [""make"": ""peace""]
    let data: Data = try json.rawData()


# Proposal

I propose that the `init` should behave like a copy constructor when it gets another JSON instance. What do you think about this?

	func testCopyConstructor() {
		let jsonOriginal: JSON = [""make"": ""peace""]
		let json = JSON(jsonOriginal)
		XCTAssertEqual(json.type, .dictionary)
		XCTAssertNil(json.error)
	}
",neoneye,
769,2016-12-26 22:38:06,"Hi I am getting the following error in xcode after updating my dependencies for swift 3+ I use the latest Carthage version and all the other dependencies work just right. ( Kingfisher, Alamofire etc )
>Module compiled with Swift 3.0 cannot be imported in Swift 3.0.1: /Users/username/xcode/project/Carthage/Build/iOS/SwiftyJSON.framework/Modules/SwiftyJSON.swiftmodule/x86_64.swiftmodule",reshadf,2017-02-02 03:13:03
769,2016-12-27 17:47:59,"I had the same issue. The provided framework binary is built for 3.0, not 3.0.1. I solved it by running:
<S_CODE_TOKEN>",VojtaStavik,2017-02-02 03:13:03
769,2016-12-27 20:05:52,"That seems to solve the problem! thanks
",reshadf,2017-02-02 03:13:03
769,2017-01-03 10:32:35,"The problem is, that Xcode 8, 8.1, 8.2 uses different compiler, and the compiled binary is not compatible (at least according to Xcode). If you use `carthage update` without `--no-use-binaries`, Carhage downloads the related GitHub release binary, which was compiled (accotding to the .travis.yml) file with Xcode 8, therefore it is swift 3.0.

So, if you don't want to compile the code locally, you have to:

-  fork the repo
-  change the .travis.yml file
 `osx_image: xcode8.1` for 3.0.1 or `osx_image: xcode8.2` for 3.0.2
 `repo: SwiftyJSON/SwiftyJSON` to the forked repo
-  tag and push
-  wait for travis to complete the release (change the simulators if needed)
-  change the line in the Cartfile to >yourname</SwiftyJSON

The main SwiftyJSON repo can make this change as well, but since a lot of developers still using Xcode 8, I don't  think this will happen soon.",Gujci,2017-02-02 03:13:03
769,2017-02-02 03:13:03,Hello there! I just uploaded a latest archive file compiled with Swift 3.0.2. This issue will be closed now. Thanks for filling an issue. Cheers! 👏 ,wongzigii,2017-02-02 03:13:03
768,2016-12-26 20:39:59,Hello! Are there some beginner friendly issues I could look into?,tarang9211,2017-01-02 08:47:27
768,2017-01-02 08:47:27,Hey @tarang9211 Just take a look at the issues list and pick the one you're interested. :),wongzigii,2017-01-02 08:47:27
767,2016-12-26 04:34:48,"I have an array of Strings which I was successfully converting to JSON, but it stopped working yesterday when I pulled the latest SwiftyJSON. For now, I have reverted back to my old version of SwiftyJSON which I believe is version 1.

<S_CODE_TOKEN>
",zeeshanz,2017-01-04 11:56:04
767,2016-12-26 06:06:39,"You can use `init(_ object:)` to create a JSON object likes:
<S_CODE_TOKEN>`",wongzigii,2017-01-04 11:56:04
766,2016-12-22 12:34:51,The example seems to be wrongly assing the dictionary to the name data instead of dict.,kscheff,2016-12-25 15:16:53
766,2016-12-25 15:16:32,Thank you! @kscheff 🎅 🎉 ,wongzigii,2016-12-25 15:16:53
765,2016-12-22 03:38:22,Fix #761,wongzigii,2016-12-22 03:40:52
765,2016-12-22 03:40:52,Close as duplicate of #764,wongzigii,2016-12-22 03:40:52
764,2016-12-21 17:05:47,Fixes #761,lbrndnr,2016-12-22 04:23:20
764,2016-12-22 04:23:36,Thanks! @lbrndnr ,wongzigii,2016-12-22 04:23:20
763,2016-12-19 15:28:12,"<S_CODE_TOKEN>
 
Hi, this is my code to parse json, json[""xxx""].bool stay always false
I tried to do json[""xxx""].bool = true and json[""xxx""].boolValue = true but same result

How to fix that ?",OuSS-90,2016-12-27 12:07:26
763,2016-12-27 03:07:30,Hello @OuSS-90  Sorry for the late response. Can you take a look at #215 ?,wongzigii,2016-12-27 12:07:26
763,2016-12-27 12:07:26,"Thanks, it's working",OuSS-90,2016-12-27 12:07:26
762,2016-12-19 06:19:08,"Great framework!!

I am working on app which requires to store and retrieve images for Tableview cell.

As a data source for table I am using Swiftyjson object, But not getting way to store and retrieve images in Swiftyjson.

I tried solution from Stackoverflow  which encode/decode image with base64Encoded, it works.
but with **base64Encoded** table lags as it takes time to encode/decode image stored in json object.

Please suggest me solution.

 ",sandipdhagdi,2016-12-19 14:39:34
762,2016-12-19 14:39:34,"Hi @sandipdhagdi You should use a asynchronous image framework likes:[SDWebImage](https://github.com/rs/SDWebImage) (Objective-C) or [Kingfisher](https://github.com/onevcat/Kingfisher) (Swift) , to prevent blocking your main thread while downloading image.",wongzigii,2016-12-19 14:39:34
761,2016-12-18 15:00:20,"Thanks for your awesome framework, I love it :)
However, the latest release (v.3.1.3) is not compatible with the latest Swift version (3.0.2). Would it be possible to release a new build so that I can import it using Carthage again? :)
",lbrndnr,2016-12-22 04:23:20
761,2016-12-19 09:11:47,"Try this:

`carthage update SwiftyJSON --no-use-binaries`",vojto,2016-12-22 04:23:20
761,2016-12-19 10:22:45,"Hmm, that gives me this error:
<S_CODE_TOKEN>",lbrndnr,2016-12-22 04:23:20
761,2016-12-19 16:04:47,"--no-use-binaries works as a workaround, it would be interesting to plan a release with an updated binary",racer1988,2016-12-22 04:23:20
761,2016-12-20 09:01:49,"@racer1988 Are you also running Xcode version 8C38? The xcodebuild logs indicate that it has to do with the swift version not specified:
<S_CODE_TOKEN>",lbrndnr,2016-12-22 04:23:20
761,2016-12-20 09:22:11,"From my understanding this is due to carthage downloading the binaries instead of the source code.
The binaries are compiled with a version not compatible with 3.0.2

I am using Version 8.2 (8C38)

I guess either SwiftyJSON needs to add the flag or recompile the binary under 3.0.2",racer1988,2016-12-22 04:23:20
761,2016-12-20 09:30:40,@racer1988 I get this error when using `--no-use-binaries`,lbrndnr,2016-12-22 04:23:20
761,2016-12-20 09:32:40,"I don't have any error with 

Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
Target: x86_64-apple-macosx10.9

$ carthage version
0.18.1",racer1988,2016-12-22 04:23:20
760,2016-12-16 06:50:38,,naeemshaikh90,2016-12-16 13:45:21
760,2016-12-16 13:44:49,Good catch! ,wongzigii,2016-12-16 13:45:21
759,2016-12-16 05:14:03,"![screen shot 2016-12-16 at 2 10 20 pm](https://cloud.githubusercontent.com/assets/216363/21252408/d29de384-c399-11e6-9353-732a71763a2a.png)
",JeffGuKang,2017-02-21 04:20:35
759,2017-02-21 04:20:50,Thanks @JeffGuKang ,wongzigii,2017-02-21 04:20:35
758,2016-12-15 10:00:25,,looseyi,
758,2017-03-16 16:10:35,"@watsonbox i just want to know, if the pr could be accept? i pull it before spring festival, and now i rebase code again. ",looseyi,
757,2016-12-14 13:56:05,"    var CopyMedic:JSON = [[:]]

      CopyMedic[0][""title""].stringValue = ""test""
      CopyMedic[1][""title""].stringValue = ""test""
      print(CopyMedic)

the output is

[
  {
    ""title"" : ""test""
  }
]

:(",ahmedsafadii,2016-12-22 03:21:51
757,2016-12-22 03:21:51,"Hi, @ahmedsafadii `CopyMedic` is an array only contains a dictionary.

<S_CODE_TOKEN>`
",wongzigii,2016-12-22 03:21:51
756,2016-12-12 18:00:04,"Hello,

I'm trying to update a value in this JSON object : 
<S_CODE_TOKEN>

I'm unable to update the ""LastViewedSlideIndex"" value in this object, how i can do ?",B-Gio-KGJ,2016-12-13 15:48:43
756,2016-12-13 10:13:48,"I found what caused this problem,

Initializing an optional JSON object
<S_CODE_TOKEN>
make it readable only, i can't understand why ? Is this intended or a bug?
Initializing with empty array work well
<S_CODE_TOKEN>",B-Gio-KGJ,2016-12-13 15:48:43
756,2016-12-13 14:21:13,"@B-Gio-KGJ I think that is the Swift language's feature. 
If you write more code, it will be good to understand what you tried.",JeffGuKang,2016-12-13 15:48:43
756,2016-12-13 15:48:43,Seems like this is a duplicate of #215 . I am going to close this. Thanks for filling this issue.,wongzigii,2016-12-13 15:48:43
755,2016-12-11 11:30:51,Resolves #740,takasek,2016-12-11 11:46:47
755,2016-12-11 11:46:57,Thanks! @takasek ,wongzigii,2016-12-11 11:46:47
755,2017-01-17 14:37:03,Releasing breaking API changes in a minor revision makes Baby Jesus cry (and my projects to not compile),redent,2016-12-11 11:46:47
754,2016-12-10 12:05:32,"i manually imported SwiftyJSON.swift but got so many compiling errors in SwiftyJSON.swift.

![screen shot 2016-12-10 at 5 35 09 pm](https://cloud.githubusercontent.com/assets/3232787/21073247/0799e6cc-beff-11e6-9a1b-9123904eda5f.png)
",111jaam,2017-01-10 09:51:21
754,2016-12-10 13:07:04,"Hi @111jaam 

- Are you using CocoaPods or Carthage?
- What's your CocoaPods or Carthage version?
- Which version of SwiftyJSON are you using?",wongzigii,2017-01-10 09:51:21
754,2016-12-12 09:54:18,"Hi,

I have the same problem

1. CocoaPods
2. CocoaPods 1.1.1
3. SwiftyJSON 3.1.1",jaceklapinski,2017-01-10 09:51:21
754,2016-12-12 10:14:09,@jaceklapinski can you post the `Podfile.lock` ?,zhigang1992,2017-01-10 09:51:21
754,2016-12-12 10:15:29,"PODS:
  - Alamofire (3.5.1)
  - SwiftyJSON (3.1.1)

DEPENDENCIES:
  - Alamofire (~> 3.5)
  - SwiftyJSON

SPEC CHECKSUMS:
  Alamofire: 0dfba1184a543e2aa160f4e39cac4e8aba48d223
  SwiftyJSON: f0be2e604f83e8405a624e9f891898bf6ed4e019

PODFILE CHECKSUM: afc53677a2032fd75842210d6c54037528a01333

COCOAPODS: 1.1.1",jaceklapinski,2017-01-10 09:51:21
754,2016-12-13 03:24:41,"@111jaam @jaceklapinski 

- Update podspec to latest
- Delete `Podfile.lock`( ⚠️ Backup your lock file before doing this)
- Point SwiftyJSON's version to 3.1.1 or newer exactly

      pod 'SwiftyJSON', '= 3.1.1'
-  Pod install 
- Delete drived data before building

Good luck!
",wongzigii,2017-01-10 09:51:21
754,2016-12-13 14:33:53,still same erros list ,jaceklapinski,2017-01-10 09:51:21
754,2016-12-16 18:33:39,I ran the Xcode wizard for converting to current swift syntax and that took care of the issues.,MattNewberry,2017-01-10 09:51:21
754,2016-12-29 08:12:31,same here when installing SwiftyJson pod many errors appears like the picture above,NoaKadmi,2017-01-10 09:51:21
754,2017-01-03 12:55:13,Is this still an issue with the current release?,wongzigii,2017-01-10 09:51:21
754,2017-01-04 04:47:21,"To run project in swift 2.3, update your podfile -> pod 'SwiftyJSON', '2.4.0' and update pods, and you are done. ",pareekkhushboo77,2017-01-10 09:51:21
754,2017-01-10 09:51:21,"Hello, I just pushed 3.1.4 to CocoaPods and it should work. Feel free to open another issue if need.",wongzigii,2017-01-10 09:51:21
753,2016-12-08 15:20:57,"I am defining a JSON dictionary and once it gets multiple entries, like over 10, the project never builds.  It just stays on compiling swift source files forever.  Below is a sample of what I have.
<S_CODE_TOKEN>",delucamike,2016-12-11 20:33:04
752,2016-12-08 07:47:59,…alise,looseyi,2016-12-11 06:23:28
752,2016-12-11 06:23:12,Cool! Thanks! @looseyi ,wongzigii,2016-12-11 06:23:28
751,2016-12-05 19:22:23,"Can there be an initializer in the `JSON` class that accepts a string containing the JSON code, and initializes the object with it? It would be very convenient.",Phacometer,2016-12-08 03:34:35
751,2016-12-05 21:32:04,I believe this is only possible using the Mirror reflection libraries. (Not tested in Swift3 but have done it in Swift2).,rmck89,2016-12-08 03:34:35
751,2016-12-08 03:34:35,"> Can there be an initializer in the JSON class that accepts a string containing the JSON code, and initializes the object with it? 

Hi @Phacometer If you mean initializing a model object from JSON mapping, I recommend you to use a mapping framework: etc. Unbox, ObjectMapper. 

Closing for now. If you have any issue, feel free to reopen it. :)",wongzigii,2016-12-08 03:34:35
750,2016-12-04 05:48:35,"If I create a simple JSON dictionary and then try to convert it to a raw string like below, it errors to nil on Linux. Evidently, NSJSONSerialization is not supported properly here. What are the plans to support this?

let before = JSON([""testKey"": 1])
let after = before.rawString(.utf8, options: .prettyPrinted)
print(after) // <-- nil if on linux, otherwise a properly serialized string.
",elk941,
750,2016-12-04 19:04:27,"I got this working in a not ideal way. I made the rawDictionary public, then amended a simple serialization protocol to have Any type casting:

<S_CODE_TOKEN>",elk941,
750,2016-12-06 02:21:48,Does this lib support linux in the first place?,skyline75489,
750,2016-12-07 23:35:16,"Well it's supposed to eventually. That's the problem though. It allows you to call into it now, but it cannot handle the type of Any. It needs AnyObject. SwiftyJSON is build on Any for the most part.",elk941,
750,2016-12-08 04:23:50,I'm trying to build it on Linux and it doesn't work for me at all,tyress,
750,2016-12-08 05:19:34,Try my build. It's worked in the scenarios I've tried so far. ,elk941,
750,2016-12-08 05:47:07,Using this same build? I got it to work on Linux using the IBM-Swift Github as described on [this other post](https://github.com/SwiftyJSON/SwiftyJSON/issues/413),tyress,
749,2016-12-01 05:30:38,As discussed in https://github.com/SwiftyJSON/SwiftyJSON/pull/731#discussion_r90273406,ldiqual,
748,2016-12-01 03:16:57,"So turns out that attempting to compile/build SwiftyJSON after installing Swift 3.0.1 on Ubuntu is a messy deal. Here's the result after issuing 'swift build'

    Compile Swift Module 'SwiftyJSON' (1 sources)
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:67:100: error: use of undeclared type 'NSErrorPointer'

    public init(data:Data, options opt: JSONSerialization.ReadingOptions = .allowFragments, error: NSErrorPointer = nil) {
                                                                                                   ^~~~~~~~~~~~~~
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:87:23: error: argument labels  '(data:)' do not match any available overloads
            .flatMap{ JSON(data: $0) } ?? JSON(NSNull())
                      ^   ~~~~~~~~~~
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:87:23: note: overloads for 'JSON' exist with these partially matching parameter lists: (Any), ([JSON]), ([String : JSON]), (stringLiteral: StringLiteralType), (extendedGraphemeClusterLiteral: StringLiteralType), (unicodeScalarLiteral: StringLiteralType), (integerLiteral: IntegerLiteralType), (booleanLiteral: BooleanLiteralType), (floatLiteral: FloatLiteralType), (dictionaryLiteral: (String, Any)...), (dictionaryLiteral: [(String, Any)]), (arrayLiteral: Any...), (nilLiteral: ()), (rawValue: Any)
            .flatMap{ JSON(data: $0) } ?? JSON(NSNull())
                      ^
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:109:9: error: 'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
        self.init(jsonArray.map { $0.object })
        ^
             type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:124:9: error: 'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
        self.init(dictionary)
        ^
             type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:199:49: error: cannot invoke initializer for type 'JSON' with an argument list of type '(NSNull)'
    public static var null: JSON { get { return JSON(NSNull()) } }
                                                ^
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:199:49: note: overloads for 'JSON' exist with these partially matching parameter lists: (Any), ([JSON]), ([String : JSON])
    public static var null: JSON { get { return JSON(NSNull()) } }
                                                ^
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:484:9: error: 'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
        self.init(value as Any)
        ^
             type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:488:9: error: 'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
        self.init(value as Any)
        ^
             type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:492:9: error: 'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
        self.init(value as Any)
        ^
             type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:499:9: error: 'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
        self.init(value as Any)
        ^
             type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:506:9: error: 'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
        self.init(value as Any)
        ^
             type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:513:9: error: 'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
        self.init(value as Any)
        ^
             type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:520:9: error: 'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
        self.init(dictionaryLiteral: array)
        ^
             type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:553:9: error: 'init' is a member  of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
        self.init(dict)
        ^
             type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:560:9: error: 'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
        self.init(elements as Any)
        ^
             type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:568:9: error: 'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
        self.init(NSNull() as Any)
        ^
             type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:580:13: error: 'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
            self.init(rawValue)
            ^
                 type(of:  )
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:1278:20: error: cannot convert value of type '[Any]' to type 'NSArray' in coercion
        return lhs.rawArray as NSArray == rhs.rawArray as NSArray
               ~~~~^~~~~~~~
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:1280:20: error: cannot convert value of type '[String : Any]' to type 'NSDictionary' in coercion
        return lhs.rawDictionary as NSDictionary == rhs.rawDictionary as NSDictionary
               ~~~~^~~~~~~~~~~~~
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:1298:20: error: cannot convert value of type '[Any]' to type 'NSArray' in coercion
        return lhs.rawArray as NSArray == rhs.rawArray as NSArray
               ~~~~^~~~~~~~
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:1300:20: error: cannot convert value of type '[String : Any]' to type 'NSDictionary' in coercion
        return lhs.rawDictionary as NSDictionary == rhs.rawDictionary as NSDictionary
               ~~~~^~~~~~~~~~~~~
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:1318:20: error: cannot convert value of type '[Any]' to type 'NSArray' in coercion
        return lhs.rawArray as NSArray == rhs.rawArray as NSArray
               ~~~~^~~~~~~~
    /root/proj/Packages/SwiftyJSON-3.1.3/Source/SwiftyJSON.swift:1320:20: error: cannot convert value of type '[String : Any]' to type 'NSDictionary' in coercion
        return lhs.rawDictionary as NSDictionary == rhs.rawDictionary as NSDictionary
               ~~~~^~~~~~~~~~~~~
    <unknown>:0: error: build had 1 command failures`

I know from experience that the Linux Swift variant is a lot more type restrictive, but with that being said, is it possible to get this going? My intention is to use it alongside Perfect Swift for a server.",FridaySG,
748,2016-12-01 05:41:26,"@FridaySG Yes, I believe this is an existing issue on Ubuntu, I am currently working on this. Thanks for filling this. We are going to support this ASAP.",wongzigii,
748,2016-12-04 05:44:47,"Any idea what the timeline for this fix will be?
",elk941,
748,2016-12-07 15:55:37,"@elk941 Sorry for the late response, I have maintained a [fork](https://github.com/wongzigii/SwiftyJSON/pull/1) here to start Linux bridging progress. SwiftyJSON is already buildable on Linux, however, there are still some testcases which need more investigation. ",wongzigii,
748,2016-12-17 06:18:52,"Hello All ,  I got the same error trying to build on ubuntu 16.04 on Raspberry Pi 3 Swift 3 & Package Manger 3. @wongzigii thanks for taking the time to investigate the problem  and looking forward for the fix :)",ta3ban4,
747,2016-12-01 01:08:02,"I have been using the following code to successfully initialize a `JSON` object in `swift 2.3`:

`let json = JSON(data)`

I can then access the various fields  for example:

`json[""success""].boolValue // prints true`

I started a new project using `Swift 3` and `JSON(data)` no longer works. If I print the returned `json` object it logs as `unknown` and all of the fields that should be there log as `null`. 

I am able to parse json from the data just fine though by using `JSON(data: data)` instead of `JSON(data)`. Like I mentioned earlier though, this problem didn't exist when using `swift 2.3`.

I also wanted to mention that I can use the `NSJSONSerialization` class just fine. The issue seems to be with the old initializer failing when using `swift 3`.",mitchellporter,2016-12-10 08:37:48
747,2016-12-04 00:09:21,"@mitchellporter Thanks for opening an issue! The proper constructor to create a JSON instance with `Data` is `JSON(data: Data)`. `JSON(_ object: Any)` is to create a JSON value, so it needs to be a JSON-compatible type (Data isn't a compatible type). There is a pull request open to avoid the confusion here: https://github.com/SwiftyJSON/SwiftyJSON/pull/664. I'll close this when the PR gets merged. Thanks again!",ldiqual,2016-12-10 08:37:48
747,2016-12-10 08:37:48,Closing this for #664 ,wongzigii,2016-12-10 08:37:48
746,2016-11-29 23:49:28,"SwiftyJSON objects representing a string value are not converted to a correct (serializeable) string with rawString. Valid JSON strings should be enclosed in quotes, as well as have the correct characters properly escaped.

One (probably hackish) way to go about this is to utilize native JSON parsing by encapsulating the string in an array, convert via JSONSerialization to string, then strip off the array tags (first and last character):
<S_CODE_TOKEN>

Alternately, you can maintain a list of characters that must be escaped and surround the output with double quotes, but this might be difficult with the \u<hex> escaped characters.

Current example: numbers can be converted to string and back to JSON, but string values will return null:
<S_CODE_TOKEN>

After above ""fix"" is applied:
<S_CODE_TOKEN>",SticklyMan,
745,2016-11-29 13:55:58,"
In Linux:

let value: Int = 1
print(value as? NSNumber) // It will print nil

but:

let value: Int = 1
print(NSNumber.init(value)) //It will print 1

In SwiftyJSON, the setter of var ""object"" use ""object as? NSNumber"" whitch will return nil even the ""object"" is ""Int"" caused some problems.


",trmbhs,
745,2016-11-30 02:15:59,"Apple's [documentation](https://developer.apple.com/library/content/documentation/Swift/Conceptual/BuildingCocoaApps/WorkingWithCocoaDataTypes.html) says:

> Swift bridges between the `NSNumber` class and Swift numeric types, including `Int`, `Double`, and `Bool`.
>
> You can create an `NSNumber` object by casting a Swift number value using the `as` operator. 

Assuming this is still true (the NSNumber should be `NSNumber(value: value)` in Swift 3, no?), this looks like a bug in Foundation on Linux.
",kengruven,
744,2016-11-29 13:37:48,"I wasn't having this problem before but on a new mac, with everything updated (Swift 3, iOS 10, Xcode 8.1, SwiftJSON 3.1.3, etc.), every time I try to access a key that is not present, I get a bad access crash.

Example code:

<S_CODE_TOKEN>

### Updated

In further troubleshooting, it seems I'm able to do this and make it work:

<S_CODE_TOKEN>

Which is what I would expect.  However, using `json[""fileName""]` or with `.string`, `.exists()`, by itself will cause a crash, where it didn't used to do that.

Any ideas to help me troubleshoot?",rblalock,2016-11-29 14:22:46
744,2016-11-29 14:22:39,"CLosing this.  I nuked my Carthage folder, re-linked all the frameworks, and it magically worked again.",rblalock,2016-11-29 14:22:46
743,2016-11-29 10:03:41,,flybrotherlixiang,
743,2016-12-01 05:24:38,@flybrotherlixiang Thanks for your contribution! Would you mind elaborating on what this fixes?,ldiqual,
743,2017-02-16 13:39:36,"Hello @flybrotherlixiang .Thanks for your PR so much! I would like to merge this into master. Could you help out to fix some format, which it should use 4 spaces indentation instead, otherwise I will fix this by myself.",wongzigii,
743,2017-02-17 02:03:09,"Hi @wongzigii , I've fixed the indentation issues.  I didn't notice that line 174 was indented by tabs originally :)",flybrotherlixiang,
743,2017-03-20 14:32:57,@wongzigii ,flybrotherlixiang,
742,2016-11-28 13:23:47,"error -no type named printable in module swift
         - no type named debugprintable in module
        - Inheritance from non-protocol type 'BooleanType' (aka 'Bool')

in xcode 8.0, swift 3.0",Uk44,2017-02-22 14:23:41
742,2016-11-30 08:05:40,"Hey @Uk44 , thanks for filling an issue.

- What's your CocoaPods version?
- Which version of SwiftyJSON you are trying to integrate?",wongzigii,2017-02-22 14:23:41
742,2017-02-22 14:23:41,Closing this due to lack of activity. Feel free to reopen if you have any other questions!,wongzigii,2017-02-22 14:23:41
741,2016-11-28 08:48:18,"Raw representations of Strings in JSON should be enclosed in quotes.
As expected, numbers can be converted to string and back to JSON, but string values will return null:
<S_CODE_TOKEN>
After fix is applied:
<S_CODE_TOKEN>",SticklyMan,2016-11-29 17:16:36
741,2016-11-29 17:16:36,"Closing- there are more issues, and tests need to be fixed up since this is likely a breaking change. Creating an issue for this instead.",SticklyMan,2016-11-29 17:16:36
740,2016-11-28 08:13:28,"Swift3 API design guidelines says:

https://swift.org/documentation/api-design-guidelines/

>Acronyms and initialisms that commonly appear as all upper case in American English should be uniformly up- or down-cased according to case conventions:

<S_CODE_TOKEN>

Therefore, how about to use `.url` instead of `.URL` ?

https://github.com/SwiftyJSON/SwiftyJSON/blob/30e3e67c981793e2f783982c7bf4c9501bf2d9a0/Source/SwiftyJSON.swift#L968",takasek,2016-12-11 11:46:47
740,2016-11-30 02:10:43,Agree! Feel free to submit a PR. :),wongzigii,2016-12-11 11:46:47
740,2016-12-02 04:43:21,"Sure, I will do it later!",takasek,2016-12-11 11:46:47
739,2016-11-27 14:59:37,"Update loop section in Playground.
Arrange source.

Next will be updated `error` section.
",JeffGuKang,
739,2016-12-01 05:25:37,@JeffGuKang Neat! Would you mind discarding your changes in `contents.xcplayground` and `contents.xcworkspacedata`? Thank you!,ldiqual,
739,2016-12-01 05:35:35,@ldiqual I updated following your suggestions. :),JeffGuKang,
739,2016-12-01 05:37:50,@JeffGuKang Still shows up in the diff: https://github.com/SwiftyJSON/SwiftyJSON/pull/739/files#diff-baa084bbb5cafa8d9e3a530988a38ca4,ldiqual,
739,2016-12-01 06:11:15,"@ldiqual  I think github recommend including new line at the end of file. What is better? 
I do not mind to discard the file :).",JeffGuKang,
739,2016-12-01 06:30:03,"@JeffGuKang We should probably fix this as part of a PR that is more related to it, like the Xcode 8.2 upgrade or something like that. It's more about keeping the history clean and avoiding conflicts, I don't mind too much about the change itself but it can be misleading for git blaming.",ldiqual,
739,2016-12-01 07:09:19,@ldiqual You are right. I rewinded to some previous commit having newline warning. ,JeffGuKang,
738,2016-11-27 14:02:13,"How about adding partners list using `SwiftyJSON`? 
as bottom of [Appannie](https://www.appannie.com)

It will give the high credibility for users. and makes `SwiftyJSON` looks better. 

",JeffGuKang,
737,2016-11-24 01:51:39,SwiftyJSON 3.1.3 Carthage和framework都下不了，所以用了3.1.2版本，但是提示：Module compiled with Swift 3.0 cannot be imported in Swift 3.0.1。。。,pangpingfei,2016-11-24 01:52:48
737,2016-11-24 01:52:48,Duplicate of https://github.com/SwiftyJSON/SwiftyJSON/issues/716,wongzigii,2016-11-24 01:52:48
736,2016-11-23 16:47:40,"Relate to #733. 

It seems like TravisCI does not support `travis_retry` to cooperate with an inner shell script. See this [tweet](https://twitter.com/plexus/status/499194992632811520).

> [CI Build Result](https://travis-ci.org/SwiftyJSON/SwiftyJSON/builds/178321916)
> scripts/ci.sh: line 5: travis_retry: command not found
> scripts/ci.sh: line 7: travis_retry: command not found
> scripts/ci.sh: line 9: travis_retry: command not found

So this PR will move scrips into `.travis.yml` and drop `ci.sh`.",wongzigii,2016-11-24 16:46:01
736,2016-11-24 16:45:58,self-merged. @zhigang1992 ,wongzigii,2016-11-24 16:46:01
735,2016-11-23 16:05:43,"As I understand it, SwiftyJSON wants to allow for fuzzy types, because that's how javascript works too, right? I like that, but I don't like how that's implemented.

Right now, `.int` returns an optional int, which is nil if the value is not a real int. And `.intValue` provides an int no matter what, which means is tries to convert other values to int values and if that's not possible then it returns a 0.

The thing I don't like about `.intValue` is that if I get a `0` back, that I don't know if the value wasn't a valid integer, or if the value was in fact a 0. I would like to have a feature that's a bit in between these two features. I would like something that tries to convert the value to an int, and if that's not possible, to return a nil.

Does anyone else like this idea?",Evertt,
735,2016-11-23 16:12:43,"I don't use .intValue only .int and when i need it to be forced I use .int! when you only use those two it pretty clear which one is optional. The thing is unless someone found something better than .optionalInt (.optionalInt! is kinda long an weird no much swifty) for optionals it's not gonna be worth to change.

PS : I'm only a user so take my point considering it :)",Alex293,
735,2016-11-23 16:15:12,"`.int!` is not the same though, because that will only force unwrap an optional. I mean trying to convert a string integer to a real integer. I would like to have that functionality, while still receiving nil if the conversion was not possible.",Evertt,
735,2016-12-12 16:12:07,"Why use `.intValue`? Why don't you simply use `if let`?

For instance:

    if let age = json[""age""].int { 
      print(age) 
    }

(Or `guard let`, which often is the cleaner solution.)",lukas2,
735,2016-12-14 02:45:33,"Sigh, that's not what I meant. What I mean is that I would want to merge the functionality of `.int` and `.intValue`. In other words, I want a computed variable that tries to convert whatever value it holds to an int (like `.intValue` does), but return a nil when that's not possible (like `.int` does).",Evertt,
735,2016-12-16 13:39:32,">  In other words, I want a computed variable that tries to convert whatever value it holds to an int (like .intValue does), but return a nil when that's not possible (like .int does).

I get what you mean, but what would be the return type of this computed variable? It can't be `Int` and return `nil` at the same time:

<S_CODE_TOKEN>

Changing the function to return an `Int?` is basically what `.int` already does.

Does that make sense? Did I miss something?
",pedrovereza,
735,2016-12-19 19:28:48,"Since you cant return an `Int` or `nil` from the same function you could extend JSON and create your own computed var  that returns a tuple with the value from `.intValue`, and whether or not `.int` returned `nil`.
It could look something like:

<S_CODE_TOKEN>",ThreeTen22,
735,2016-12-20 00:41:42,"Okay, it proves more difficult to communicate my intention than I had anticipated. I'm going to try one more time to explain and then I'll give up.

Right now `.int` is implemented basically like this:

<S_CODE_TOKEN>

**NOTE: This is NOT its real implementation, I'm simplifying things for the purpose of this demonstration.**

* Pro of `.int`: when the rawValue = ""not a number"" it will return nil, which clearly conveys that there's no integer.
* Con of `.int`: when the rawValue = ""2"", it will also return nil, while ""2"" could perfectly well be converted to an integer 2.

And `.intValue` is basically implemented like this:

<S_CODE_TOKEN>

**NOTE: This is NOT its real implementation, I'm simplifying things for the purpose of this demonstration.**

* Pro of `.intValue`: when the rawValue = ""2"" it will convert it to an integer and return that.
* Con of `.intValue`: when the rawValue = ""not a number"", it will return 0 and then there's no way of knowing if rawValue was ""not a number"" or if maybe rawValue was actually just the integer 0.

So like I said, I want to **merge** these two features, like so:

<S_CODE_TOKEN>

* Pro of `.newInt`: when the rawValue = ""2"" it will convert it to an integer and return that.
* Pro of `.newInt`: when the rawValue = ""not a number"" it will return nil, which clearly conveys that there's no usable integer.

Since this new feature is, in my opinion, better than both `.int` *and* `.intValue`, I would argue to make this the new `.int` and drop the old `.int` and `.intValue`.

And this could be applied to bool, and float, double, uint, etcetera.

Please tell me you guys understand what I mean now.",Evertt,
735,2016-12-21 15:13:25,"I get it,  it seems like strings that can be converted to numbers do not work with `int?`,` float?`, `double?` etc while the value versions do.  It seems it comes from how the var `number` is calculated compared to `numberValue`.

If you want to modify the api, you can change the computed var `number` to this:

<S_CODE_TOKEN>
The only downside to the above changes is that calling `int?` on something like ""5.25"", will return true, and return a rounded number. You could modify `int?` to check for this.   

here is an extension `trueInt?` that works with the changes above, but will also check if the value is a whole number.  If it is not a whole number it will return nil.

<S_CODE_TOKEN>",ThreeTen22,
734,2016-11-23 15:47:41,"![screen shot 2016-11-23 at 10 47 14 am](https://cloud.githubusercontent.com/assets/978865/20568342/3ae11cf0-b16a-11e6-9fb3-161c0d6f46f7.png)
",gmoledina,2016-12-01 05:29:53
734,2016-11-24 16:53:45,"Hi @gmoledina Thanks for you contribution. One thing I want to ensure is: Is SwiftyJSON still buildable with Xcode 8.0? 

Here is a relate issue: https://github.com/antitypical/Result/pull/193",wongzigii,2016-12-01 05:29:53
734,2016-11-24 17:44:01,"@wongzigii From the comments in the thread you posted, I guess it doesn't work with Xcode 8.0
But as 8.1 is the latest, it makes sense to have the master branch work with the latest Xcode. We can simply have a specific tag that is the last version working on Xcode 8.0. (same logic as making it work for Xcode 7).",gmoledina,2016-12-01 05:29:53
734,2016-12-01 05:29:53,"@gmoledina There is no reason to prevent 3.0 compilers from running the latest master as there is no code breaking change. I could be convinced if there actually were new language features that we'd ship along with the change, but as it is, this PR only adds a major inconvenience for no benefit whatsoever. You can compile with 3.0.1 if you want, and you can compile with 3.0.0 if you'd like too, but we're not going to force you either way.

I'm gonna go ahead and close this. Thanks a lot for contributing to SwiftyJSON, let me know if you'd like to reopen.",ldiqual,2016-12-01 05:29:53
733,2016-11-23 15:25:37,Update TravisCI script to mitigate random fails for pending PR.,wongzigii,2016-11-23 16:27:32
733,2016-11-23 15:29:23,👍 ,zhigang1992,2016-11-23 16:27:32
732,2016-11-23 12:52:45,"when get boolValue from rawString which is a number, it's opposite to the older version when use string.boolValue",strangeliu,
732,2016-12-01 05:35:37,"@strangeliu If I understand this properly, this adds the ability to convert `""1""` and `""0""` to the corresponding booleans, with `""-1""` having some kind of undefined behavior (whatever NSDecimalNumber decides it is).

I'm personally in favor of moving away from any wobbly conversion like `""true"" => true` or `1 => true` because they can introduce unexpected bugs – I'd rather go with strict typing or return `nil` that the client would handle whichever way is best for their usecase. This is something we're actively discussing internally, so please hang in there until we decide of an outcome. We'll let you know asap. Thanks!",ldiqual,
732,2016-12-02 09:03:25,"@ldiqual Thanks for reply, In my opinion, the `bool` return a strict value and the `boolValue` gives a conversion, so we can get a `""5""` from a int `5` by stringValue. by this way, it's great to add this ability.",strangeliu,
731,2016-11-23 09:34:35,"@zhigang1992 @wongzigii 

Fixes https://github.com/SwiftyJSON/SwiftyJSON/issues/459 and https://github.com/SwiftyJSON/SwiftyJSON/issues/456

This is an implementation of my proposal in https://github.com/SwiftyJSON/SwiftyJSON/issues/459#issuecomment-262155181. At a high level the changes are as follow:

 - Added `init(jsonString: String) throws` which creates a JSON object from a valid json string. If the string cannot be converted to data or parsed by NSJSONSerialization, the initializer will throw an appropriate error as opposed to failing silently.
 - Added documentation + tests around the new initializer and updated the README
 - Removed `JSON.parse` which was doing the same thing (but would fail silently)
 - Made `init(data: Data)` throw as well, to handle invalid JSON data coming through.

**This is a code breaking change** since `init(data: Data)` now throws.

Let me know what you think.",ldiqual,
731,2016-12-01 05:31:04,@wongzigii Are we good on this PR?,ldiqual,
731,2016-12-01 06:34:14,I would like to defer to @zhigang1992 and move on.,wongzigii,
731,2016-12-02 17:08:57,"Since this is a breaking change, what about adding a change log entry for this? ",wongzigii,
731,2016-12-03 22:55:15,@wongzigii Great suggestion. Updated the CHANGELOG.,ldiqual,
731,2016-12-13 06:11:30,@zhigang1992 Bump,ldiqual,
731,2016-12-20 13:55:35,@ldiqual I want to get this into mater. Could you resolve the conflict?  Seems the conflict is related to #664,wongzigii,
730,2016-11-23 02:54:13,`Module compiled with Swift 3.0 cannot be imported in Swift 3.0.1: `,cszwdy,2016-11-23 04:17:06
730,2016-11-23 04:17:06,"Closing as duplicate of https://github.com/SwiftyJSON/SwiftyJSON/issues/716. This is a carthage issue, unrelated to SwiftyJSON. Thanks!",ldiqual,2016-11-23 04:17:06
729,2016-11-22 04:13:48,"@zhigang1992 Please review

Fixes https://github.com/SwiftyJSON/SwiftyJSON/issues/703

Pretty straightforward, let me know if you have any question",ldiqual,2016-11-23 08:15:43
729,2016-11-22 12:26:36,FYI: Sometimes CI is broken for this known issue: https://github.com/travis-ci/travis-ci/issues/6675,wongzigii,2016-11-23 08:15:43
729,2016-11-23 07:21:36,"@wongzigii Restarted the build and tests passed correctly. Can you review this PR as well, I'll take which ever 👍 comes first :P",ldiqual,2016-11-23 08:15:43
729,2016-11-23 07:54:31,LGTM,wongzigii,2016-11-23 08:15:43
729,2016-11-23 08:15:47,👍 ,zhigang1992,2016-11-23 08:15:43
728,2016-11-21 21:26:54,… usage subsection,cwkatzmann,2016-11-22 03:34:51
728,2016-11-22 03:34:49,@cwkatzmann Thanks a lot for your contribution! Merging,ldiqual,2016-11-22 03:34:51
727,2016-11-21 06:27:40,,fangpenlin,2016-11-22 03:35:12
727,2016-11-22 03:35:10,@victorlin Thanks a lot for your contribution! Merging,ldiqual,2016-11-22 03:35:12
726,2016-11-19 13:02:59,"Fix a warning, I found a warning in my project",chaiyanpu,2016-11-23 07:22:57
726,2016-11-19 13:21:54,"my Xcode is 8.1 ,  I'm sure there's a warning😳
",chaiyanpu,2016-11-23 07:22:57
726,2016-11-23 07:22:57,"@chaiyanpu Thanks a lot for your contribution! I've used part of your modifications in https://github.com/SwiftyJSON/SwiftyJSON/pull/729 and made sure tests also build without warnings. Most importantly, I avoided using force unwraps so that nothing leads to crashes. Closing this in favor of https://github.com/SwiftyJSON/SwiftyJSON/pull/729, thanks again!",ldiqual,2016-11-23 07:22:57
725,2016-11-17 15:43:51,"… destructively and non-destructively.

I added two new functions `merge(other: JSON)` and `merged(other: JSON) -> JSON`. Merging a JSON into another JSON adds all non existing values to the original JSON which are only present in the `other` JSON.

If both JSONs contain a value for the same key, _mostly_ this value gets overwritten in the original JSON, but there are two cases where it provides some special treatment:

- In case of both values being a `JSON.Type.array` the values form the array found in the `other` JSON getting appended to the original JSON's array value. 
- In case of both values being a `JSON.Type.dictionary` both JSON-values are getting merged the same way the encapsulating JSON is merged.

`merge`mutates the original JSON, whereas `merged` works non-destructively on a copy.

I found this to be an issue due to a stackoverflow.com post and posted my [answer](http://stackoverflow.com/questions/30427516/how-to-combine-two-swiftyjson-objects/40656255#40656255) there, but also think that this functions might be a good addition to the SwiftJSON project in general.",danielkiedrowski,2016-12-03 22:51:16
725,2016-12-03 22:51:10,"@danielkiedrowski Awesome!  Thank you so much for contributing to SwiftyJSON, this is a great feature. Merging now.",ldiqual,2016-12-03 22:51:16
725,2016-12-07 08:52:10,Thank you @ldiqual! It was great working with you.,danielkiedrowski,2016-12-03 22:51:16
724,2016-11-17 03:58:40,"Hi.
I have a json:

<S_CODE_TOKEN>

To get data json, in swift 2.3, i used:

<S_CODE_TOKEN>

But in swift 3, i get an error at: json[""data""]
![image](https://cloud.githubusercontent.com/assets/4046835/20375880/925e4634-acb4-11e6-974b-e0e1faf57ee5.png)

Please help me.
Thank you!




",MrLoveQD,2016-11-22 03:24:09
724,2016-11-17 08:20:55,"`json[""data""]` returns a value of type `JSON` which is a non optional, you can't use it in an `if let` unwrapping pattern. I would remove the `if` check altogether.
",ldiqual,2016-11-22 03:24:09
724,2016-11-17 08:36:14,"should i do ?
Please.
P/s: Those code worked fine on swift 2.3
",MrLoveQD,2016-11-22 03:24:09
724,2016-11-21 21:27:13,"      let json = JSON(data: data!)
      let dataJson = json[""data""]

      for subJson in dataJson.arrayValue {
            let fullName = subJson[""fullName""].string
             let gender = subJson[""gender""].string
             let age = subJson[""age""].int
                // do something
       }
        ",olejorgensen,2016-11-22 03:24:09
724,2016-11-22 02:54:55,Thanks you very much 👍 ,MrLoveQD,2016-11-22 03:24:09
724,2016-11-22 03:24:09,"Looks like your issue is addressed, closing now. Thanks!",ldiqual,2016-11-22 03:24:09
723,2016-11-16 15:10:18,Fixes #697 ,zhigang1992,2016-11-16 15:10:29
722,2016-11-15 23:20:16,"When I try to run my project, I'm getting this error: `no such module SwiftyJSON` Is SwiftyJSON still compatible with Swift 2.2 & Xcode 7.3.1? I'm using iOS 9.x fyi",zoufishanmehdi,2016-11-22 03:24:43
722,2016-11-15 23:40:40,"There's a separate branch with the old Swift 2 code.

Include this in your pod file if you are using Cocoapods:

pod 'SwiftyJSON', '2.4.0'
",DavidLari,2016-11-22 03:24:43
722,2016-11-22 03:24:43,@zoufishanmehdi I believe your issue was addressed so I'm gonna go ahead and close this. Let me know if you need to reopen. Thanks!,ldiqual,2016-11-22 03:24:43
721,2016-11-15 11:36:20,"{
    Data = ""{\""Photo\"":\""http://192.168.1.101/Users/Protraits/201611/9a704ca4bb064886a5a97cd8ad516c4e.JPG\"",\""Verify\"":\""0-0-0\"",\""VipState\"":\""0\"",\""NickName\"":\""\U706b\U67f4\"",\""Scroe\"":\""0\"",\""AccountMoney\"":\""0\"",\""Collection\"":\""89\""}"";
    DataCount = ""<null>"";
    IsSuccess = 1;
    Message = ""<null>"";
}

I can get data from this string,but I can`t get data from the ""Data"". Any ideas?",ftgithub,2016-11-28 06:50:46
721,2016-11-17 06:59:52,"@ftgithub Would you mind clarifying what you're trying to extract? Also, please post the json string that you're trying to parse, this seems like a dictionary that was printed in the console, not a valid json.
",ldiqual,2016-11-28 06:50:46
721,2016-11-22 03:25:12,@ftgithub Bump.,ldiqual,2016-11-28 06:50:46
721,2016-11-28 03:05:35,It appears you're trying to pull user/profile images of users from an unspecified source/array. Could you elaborate what it is exactly you're trying to do?,BryanSema,2016-11-28 06:50:46
721,2016-11-28 06:50:46,"@ftgithub In order to keep our issue backlog clean, and given the absence of followup, I'm gonna go ahead and close this. Please feel free to ping us if you'd like to reopen. Thank you!",ldiqual,2016-11-28 06:50:46
720,2016-11-15 02:06:59,"I've got nested JSON such as this simple example:
<S_CODE_TOKEN>

Created using:
<S_CODE_TOKEN>

However trying to get the .stringValue of json[""questions""] returns nil:
<S_CODE_TOKEN>

But getting the rawString() is fine
<S_CODE_TOKEN>",s1rc,2016-11-16 20:28:20
720,2016-11-15 19:02:12,"Firstly, a minor syntactic clarification: `.stringValue` never returns `nil`. Another property, `.string` _will_ return `nil` if the value of that `JSON` instance is not a `String`.
`.stringValue` on the other hand, will return an empty string (`""""`) in these cases.

**n.b.** From here on, I will assume you meant `.string` instead of `.stringValue`.

With that (brief) definition of `.string`, we can now start to see why calling `.string` on `json[""questions""]` returns `nil`. While the json at `json[""questions""]` can be represented as a string, it is not _actually_ a `String`.

<S_CODE_TOKEN>

The above is a `String` representation of a Javascript object (specifically a `Dictionary`). It consists of a single `String` key (`""20161111""`) with another object as its value (`{ ""id"" : ""1"", ""name"" : ""Q1"" }`). That object is also a `Dictionary`, consisting of two `String` keys (`""id""` and `""name""`), each with `String` values (`""1""` and `""Q1""` respectively).

As the value at `json[""questions""]` is a `Dictionary`, we can call `.dictionary` to retrieve the actual object.

_side note:_ This is not actually an issue. If you have any questions with how to use libraries like this one, try asking/searching [StackOverflow](http://stackoverflow.com/)
",TheNamesJames,2016-11-16 20:28:20
720,2016-11-16 13:41:12,"Yes I did actually mean .string was returning nil. 

Thank you for the explanation. Since I actually want the full JSON string .rawString() is what I need. 
",s1rc,2016-11-16 20:28:20
719,2016-11-13 09:35:30,,skyline75489,2016-12-22 04:30:48
719,2016-11-16 23:45:11,"Any specific reason for this？Cuz Xcode gives warnings about 'iPhone Developer'
",skyline75489,2016-12-22 04:30:48
719,2016-11-17 02:55:35,"It was added here

https://github.com/SwiftyJSON/SwiftyJSON/pull/682/files

maybe @mokagio have more context here.
",zhigang1992,2016-12-22 04:30:48
719,2016-11-22 03:43:20,@mokagio Bump. Can you give more context on the changes of your PR and why it creates warnings in 8.1? Thank you!,ldiqual,2016-12-22 04:30:48
719,2016-12-22 04:30:48,"Closing. As of Xcode 8.2 recommend settings in #764 
Thanks everyone. 🙏 ",wongzigii,2016-12-22 04:30:48
718,2016-11-13 09:21:00,This fixes #663 ,skyline75489,2016-11-16 15:15:43
718,2016-11-16 15:15:50,"👍 
",zhigang1992,2016-11-16 15:15:43
717,2016-11-10 13:13:50,"The `isBool` function on the NSNumber extension uses `trueObjCType`, which represents the type encoding for `true` represented as an NSNumber, and `falseObjCType`, which represents the type encoding for `false` represented as an NSNumber. Both type encodings are equal to `c`. However, an NSNumber that wraps around a value of type Int8 also has a type encoding of `c`.

Therefore, a user who passes in a value of 0 or 1 (of type Int8) into JSON will expect to see the numbers 0 or 1 as the output because that was the intent. Unfortunately, that value will be wrapped into NSNumber and be considered a bool, so the user will see `true` or `false` instead.

To fix this, when setting a new value of type Int8 on the computed properties `int8` or `int8Value`, the new value should be used to directly set `object`, which should then check for the Int8 type and use an Int instead. This is fine because an Int8 converted to an Int will always work and retain the same behavior of the JSON module, and also because the user`s intent is to use a number, not a boolean.

Having said that, the tests for `stringValue` on Int8 don't test the right thing. The user's intent is to use an integer, which is a number. However, the tests assume hardware implementation and accept the fact that it can either be true or false, which is unintuitive. Int8 is a pragmatic refinement to the semantic meaning of an integer, and should therefore be used as a number like the user intends, not a boolean.",SumoSimo,2016-11-16 16:43:16
717,2016-11-16 15:57:54,"Nice catch 👍 

How would you feel about:

<S_CODE_TOKEN>

Wrapping it in Int during `set`, this way we don't have a add a extra `if` when getting.
",zhigang1992,2016-11-16 16:43:16
717,2016-11-16 16:30:00,"@zhigang1992 

Thanks!

Good point. I've made the appropriate changes.
",SumoSimo,2016-11-16 16:43:16
717,2016-11-16 16:43:13,"👍 LGTM
",zhigang1992,2016-11-16 16:43:16
716,2016-11-10 03:12:43,"Upon updating my Xcode project to the current Swift syntax and using Xcode 8.1 GM, I'm getting the error ""Module complied with Swift 3.0 cannot be imported in Swift 3.0.1""

I have tried toggling the Legacy Swift Language on and off
I have also tried going back to an earlier Xcode",Joe2Code,2016-11-22 19:49:44
716,2016-11-10 03:17:40,"Are you using Carthage ? Try adding a `--no-use-binaries` flag after `carthage update`.

<S_CODE_TOKEN>
",wongzigii,2016-11-22 19:49:44
716,2016-11-10 14:13:46,"`carthage update --platform iOS --no-use-binaries` fixed the issue

I thought I had tried this, but I guess I didn't.
Thank you 
",Joe2Code,2016-11-22 19:49:44
716,2016-11-10 23:49:13,"Hello guys!

I've got the same error with Cocoapods. Do you have any suggestions how to fix that?

Thanks,
Ostap 
",ostapkuzyk,2016-11-22 19:49:44
716,2016-11-18 02:58:57,"How do we add `--no-use-binaries` for CI like buddy build ? 
",bishalg,2016-11-22 19:49:44
716,2016-11-18 03:04:53,"@bishalg I would suggest you to use `carthage bootstrap` for CI build. https://github.com/Carthage/Carthage/issues/1403
",wongzigii,2016-11-22 19:49:44
716,2016-11-20 19:53:15,"`--no-use-binaries` works just fine, but becomes toxic when another dependency relies on pulling down a prebuilt binary.  See AliSoftware/Reusable#34
",papertigers,2016-11-22 19:49:44
716,2016-11-22 04:21:36,"@papertigers @wongzigii Is there anything we can do at the SwiftyJSON level to fix this issue? Or is it using `--no-use-binaries` an appropriate workaround, which would make this issue resolved?",ldiqual,2016-11-22 19:49:44
716,2016-11-22 04:30:05,"SwiftyJSON was being downloaded precompiled by Carthage. The precompiled version was with Swift 3.0. So compiler complains that for the version is not match. 

I would suggest you guys to build Swift frameworks from code locally.
This is not a bug of SwiftyJSON, though. Instead, it is a limitation of Swift at this time until Swift's ABI get stable. 😄 ",wongzigii,2016-11-22 19:49:44
716,2016-11-22 19:49:44,@wongzigii Thanks for elaborating on this! It seems that it's a Carthage issue and not related to SwiftyJSON so I'm gonna go ahead and close this. Let me know if you need to reopen. Thanks!,ldiqual,2016-11-22 19:49:44
716,2017-01-04 09:42:50,"It looks like the uploaded `*.framework` for the release was compiled with Swift 3.0, since I'm still getting the error while using Xcode 8.2 and using the prebuilt framework.  Was this intentional?",solidcell,2016-11-22 19:49:44
716,2017-01-04 11:51:39,@solidcell  You can use the latest SwiftyJSON 3.1.4 while using Xcode 8.2 .FYI #764 ,wongzigii,2016-11-22 19:49:44
716,2017-01-05 12:00:28,"@wongzigii I know the code itself is compatible with Swift 3.0.2, but I'm fairly certain that the uploaded binary for the 3.1.4 release was compiled with Swift 3.0.  This means that you need to use `--no-use-binaries` with Carthage.  Or, in my case, I forked the repo and uploaded a binary built with Swift 3.0.2 so that I could use Carthage without turning off prebuilt binaries.",solidcell,2016-11-22 19:49:44
715,2016-11-09 14:39:59,"I want to validate the input against json schema
eg
<S_CODE_TOKEN>

Is there any function which can help me validate against all the inputs",sujaykakkad,
715,2016-11-09 21:53:52,"+1 curious about this as well
",mitchellporter,
715,2016-11-22 03:30:29,"I think it'd be a very interesting feature for SwiftyJSON that would allow it to differentiate itself from competitors. I'm gonna tag this as `help wanted` in case someone would like to work on this, please let us know in this issue so we can assign you.",ldiqual,
715,2016-11-22 13:09:47,OK I can help in contributing.,sujaykakkad,
715,2016-11-22 19:45:53,@sujaykakkad Awesome! Assigning you here then. Would you mind discussing the architecture in this issue before creating a PR? Just so we're on the same page. Thanks!,ldiqual,
715,2016-11-23 14:20:57,"<S_CODE_TOKEN>
Something like this as library ",sujaykakkad,
715,2016-12-01 10:01:39,"Hi, Where should I include JSONSchema.swift file in xcode project? Should I use 
<S_CODE_TOKEN> command and then include my file. The git repository has Source folder instead of Sources folder.",sujaykakkad,
715,2016-12-01 21:54:02,"@sujaykakkad Are you talking about https://cocoapods.org/pods/JSONSchema, or are you planning to write JSONSchema yourself?",ldiqual,
715,2016-12-02 09:33:21,I am planning to write the Schema myself. This uses Swift Dictionary. I am planning to use SwiftyJSON object to validate. I might refer from it though but my main reference is from http://json-schema.org/.,sujaykakkad,
715,2016-12-05 10:55:32,"So the repo has Source folder instead of Sources. Where should I include the Schema module in the repo?
",sujaykakkad,
715,2017-01-10 10:25:04,@sujaykakkad Source folder is fine. What's the progress on this? Would you need someone to help out?,wongzigii,
715,2017-01-11 06:36:39,Actually I am caught up with some work. I will get back to this next week. ,sujaykakkad,
714,2016-11-09 09:26:48,"Hello,
I have one solution which may be useful to many users of SwiftyJSON and who have one common question about JSON to Model conversion in proper way. 
I try to make this solution, it will be useful to those users.

Step 1. We will create one protocol with one constructor method in it and Model class
<S_CODE_TOKEN>

Step 2. We will create extension of JSON which will convert JSON to model class type object
<S_CODE_TOKEN>

Step 3. Use code with Alamofire or other code.
<S_CODE_TOKEN>

By follow these steps users can easily convert JSON object to their relative Model classes.
",AmitBhavsarIphone,2016-11-22 03:29:17
714,2016-11-09 09:35:01,"ya, I think this is very useful for me as json to model.
",VikasPrajapati27,2016-11-22 03:29:17
714,2016-11-22 03:29:17,"@AmitBhavsarIphone I would argue that it's not the role of SwiftyJSON to map JSON to models. SwiftyJSON's role is to allow manipulating json data flexibly, but not map it onto an object. There are a ton of other libraries whose role is to do this, on top of my head: Unbox, ObjectMapper, Mapper, etc. Those are fully unit tested and are doing a much better job at this than what SwiftyJSON would provide.

I'm going to close this as a wontfix, let me know if you'd like to reopen.",ldiqual,2016-11-22 03:29:17
714,2016-11-22 13:21:00,"Thumbs up for Unbox and Wrap which interoperate nicely with SwiftyJSON. Many of the other object mappers need raw JSON data/strings, but these two work well with the Arrays and Dictionaries that SwiftyJSON emits and ingests. It may be worth a shout out in the README.",eliburke,2016-11-22 03:29:17
713,2016-11-08 22:08:27,"Hi i try to use module 

let array = [""sdf"",""asd""]

let resultEncoded = JSON(data: array as Data) // or as NSData or NSData(array)


i can't understand what DataFromNetWorking what type? what type is Data?
 
let json = JSON(data: dataFromNetworking)
//The NSData used to convert to json.Top level object in data is an NSArray or NSDictionary
",devM4x,2017-02-22 14:24:01
713,2016-11-10 14:23:58,"Hey @devM4x 

What's `json` looks like ?  Are your trying to parse data from `dataFromNetworking` ?
",wongzigii,2017-02-22 14:24:01
713,2016-11-22 03:30:43,@devM4x Bump,ldiqual,2017-02-22 14:24:01
713,2016-12-02 16:33:33,"In swift3, `NSData` changed to `DATA` 
When you use `URLSession` for getting JSON from server, the json will come as `Data` type in swift3.

Check [dataTask(with:completionHandler:)](https://developer.apple.com/reference/foundation/urlsession/1407613-datatask)

<S_CODE_TOKEN>

You can get json by JSON(data:data) as below
<S_CODE_TOKEN>",JeffGuKang,2017-02-22 14:24:01
713,2017-02-22 14:24:01,Closing this due to lack of activity. Feel free to reopen if you have any other questions!,wongzigii,2017-02-22 14:24:01
712,2016-11-08 12:07:56,"Hello,

that is the code I am using for my JSON request and I am getting the error from the title.
Please help me

    self.alamoFireManager?.request(self.webserviceURL!, method: .post, parameters: parameters, encoding: JSONEncoding.default).responseJSON { response in
        switch response.result {
            case .success(let JSON):
    
                if let value = response.result.value {
                      let json = JSON(value)
                     ...
           case .failure(let error):
            if error._code == NSURLErrorTimedOut {
               ...
            }
    }",LiLmakr,2016-11-08 12:10:37
711,2016-11-07 12:41:06,"<img width=""341"" alt=""qq20161107-0 2x"" src=""https://cloud.githubusercontent.com/assets/7384288/20058143/6c7af93a-a52a-11e6-9975-14b78130ae13.png"">


Tests/SwiftyJSONTests -> Tests",wongzigii,2016-11-07 13:24:34
711,2016-11-07 13:24:34,"Will Rebase this PR and included in #708 . Closing for now.
",wongzigii,2016-11-07 13:24:34
710,2016-11-07 11:33:32,"    ➜  swift test
    error: no tests found to execute, create a module in your `Tests' directory

This error shows up while running `swift test` while testcases are not included properly using SPM.",wongzigii,
710,2016-11-22 04:00:21,PR in https://github.com/SwiftyJSON/SwiftyJSON/pull/708,ldiqual,
709,2016-11-07 11:18:44,"The project layout is incompatible with the Swift Package Manager.

### Steps to Reproduce

<S_CODE_TOKEN>

### Swift version

<S_CODE_TOKEN>

#705 suggests this should not a problem anymore... However I do not see a [version number bump](https://github.com/SwiftyJSON/SwiftyJSON/releases)? Or perhaps I just encountered this just after that issue was closed / pull request was merged... 🤔 In any case, I will leave this open until the version is fixed.

_related issues: #705, #688, #707?_",4np,2016-11-09 02:53:42
709,2016-11-07 18:21:48,"The layout error just started in Xcode 8.1 or Swift 3.0.1
",rickw,2016-11-09 02:53:42
709,2016-11-08 03:01:15,"For those who suffer this issue, you can use my branch as a workaround for now:

<S_CODE_TOKEN>
",wongzigii,2016-11-09 02:53:42
709,2016-11-08 03:03:33,"@zhigang1992 Would you mind pushing a new release so that SPM could catch this up? 😃
",wongzigii,2016-11-09 02:53:42
709,2016-11-08 15:28:11,"@wongzigii sure thing, just pushed `3.1.2` can you test it out and see if it works?
",zhigang1992,2016-11-09 02:53:42
709,2016-11-08 15:37:12,"@zhigang1992  Confirmed

<S_CODE_TOKEN>
",wongzigii,2016-11-09 02:53:42
709,2016-11-08 17:15:23,"I believe this issue could be closed for now. :) @4np Thanks for reporting this.
",wongzigii,2016-11-09 02:53:42
709,2016-11-09 10:22:38,"Confirmed fixed 👍 Thanks :)

<S_CODE_TOKEN>
",4np,2016-11-09 02:53:42
708,2016-11-07 10:42:16,"**WIP**

Fixs https://github.com/SwiftyJSON/SwiftyJSON/pull/708

This PR aims at porting SwiftyJSON to Linux Platform.",wongzigii,
708,2016-11-22 03:52:56,@wongzigii Can you clarify what's left on this PR? Do you need an extra hand maybe?,ldiqual,
708,2016-11-22 04:13:26,"@ldiqual SPM currently doesn't provide a way to include resources e.g. `.json` file to be tested.

Relate: 

https://lists.swift.org/pipermail/swift-users/Week-of-Mon-20161114/003987.html
https://lists.swift.org/pipermail/swift-users/Week-of-Mon-20161107/003912.html",wongzigii,
708,2016-11-22 04:17:34,"@wongzigii Given that it will remain unfixed for a while, maybe we should go ahead and put the json file in a [gist](https://gist.github.com/) that we'd download during the test? In theory it shouldn't be too hard to implement, it'd just make one test case a tad slow. What do you think?",ldiqual,
708,2016-11-22 04:48:59,It makes sense at this time as a workaround. I will give it a try later.,wongzigii,
707,2016-11-06 16:19:37,"Moving all test files into a product name based subdirectory. 

Fix #705 . ",wongzigii,2016-11-07 10:32:10
707,2016-11-07 10:32:08,"👍 
",zhigang1992,2016-11-07 10:32:10
706,2016-11-06 01:52:02,"I have the following json on the server, lower it but can not extract values.

`{""ServicoCliente"":[{""id"":""195"",""cliente"":""247"",""enderecoFavoritos"":""48"",""servicoProfissional"":""194"",""ind_estado_cliente"":""A"",""ind_estado_profissional"":"""",""profissional_id"":""240"",""profissional_nome"":""PetMax"",""servicotipo_nome"":""Petshop"",""servicosubtipo_nome"":""Tosa "",""dta_inc_alt"":""2016-11-05 22:56:19.333"",""ind_finalizado"":""N""}]}`

How could I get for example the value of ""id""?",athzuma,2016-11-07 03:12:29
706,2016-11-06 06:14:16,"@athzuma Any chance to try this?

<S_CODE_TOKEN>
",wongzigii,2016-11-07 03:12:29
706,2016-11-06 14:52:45,"this is returns null.
Just to confirm the Data is NSData?
",athzuma,2016-11-07 03:12:29
706,2016-11-06 14:54:12,"No, I just export your data into a single json file, and the output is 195.
",wongzigii,2016-11-07 03:12:29
706,2016-11-06 16:31:32,"I tested here like this json from a string and ran. But when I get it from the server does not work. I believe I have relationship with the ""character encoding"" server, could this be? and there is some form of deal with it?
",athzuma,2016-11-07 03:12:29
706,2016-11-06 16:34:37,"What does _does not work_ means ? Are you using Alamofire ? What is the result of response ?
",wongzigii,2016-11-07 03:12:29
706,2016-11-07 00:12:35,"I did several tests here, and also tried to Alamofire. It seems that the problem is with unescaped control character.

> Unescaped character control character around 263

unescaped control characters seem to cause failure in the process to get the json.
Is there a way for me to remove unescaped control characters?
",athzuma,2016-11-07 03:12:29
706,2016-11-07 01:45:43,"So hard to say what exactly your problem is. Would you mind including some codes here so we could dig more?
",wongzigii,2016-11-07 03:12:29
706,2016-11-07 02:56:48,"Thank you for attention. But I managed to solve.
I'll leave the solution here if useful for somebody else.
Some characters were preventing the transformation of the json, so I removed them so:

<S_CODE_TOKEN>
",athzuma,2016-11-07 03:12:29
705,2016-11-05 12:55:51,"Hi there,

I'm having some trouble integrating SwiftyJSON using the swift package manager, with 3.1.1.

Package.swift:

<S_CODE_TOKEN>

Output of swift build:

<S_CODE_TOKEN>

Xcode version 8.1
macOS Sierra 10.12

Many thanks",daviejaneway,2016-11-07 10:32:10
705,2016-11-06 16:56:13,"@daviejaneway (FYI) Once #707 merged, you might need to update `Package.swift` to a proper version of SwiftyJSON.
",wongzigii,2016-11-07 10:32:10
704,2016-11-04 18:28:12,"In the Swift Package Manager section, the word ""information"" is misspelled. ",sagnew,2016-11-07 12:31:14
704,2016-11-07 12:31:28,"👍 Nice catch
",zhigang1992,2016-11-07 12:31:14
703,2016-11-04 10:18:58,"Swift 3.0.1

Building with Carthage:

    Carthage/Checkouts/SwiftyJSON/Source/SwiftyJSON.swift:856:27: warning: expression implicitly coerced from 'String?' to Any",racer1988,2016-11-23 08:15:43
703,2016-11-05 00:01:52,"This is an issue with the syntax change in swift 3.0.1 and it is breaking my build in a very serious way. I imagine that I'm not the only one. This is a pretty critical fix because it keeps Carthage from working at all. 
",DanBurkhardt,2016-11-23 08:15:43
703,2016-11-05 00:32:09,"@DanBurkhardt Being a Warning it should still work. I have same issue with AlamoFire (https://github.com/Alamofire/Alamofire/issues/1745) but they should both work 
",racer1988,2016-11-23 08:15:43
702,2016-11-02 07:40:09,"It tells: "" Module compiled with Swift 3.0 cannot be imported in Swift 3.0.1: .../SwiftyJSON.swiftmodule/arm64.swiftmodule""

Maybe the framework should be compiled with swift 3.0.1.
Waiting for new release.",Shunzi007,2016-11-06 04:42:02
702,2016-11-02 10:35:52,"+1 for this.

Other Frameworks do not show the binary issue.
",racer1988,2016-11-06 04:42:02
702,2016-11-04 23:14:16,"Based on this issue https://github.com/SwiftyJSON/SwiftyJSON/issues/690, there is some working workaround.
",zwang,2016-11-06 04:42:02
702,2016-11-06 04:42:02,"With `--no-use-binaries`, Carthage works. Thanks!
",Shunzi007,2016-11-06 04:42:02
701,2016-10-31 17:05:28,"As shown in https://github.com/SwiftyJSON/SwiftyJSON/releases 
Is this a mistake? Thanks.",zwang,2016-11-04 23:13:02
701,2016-11-04 08:42:50,"I think the first 3.1.1 release has the wrong tag (`v3.1.1` instead of `3.1.1`)
",zettlunic,2016-11-04 23:13:02
701,2016-11-04 23:13:02,"Got it. Thanks pointing out. I missed that `v` :)
",zwang,2016-11-04 23:13:02
700,2016-10-31 07:30:38,Fix markdown syntax.,JeffGuKang,2016-10-31 07:48:52
700,2016-10-31 08:01:57,"Wow. So fast reaction. 👍 
",JeffGuKang,2016-10-31 07:48:52
699,2016-10-31 07:07:17,"Finish subscript part.
Add descriptions.",JeffGuKang,2016-11-07 12:32:26
699,2016-10-31 10:27:52,"And I think adding `loop` part next time. 
",JeffGuKang,2016-11-07 12:32:26
699,2016-11-07 12:32:48,"Good work. 👍 
",zhigang1992,2016-11-07 12:32:26
698,2016-10-28 20:38:36,"Expression implicitly coerced from 'String?' to Any
",mc256,2016-10-31 05:29:15
698,2016-10-31 05:29:19,"👍 
",zhigang1992,2016-10-31 05:29:15
697,2016-10-28 20:34:14,"Hello, 

I noticed in 3.1.1 there is a huge performance hit in enumerating over a JSON object vs. JSON.dictionaryValue in Swift 3. 

For example, iterating over a dictionary with ~400 keys like so: 

<S_CODE_TOKEN>

This took over **8 seconds**.      

<S_CODE_TOKEN>

This took **18 milliseconds**. I'm not sure what changed in 3.1.1 but the performance delta used to be indiscernible (though I never profiled it) in version 2.3.2, which I was previously using. 

Just wanted to flag - if there's an issue I'd be happy to work on a PR if someone points me in the right direction!
",adriansoghoian,2016-11-16 15:10:31
697,2016-11-10 17:09:49,"I'm also experiencing the same problem. Seems a few other are as well.
https://stackoverflow.com/questions/39900941/swifty-json-performance-degradation-with-swift3-xcode8-ios10
",ryl,2016-11-16 15:10:31
697,2016-11-16 15:25:14,"Hi @zhigang1992! Is it possible to know when this fix will be released?
",cikpis,2016-11-16 15:10:31
697,2016-11-16 15:41:21,"@cikpis FYI: https://github.com/SwiftyJSON/SwiftyJSON/releases/tag/3.1.3
",wongzigii,2016-11-16 15:10:31
696,2016-10-28 09:44:14,"Update example in README.md. Fix #694
",wongzigii,2016-10-31 05:29:31
696,2016-10-31 05:29:37,"Thanks for catching that. 👍 
",zhigang1992,2016-10-31 05:29:31
695,2016-10-28 09:09:32,"I am using swift 2.2 with Xcode 7.3.1. Trying to get the framework with tag **github ""SwiftyJSON/SwiftyJSON"" ~> 2.3.1**. But its always fetching the latest version available.
",vishal91,2016-11-22 04:23:44
695,2016-10-28 09:17:20,"`~>` means it will compatible with the version you pointing to. 

If you want v2.3.1 exactly,  please use

<S_CODE_TOKEN>
",wongzigii,2016-11-22 04:23:44
695,2016-10-28 09:19:12,"Whats the latest version which can be used with swift 2.2? Thanks !

On Fri, Oct 28, 2016 at 2:47 PM, Zigii Wong notifications@github.com
wrote:

> ~> means it will compatible with the version you pointing to.
> 
> If you want v2.3.1 exactly, please use above instead.
> 
> github ""SwiftyJSON/SwiftyJSON"" == 2.3.1
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> https://github.com/SwiftyJSON/SwiftyJSON/issues/695#issuecomment-256874456,
> or mute the thread
> https://github.com/notifications/unsubscribe-auth/ADpJCQ4VxaMGOFqPLQDh-sii2uT-GG6rks5q4b20gaJpZM4KjO0n
> .

## 

[image: --]

Vishal Dandge
[image: http://]about.me/vishaldandge1
http://about.me/vishaldandge1?promo=email_sig
",vishal91,2016-11-22 04:23:44
695,2016-10-28 09:26:38,"I believe it's 2.3.1, according to the [release note](https://github.com/SwiftyJSON/SwiftyJSON/releases). 
",wongzigii,2016-11-22 04:23:44
695,2016-11-22 04:23:44,@vishal91 I believe your issue was addressed so I'm gonna go ahead and close it. Let me know if you need to reopen!,ldiqual,2016-11-22 04:23:44
694,2016-10-28 08:30:22,"I found it is not work correctly when I make some playground examples.
The both ways below are written in README. 

<S_CODE_TOKEN>

JSON Example

<S_CODE_TOKEN>
",JeffGuKang,2016-10-31 05:29:31
694,2016-10-28 10:00:37,"I believe the documentation is outdated 👍 
",wongzigii,2016-10-31 05:29:31
693,2016-10-27 13:13:28,"I have created a small demo, which shows a problem with the current version (3.1.1) of Swifty JSON with JSON objects. I try to parse the JSON via a for loop. If I run this code, the app crashes after e few seconds with a memory exception.

<S_CODE_TOKEN>
",patricks,
693,2016-11-07 14:16:40,"Hey @patricks 

You are parsing a long JSON file . This will cause a gargantuan memory consumption. I would recommend you 
1. write your data into file then read file with `Data(contentsOf:options:)`  method with `Data.ReadingOptions.uncached` and `Data.ReadingOptions.alwaysMapped` flag
2. separate parsing job into several parts
(Or use something likes  [YAJL SAX style JSON parser](https://github.com/gabriel/yajl-objc) )
",wongzigii,
692,2016-10-26 14:39:30,"Hi

This was really unexpected behaviour for me:

<S_CODE_TOKEN>

The output is:

<S_CODE_TOKEN>

0 becomes false and any other number is output correctly.
",mbj2011,2016-11-16 16:43:18
692,2016-11-10 13:14:23,"Created [PR](https://github.com/SwiftyJSON/SwiftyJSON/pull/717) for this issue
",SumoSimo,2016-11-16 16:43:18
691,2016-10-26 10:33:02,"Hi , swiftyjson 实例化的model 不支持Realm 数据库吗？有什么办法可以实现解析实例化的model 用于Realm缓存
",SeongBrave,2017-01-10 11:10:13
691,2016-11-22 04:09:25,"@SeongBrave I believe that you didn't get an answer because your question wasn't in English. I think most contributors here don't understand Chinese and I'd suggest to edit your question in English so we can respond appropriately. Ping me when it's good to go, thanks!",ldiqual,2017-01-10 11:10:13
691,2016-11-22 04:19:22,@SeongBrave I believe your issue is related to an approach to mapping realm-friendly model. I would suggest you to use [ObjectMapper](https://github.com/Hearst-DD/ObjectMapper) to handle that chore job.,wongzigii,2017-01-10 11:10:13
690,2016-10-25 18:35:24,"I just updated to XCode 8.1. to test my application's functionality on iOS 10.1, and ran into an issue.

The error I get is: ""Module compiled with Swift 3.0 cannot be imported in Swift 3.0.1.""

And it points to the SwiftyJSON binary installed via Carthage.
",Xorcist77,2016-11-22 04:19:03
690,2016-10-26 01:38:32,"+1
",hdoria,2016-11-22 04:19:03
690,2016-10-26 01:40:02,"Can you try skip prebuilt binary?
I believe it's --skip-prebuilt-binary
",zhigang1992,2016-11-22 04:19:03
690,2016-10-26 03:25:18,"Worked with --no-use-binaries. Thanks.
",hdoria,2016-11-22 04:19:03
690,2016-11-22 04:19:02,Closing as duplicate of https://github.com/SwiftyJSON/SwiftyJSON/issues/716 which has a more extensive comment thread. Let's track the issue there. Thanks!,ldiqual,2016-11-22 04:19:03
689,2016-10-24 08:26:13,,JsonWong87,2016-11-22 04:27:09
689,2016-10-28 10:11:29,"If I understand you correctly, you are trying to inherit a JSON from a class. I don't think structs in Swift have inheritance since now. :(
",wongzigii,2016-11-22 04:27:09
689,2016-11-22 04:27:09,"@JsonWong87 I believe your issue was addressed by @wongzigii so I'm gonna go ahead and close this. If you have a use case where you think `JSON` should be subclassed, please feel free to file an enhancement issue so we can evaluate whether to add it to the library directly. Another solution for you would be to use extensions. Let me know if you need to reopen!",ldiqual,2016-11-22 04:27:09
689,2016-11-26 01:24:46," got it , thank you


发自网易邮箱大师
On 11/22/2016 12:27, Loïs Di Qual wrote:

@JsonWong87 I believe your issue was addressed by @wongzigii so I'm gonna go ahead and close this. If you have a use case where you think JSON should be subclassed, please feel free to file an enhancement issue so we can evaluate whether to add it to the library directly. Another solution for you would be to use extensions. Let me know if you need to reopen!

—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or mute the thread.",JsonWong87,2016-11-22 04:27:09
688,2016-10-23 05:02:01,"Swift Package Manager only uses the tags with a v in front of them.
",rickw,2016-11-22 04:29:38
688,2016-10-31 04:04:31,"Package manager see these tags: 
 Found tags ([1.0.0, 1.1.0, 2.0.0, 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.2.0, 2.2.1, 2.3.0, 2.3.1, 2.3.2, 2.3.3, 2.4.0, 3.0.0, 3.1.0])
I can't see 3.1.1 because the tag is v3.1.1 
",rickw,2016-11-22 04:29:38
688,2016-10-31 05:22:30,"Just pushed a the same tag as 3.1.1, sorry for the inconvenience.
",zhigang1992,2016-11-22 04:29:38
688,2016-10-31 22:22:03,"Thanks, yeah that was one I didn't see in the documentation for Swift Package Manager.

Also the new version Xcode 8.1 is complaining that the layout of the module is bad.
",rickw,2016-11-22 04:29:38
688,2016-11-07 11:06:54,"_Removed_

Opened #709 
",4np,2016-11-22 04:29:38
688,2016-11-07 11:18:57,"@4np I believe your issue is related to #705 .
",wongzigii,2016-11-22 04:29:38
688,2016-11-22 04:29:19,"@rickw As @wongzigii suggested, we believe that the issue that was last mentioned is due to #705. Concerning the versioning problem, I believe it was addressed by @zhigang1992 and confirmed by yourself, so I'll go ahead and close this. Let me know if you need to reopen",ldiqual,2016-11-22 04:29:38
687,2016-10-21 04:11:18,"lazy var drafts: [Draft] = {
        let defaults = UserDefaults.standard
        let dic = JSON(defaults.string(forKey: ""drafts""))
        var drafts: [Draft] = []

<S_CODE_TOKEN>

When defaults.string(forKey:"""") is nil, The above loop is non-stop
",Seroja1010,2016-10-21 04:16:36
686,2016-10-20 13:43:13,"The previous segue is pointed to the navigation controller. This causes the show segue to be presented instead on the current navigation controller. Attaching the segue to the view controller itself.
",yishus,2016-10-21 08:36:13
686,2016-10-21 08:36:16,":+1:
",zhigang1992,2016-10-21 08:36:13
685,2016-10-18 14:20:54,"Hello.
I am using Alamofire and SwiftyJSON to parse some data from JSON but I have an understanding issue.
So this is the JSON

<S_CODE_TOKEN>

This is how I get it with Alamofire and SwiftyJSON

<S_CODE_TOKEN>

My question is, how can I take the FIRST `source` of each `images` array inside that JSON and append it to an empty array???
I've tried several ways but it always takes the 5 sources inside the first `images`.
Any idea?
",kwstasna,2017-02-25 08:56:55
685,2016-10-21 08:43:05,"Can you try 

<S_CODE_TOKEN>

Haven't actually tested this.
",zhigang1992,2017-02-25 08:56:55
685,2017-02-25 03:42:10,"@kwstasna I tested @zhigang1992's solution and it appears to work just fine!

Here's my test code:

<S_CODE_TOKEN>",brandonlee503,2017-02-25 08:56:55
685,2017-02-25 07:08:51,@brandonlee503 Thanks for the following up!,wongzigii,2017-02-25 08:56:55
685,2017-02-25 08:56:55,Yes forgot to close this 💃 ,kwstasna,2017-02-25 08:56:55
684,2016-10-16 08:01:51,"Fixed wrong markdown syntax as spaces, line break and so on.
",JeffGuKang,2016-10-21 08:35:37
684,2016-10-21 08:35:35,":+1:
",zhigang1992,2016-10-21 08:35:37
683,2016-10-14 23:19:58,"I am having trouble finding where this problem lies. I am using Alamofire to get a JSON array and then I iterate through each item and append it to my swift array which then displays it on a UITable.

`Alamofire.request(""http://104.131.134.48:8090/all"", method: .get).responseJSON { response in
            if let JSON = response.result.value {
                for title in JSON as! [AnyObject]{
                    self.shows.append(Show(name: title as! String, description: ""Is the best"", image: #imageLiteral(resourceName: ""blowgun"")))
                }
                print(""JSON: \(JSON)"")
                print(""Shows: \(self.shows)"")
            }
`
It works fine and populates the Table on the simulator but it does not when I test on a real device. My server still says it sent the JSON but I cannot find out why it will not work on the real device.
",travisday,2017-01-10 11:10:42
683,2016-10-20 23:01:31,"> My server still says it sent the JSON but I cannot find out why it will not work on the real device.

Have you set a breakpoint in Almofire's completion handler? Is it hitting on simulator and on device? Have you tried logging these:

<S_CODE_TOKEN>
",mitchellporter,2017-01-10 11:10:42
683,2017-01-10 11:10:42,Closing.,wongzigii,2017-01-10 11:10:42
682,2016-10-14 22:02:20,"This PR explicitly set the Provisioning Style to Automatic in the iOS, tvOS, and watchOS target.

This has been done by simply unchecking and checking again the checkbox on the General tab.

Having the style explicitly set in the project file can help with scripts.

I didn't open an issue to suggest this change because it's super easy to implement anyway. If you don't find it valuable feel free to close the PR  ¯_(ツ)_/¯.

I didn't touch the macOS one because it was set to manual, and I thought there might have been a reason for that. If that's not the case I'm happy to update with macOS as well.

Cheers
",mokagio,2016-10-31 07:51:48
682,2016-10-21 08:37:27,"I don't think there is any reason for macOS target. Can you update it then we can merge this forward
",zhigang1992,2016-10-31 07:51:48
681,2016-10-14 18:25:43,"Before the Swift 3 update, boolValue used the NSString boolvalue
property. This property would return true for 'Y','y','T','t' in
addition to 'true'.

See more at:
https://developer.apple.com/reference/foundation/nsstring/1409420-boolvalue

Change Introduced in:
cf657820fad3656df022d8ebf32f9cdd99e1247a

During the swift 3 upgrade, this was changed slightly so only ""true""
would return true. This commit updates that behavior to match the
previous behavior for projects relying on that functionality.
",aterris,2016-10-21 08:38:53
681,2016-10-21 08:38:50,"Nice catch. 👍 
",zhigang1992,2016-10-21 08:38:53
680,2016-10-13 10:10:42,"Hi,
 I am getting this issue : -

FiveExceptions1s-Mac-mini:JSONGET fiveexceptions$ pod install
Analyzing dependencies
[!] Unable to find a specification for `SwiftyJSON`

How can i sort out this issue.Please let me know.

Thanks
",shivam5x,2016-11-22 04:31:48
680,2016-10-15 06:12:34,"<S_CODE_TOKEN>

This could take a long time to go,  please wait :)

<S_CODE_TOKEN>
",wongzigii,2016-11-22 04:31:48
680,2016-11-22 04:31:48,"@shivam5x This is now a month old and @wongzigii 's solution seems reasonable. I'm gonna go ahead and consider the issue fixed, let me know if you need to reopen!",ldiqual,2016-11-22 04:31:48
679,2016-10-12 19:15:33,"When the first public version of Swift was released, doesn't had modules support, so the most of the libraries put the whole code in a [single file](https://github.com/Alamofire/Alamofire/blob/1.0.0/Source/Alamofire.swift), to allow the users simulate namespaces wrapping the code inside of a struct.

Since the modules was introduced, this is unnecessary, and even unrecommended. The most of Swift libraries divided the code semantically in multiples files.

What do you think?
",dnlosx,
679,2016-11-22 04:33:12,@dnlosx I think it's very reasonable especially given how big SwiftyJSON.swift is (1500 loc). What structure would you propose?,ldiqual,
679,2016-12-14 21:16:45,"Sorry for the delay, I forgot this suggestion.
I think that we can use the current 'marks:' as base to separate the code in files.

Example:
- SwiftyJSON.swift
- Subscript
- LiteralConvertible.swift
- Raw.swift
- DebugPrintable.swift 
- Values.swift (Not sure about the name)
   [Marks: Array, Dictionary, String, Number, Null, URL, Int…]
- Comparable.swift",dnlosx,
678,2016-10-12 10:32:02,,dawvee,2016-11-16 16:05:37
678,2016-11-16 16:05:38,"👍 LGTM
",zhigang1992,2016-11-16 16:05:37
677,2016-10-10 14:59:22,"Hello, 

I'm trying to create a JSON object that has a key-value pair of ""String"": Int64 type. I want to use it for unit testing for some objects that have a timestamp in milliseconds (e.g. 1476101294000). I do get the following error ""Optional(Error Domain=SwiftyJSONErrorDomain Code=999 ""It is a unsupported type"" UserInfo={NSLocalizedDescription=It is a unsupported type})"" when I'm trying to retrieve the json[""timestamp""].int64. Bellow is the code:

<S_CODE_TOKEN>

Thank you in advance,
Alin
",alynmuntean,2016-11-28 10:09:51
677,2016-11-07 13:47:36,"Hey @alynmuntean I tried you code and confirmed that works. Would you like to share some progress on this ?

<img width=""825"" alt=""qq20161107-1 2x"" src=""https://cloud.githubusercontent.com/assets/7384288/20059949/c1b0eda2-a533-11e6-83c7-10404f32ded8.png"">
",wongzigii,2016-11-28 10:09:51
677,2016-11-18 15:14:54,"Hello @wongzigii, sorry for my late response. I just updated the framework but still getting the same error: ""Error Domain=SwiftyJSONErrorDomain Code=999 ""It is a unsupported type"" UserInfo={NSLocalizedDescription=It is a unsupported type}"".

![screen shot 2016-11-18 at 17 13 12](https://cloud.githubusercontent.com/assets/22174478/20434854/763f9314-adb2-11e6-9b46-64a37306369c.png)

Thank you for your time,
Alin
",alynmuntean,2016-11-28 10:09:51
677,2016-11-18 15:16:40,"@alynmuntean Would you mind uploading a sample project to reproduce this ?
",wongzigii,2016-11-28 10:09:51
677,2016-11-18 15:24:16,"Here it is: [SwiftyJSONSample.zip](https://github.com/SwiftyJSON/SwiftyJSON/files/600254/SwiftyJSONSample.zip)

Xcode Version 8.0 (8A218a), iPhone 5 (9.3) simulator, Swift 3. Check ViewController's ""viewDidLoad()"".
",alynmuntean,2016-11-28 10:09:51
677,2016-11-18 15:31:12,"Everything works fine on my laptop. Have you changed the build settings? Are you running on a 32bit machine?
",wongzigii,2016-11-28 10:09:51
677,2016-11-18 15:36:25,"I didn't change anything, what I sent to you is what I tested. I have a Macbook Pro (Late 2013), macOS Sierra 10.12.1 (64bit).
",alynmuntean,2016-11-28 10:09:51
677,2016-11-23 07:33:43,"@alynmuntean What are you running this code on? A simulator? If yes, which one? If no, which device then?",ldiqual,2016-11-28 10:09:51
677,2016-11-23 09:38:00,"Hi @ldiqual, tested on: iPhone 5 (iOS 10.0.1) - real device, iPhone 6S (iOS 9.3) - simulator, iPhone 7 - simulator, same result on all devices. Xcode Version 8.0 (8A218a).
Later Edit 1: I will download now Xcode 8.1 and give it a try.
Later Edit 2: It works now with Xcode Version 8.1 (8B62), thank you all for your time :).",alynmuntean,2016-11-28 10:09:51
677,2016-11-28 10:09:51,@alynmuntean Awesome! Glad it works with the new Xcode. Closing now.,ldiqual,2016-11-28 10:09:51
676,2016-10-10 12:43:46,,ianpartridge,2016-10-10 12:43:56
675,2016-10-07 12:03:39,"First step to remove adoption of `NilLiteralConvertible`
https://github.com/SwiftyJSON/SwiftyJSON/issues/670

Thanks to @Igor-Palaguta
",zhigang1992,2016-10-10 13:10:41
675,2016-10-07 12:06:31,"@Igor-Palaguta can you help review this code?
",zhigang1992,2016-10-10 13:10:41
674,2016-10-05 21:36:33,"I made a little JSON file to test
`var json: JSON =  [""name"": ""Jack"", ""name"": ""Travis""]`

and I want to append each name to my Array that feeds into a table view.

this works to load one key to the table

<S_CODE_TOKEN>

but eventually I want to be able to add large json files with lots of names so I attempted to loop.

<S_CODE_TOKEN>

However I get an error on the `self.shows.append(Show(name: name))` line 
`Cannot Conver value of type '(String,JSON)' to expected arguement type 'String'`
",travisday,2016-11-30 08:17:44
674,2016-10-07 01:31:08,"Not exactly sure if it helps

<S_CODE_TOKEN>

Change that `if let name` to something else?
",zhigang1992,2016-11-30 08:17:44
674,2016-10-07 12:17:55,"feel free to reopen this if needed
",zhigang1992,2016-11-30 08:17:44
674,2016-10-07 18:16:25,"@zhigang1992 that didn't help I get the same error, I changed it to `title` but no difference. Also I am not sure how to open it back up hahah
",travisday,2016-11-30 08:17:44
674,2016-10-08 08:22:52,"so what exactly is `json`, is it a dictionary or a arry?

If it's a dictionary, then there should only be one key named `name`.

If you're trying to loop through key and values, it should be

<S_CODE_TOKEN>
",zhigang1992,2016-11-30 08:17:44
674,2016-10-12 19:25:35,"@zhigang1992 well it needs to be an array hahaha, but your solution used with `[""name"": ""Jack""]` just prints out `name` not the value of name `Jack`
",travisday,2016-11-30 08:17:44
674,2016-10-12 22:55:56,"<S_CODE_TOKEN>`

this worked for me
",travisday,2016-11-30 08:17:44
674,2016-11-30 08:17:44,Closing. Feel free to reopen if need.,wongzigii,2016-11-30 08:17:44
673,2016-10-05 19:52:25,,fishcharlie,2016-10-07 01:40:43
673,2016-10-07 01:40:57,"🍻 
",zhigang1992,2016-10-07 01:40:43
672,2016-10-05 16:07:23,"Hello,

My [WMATAFetcher](https://github.com/clrung/WMATAFetcher) pod cannot be published due to errors in SwiftyJSON.  I ran `pod spec lint --verbose` and copied its [output to Pastebin here](http://pastebin.com/xTYN1XTd).

Things I have tried:
- Updated to the prerelease version of Cocoapods (1.1.0.rc.2)
- `pod repo update`
- [Cleared the Cocoapods cache](https://gist.github.com/mbinna/4202236)

`pod spec lint` shows that I'm using SwiftyJSON 3.1.0, so I think I have things configured properly.  Here is the [podspec](https://github.com/clrung/WMATAFetcher/blob/master/WMATAFetcher.podspec) and [Podfile](https://github.com/clrung/WMATAFetcher/blob/master/Podfile) that I am using.  That repo is up to date with my local project.

There are no errors or warnings in any of the targets (cross platform) in my project in Xcode 8.0 (8A218a).

Thank you in advance for the help!
",clrung,2016-10-07 01:38:10
672,2016-10-05 21:40:59,"Same error for [SwiftyConcur](https://github.com/concurlabs/SwiftyConcur), hoping we can get this fixed soon!
",brennick,2016-10-07 01:38:10
672,2016-10-07 01:38:10,"@brennick @clrung you have to add `.swift-version` to you project root.
Otherwise, cocoapods will think you're using swift2.3 instead
",zhigang1992,2016-10-07 01:38:10
672,2016-10-07 12:59:17,"Thank you, @zhigang1992!! 
",clrung,2016-10-07 01:38:10
671,2016-10-05 00:22:13,,yyshin,2016-10-07 01:41:12
671,2016-10-07 01:41:18,"👍 
",zhigang1992,2016-10-07 01:41:12
670,2016-10-04 09:01:35,"Hello,

Spent some time to understand, why code below does not work. And as a result nil is implicitly converted to JSON.

<S_CODE_TOKEN>

`childJSON` is instance of `JSON`, and never `nil`

Is this NilLiteralConvertible adoption really so important? Probably better to create convenience constructor without adoption to NilLiteralConvertible?

Thanks
",Igor-Palaguta,2016-10-10 13:11:04
670,2016-10-05 04:17:52,"I think it's a good point, I believe it was adopted at a early stage of SwiftyJSON.

I'm not exactly sure if it's used widely.

Let's get rid of it in the next release and see what happens.

Cheers.
",zhigang1992,2016-10-10 13:11:04
670,2016-10-07 02:24:08,"Seems like it's used this way in a lot of the places.

`json == nil`

which is rely on `JSON` being `NilLiteralConvertible`.

We might need to think further on how to approach this.
",zhigang1992,2016-10-10 13:11:04
670,2016-10-07 07:18:42,"It is more like comparison with nil, not with json that contains null. For this purpose more clear to use json == JSON.null. Is this comparison really used a lot? As a solution to deprecate this for now, and remove this in next versions

<S_CODE_TOKEN>
",Igor-Palaguta,2016-10-10 13:11:04
670,2016-10-07 10:47:04,"Another solution, remove NilLiteralConvertible conformance, and add:

<S_CODE_TOKEN>

Probably it covers your case, but I think better disallow comparison with nil. And to have explicit comparison with null json
",Igor-Palaguta,2016-10-10 13:11:04
670,2016-10-07 11:04:04,"I actually tried

<S_CODE_TOKEN>

Doesn't seems to be quiet working.
",zhigang1992,2016-10-10 13:11:04
670,2016-10-07 11:15:56,"I have this warning

<S_CODE_TOKEN>

I have swift2.3, probably if you are using swift3 you should use "":"" instead of ""=""
",Igor-Palaguta,2016-10-10 13:11:04
670,2016-10-07 11:39:46,"If that's the case, I think we should just go a head a do it. :)
",zhigang1992,2016-10-10 13:11:04
670,2016-10-07 12:47:33,"to create really optional variable this workaround works:
Swift2 version

<S_CODE_TOKEN>

Swift3 version:

<S_CODE_TOKEN>
",Igor-Palaguta,2016-10-10 13:11:04
670,2016-10-10 13:11:04,"🍻 
",zhigang1992,2016-10-10 13:11:04
670,2017-01-28 11:04:16,"Swift 3 :

Use from ""exists()""

<S_CODE_TOKEN>",RaziPour1993,2016-10-10 13:11:04
669,2016-10-03 10:13:32,"The example project has been upgraded to swift 3.0 and the copyright year in each file has been updated
",jobinsjohn,2016-10-04 09:25:35
669,2016-10-04 09:25:40,"👍 
",zhigang1992,2016-10-04 09:25:35
668,2016-10-03 08:54:12,"Hi,

I want to user version 2.3.3 but it is unavailable. However, only 2.4.0 is available, how can i use versions older than 2.4.0?

Thanks
",oktayayr,2016-10-07 12:28:37
668,2016-10-03 18:27:34,"I'd say use the direct GIT support offered through CocoaPods.

This document contains info on that: https://guides.cocoapods.org/using/the-podfile.html

Tags/versions of SwiftyJson are listed here: https://github.com/SwiftyJSON/SwiftyJSON/releases

Something like:

<S_CODE_TOKEN>
",jeroenleenarts,2016-10-07 12:28:37
668,2016-10-05 04:05:34,"@jeroenleenarts thanks you pointing it out
@oktayayr can I ask why would you prefer to stay on a old version?
",zhigang1992,2016-10-07 12:28:37
668,2016-10-07 12:28:37,"I've just published the missing `2.3.3` to cocoapods.

🍻 
",zhigang1992,2016-10-07 12:28:37
667,2016-10-02 17:42:30,"I'm using SwiftyJSON with Alamofire. I use JSON internally and then use json.dictionaryObject to convert to [String:AnyObject] to send to Alamofire -- but nested JSON objects aren't converted to [String:AnyObject] -- they remain JSON. Is there a way to get dictionaryObject to recurse?
",jalbano,
667,2016-10-06 22:09:52,"I am having the same issue. Is anyone currently looking at this?
(Swift 3 issue)
",jasonfergz,
667,2016-10-07 01:28:27,"Can you show a bit of code?

Also, take a look at
https://github.com/SwiftyJSON/SwiftyJSON/pull/660
And see if it fixes your problem.

We will be release it in 3.2 very soon.
",zhigang1992,
666,2016-10-02 17:02:56,"Cant find the branch for swift 3 .Thanks
",talhaqamar,2016-10-02 19:18:55
666,2016-10-02 19:18:55,"Even though swift 3 branch is not present now.Earlier it was present

But i try adding the framework manually after downloading from below link.
[link](https://github.com/SwiftyJSON/SwiftyJSON/releases/tag/3.1.0)
",talhaqamar,2016-10-02 19:18:55
666,2016-10-02 19:49:43,"@talhaqamar Pretty sure the Swift 3 branch doesn't exist anymore because `master` now supports Swift 3.
",mitchellporter,2016-10-02 19:18:55
666,2016-10-03 05:16:48,"I tried using master branch but it was integrating well.So i used the framework available on above link.
",talhaqamar,2016-10-02 19:18:55
665,2016-10-01 15:35:46,"We are upgrading to SwiftyJSON Swift 3 with CocoaPods config `pod 'SwiftyJSON', '3.1.0'`.   

We are getting this error: 

> /Users/xxx/Documents/iOS/xxx/Pods/SwiftyJSON/Source/SwiftyJSON.swift:866:33:
> Cannot convert return expression of type 'Int32?' to return type
> 'Int?'

Error is on the return statement in SwiftyJSON.swift:

<S_CODE_TOKEN>

Anyone know what the issue is?  Is this an issue with our CocoaPods config or with SwiftyJSON?
",marcusleon,2016-10-01 15:40:58
665,2016-10-01 15:36:54,"Are you on Xcode 8.0 `8A218a` or higher?
",zhigang1992,2016-10-01 15:40:58
665,2016-10-01 15:40:50,"I am.  Realized that the supported version is 3.0.0 not 3.1.0.   Used that version and I was good.

https://github.com/SwiftyJSON/SwiftyJSON/issues/647
",marcusleon,2016-10-01 15:40:58
665,2016-10-01 15:42:07,"`3.1.0` should also work, I'll look into it.
",zhigang1992,2016-10-01 15:40:58
665,2016-10-01 18:06:18,"same thing for me but with both version on 3.0.0 and 3.1.0 in both i get ""Cannot convert return expression of type 'Int32?' to return type 'Int?'""
xcode 8A218a 
",mostafamaan,2016-10-01 15:40:58
665,2016-10-04 21:27:38,"I'm having the same problem with SwiftyJSON 3.1.0 and Xcode 8A218a.
",ryl,2016-10-01 15:40:58
665,2016-10-14 20:45:11,"I am having same issue
",prikshitgupta,2016-10-01 15:40:58
665,2016-10-15 11:04:14,"I changed the int32Value to intValue. And the build succeeded
",casamia918,2016-10-01 15:40:58
665,2016-10-30 01:32:09,"I am having same issue
",wuyazi,2016-10-01 15:40:58
665,2016-11-08 17:46:27,"I'm having the same issue with SwiftyJSON 3.0.0. My xcode is 8B62 Any solution to this?
",jqzhao,2016-10-01 15:40:58
665,2016-11-15 10:03:36,"I have same issue.
Xcode8.1, Swift3.0.1, SwiftyJSON3.1.1
",masuhara,2016-10-01 15:40:58
665,2017-03-11 10:54:20,"same issue.. changed to intValue

",salvonos,2016-10-01 15:40:58
664,2016-09-30 07:46:20,"…Data isnt accidentally sent into the `init(_ object: Any)` constructor (now `init(object: Any)`)

Sorry about all the line changes. My Xcode has stripped all trailing newlines.
",MadsBogeskov,2016-12-10 08:35:31
664,2016-10-07 12:08:41,"I think this make sense, can you help fix the merge conflict?

Also, what do you think about having a old version method there for backward compatibility and add deprecate message?

Then we can remove them in the next release?
",zhigang1992,2016-12-10 08:35:31
664,2016-10-11 13:07:35,"I can. It makes complete sense to add support for backwards compatibility, but I was actually wondering if this PR should be taken a step further and just have a single `init´ that takes`Any` and then it self figures out what the input is. This is what most users would want (its what I would want) even if it might be a bit magical. What is your opinion? Would you rather have explicit constructors?
",MadsBogeskov,2016-12-10 08:35:31
664,2016-11-16 16:13:39,"Apologize for not responding sooner.

I like that, especially because this way the usage doesn't need to change, the old code will run without any modification. 😄 
",zhigang1992,2016-12-10 08:35:31
664,2016-11-17 06:58:40,"@MadsBogeskov Would you mind also reverting all the whitespace changes that you have in the diff? It makes the PR really hard to read and it's unbecessary for the functionality that you'd like to bring.
",ldiqual,2016-12-10 08:35:31
664,2016-11-17 07:00:57,"@ldiqual sure, I think though Ill take a closer look at the PR with regards to the notes from @zhigang1992. Ill get on it as soon as I can :)
",MadsBogeskov,2016-12-10 08:35:31
664,2016-12-01 06:31:14,@MadsBogeskov Any update on this? Do you need an extra hand maybe? I could help getting this PR closer to merge.,ldiqual,2016-12-10 08:35:31
664,2016-12-02 11:49:42,"I have updated my PR - I have included a single init that takes all types of input. Also I deprecated the static parse method, and instead added it as another init, to make it more clear when developers are trying to create an object, and not just create an JSON instance with a JSON string inside :)",MadsBogeskov,2016-12-10 08:35:31
664,2016-12-02 11:49:57,And sorry about the delay.,MadsBogeskov,2016-12-10 08:35:31
664,2016-12-10 07:00:25,@ldiqual @zhigang1992 can you approve this PR?,MadsBogeskov,2016-12-10 08:35:31
664,2016-12-10 08:35:33,Thanks! @MadsBogeskov ,wongzigii,2016-12-10 08:35:31
663,2016-09-29 17:44:47,"In SwiftyJSON.swift, for Swift 3, all of the `AnyObject`s have been converted to `Any`, except for 2 in the comments:

<S_CODE_TOKEN>

and:

<S_CODE_TOKEN>
",kengruven,2016-11-16 15:15:43
663,2016-09-29 17:45:53,"hm, thanks for the headup. will fix
",zhigang1992,2016-11-16 15:15:43
663,2016-09-29 17:48:14,"Seems like there are a few places in `README.md` as well.

Can you help make a PR for these fixes?

Or I can fix it a bit later. 😄 
",zhigang1992,2016-11-16 15:15:43
662,2016-09-28 12:20:28,"I'm making use of SwiftyJSON via Carthage. 
Carthage enables us to provide prebuilt frameworks.  We can download them directly without any local build time required.
Please attach the prebuilt Carthage libraries to the Github release.

https://github.com/Carthage/Carthage#archive-prebuilt-frameworks-into-one-zip-file

example:
https://github.com/realm/realm-cocoa/releases/tag/v2.0.0
",kazuhiro4949,2016-09-29 02:53:41
662,2016-09-28 14:43:27,"This is a really good idea, I'll look into this this week. 

Thanks for proposing this.
",zhigang1992,2016-09-29 02:53:41
662,2016-09-28 15:56:45,"Thanks for your response😄! I'm looking forward to attaching the prebuilt fremework.

My project is built on swift2.3 environment now. I would appreciated that you could attach both 2.3 and 3.0 versions.
",kazuhiro4949,2016-09-29 02:53:41
662,2016-09-29 02:53:39,"Prebuild binary is now attached.

Feel free to reopen this if you run into any issues.

🍻 
",zhigang1992,2016-09-29 02:53:41
662,2016-09-29 03:59:35,"Thanks a lot! 👏  I'll try  it!
",kazuhiro4949,2016-09-29 02:53:41
661,2016-09-28 03:37:58,"To many errors on Xcode 7.3.1
Over 123 errors

<img width=""360"" alt=""2016-09-28 9 35 46"" src=""https://cloud.githubusercontent.com/assets/16617536/18899996/34cadbee-855f-11e6-9751-27c3623e2b49.png"">
",zhanswift,2016-09-28 07:23:53
661,2016-09-28 04:08:13,"Are you using the master branch? Perhaps trying using an older release as the master is now set for swift 3 and you are still on the older Xcode.
",nicholas-lonsinger,2016-09-28 07:23:53
661,2016-09-28 04:47:14,"Thank you. Already find
",zhanswift,2016-09-28 07:23:53
661,2016-09-28 07:23:52,"closing, feel free to reopen this if needed
",zhigang1992,2016-09-28 07:23:53
660,2016-09-27 22:22:00,"Currently, getting rawdata from JSON objects fails and breaks when nesting other JSON objects together. This PR fixes that and adds tests for the test cases where this can fail.
",hectormatos2011,2016-09-28 07:15:16
660,2016-09-27 22:27:10,"The reasoning behind this PR is because currently, in order to nest JSON objects, we need to do something like this:

<S_CODE_TOKEN>

For developers migrating to SwiftyJSON from using dictionaries before, it's not immediately apparent that this case crashes when getting rawData from the `nested` object because `JSONSerialization` doesn't recognize the `JSON` struct as serializable. Plus, a developer would expect to be able to construct JSON objects like this fairly regularly. Especially when developers start moving to Swift on the backend.

Merging this PR would allow a developer to do this:

<S_CODE_TOKEN>
",hectormatos2011,2016-09-28 07:15:16
660,2016-09-27 22:57:47,"The last commit I put in was a direct duplicate of #589. The reasoning for this is because my changes will directly conflict with those changes. This brings in the performance enhancements while still supported nested JSON.
",hectormatos2011,2016-09-28 07:15:16
660,2016-09-27 23:05:16,"This is weird. Tests are passing on my machine.
",hectormatos2011,2016-09-28 07:15:16
660,2016-09-27 23:05:30,"Could we restart travis?
",hectormatos2011,2016-09-28 07:15:16
660,2016-09-28 01:01:30,"I forked this and it succeeded twice in Travis. From looking on the web, this could be related to many things, but the intermittent nature of it lends itself to being a timeout issue which many people believe to be the cause.

There is a ""Restart Build"" button in travis, so if this error comes back you could always try that. Otherwise there are numerous suggestions on how to mitigate or work around this issue, but it's hard to see if they help if the issue is not currently happening.
",nicholas-lonsinger,2016-09-28 07:15:16
660,2016-09-28 01:48:11,"@nicholas-lonsinger Thanks for that. I think because I don't have access, I can't restart the build myself. I tried looking and couldn't find the restart build button that's normally there.
",hectormatos2011,2016-09-28 07:15:16
660,2016-09-28 07:15:12,"LGTM 👍 
",zhigang1992,2016-09-28 07:15:16
659,2016-09-27 16:21:35,"I am working with this code snippet below from the SwiftyJson docs and I am receiving the errors **Enum case 'Success' not found in type 'Result<Any>** and **Enum case 'Failure' not found in type 'Result<Any>.** Please help me fix this issue. I am using Swift 3.0 and SwiftyJson 3.1.0.

<S_CODE_TOKEN>
",donadley,2016-09-28 13:51:25
659,2016-09-28 07:24:54,"What version of Alamofire are you using?
",zhigang1992,2016-09-28 13:51:25
659,2016-09-28 12:30:07,"Enums are lower case, so change to .success and .failure in Swift 3
",jeneumeier,2016-09-28 13:51:25
659,2016-09-28 13:51:25,"Awesome @jeneumeier. Making success and failure lowercase did the trick. Thank you.
",donadley,2016-09-28 13:51:25
659,2016-09-28 14:44:42,"@jeneumeier nice catch, let me update README as well. 

🍻 
",zhigang1992,2016-09-28 13:51:25
658,2016-09-27 10:33:12,"Hello, still on the swift 2 branch.
Trying to compile the project after and update and it seems that isExists isn't there anymore and has been replace by exists.
Could you guys update the readme for other users please?
",tirrorex,2016-09-28 07:34:11
658,2016-09-28 07:28:30,"Nice catch.
",zhigang1992,2016-09-28 07:34:11
658,2016-09-28 07:34:11,"Addressed in https://github.com/SwiftyJSON/SwiftyJSON/commit/54017d514a87b2b855b407131292c510cdeb65f8
",zhigang1992,2016-09-28 07:34:11
657,2016-09-27 04:59:29,"Adds an example to the read me with an example of nested json objects. 
",samisuteria,2016-09-27 13:08:26
657,2016-09-27 05:02:51,"I totally think this should be made implicit in the library. +1 for actually finding this! This totally fixed some crazy errors in our project.
",hectormatos2011,2016-09-27 13:08:26
657,2016-09-27 13:08:33,"👍 
",zhigang1992,2016-09-27 13:08:26
656,2016-09-26 17:41:36,"I'm trying to update to swift 3 and I have SwiftyJSON 3.1.0 installed. There's one line that xcode is trying to convert before it will allow me to switch over. (ignore all the errors on the right side)
![screen shot 2016-09-26 at 10 39 58 am](https://cloud.githubusercontent.com/assets/3655258/18845244/c7e5dd4c-83d5-11e6-86d0-c16ebbd985c9.png)
",andrewjmeier,2016-09-26 19:31:54
656,2016-09-26 19:31:46,"Turns out if you change it to what the syntax updater wants and then change it right back immediately it works fine. 
",andrewjmeier,2016-09-26 19:31:54
656,2016-09-27 09:24:20,"You have to upgrade to cocoapods to pre release version or add a extra script.

Refer to swift 3 issue.
",zhigang1992,2016-09-26 19:31:54
656,2016-09-27 09:24:52,"https://github.com/SwiftyJSON/SwiftyJSON/issues/647
",zhigang1992,2016-09-26 19:31:54
655,2016-09-26 16:37:26,"I get the following error when defining my project as a dependency of this one. 

<S_CODE_TOKEN>

And my relevant pod spec line.

`s.dependency 'SwiftyJSON', '~> 3.1'`

using `s.dependency 'SwiftyJSON'` gives me SwiftyJSON `2.4.2`
",kylebrowning,2016-09-27 13:35:27
655,2016-09-27 05:49:27,"Is your project on swift 3 or swift 2.3?
",zhigang1992,2016-09-27 13:35:27
655,2016-09-27 05:50:06,"Also, SwiftyJSON  never release verison `2.4.2`.
",zhigang1992,2016-09-27 13:35:27
655,2016-09-27 05:50:35,"what's your source field in Podfile?
",zhigang1992,2016-09-27 13:35:27
655,2016-09-27 06:00:02,"My project is 3.0 swift.

and my pod spec file is listed above in my question.

`s.dependency 'SwiftyJSON', '~> 3.1`
",kylebrowning,2016-09-27 13:35:27
655,2016-09-27 06:01:00,"heres my pod spec. https://github.com/acquia/waterwheel-swift/blob/4.x/waterwheel.podspec
",kylebrowning,2016-09-27 13:35:27
655,2016-09-27 06:05:20,"<S_CODE_TOKEN>
",zhigang1992,2016-09-27 13:35:27
655,2016-09-27 06:10:01,"I did test it locally with 
Podfile

<S_CODE_TOKEN>

And its working fine.

<S_CODE_TOKEN>
",zhigang1992,2016-09-27 13:35:27
655,2016-09-27 12:19:43,"What version of CocoaPods have you used?

I've got error, when set last version of SwiftyJSON (swift 3.0, xcode 8). My pod file looks like it

#Uncomment this line to define a global platform for your project
#platform :ios, '9.0'

target 'TestCocoapods2' do
  # Comment this line if you're not using Swift and don't want to use dynamic frameworks
  use_frameworks!

  # Pods for TestCocoapods2
    pod 'Alamofire'
    pod 'SwiftyJSON', '~> 3.1'
end

Error message in terminal:
""[!] Unable to satisfy the following requirements:
- `SwiftyJSON (~> 3.1)` required by `Podfile`

None of your spec sources contain a spec satisfying the dependency: `SwiftyJSON (~> 3.1)`.

You have either:
- out-of-date source repos which you can update with `pod repo update`.
- mistyped the name or version.
- not added the source repo that hosts the Podspec to your Podfile.

Note: as of CocoaPods 1.0, `pod repo update` does not happen on `pod install` by default.""

Thanks.
",Venko132,2016-09-27 13:35:27
655,2016-09-27 13:06:48,"I'm on 1.1.0rc2.

try `pod repo update`?
",zhigang1992,2016-09-27 13:35:27
655,2016-09-27 13:35:27,"`pod repo update` fixed everything, my apologies!
",kylebrowning,2016-09-27 13:35:27
654,2016-09-26 10:01:11,"![screen shot 2016-09-26 at 3 33 05 pm](https://cloud.githubusercontent.com/assets/16931145/18860901/e5f5fc26-849e-11e6-9ded-3c0a5ccac262.png)

I have done swiftyjson installation using cocoapods after that build failed error occurs. How to resolve this issue?
",gsujathap,2016-10-03 17:24:46
654,2016-09-26 15:28:35,"Seems like the screenshot hasnt finish uploading yet.
Can you try it again?
",zhigang1992,2016-10-03 17:24:46
654,2016-09-27 05:12:10,"Please resolve this issue ASAP. Thank you in advance.
",gsujathap,2016-10-03 17:24:46
654,2016-09-27 05:24:48,"I have resolved this issue by updating SWIFT with latest version from 2.0 to 3.0
",gsujathap,2016-10-03 17:24:46
654,2016-09-27 05:44:07,"If you are using swift 2.3 please use swift2 branch, or 2.4.0 on cocoapods.

https://github.com/SwiftyJSON/SwiftyJSON/issues/647
",zhigang1992,2016-10-03 17:24:46
654,2016-09-27 05:59:19,"Now, I am using Swift 3.0. How to resolve this issue?
",gsujathap,2016-10-03 17:24:46
654,2016-09-27 06:00:15,"Can you try https://github.com/SwiftyJSON/SwiftyJSON/issues/647
",zhigang1992,2016-10-03 17:24:46
654,2016-09-30 17:01:16,"Had the same issue. I had Xcode 8.0 and there wasn't any updates in appstore. Solved by downloading Xcode 8.1 from https://developer.apple.com/download/. 
",TPetterson,2016-10-03 17:24:46
654,2016-10-02 21:50:06,"For the time being you can just attempt to save after Xcode 8.0 has attempted to update the file to Swift3.  You will get a lock message and if you then click on cancel, then clean the project and build it should clean up (it may also ask you to update your build file which you can go ahead and let it do).
",justdan0227,2016-10-03 17:24:46
654,2016-10-03 14:05:14,"Right, that's because of the cocoapods issue

see https://github.com/SwiftyJSON/SwiftyJSON/issues/647 for more detail
",zhigang1992,2016-10-03 17:24:46
654,2016-10-03 15:11:39,"thanks @zhigang1992 !  Didn't know that.  What version of cocoapods does not have that issue?
",justdan0227,2016-10-03 17:24:46
654,2016-10-03 15:12:36,"`1.1.0.rc.2` or higher
",zhigang1992,2016-10-03 17:24:46
654,2016-10-03 15:16:57,"Ahhh thanks.. I have a Ruby on Rails project that has to use 0.32.0 so will have to use this work around for now.
",justdan0227,2016-10-03 17:24:46
654,2016-10-03 17:21:12,"> Or, if you can't upgrade your cocoapods,
> 
> <S_CODE_TOKEN>
",zhigang1992,2016-10-03 17:24:46
654,2016-10-03 20:01:29,"Awesome!  Thanks!
",justdan0227,2016-10-03 17:24:46
653,2016-09-26 04:40:46,"close #651 
",zhigang1992,2016-09-26 05:33:39
652,2016-09-26 00:19:40,"With Swift 3, the NS prefix is dropped from several Foundation classes, including `NSURL`, to avoid casting between classes SwiftyJSON should use `URL` instead as this is the default class in Swift 3 now.
",aaronpearce,2016-09-26 03:05:40
652,2016-09-26 02:30:39,"@aaronpearce nice catch, can you help fix the build and lets ship it. ;)
",zhigang1992,2016-09-26 03:05:40
652,2016-09-26 02:53:08,"@zhigang1992 Should be ready to merge now. 🎉 
",aaronpearce,2016-09-26 03:05:40
652,2016-09-26 03:06:00,":beers:
",zhigang1992,2016-09-26 03:05:40
651,2016-09-25 16:36:15,,gewill,2016-09-26 05:33:39
651,2016-09-25 16:38:59,"<S_CODE_TOKEN>
",gewill,2016-09-26 05:33:39
651,2016-09-26 04:41:21,"Can you try out https://github.com/SwiftyJSON/SwiftyJSON/pull/653 and see if it fixes the issue?
",zhigang1992,2016-09-26 05:33:39
651,2016-09-26 05:31:00,"#653 fixed the bug, and pass the test, thanks.
",gewill,2016-09-26 05:33:39
650,2016-09-25 14:12:46,,dana420,2016-09-26 04:16:24
650,2016-09-25 15:30:24,"？
",zhigang1992,2016-09-26 04:16:24
650,2016-09-26 04:16:23,"closing now feel free to reopen this if needed.
",zhigang1992,2016-09-26 04:16:24
649,2016-09-25 13:54:50,"Swift 3 drops the `NS` prefix for a lot of classes, including `NSURL`. I think that the URL extension in the the 3.0.0 release has not yet been updated to use `URL` instead of `NSURL`.
",wvteijlingen,2016-09-26 05:33:55
649,2016-09-26 04:26:55,"Just merged https://github.com/SwiftyJSON/SwiftyJSON/pull/652

Will be part of 3.1 release.
",zhigang1992,2016-09-26 05:33:55
648,2016-09-24 10:14:17,"This includes the changes that Xcode 8 suggest to convert the project when loaded.
",klaas,2016-09-28 07:32:28
648,2016-09-26 04:25:21,"hm, interesting, how come I'm not getting this from my Xcode.

Can you provide a bit more detail?

I'm on Xcode `Version 8.0 (8A218a)`.

It's not asking you to upgrade when I open the project.
",zhigang1992,2016-09-28 07:32:28
648,2016-09-28 07:32:26,"Can you refer to 
https://github.com/SwiftyJSON/SwiftyJSON/issues/647

I think this is related to the cocoapods section.

Feel free to reopen this if needed.
",zhigang1992,2016-09-28 07:32:28
647,2016-09-23 09:28:04,"First of all, apologize for this really really late response.
### tl;dr

We have landed Swift3 support in master branch, also Swift2.3 support in [swift2](https://github.com/SwiftyJSON/SwiftyJSON/tree/swift2) branch.

<hr>
### Upgrade to Swift3
#### With CocoaPods

Update your Podfile

<S_CODE_TOKEN>

Also, at the time of writing, CocoaPods 1.1 is still not released.
So in order to get it working with Xcode8, we need the rc version

<S_CODE_TOKEN>

Or, if you can't upgrade your cocoapods, try this solution from [RxSwift](https://github.com/ReactiveX/RxSwift#cocoapods)

<S_CODE_TOKEN>
#### Carthage

`github ""SwiftyJSON/SwiftyJSON"" ""3.0.0""`
### Upgrade to Swift2.3
#### CocoaPods

Update your Podfile

<S_CODE_TOKEN>
#### Carthage

`github ""SwiftyJSON/SwiftyJSON"" ""swift2""`

Please file new issues or comment if you're still having issues upgrading

<hr>

Unfortunately, all the previous notification and mentioning to the authors had somehow fall through the cracks.

Even through Swift3 support was something hanging in our mind, but we all thought that the other guy would had done it already.

like a old Chinese saying 

> 三个和尚没水喝 / too many cooks spoil the broth

None of us actually go ahead and get this through.

We are very sorry for this.

Starting from now, I'll be more involved in this project, responding to issues, PRs and pushing out new roadmaps.

<hr>

Thank you all for being involved here, especially for sending out those swift3 swift2.3 PRs.
We look through most of them, and most of them were alike, so we picked the [most recent one](https://github.com/SwiftyJSON/SwiftyJSON/pull/633) from [jeneumeier](https://github.com/jeneumeier).

Cheers
",zhigang1992,2017-02-22 14:45:19
647,2016-10-04 12:56:19,"@zhigang1992 
why don't you set this in your podspec?

<S_CODE_TOKEN>

No need to force people changing their podfiles with `post_instal`. So simple.
",kas-kad,2017-02-22 14:45:19
647,2016-10-06 13:52:51,"@kas-kad I've worked around this for now by forking the repo and specifying my own repo in the Podfile.

Hope that helps for now.
",oliverfoggin,2017-02-22 14:45:19
647,2016-10-06 14:02:01,"@oliverfoggin yeah, I mean there are several ways to workaround the problem manually, but it can be solved once and forever without any need to explain people how to do it by themselves
",kas-kad,2017-02-22 14:45:19
647,2016-10-07 01:29:04,"@kas-kad I think it's a really good idea. Let's add it. 🍻 
",zhigang1992,2017-02-22 14:45:19
647,2016-10-07 01:40:21,"Seems like @fishcharlie already have a PR for it.

https://github.com/SwiftyJSON/SwiftyJSON/pull/673

merging away.
",zhigang1992,2017-02-22 14:45:19
647,2016-11-11 19:12:10,"not working for me; Xcode still tells me SwiftyJSON is not compatible with Swift3
",gadget00,2017-02-22 14:45:19
647,2016-11-11 19:29:19,"@gadget00 you need to install the prerelease version of cocoa pods.

Suso gem install cocoapods --pre
",oliverfoggin,2017-02-22 14:45:19
647,2016-11-11 20:09:32,"Actually, release version 1.1 should do it. Pre is on 1.2 beta now.
",DavidLari,2017-02-22 14:45:19
647,2016-11-25 06:43:18,swift 3.0.1 xcode 8.1,liufsd,2017-02-22 14:45:19
647,2016-12-28 18:29:31,"Updating pod 'SwiftyJSON', '3.0.0' is working for me. Really thanks!",delajose90,2017-02-22 14:45:19
646,2016-09-23 08:32:28,"I just upgraded to xCode 8 and now I am getting this errors

![image](https://cloud.githubusercontent.com/assets/22390398/18779352/f1c9d21c-8178-11e6-9f46-b9e736de06d3.png)
![image](https://cloud.githubusercontent.com/assets/22390398/18779355/fb2798ee-8178-11e6-90ac-1d1d140d106a.png)
",LiLmakr,2016-09-23 08:34:06
646,2016-09-23 08:34:06,"You've to upgrade to version 3.0.0 in CocoaPods,

`pod 'SwiftyJSON', '3.0.0'`

Also you have to use cocoapods rc for it to work with Xcode8.

<S_CODE_TOKEN>

Feel free to reopen this if still running into issues.
",zhigang1992,2016-09-23 08:34:06
646,2016-09-23 08:44:29,"Still getting the errors
",LiLmakr,2016-09-23 08:34:06
646,2016-09-23 08:45:58,"Can you paste in `Podfile.lock` & `Podfile`?
",zhigang1992,2016-09-23 08:34:06
646,2016-09-23 08:47:58,"Oh it didn't upgrade to SwiftyJSON 3.0.0 by itself... Fixed it now :)
",LiLmakr,2016-09-23 08:34:06
645,2016-09-23 06:31:09,"Hi,

I'm trying to get raw data or string representation of json object to convert to Data object, but getting error and nil.

The type of json object data:
![image](https://cloud.githubusercontent.com/assets/19325420/18776116/f64e189c-81a1-11e6-9bb4-d30e665e7886.png)

How I set data to json object:
![image](https://cloud.githubusercontent.com/assets/19325420/18776122/00c51bfe-81a2-11e6-98c2-698a2a090f45.png)

Trying to get Data object:
![image](https://cloud.githubusercontent.com/assets/19325420/18776127/0bc6025c-81a2-11e6-8974-a540eddef46f.png)
(also tried with specific writing option)

Trying to get raw data in other forms:
![image](https://cloud.githubusercontent.com/assets/19325420/18776143/330d6940-81a2-11e6-8ba7-3969ff64c77a.png)

Results:

<S_CODE_TOKEN>

json.rawValue
![image](https://cloud.githubusercontent.com/assets/19325420/18776195/8f6b7d80-81a2-11e6-90d1-1bf50aaa11e0.png)

Any idea would be very nice.
Thanks.
",arrrggghhh,2016-09-23 09:17:50
645,2016-09-23 08:10:25,"Also facing same issue, for me it appeared after using swift3 branch
",KashanDanish,2016-09-23 09:17:50
645,2016-09-23 08:18:36,"<img width=""1512"" alt=""screen shot 2016-09-23 at 4 18 06 pm"" src=""https://cloud.githubusercontent.com/assets/1057756/18778907/58224eba-81a9-11e6-830c-1f758ea8eea0.png"">

Seems working fine here.
Can you try the latest master branch?

<S_CODE_TOKEN>
",zhigang1992,2016-09-23 09:17:50
645,2016-09-23 09:14:49,"Hi,

Thanks for your responses.

I changed Podfile:

<S_CODE_TOKEN>

Result is the same.

But when I run

<S_CODE_TOKEN>

rawString() indeed made a string result.

![image](https://cloud.githubusercontent.com/assets/19325420/18779854/b56bee80-81b5-11e6-89a0-d54676f19745.png)

So I tried this to see if one of value arrays or dictionaries is causing this:

![image](https://cloud.githubusercontent.com/assets/19325420/18780160/30cae292-81b7-11e6-89e2-5299472f8fd8.png)

Results were:

<S_CODE_TOKEN>

JSON2 to JSON5 have non-nil results.

I look at the types of data for JSON1 and I found out that during Swift 3 conversion, I made a mistake using `base64EncodedData` instead of `base64EncodedString` for a variable that should be a string.

So, it was my mistake 😅

The particular functionality I need now works!
",arrrggghhh,2016-09-23 09:17:50
645,2016-09-23 09:17:50,"sweet, good to know

🍻 

feel free to reopen this if needed.
",zhigang1992,2016-09-23 09:17:50
644,2016-09-23 05:44:04,"Added little more descriptive comment. This one is the follow up to the PR that was 4 months old and i had to close it because it had redundant commits. 
",kandelvijaya,2016-09-23 07:34:38
644,2016-09-23 07:34:41,"👍 
",zhigang1992,2016-09-23 07:34:38
643,2016-09-22 22:28:14,"Whenever I try and install the newest SwiftyJSON through cocoapods and then open the project I am prompted with convert to current swift syntax even though SwityJSON 3 supports Swift 3.

If I say later it says Module Compiled with Swift 3 cannot be imported in Swift 2.3 
",tgb20,2016-09-23 00:30:51
643,2016-09-22 23:58:03,"What version of Cocoapods you using? You should have 1.1 RC 2 if you want it to work.
",DavidLari,2016-09-23 00:30:51
643,2016-09-23 00:17:50,"I am using 1.1.0.rc.2. I reinstalled cocoapods and I no longer get the prompt to switch but it tells me ""No Such Module 'SwiftyJSON'"" and when I open the SwiftyJSON files I get 123 errors.
",tgb20,2016-09-23 00:30:51
643,2016-09-23 00:30:51,"Fixed it by wiping the pod information inside Xcode then deleting all files associated with SwiftyJSON and starting the install from scratch. I must not have completely removed the old version
",tgb20,2016-09-23 00:30:51
642,2016-09-22 13:25:34,"Shouldn't write comma.
",takasek,2016-09-22 14:03:58
642,2016-09-22 14:03:55,"Nice catch
",zhigang1992,2016-09-22 14:03:58
641,2016-09-21 15:32:16,"Referencing #633 , this PR updates the initialiser use of NSErrorPointer.

In Swift 3 `NSErrorPointer` is defined as:

`public typealias NSErrorPointer = AutoreleasingUnsafeMutablePointer<NSError?>?`

hence the optionality of the error parameter can be removed.
",lukas2,2016-09-21 15:55:06
641,2016-09-21 15:34:17,"Nice catch.
",zhigang1992,2016-09-21 15:55:06
641,2016-09-21 15:34:43,"Will merge once the test passes. 👍 
",zhigang1992,2016-09-21 15:55:06
641,2016-09-21 15:48:59,"Hm why did it not pass? Looks fine locally.
",lukas2,2016-09-21 15:55:06
641,2016-09-21 15:54:58,"Seem like it's trying to sign the test bundle.
Properly has nothing to do with this repo. i'll merge this is first. 
",zhigang1992,2016-09-21 15:55:06
641,2016-09-21 15:59:14,"Alrighty. Thank you!
",lukas2,2016-09-21 15:55:06
640,2016-09-21 09:13:41,"Here is my current code 

`let jsono = jsonObj[""Items""][""Menu""][""title""].string
                  print(jsono)
`
",cosmo1234,2017-01-10 11:14:36
640,2016-09-23 08:20:17,"Can you provide a bit more detail on this?
",zhigang1992,2017-01-10 11:14:36
640,2016-11-23 07:34:21,@cosmo1234 Bump,ldiqual,2017-01-10 11:14:36
640,2017-01-10 11:14:36,Closing for inactivity.,wongzigii,2017-01-10 11:14:36
639,2016-09-21 06:53:53,"@tangplin @lingoer Pinging you both since you seem to be the two only members of the SwiftyJSON organization.

I see a bunch of issues and pull requests related to Swift 3/Xcode 8 support. The `swift3` branch has remained untouched for 3 months now, and it is _not_ compatible with the latest Swift build. The latest commit on `master` is now 3 months old as well. Most of the open issues could be closed by merging one single of those PRs (most of them actually have a viable source code that is swift 3 compatible). I believe that production apps that use SwiftyJSON and swift3 at the moment need to rely on an external, untrusted code which can be a security and stability risk.

SwiftyJSON is a _very_ popular library in the Swift OSS world: 11k stars on github, 89k app installs (10k just for last week) according to cocoapods. A bunch of apps rely heavily on SwiftyJSON in production. There is an urgent need for a swift 3 compatible version of the library.

I'm opening this issue as an opportunity for you to jump in and describe how you envision the future of the library/project. Are you still maintaining the library? Should you add more contributors to the team? Should the ownership be transferred to an organization with more resources?

In terms of immediate actionable items, can one of you take a couple hours to review, merge, and release a new version of the library for swift 3 so we can stop relying on external – untrusted – PRs? It would be fantastic.
",ldiqual,2016-09-21 17:09:56
639,2016-09-21 13:36:51,"Couldn't agree more. This NEEDs to be addressed. If you can't keep up with maintenance, please let more contributors into the team or look to transfer the ownership.
",MrAlek,2016-09-21 17:09:56
639,2016-09-21 15:16:35,"This is why I try to avoid using open source ;-)
",MKGitHub,2016-09-21 17:09:56
639,2016-09-21 15:22:50,"Just merged. :(

Sincerely sorry about not being active enough in maintaining this repo.
We should have done it earlier.
",zhigang1992,2016-09-21 17:09:56
639,2016-09-21 17:09:56,"@zhigang1992 Fantastic news! Thank you so much for taking time to review and merge those changes.

As a side note, if you guys need more contributors, I'm offering my help. My company (@takescoop) is actively involved in the OSS world and I'd be happy to help manage issues/PRs and work on new features, taking a couple hours on my weekly schedule. Let me know if you're interested.

Closing this issue, now that the swift 3 concern has been addressed.
",ldiqual,2016-09-21 17:09:56
638,2016-09-21 06:18:54,"my JSON Respose is 
{
    code = 1;
    document =     (
                {
            Address1 = ""<null>"";
            Address2 = ""<null>"";
            City = ""<null>"";
            CompanyID = 1;
            CompanyName = Innohabit;
            ContactNumber = ""<null>"";
            Designation = ""<null>"";
            DesignationID = 36;
            DesignationName = dev;
            Email = ""uday.mishra@Gmail.com"";
            FCMRegistrationToken = """";
            GCMRegistrationToken = """";
            Gender = Male;
            ID = 9;
            IsActive = 1;
            IsFirstLogin = 1;
            LastLogin = ""2016-09-21 05:45:33"";
            Name = ""Uday Mishra"";
            Password = """";
            ProfilePic = """";
            RegisterationDate = ""2016-03-04 07:42:42"";
            UserTwitter = ""<null>"";
            Username = ""uday.mishra@Gmail.com"";
        }
    );
    message = ""Record found"";
    status = success;
}

And Trying to Convert the respose using Swifty Json Like this 

<S_CODE_TOKEN>

But I am Not getting the desired result, the Output is 
`{
    code = 1;
    document =     (
                {
            Address1 = ""<null>"";
            Address2 = ""<null>"";
            City = ""<null>"";
            CompanyID = 1;
            CompanyName = Innohabit;
            ContactNumber = ""<null>"";
            Designation = ""<null>"";
            DesignationID = 36;
            DesignationName = dev;
            Email = ""uday.mishra@Gmail.com"";
            FCMRegistrationToken = """";
            GCMRegistrationToken = """";
            Gender = Male;
            ID = 9;
            IsActive = 1;
            IsFirstLogin = 1;
            LastLogin = ""2016-09-21 05:45:33"";
            Name = ""Uday Mishra"";
            Password = """";
            ProfilePic = """";
            RegisterationDate = ""2016-03-04 07:42:42"";
            UserTwitter = ""<null>"";
            Username = ""uday.mishra@Gmail.com"";
        }
    );
    message = ""Record found"";
    status = success;
}
JSON
unknown
null`

As u can see the response is getting printed ,but the **print(jsonResponse)** and  **print(jsonData[0])**
is printing  **Unknown** and **null** can anyone help me how i can serialise the data properly into JSON format from DataRespose<any>
",uday-mshr,2017-01-10 11:09:59
638,2016-09-21 15:44:26,"Can you try printing `response.data`, and see if it's nil by any chance?
Also, can you try printing 

<S_CODE_TOKEN>
",zhigang1992,2017-01-10 11:09:59
638,2016-09-21 16:07:03,"You should do this:

`JSON(data: response.data)`

Otherwise, it'll think you're passing in a NSString | NSNumber or any other NSObject
",zhigang1992,2017-01-10 11:09:59
638,2016-09-21 23:10:22,"Are you using Alamofire? Because if it's the case and you're calling for example another response handler distinct of `responseJSON` then you cannot call the initializer `JSON(response.data)` of SwiftyJSON as you did in your code, you need to call:

<S_CODE_TOKEN>

as @zhigang1992 proposed above or 

<S_CODE_TOKEN>

In case your JSON come as a `String` object in case you use `responseString` from Alamofire
",Vkt0r,2017-01-10 11:09:59
637,2016-09-21 05:46:02,"I'm not able to convert the `response` to `JSON`

let jsonResponse = JSON(response.result.value)

And I'm getting this : 

<S_CODE_TOKEN>

This used to work perfect with older version. Any idea?
",sree127,2016-09-22 04:08:15
637,2016-09-21 16:08:18,"Can you provide what exactly is in `response.result.value`?

Is it

<S_CODE_TOKEN>
",zhigang1992,2016-09-22 04:08:15
637,2016-09-21 16:18:15,"No. It has proper values : 

<S_CODE_TOKEN>

This happens with the all the response that I'm parsing. 

Also, this started happening once I switched to Swift 3. The older version is working fine. 
",sree127,2016-09-22 04:08:15
637,2016-09-21 16:19:07,"How did you switched to swift3?
",zhigang1992,2016-09-22 04:08:15
637,2016-09-21 16:19:31,"Because I just published it like one hour ago. 😄 
",zhigang1992,2016-09-22 04:08:15
637,2016-09-21 16:22:03,"Lol. Damn. I've been using [this IBM version.](https://github.com/IBM-Swift/SwiftyJSON/blob/master/Source/SwiftyJSON.swift) - I saw this in one of the threads
😄 😄
Do you think this might be the issue? 
",sree127,2016-09-22 04:08:15
637,2016-09-21 16:25:58,"I've actually not look at their branch yet. :(
But can you give the new one a go and let me know?

if you're using cocoapods, the version should be `3.0.0`
",zhigang1992,2016-09-22 04:08:15
637,2016-09-22 04:08:13,"Hey @zhigang1992, its working with `3.0.0.` Thanks a lot :) 👍 
",sree127,2016-09-22 04:08:15
636,2016-09-21 02:30:52,"for (_, k): (String, JSON) in json[""main""]{
            self.alldata.addObject([k[""p""].stringValue,k[""t""].stringValue,k[""v""].stringValue,k[""c""].stringValue,k[""u""].stringValue]);

 }

type 'JSON?' does not conform to protocol 'Sequence' 
",rudian,2016-09-28 07:37:05
636,2016-09-23 08:35:39,"Can you try the 3.0.0 version in cocoapods?

`pod 'SwiftyJSON', '3.0.0'`
",zhigang1992,2016-09-28 07:37:05
636,2016-09-23 08:52:17,"@zhigang1992 i using 3.0 version still have this problem

Using SwiftyJSON (3.0.0)
",rudian,2016-09-28 07:37:05
636,2016-09-23 09:34:07,"<img width=""1512"" alt=""screen shot 2016-09-23 at 5 33 33 pm"" src=""https://cloud.githubusercontent.com/assets/1057756/18781341/e13f9e46-81b3-11e6-90a2-a2dd0c0454ce.png"">

<S_CODE_TOKEN>

Seems working here,
can you post bit more code?
",zhigang1992,2016-09-28 07:37:05
636,2016-09-23 10:15:39,"@zhigang1992  

i use alamofire4 to get the value

<S_CODE_TOKEN>

for (_, k): (String, JSON) in json[""main""]{
self.alldata.addObject([k[""p""].stringValue,k[""t""].stringValue,k[""v""].stringValue,k[""c""].stringValue,k[""u""].stringValue]);

}
",rudian,2016-09-28 07:37:05
636,2016-09-23 10:33:34,"hm, can you post `Podfile.lock` here?
",zhigang1992,2016-09-28 07:37:05
636,2016-09-23 10:37:03,"source 'https://github.com/CocoaPods/Specs.git'
platform :ios, '10.0'

use_frameworks!
target 'x' do
    pod 'SwiftyJSON', '3.0.0'
    pod 'Alamofire', '~> 4.0'
    pod 'SlideMenuControllerSwift', '~> 3.0'
end

pod 'GoogleAnalytics-iOS-SDK'

pod 'KVNProgress'
",rudian,2016-09-28 07:37:05
636,2016-09-23 10:39:00,"Can you show Podfile.lock as well?
",zhigang1992,2016-09-28 07:37:05
636,2016-09-23 10:42:31,"PODS:
- Alamofire (4.0.0)
- GoogleAnalytics-iOS-SDK (3.12):
  - GoogleAnalytics-iOS-SDK/Core (= 3.12)
- GoogleAnalytics-iOS-SDK/Core (3.12)
- KVNProgress (2.3)
- SlideMenuControllerSwift (3.0.0)
- SwiftyJSON (3.0.0)

DEPENDENCIES:
- Alamofire (~> 4.0)
- GoogleAnalytics-iOS-SDK
- KVNProgress
- SlideMenuControllerSwift (~> 3.0)
- SwiftyJSON (= 3.0.0)

SPEC CHECKSUMS:
  Alamofire: fef59f00388f267e52d9b432aa5d93dc97190f14
  GoogleAnalytics-iOS-SDK: 13241762fa4aea845eb75bef6c0da3427a26e7b3
  KVNProgress: d0459bfa4dca0379cdba5c038326ea34e9fc2df9
  SlideMenuControllerSwift: 9c0a84f9a3fba51681debd7be77617094562ebcc
  SwiftyJSON: f57b2b44bc166617372d1c70773591fe9f0f5fd4

PODFILE CHECKSUM: 3d6d6a92a0d9c4b5c57fee59896ac8559fdc1266

COCOAPODS: 1.0.1
",rudian,2016-09-28 07:37:05
636,2016-09-23 10:57:55,"Can you try for looping on json[""main""].dictionaryValue Instead?
",zhigang1992,2016-09-28 07:37:05
636,2016-09-23 11:01:00,"@zhigang1992  xcode shown error
value of type 'JSON?' has no member 'dictionaryValue'
",rudian,2016-09-28 07:37:05
636,2016-09-23 12:14:42,"hm, I've no clue how to reproduce this.

Can you maybe create a quick demo project that domes this?
",zhigang1992,2016-09-28 07:37:05
636,2016-09-26 03:32:22,"hi , i already solve it

i just change version from 3.0.0 to 3.0 and pod below alamofire , then just fixed

<S_CODE_TOKEN>
",rudian,2016-09-28 07:37:05
636,2016-09-28 07:37:03,"This has been addressed in https://github.com/SwiftyJSON/SwiftyJSON/pull/653
Please update to version `3.1.0`
",zhigang1992,2016-09-28 07:37:05
635,2016-09-19 18:43:23,"Carthage cart file with github ""SwiftyJSON/SwiftyJSON"" ""swift3"" is also not working?
",Sudhi55,2016-09-23 08:37:05
635,2016-09-19 22:45:17,"Folks over at IBM converted it 
https://github.com/IBM-Swift/SwiftyJSON/blob/master/Source/SwiftyJSON.swift
",MMasterson,2016-09-23 08:37:05
635,2016-09-20 20:10:06,"Apparently the IBM-Swift version is not compatible (or built for) the iOS platform.
",UncleRic,2016-09-23 08:37:05
635,2016-09-20 21:03:54,"@UncleRic Care to explain further? Like it won't work at all or do you mean it just won't work with Carthage?
",triwav,2016-09-23 08:37:05
635,2016-09-21 16:09:43,"We have landed swift3 support in master branch, feel free to try it out. 😄 
",zhigang1992,2016-09-23 08:37:05
635,2016-09-22 01:10:33,"@zhigang1992 Very Nice . Thinks
",dowhilenet,2016-09-23 08:37:05
635,2016-09-22 07:18:33,"xcode still wanted to convert the code when i installed it via cocoa pod.
",Adarkas2302,2016-09-23 08:37:05
635,2016-09-22 10:39:18,"I have the same problem
",MaximGorin,2016-09-23 08:37:05
635,2016-09-22 12:19:58,"@Adarkas2302 @MaximGorin 
Odd, can you paste in the corresponding section in podfile.lock?
Also your cocoapods version as well.
Thx
",zhigang1992,2016-09-23 08:37:05
635,2016-09-22 12:25:04,"@zhigang1992 
`PODS:
- SwiftyJSON (2.3.2)

DEPENDENCIES:
- SwiftyJSON (from `https://github.com/SwiftyJSON/SwiftyJSON.git`, branch `swift3`)

EXTERNAL SOURCES:
  SwiftyJSON:
    :branch: swift3
    :git: https://github.com/SwiftyJSON/SwiftyJSON.git

CHECKOUT OPTIONS:
  SwiftyJSON:
    :commit: 494f9bf12763d634216ce5b10a88bb5240f59074
    :git: https://github.com/SwiftyJSON/SwiftyJSON.git

SPEC CHECKSUMS:
  SwiftyJSON: 04ccea08915aa0109039157c7974cf0298da292a

PODFILE CHECKSUM: d646f0dd20b277efbdfbbc3803cb9204c296ab67

COCOAPODS: 1.0.0
`
",MaximGorin,2016-09-23 08:37:05
635,2016-09-22 12:28:33,"@MaximGorin you have to update to version 3.0.0 for swift 3 support.
And 2.4.0 for swift 2.3 or lower.

Let me know if you're still having issue with it.

Cheers
",zhigang1992,2016-09-23 08:37:05
635,2016-09-22 12:35:25,"@zhigang1992 the error persists

PODS:
- SwiftyJSON (3.0.0)

DEPENDENCIES:
- SwiftyJSON (~> 3.0.0)

SPEC CHECKSUMS:
  SwiftyJSON: f57b2b44bc166617372d1c70773591fe9f0f5fd4

PODFILE CHECKSUM: 3c7432f9e522dd9230a200cf2f7646c325981751

COCOAPODS: 1.0.0
",MaximGorin,2016-09-23 08:37:05
635,2016-09-22 12:46:45,"@MaximGorin
Can you try this from the RxSwift repo

<S_CODE_TOKEN>

Or you can update to cocoapods rc version by

<S_CODE_TOKEN>

Let me know if it works.
",zhigang1992,2016-09-23 08:37:05
635,2016-09-22 19:36:33,"@zhigang1992 it works. Thx
",MaximGorin,2016-09-23 08:37:05
635,2016-09-22 20:21:34,"Also, the master branch was updated to Swift 3 (#633) and I don't have any errors with Carthage and Xcode 8
",RemyDCF,2016-09-23 08:37:05
635,2016-09-23 08:37:05,"Closing now, feel free to reopen this if you are running into more issues.

🍻 
",zhigang1992,2016-09-23 08:37:05
634,2016-09-19 14:30:00,,mdabrarniyazi,2016-09-23 08:37:39
634,2016-09-19 22:44:40,"Folks over at IBM converted it 
https://github.com/IBM-Swift/SwiftyJSON/blob/master/Source/SwiftyJSON.swift
",MMasterson,2016-09-23 08:37:39
634,2016-09-20 07:27:17,"https://github.com/appsailor/SwiftyJSON/tree/swift3 works fine too
",bm842,2016-09-23 08:37:39
634,2016-09-20 07:50:36,"pod 'SwiftyJSON', :git => 'https://github.com/acegreen/SwiftyJSON.git', :branch => 'swift3'

Works fin too :-) 
",terflogag,2016-09-23 08:37:39
634,2016-09-23 08:37:38,"We have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-23 08:37:39
633,2016-09-18 13:32:40,"Source, tests, and example updated to Swift 3.0 GM.
",jeneumeier,2016-09-21 13:52:14
633,2016-09-19 11:39:13,"I can confirm that this compiles and works as expected in Xcode 8 with iOS 10.0.1
",dantaylorseo,2016-09-21 13:52:14
633,2016-09-19 15:23:52,"I think the initializer signature should look like this:

`public init(data:Data, options opt: JSONSerialization.ReadingOptions = .allowFragments, error: NSErrorPointer = nil)`

The reason is that NSErrorPointer is defined as Optional in Swift 3:

`public typealias NSErrorPointer = AutoreleasingUnsafeMutablePointer<NSError?>?`
",lukas2,2016-09-21 13:52:14
633,2016-09-20 00:22:05,"Any update for this PR and do you know when it will be merged in? Thanks :)
",calvinlyc,2016-09-21 13:52:14
633,2016-09-21 13:52:05,"👍  LGTM, will merge now. sry for the late response. 
",zhigang1992,2016-09-21 13:52:14
633,2016-09-21 14:07:44,"Thanks, are you going to make a release on CocoaPods?
",DenHeadless,2016-09-21 13:52:14
633,2016-09-21 14:08:36,"@DenHeadless yeap, will be done in a bit.
",zhigang1992,2016-09-21 13:52:14
633,2016-09-21 14:36:39,"@DenHeadless it's done, version 3.0.0 is now in CocoaPods
",zhigang1992,2016-09-21 13:52:14
633,2016-09-21 14:37:38,"Thank you so much! 
",DenHeadless,2016-09-21 13:52:14
633,2016-09-21 15:33:18,"@zhigang1992 :
Thank you for merging this. 👍 

Please consider, as a follow-up, also merging #641 . See my comment above.
",lukas2,2016-09-21 13:52:14
632,2016-09-17 09:16:05,"Previous one was little bit behind the latest swift 3. This one is latest
",Sadmansamee,2016-09-21 17:12:07
632,2016-09-21 17:12:07,"Thank you for sending this PR.

We have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:12:07
631,2016-09-16 08:38:53,,andertsk,2016-09-21 17:09:32
631,2016-09-21 17:09:32,"Thank you for sending this PR.

I know you send this first, but I started merge from the top.

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:09:32
630,2016-09-16 03:40:09,"Updated all targets to compile for Xcode 8 and swift 2.3
",reidmweber,2016-09-21 16:55:08
630,2016-09-21 16:55:08,"Thank you for sending this PR.

We have merged swift3 into master, you can find 2.3 support in `swift2` branch.

🍻 
",zhigang1992,2016-09-21 16:55:08
629,2016-09-15 00:41:43,,scrainie,2016-09-15 00:41:59
628,2016-09-14 22:04:10,,appsailor,2016-09-21 16:53:58
628,2016-09-15 04:03:23,"It looks like tests are failing due to CI build issue. 
See last line of travis log:
/Users/travis/build.sh: line 109: shell_session_update: command not found
",appsailor,2016-09-21 16:53:58
628,2016-09-21 16:53:58,"Thank you for sending this PR.

I know you send this first, but I started merging from the top.

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 16:53:58
627,2016-09-14 20:19:30,"Swift 3 Release?
",rlam3,2016-09-23 09:37:12
627,2016-09-14 22:05:59,"Try the swift3 branch from my fork.
",appsailor,2016-09-23 09:37:12
627,2016-09-15 04:29:55,"💯 
",xudafeng,2016-09-23 09:37:12
627,2016-09-15 05:07:53,"update to swift 3 please!
",Dark0rion,2016-09-23 09:37:12
627,2016-09-15 05:32:29,"@Dark0rion, If you use the following in Podfile, you can survive till the master is ready.
pod 'SwiftyJSON', :git => 'https://github.com/appsailor/SwiftyJSON.git', :branch => 'swift3'
",appsailor,2016-09-23 09:37:12
627,2016-09-15 07:01:27,"hi @appsailor i just tried your swift3-branch on the new xcode8-(final/appstore release).
It builds fine, but there seems to be an issue, when using swifty-json in for-loops and/or subscripts?!

this line works fine in xcode7 (swiftyjson for swift 2.2) but with your current xcode8-swift3-branch it ends up in a endless loop (growing memory-footprint with empty strings).

<S_CODE_TOKEN>

hmm, any idea?
",flandy84,2016-09-23 09:37:12
627,2016-09-15 09:38:49,"@flandy84, it would be nice to get a sample json file that can be used as a test file. Would you be able to share it so that I can take a look? Thx -aldrin
",appsailor,2016-09-23 09:37:12
627,2016-09-15 11:01:44,"hi @appsailor. Sorry, I'm on a journey the next days, but my developer explained me, you can use any json-dictionary to reproduce this issue; a arbitury JSON won't have the key ""someMissingKeyInJSONDictionary"" with an expected Array-value in it ;)
",flandy84,2016-09-23 09:37:12
627,2016-09-15 11:06:30,"he made this kind of workaround, to get the ""old"" swift 2.2 swiftyjson-for-loop-behaviour.
But I don't think this is the way it should be used in the future :/

<S_CODE_TOKEN>
",flandy84,2016-09-23 09:37:12
627,2016-09-15 17:59:46,"For me nor the master, nor swift3 branches are working with Swift 3 on Xcode 8. But I guess that's no surprise because last push was around 3 months ago. When is this going to be updated to work on new version?
",ossmalpha,2016-09-23 09:37:12
627,2016-09-15 18:20:18,"@ossmalpha We simply do not know. Owners are MIA.
",kylebrowning,2016-09-23 09:37:12
627,2016-09-15 18:34:50,"@ossmalpha is it building for you? we have just started a new project in 3 and we can get it to build with the Swift 3 branch, but I don't know if we are implementing it anywhere yet. It would be helpful to know if it builds but doesn't work for you (if that makes sense).
",plflanagan,2016-09-23 09:37:12
627,2016-09-15 18:44:46,"@pflanny2 No, it's not building for me. I also did create a new project just to check which pods are working and which aren't. For SwiftyJSON I tested both branches and there seemed to be some errors while building in both cases. 

How did you managed to get swift3 branch to build? Just pulled from there and built or converted to Swift 3 as well? 
",ossmalpha,2016-09-23 09:37:12
627,2016-09-15 18:51:10,"@ossmalpha 

First, I have the following line in the main section of the podfile:

`pod 'SwiftyJSON', :git => 'https://github.com/appsailor/SwiftyJSON.git', :branch => 'swift3'`

Then, after 'end' of the main section, I have included the following:

<S_CODE_TOKEN>

Honestly, I'm not sure if you need the latter part to get SwiftyJSON to work; as you can tell, I got that from an issue with getting AlamoFire to work -- and so perhaps fixed compilation of both pods.

If that doesn't work, you may also want to check the Swift Compiler - Version settings. I have the option ""Use Legacy Swift Language Version"" to No.

Let me know if that helps.
",plflanagan,2016-09-23 09:37:12
627,2016-09-15 18:56:28,"@pflanny2 I had both of the things that you mentioned already written. Also, I have Alamofire, Socket.io and many more pods working with Swift 3 already, so I'm sure that all specs have been set right. 

I guess we need to see whether this is working for others and wait until the code is going to be merged into master. 
",ossmalpha,2016-09-23 09:37:12
627,2016-09-15 18:59:41,"@pflanny2 Actually, it's my bad. Instead of `https://github.com/appsailor/SwiftyJSON.git` I had `https://github.com/SwiftyJSON/SwiftyJSON.git`. So I guess that I shouldn't have copied the clone url. But it is building now, I'll test the functionality later, but I guess it should be fine. 
",ossmalpha,2016-09-23 09:37:12
627,2016-09-15 19:06:04,"@ossmalpha that's interesting; I hadn't noticed that. But when I switched from appsailor's fork to SwiftyJson I started getting a lot of compilation errors.

So does it seem like appsailor's fork is working? Not sure how support will be for either
",plflanagan,2016-09-23 09:37:12
627,2016-09-15 19:22:10,"@pflanny2 Xcode still asking for conversion to latest Swift.

`pod 'SwiftyJSON', :git => 'https://github.com/appsailor/SwiftyJSON.git', :branch => 'swift3'` with `config.build_settings['SWIFT_VERSION'] = '3.0'`

Conversion process:
![1](https://dl.dropboxusercontent.com/u/25357310/SwiftyJSON_1.png)
![2](https://dl.dropboxusercontent.com/u/25357310/SwiftyJSON_2.png)
![3](https://dl.dropboxusercontent.com/u/25357310/SwiftyJSON_3.png)
",siberianisaev,2016-09-23 09:37:12
627,2016-09-15 19:33:04,"@siberianisaev, not sure why it's wanting to convert those. Here's the process I did...in case it's helpful at all.
1. Convert everything to Swift 3.
2. Update the pod file (as mentioned in a previous post).
3. Run Pod Update.

After step 3, it didn't ask me to convert anything, and could build/run...I'm not sure what it could be if that's not working. Does the Pod Update say that it installed a new SwiftyJSON? Again, in case this helps, I'm getting from Pod Update this line (among others obviously):

`Installing SwiftyJSON 2.3.2 (was 2.3.2)`
",plflanagan,2016-09-23 09:37:12
627,2016-09-15 20:07:58,"@pflanny2, I have fixed those changes as well and pushed those over to my fork. 
",appsailor,2016-09-23 09:37:12
627,2016-09-15 20:27:39,"@flandy84, could you try with the latest from my fork and see it works?

 I have seen the unit tests work okay as per the travis CI logs:
Test Case '-[SwiftyJSON_tvOS_Tests.SubscriptTests testOutOfBounds]' started.
Test Case '-[SwiftyJSON_tvOS_Tests.SubscriptTests testOutOfBounds]' passed (0.001 seconds).
Test Suite 'SubscriptTests' passed at 2016-09-15 20:15:25.976.
     Executed 16 tests, with 0 failures (0 unexpected) in 0.051 (0.105) seconds
Test Suite 'SwiftyJSON tvOS Tests.xctest' passed at 2016-09-15 20:15:25.977.
     Executed 111 tests, with 0 failures (0 unexpected) in 3.755 (4.099) seconds
Test Suite 'All tests' passed at 2016-09-15 20:15:25.989.
     Executed 111 tests, with 0 failures (0 unexpected) in 3.755 (4.115) seconds
*\* TEST SUCCEEDED **
",appsailor,2016-09-23 09:37:12
627,2016-09-15 20:45:58,"@appsailor, I have tested your branch in my project –– it works fine!
",analvikingur,2016-09-23 09:37:12
627,2016-09-16 01:02:42,"swift 3 branch works very slow with this fragment (few seconds)

<S_CODE_TOKEN>

... about 300 items

version for swift 2.2 worked instantly
",kocherovets,2016-09-23 09:37:12
627,2016-09-16 01:09:36,"https://github.com/IBM-Swift/SwiftyJSON 
version works good for me
",kocherovets,2016-09-23 09:37:12
627,2016-09-16 16:49:11,"Any Carhage users here?
I have tried @appsailor s ""swift 3"" branch, which would work fine, but  Carthage actually needs a new tag on the brach to be able to check it out. So I have forked it and added a new tag and now it works.
Correct me if my theory was wrong.
",Gujci,2016-09-23 09:37:12
627,2016-09-16 16:51:03,"I got it to work on Carthage will post file when i get home 

Sent from my iPhone

> On Sep 16, 2016, at 9:49 AM, Gujci notifications@github.com wrote:
> 
> Any Carhage users here?
> I have tried @appsailor s ""swift 3"" branch, which would work fine, but Carthage actually needs a new tag on the brach to be able to check it out. So I have forked it and added a new tag and now it works.
> Correct me if my theory was wrong.
> 
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub, or mute the thread.
",kylebrowning,2016-09-23 09:37:12
627,2016-09-16 17:21:26,"<S_CODE_TOKEN>
",kylebrowning,2016-09-23 09:37:12
627,2016-09-16 17:26:54,"the swift 3 branch does not compile in Xcode 8 ... do we have an idea when this will be resolved?
",CouponWallet,2016-09-23 09:37:12
627,2016-09-16 17:29:15,"@CouponWallet For me it compiles just fine. How did you installed this framework? 
",ossmalpha,2016-09-23 09:37:12
627,2016-09-16 19:29:05,"@appsailor just tested it. The neverending-for-loop issue still exists in swift3 version of swiftyjson :/
",flandy84,2016-09-23 09:37:12
627,2016-09-16 19:51:45,"The same thing that's happening to @siberianisaev is happening to me. The swift3 branch still shows things that need converted. I also tried the IBM-SWIFT fork and it's a little better, but there are still parts that need converted.
",cobear25,2016-09-23 09:37:12
627,2016-09-16 20:22:52,"That's why libraries shouldn't be created in swift.. Each time there's a new swift release everything's broken...
",piotrros,2016-09-23 09:37:12
627,2016-09-16 20:24:05,"I believe this is the last code breaking swift up for awhile. 

Sent from my iPhone

> On Sep 16, 2016, at 1:23 PM, mk notifications@github.com wrote:
> 
> That's why libraries shouldn't be created in swift.. Each time there's a new swift release everything's broken...
> 
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub, or mute the thread.
",kylebrowning,2016-09-23 09:37:12
627,2016-09-17 02:54:35,"@piotrros
Even that Objective-C doesn't have deep changes doesn't mean that developers should use it for libraries development
",analvikingur,2016-09-23 09:37:12
627,2016-09-17 10:17:04,"Hello, guys.

As all of you, we've been waiting for SwiftyJSON swift3 release, however it became clear, that we don't have any means to reach library authors right now. And since we use not only pod, but have a [framework, that depends on it](https://github.com/MLSDev/TRON), we need a solution.

So, we've forked SwiftyJSON to https://github.com/MLSDev/SwiftyJSON, and are making release ourselves.

We use a new name to not intersect:

<S_CODE_TOKEN>

This release is basically all changes from #628. Keep in mind, this is not a permanent, but temporary solution, until authors come back and official release is made.

When that happens, `SwiftyJSON3` pod will immediately be deprecated in favor of original pod, and after transition period will be removed.
",DenHeadless,2016-09-23 09:37:12
627,2016-09-17 10:19:43,"I suggest to try https://github.com/LoganWright/Genome, which seems to be a good alternative to SwiftyJSON.
",giacgbj,2016-09-23 09:37:12
627,2016-09-17 12:38:52,"@giacgbj 👍 
",xudafeng,2016-09-23 09:37:12
627,2016-09-17 14:46:22,"Hi there,
@flandy84 I'm also having the infinite loop. Did you find a way to solve it?
",mrojas,2016-09-23 09:37:12
627,2016-09-17 18:43:21,"@DenHeadless 👍
",henriquewilson1,2016-09-23 09:37:12
627,2016-09-18 05:34:03,"[!] Unable to find a specification for `SwiftyJSON3 (~> 3.0.0-beta.1)`
",rodrigoruiz,2016-09-23 09:37:12
627,2016-09-18 05:38:03,"I think it works if you add this instead `pod 'SwiftyJSON3', :git => 'https://github.com/MLSDev/SwiftyJSON.git'`, but still has the infinite loop problem
",rodrigoruiz,2016-09-23 09:37:12
627,2016-09-18 10:20:00,"@rodrigoruiz Run pod update and you will see it. Also, if you have a fix for infinite loop problem you are talking about, we can fix it in next beta release.

JSON example would be super helpful.
",DenHeadless,2016-09-23 09:37:12
627,2016-09-18 13:19:23,"Hey I've had no problems with the swift3 migration from @appsailor ; however just ran into this issue: 

Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: 'Invalid type in JSON write (_SwiftValue)'

Any suggestions, the rest of the calls I'm making work fine!
",scrainie,2016-09-23 09:37:12
627,2016-09-18 13:52:45,"I made to try.
Usage is similar to SwiftyJSON
[https://github.com/muukii/JAYSON](https://github.com/muukii/JAYSON)
",muukii,2016-09-23 09:37:12
627,2016-09-18 14:04:30,"@mrojas invinity-loop issue is still in all swift3 forks of swifty json :( have no solution only the ugly workaround posted here (pre for-loop-usage array check )
",flandy84,2016-09-23 09:37:12
627,2016-09-18 19:09:33,"So, in my case the ""infinite loop issue"" (I'm just repeating the name others said, I don't really know what the issue is, only that it's stuck doing something) happens when I call `.sorted(by: { $0.0 < $1.0 })` on a `nil` value
",rodrigoruiz,2016-09-23 09:37:12
627,2016-09-18 19:11:22,"Now that I see it, it seems weird that it was working before, I'd expect a crash or something.
I'm not sure what was the previous behavior, but my app was working... I'm guessing it was returning an empty array.
",rodrigoruiz,2016-09-23 09:37:12
627,2016-09-19 02:50:30,"Damn! I've finally been hit with the infinite loop ! Odd. Time to find a fix :)
",scrainie,2016-09-23 09:37:12
627,2016-09-19 03:20:07,"Solved ... check for null ... self.json![""timetable""][""adhoc""].exists() {} bingo.. 
",scrainie,2016-09-23 09:37:12
627,2016-09-19 07:59:33,"it is not support Swift3.0?
",hanzhuzi,2016-09-23 09:37:12
627,2016-09-19 08:55:27,"This works for my project perfectly running on Swift 3 in Xcode 8. Use this in your Podfile: 

`pod 'SwiftyJSON3', '~> 3.0.0-beta.1'`
",ossmalpha,2016-09-23 09:37:12
627,2016-09-19 10:09:05,"@DenHeadless  Great job!
",Wishercat,2016-09-23 09:37:12
627,2016-09-19 10:57:47,"`'SwiftyJSON', :git => 'https://github.com/appsailor/SwiftyJSON.git', :branch => 'swift3'`
`pod 'SwiftyJSON3', '~> 3.0.0-beta.1'`
Both of these don't work. Ask me to Convert
",TakanashiOuken,2016-09-23 09:37:12
627,2016-09-19 11:10:31,"To be honest, I started one of my big projects from scratch . Added each POD separately from 'swift3' branches. Just copied and pasted class files and mine is working. The merge with existing was a nightmare, was actually easier to start fresh. Less tears anyway :) 
",scrainie,2016-09-23 09:37:12
627,2016-09-19 15:14:13,"SwiftyJSON3 isn't fully converted either apparently. 
![screen shot 2016-09-19 at 9 13 06 am](https://cloud.githubusercontent.com/assets/3663842/18637353/53d0eae6-7e49-11e6-8993-173592399eb3.png)
",cobear25,2016-09-23 09:37:12
627,2016-09-19 15:28:03,"@cobear25 Apparently your Podfile is not configured properly, don't specify git URL or branches, simply use

<S_CODE_TOKEN>

and run `pod install`.

Code you are showing on your screenshot is not the code from SwiftyJSON3 repo.
",DenHeadless,2016-09-23 09:37:12
627,2016-09-19 15:41:26,"Any idea why i would be getting the 
`SwiftyJSON.swift:226:1: Extension of type 'JSON' cannot inherit from class 'Collection'`
on line
`extension JSON: Collection` 

I can't find anyone else having this problem, yet on all the branches you guys recommended i get this problem
",mpetar92,2016-09-23 09:37:12
627,2016-09-20 00:57:03,"`pod 'SwiftyJSON3', '~> 3.0.0-beta.1'` works like a charm, however it, for some odd reason, asks me to convert. 
",Dbigshooter,2016-09-23 09:37:12
627,2016-09-20 02:24:40,"@Dbigshooter 
After converting it can work?
It still shows me another error :(
<img width=""1021"" alt=""screen shot 2016-09-20 at 10 28 18 am"" src=""https://cloud.githubusercontent.com/assets/5293737/18655628/12150d92-7f1d-11e6-8b60-cdd36fb0c138.png"">
",TakanashiOuken,2016-09-23 09:37:12
627,2016-09-20 15:09:54,"@DenHeadless It worked like a charm for me yesterday, but when I try to install the pod today I get
Unable to find a specification for `SwiftyJSON3`?
",Dbigshooter,2016-09-23 09:37:12
627,2016-09-20 15:12:47,"@Dbigshooter podspec is definitely there - https://github.com/CocoaPods/Specs/tree/master/Specs/SwiftyJSON3

Try running `pod repo update` before `pod install`, maybe you were installing on different machine? Starting with CocoaPods 1.0.0 pod install does not trigger pod repo update.
",DenHeadless,2016-09-23 09:37:12
627,2016-09-20 15:21:14,"@DenHeadless Now I get:

<S_CODE_TOKEN>
",Dbigshooter,2016-09-23 09:37:12
627,2016-09-20 15:23:47,"try following syntax in your podfile: 

<S_CODE_TOKEN>
",DenHeadless,2016-09-23 09:37:12
627,2016-09-20 15:38:20,"@DenHeadless Worked like a charm, thanks! Do you have a explanation on why I need to set ""Use legacy Swift language version"" to NO for almost all my libs every time I update?
",Dbigshooter,2016-09-23 09:37:12
627,2016-09-20 15:56:01,"@Dbigshooter Here's discussion for your issue:
https://github.com/CocoaPods/CocoaPods/issues/5521

Basically, you can either set SWIFT_VERSION flag on your target, or run post_install hook. I believe first option only works on CocoaPods 1.1.0.
",DenHeadless,2016-09-23 09:37:12
627,2016-09-21 16:29:32,"So happy authors are here, and this issue is finally resolved!

As promised, `SwiftyJSON3` pod is now deprecated. Please migrate to `SwiftyJSON` if you've been using it. Thank you all!
",DenHeadless,2016-09-23 09:37:12
627,2016-09-22 02:06:38,"I don't see any releases on the library since October 2015, am I missing something?
",rodrigoruiz,2016-09-23 09:37:12
627,2016-09-22 02:48:31,"@rodrigoruiz I've only released the 3.0.0 tag and pointing cocoapods to it. Will add release later today, still trying to clean up this repo a bit. :)
",zhigang1992,2016-09-23 09:37:12
627,2016-09-23 09:37:12,"Closing this one to cleanup the issue list,

Feel free to reopen this if needed or refer to https://github.com/SwiftyJSON/SwiftyJSON/issues/647
",zhigang1992,2016-09-23 09:37:12
626,2016-09-14 13:46:41,"![screen shot 2016-09-14 at 7 10 33 pm](https://cloud.githubusercontent.com/assets/16576079/18514557/a6f699de-7aaf-11e6-9345-6e63203e6b0b.png)

Currently using xCode 8. Is there any fix for this? Integrated it by drag dropping the SwiftyJson.swift file in project root
",debayanb,2016-09-23 09:38:40
626,2016-09-14 13:48:21,"![screen shot 2016-09-14 at 7 17 39 pm](https://cloud.githubusercontent.com/assets/16576079/18514634/fa51dcd8-7aaf-11e6-9a8a-9b1715c5285c.png)
More errors 
",debayanb,2016-09-23 09:38:40
626,2016-09-14 14:56:10,"SwiftyJSON is not Swift 3 ready. Last update is from 3 months ago and for example back then Swift 3 defined private keyword differently. It is yet to be seen if the creators return (bummer, I know)
",fortmarek,2016-09-23 09:38:40
626,2016-09-14 14:57:31,"Damn!  :(
",debayanb,2016-09-23 09:38:40
626,2016-09-14 15:16:49,"For now you can use this fork, it seems to be working well: https://github.com/acegreen/SwiftyJSON/tree/swift3
",fortmarek,2016-09-23 09:38:40
626,2016-09-14 16:29:38,"@fortmarek Cant use that fork if your project is a cocoapod itself because cocoapods does not let you define forks/other repos in a pod spec file, only a single published version.
",kylebrowning,2016-09-23 09:38:40
626,2016-09-14 17:51:12,"So this does not work as well: http://stackoverflow.com/questions/20936885/cocoapods-and-github-forks ?

I usually use Carthage, so bear with me.
",fortmarek,2016-09-23 09:38:40
626,2016-09-14 17:52:30,"No, that is referring to a podfile, not a podspec, which is different.
",kylebrowning,2016-09-23 09:38:40
626,2016-09-14 17:55:30,"Oh right, OK, so maybe you could implement it manually...?
",fortmarek,2016-09-23 09:38:40
626,2016-09-14 20:52:18,"@kylebrowning I encountered some libraries which supports both of Swift 2.x and Swift 3 version in different branches while it labels different versions in pod packages. It can solve in cocoapods if the owner of the repo handle this.
",ttuygun,2016-09-23 09:38:40
626,2016-09-14 22:43:35,"@ttuygun IM not sure I follow. Im referring to being able to use SwiftyJson siwft 3 version, via cocoapods dependency in a podspec file, not a PodFile

In PODSPEC files (not PodFiles) you cannot define a git branch or a specific Repository. You can only define what is pushed to the specs repo with `pod spec push trunk` 

If you own your own library and depend on this one, there is no way to link to a fork unless the owner of that fork publishes the podspec to trunk.

[I dont know how else to explain it. ](http://guides.cocoapods.org/syntax/podspec.html#dependency)

Read more here, http://stackoverflow.com/questions/22447062/how-do-i-create-a-cocoapods-podspec-that-has-a-dependency-that-exists-outside-of
",kylebrowning,2016-09-23 09:38:40
626,2016-09-14 22:46:54,"@fortmarek I am down to implement it manually, but that wont work if people are downloading my library. I cant ask users of my library to implement swiftyJSON themselves, so until the owners of SwiftyJson publish the swift-3 branch to podspec, I have remove the use of SwiftyJSON which is unfortunate.  
",kylebrowning,2016-09-23 09:38:40
626,2016-09-23 09:38:40,"[Swift3 support is here](https://github.com/SwiftyJSON/SwiftyJSON/issues/647)

Closing this one to cleanup the issue list, feel free to reopen this if needed.

Cheers
",zhigang1992,2016-09-23 09:38:40
625,2016-09-09 13:54:14,"I see the last commit is almost 3 months ago, with 124 open issues,I couldn't find  your most recent comment on them. 
Have you abandoned this project?
@tangplin  @lingoer 
",IsmailHassanein,2016-09-23 09:39:56
625,2016-09-10 13:49:54,"The developers are based in China, I think right now it's pretty difficult getting to Github from over there.
",allen-zeng,2016-09-23 09:39:56
625,2016-09-13 10:27:19,"@allen-zeng, @IsmailHassanein 
As i understand, SwiftyJSON not supported for swift3, 
tried to install with carthage (github ""SwiftyJSON/SwiftyJSON"" ""swift3"") with branch swift3, no success ? 
",KanybekMomukeyev,2016-09-23 09:39:56
625,2016-09-13 10:50:33,"The last update was in June, back then the Swift 3 implementation wasn't complete in the beta. Things have changed since then.
",allen-zeng,2016-09-23 09:39:56
625,2016-09-14 03:38:42,"The fine folks at IBM have an Xcode 8 GM - swift 3.0 compatible version available now on their own branch: https://github.com/IBM-Swift/SwiftyJSON/blob/master/Source/SwiftyJSON.swift
",brad3d,2016-09-23 09:39:56
625,2016-09-14 11:34:52,"@brad3d the IBM branch has 114 issues when I migrate to Swift 2.3.
",waseefakhtar,2016-09-23 09:39:56
625,2016-09-14 11:58:23,"use [https://github.com/BaiduHiDeviOS/SwiftyJSON/blob/swift3/Source/SwiftyJSON.swift](url) instead. Works fine in my project.
",dvdblk,2016-09-23 09:39:56
625,2016-09-14 16:53:34,"The ibm branch is for Swift 3.0 , that's why. Zero errors on 3.0

On Wednesday, September 14, 2016, David Bielik notifications@github.com
wrote:

> use https://github.com/BaiduHiDeviOS/SwiftyJSON/blob/
> swift3/Source/SwiftyJSON.swift http://url instead. Works fine in my
> project.
> 
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> https://github.com/SwiftyJSON/SwiftyJSON/issues/625#issuecomment-246990305,
> or mute the thread
> https://github.com/notifications/unsubscribe-auth/ABUexGANLOV8Pr38uH8WNvpb2hDjoGnTks5qp-FzgaJpZM4J5EwC
> .

## 

Brad Herman
Mobile, Immersive, and Interactive Technology in Storytelling
VR, AR, MxR, Apps, LBE, and more.
http://www.bradherman.com
",brad3d,2016-09-23 09:39:56
625,2016-09-14 18:21:02,"It's easy if you aren't a bunch of noobs. Socket5 proxies, Tor, VPN's all day...

I dub this project: deeeeaaaaaaaad
",matrixfox,2016-09-23 09:39:56
625,2016-09-19 08:59:40,"This project seems to be not maintained anymore :( Hope IBM could maintain the project with brand new name (for CocoaPods)
",devxoul,2016-09-23 09:39:56
625,2016-09-20 07:33:20,"https://github.com/appsailor/SwiftyJSON/tree/swift3 is working fine with carthage and swift 3
",bm842,2016-09-23 09:39:56
625,2016-09-23 09:39:56,"[Swift3 support is here](https://github.com/SwiftyJSON/SwiftyJSON/issues/647)

Closing this one to cleanup the issue list, feel free to reopen this if needed.

Cheers
",zhigang1992,2016-09-23 09:39:56
624,2016-09-09 09:19:35,"I have forked the repo to simply check to use the legacy swift compiler, it's a little inconvenient, I'm wondering if you wouldn't mind having your own swift 2.3 branch tagged from the latest version.

What do you think?
",danielphillips,2016-09-23 09:42:08
624,2016-09-14 12:27:00,"#620 helped me with Swift 2.3 support.
",waseefakhtar,2016-09-23 09:42:08
624,2016-09-20 06:33:59,"I download master branch vie cocoapods and convert to Swift 2.3. But now Xcode 8 gives me this error:
Module file was created by an older version of the compiler; rebuild 'SwiftyJSON' and try again:
anyone can help me out? Thanks
",dneykov,2016-09-23 09:42:08
624,2016-09-20 07:13:21,"I delete all data in ~/Library/Developer/Xcode/DerivedData about my app and rebuild and everything works.
",dneykov,2016-09-23 09:42:08
624,2016-09-23 09:42:08,"[Swift3 and Swift2.3 support is here](https://github.com/SwiftyJSON/SwiftyJSON/issues/647)

Closing this one to cleanup the issue list, feel free to reopen this if needed.

Cheers
",zhigang1992,2016-09-23 09:42:08
623,2016-09-09 00:21:06,"Now it's out could you help update? Thanks!
",zxcv740,2016-09-23 09:39:01
623,2016-09-09 00:42:22,"I'd recommend https://github.com/IBM-Swift/SwiftyJSON for now.
",KelvinJin,2016-09-23 09:39:01
623,2016-09-09 00:48:30,"Thanks
",zxcv740,2016-09-23 09:39:01
623,2016-09-09 12:30:18,"cant get to compile swiftyjson branch swift3 or git IBM-Swift/swiftyjson  :/ Xcode 8 GM
",hopye,2016-09-23 09:39:01
623,2016-09-10 20:07:11,"What about using IBM-Swift fork with Carthage, anyone?
",victoraugustolls,2016-09-23 09:39:01
623,2016-09-12 14:22:25,"I created a pull request in the IBM-Swift fork for Carthage compatibility - you can use my fork in the meantime:
github ""zaubara/SwiftyJSON""
",zaubara,2016-09-23 09:39:01
623,2016-09-23 09:39:01,"[Swift3 support is here](https://github.com/SwiftyJSON/SwiftyJSON/issues/647)

Closing this one to cleanup the issue list, feel free to reopen this if needed.

Cheers
",zhigang1992,2016-09-23 09:39:01
622,2016-09-08 16:33:28,"This lib can not find by `pod search SwiftJSON`.
If you write it direct in the Podfile and do `pod install`, you will get an error message:

Analyzing dependencies
[!] Unable to find a specification for `SwiftJSON`

What happend?
",shilei365,2016-09-08 16:36:24
621,2016-09-06 15:18:36,"This line of code

`let object: AnyObject = try JSONSerialization.jsonObject(with: data, options: opt)`

return error in XCode 8 beta 6 because JSONSerialization.jsonObject return Any instead of AnyObject.

Use this, to correct this error:

`let object: AnyObject = try JSONSerialization.jsonObject(with: data, options: opt) as AnyObject`
",arodeus,2016-09-06 15:40:40
621,2016-09-06 15:40:40,"Solved using this:

https://github.com/SwiftyJSON/SwiftyJSON/issues/593
",arodeus,2016-09-06 15:40:40
620,2016-09-05 20:23:03,"With these changes, SwiftyJSON will build with either Xcode 7.3.1 or Xcode 8 using Swift 2.3.
",dpassage,2016-09-21 16:58:22
620,2016-09-15 20:57:50,"Only the iOS target has been updated, but missing the updates for tvOS, watchOS, and OSX
",sebastiencouture,2016-09-21 16:58:22
620,2016-09-21 16:58:22,"Thank you for sending this PR.

We have landing swift3 support in master branch. 

So we made this a new branch `swift2` for swift2.3.

Feel free to check it out.

🍻 
",zhigang1992,2016-09-21 16:58:22
620,2016-09-27 19:13:34,"@zhigang1992 thanks!
",dpassage,2016-09-21 16:58:22
619,2016-09-05 07:53:48,"With the upcoming release of Swift 3 (and the newly introduced incompatibility to Swift 2.2 and older in Xcode 8) it would be great to have a separate branch with Swift 3 compatibility.

Please consider also adding a Swift 2.3 branch for people who can’t migrate to Swift 3, because of other dependencies.
",rbugajewski,2016-09-23 09:42:24
619,2016-09-05 08:35:12,"Tried branch Swift3 but xcode still wants to convert it and it has 702 errors like:
<img width=""530"" alt=""screen shot 2016-09-05 at 11 34 29 am"" src=""https://cloud.githubusercontent.com/assets/7963214/18241986/cbd458b8-735c-11e6-97a0-4400141b02cd.png"">
",Jlexyc,2016-09-23 09:42:24
619,2016-09-06 06:24:46,"Yes, there’s already a branch with the right naming for Swift 3, but the version isn’t ready for Swift 3 yet. There are some pull requests that add Swift 3 compatibility, but they aren’t merged in. Using forks / manually merging in pull requests will be problematic in ongoing projects that also depend on a package manager like CocoaPods or Carthage.

Is there any ETA for Swift 3 compatibility (at least in form of untested beta code)?
",rbugajewski,2016-09-23 09:42:24
619,2016-09-06 13:55:56,"I use the `swift3` branch of [acegreen's fork](https://github.com/acegreen/SwiftyJSON) 
",basvankuijck,2016-09-23 09:42:24
619,2016-09-08 18:45:03,"Now that Swift3 is GM, you should merge everything into master and make a 3.0 release.  Older projects can pin their Carthage/Cocoapod work at the previous version 2.3.1 and security issues and bugs can be backported to 2.3.x releases.
",adamn,2016-09-23 09:42:24
619,2016-09-09 09:21:49,"@adamn I would also like to see a Swift 2.3 option rebased on top of whatever is the latest Swift 2 release.
",danielphillips,2016-09-23 09:42:24
619,2016-09-09 13:35:02,"@danielphillips I think the idea is that master would be 3.x and there would be a maintenance branch for 2.3.x that only includes ports of bugfixes and security issues.      But I'm not the maintainer so it's only a suggestion.
",adamn,2016-09-23 09:42:24
619,2016-09-12 19:07:34,"Having a nightmare to upgrade to Swift 3. Can anyone point me how can I point my cocoapods to acegreen's swift3 fork ?
",gloffreda,2016-09-23 09:42:24
619,2016-09-12 19:10:02,"@gloffreda you need to add the link after the pod name if its a custom location

pod 'SwiftyJSON', :git => 'https://github.com/nameOfUserHere/SwiftyJSON.git'

the info is here http://guides.cocoapods.org/using/the-podfile.html

and if its a specific branch its this

pod 'Alamofire', :git => 'https://github.com/Alamofire/Alamofire.git', :branch => 'dev'
",boland25,2016-09-23 09:42:24
619,2016-09-12 19:11:28,"Yes I did it but it gets the master. Found the solution:

pod 'SwiftyJSON', :git => 'https://github.com/acegreen/SwiftyJSON.git', :branch => 'swift3'

Thank you and hope it helps others
",gloffreda,2016-09-23 09:42:24
619,2016-09-14 16:27:33,"This solution doesn't work if your project which is also a cocoapod depends on another cocoapod.

In a pod spec file, you cannot define custom branches, or repos for a pod, only a version number of a published pod. Obviously the above works with an Xcode projects Podfile, but it does not work in a pod spec file.

<S_CODE_TOKEN>

So the sooner we can merge into master and put out a new release the better for us who depends on this!
",kylebrowning,2016-09-23 09:42:24
619,2016-09-16 17:38:36,"@kylebrowning I don’t know your project structure in detail, but I had a similar issue like you. In my case I removed the explicit reference to the branch in the spec, and instead made sure that I reference it in the (enclosing) Podfile. This way my custom pod that depended on another pod where I needed to specify a branch just took the right branch, because the Podfile fetched it into the Pods directory.
",rbugajewski,2016-09-23 09:42:24
619,2016-09-16 17:41:36,"@rbugajewski Yeah that works if im building the project myself, but im providing a library that depends on SwiftyJSON. So I cannot provide the git or branch in a pod spec file, only a podfile, which is end user specific.

People download my pod via their own podfile so the only way for them to get this is for me to have a step two which is add this other line to your podfile. While annoying, its not undoable, but its making me rethink my use of SwitfyJSON and dependencies in general. IN the case of this one being abandoned, I will definitely move off.
",kylebrowning,2016-09-23 09:42:24
619,2016-09-16 17:53:33,"@kylebrowning Yep, I’m sorry and I understand your dilemma. I’m also considering removing SwiftyJSON from my dependencies as it is just a small wrapper around the already really easy to use Apple framework classes that in my opinion feel _swiftier_ (for the protocol: I said this 💩 for the first time) with Swift 3 than this wrapper.
",rbugajewski,2016-09-23 09:42:24
619,2016-09-19 15:32:48,"Same as you @rbugajewski I decided to remove SwiftyJSON as it is now easy to work without it with swift3. I would have kept it if it was updated but now that I am updating my projects to swift 3 I don't have many choices.
",anas10,2016-09-23 09:42:24
619,2016-09-23 09:42:24,"[Swift3 and Swift2.3 support is here](https://github.com/SwiftyJSON/SwiftyJSON/issues/647)

Closing this one to cleanup the issue list, feel free to reopen this if needed.

Cheers
",zhigang1992,2016-09-23 09:42:24
619,2017-02-23 02:58:04,I would love love love love love love love love love love if this was swift 3 compatible!!!!,jack-lynch,2016-09-23 09:42:24
619,2017-02-23 03:25:30,@jack-lynch Swift 3 compatible is already there. See #647 ,wongzigii,2016-09-23 09:42:24
618,2016-09-03 19:35:35,,danielrhodes,2016-09-21 16:57:14
618,2016-09-09 16:03:41,"Seems to work well with Xcode 8 GM as well.
",michaeltansg,2016-09-21 16:57:14
618,2016-09-11 10:13:12,"@michaeltansg It doesn't seem to work for me (Xcode 8 GM). I use Carthage with `github ""danielrhodes/SwiftyJSON"" ""swift3""` setup, but it fails to build. cc @danielrhodes 

**EDIT**: forgot to switch `xcode-select` to use the latest `Xcode 8` path. Works now. 👍 
",damirstuhec,2016-09-21 16:57:14
618,2016-09-21 16:57:14,"Thank you for sending this PR.

I know you send this first, but I started merge from the top.

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 16:57:14
617,2016-09-01 21:53:41,,visskiss,2016-09-01 22:15:15
616,2016-09-01 20:04:08,"Fixes #615 
",emaloney,2016-09-21 16:14:15
616,2016-09-21 16:14:15,"Thanks for the PR, looks like it's doing a bit more than APPLICATION_EXTENSION_API_ONLY.
And also it's conflicting because we merged swift3 support.
So I just went ahead and redo your work, and referenced it here.

🍻 
",zhigang1992,2016-09-21 16:14:15
615,2016-09-01 20:02:29,"Unlike the other three platform targets, for the macOS build target, `APPLICATION_EXTENSION_API_ONLY` is set to `NO`.

As a result, SwiftyJSON generates spurious linker warnings when used as a dependency of another framework with `APPLICATION_EXTENSION_API_ONLY` set to `YES`:

<S_CODE_TOKEN>

I've experimented with this, and SwiftyJSON builds just fine with  `APPLICATION_EXTENSION_API_ONLY` set to `YES`.

I'll submit a pull request.
",emaloney,2016-09-21 19:24:53
614,2016-09-01 16:32:17,"We needed to keep in sync with Swift 3 beta 6. There were some important changes in beta 6 that affect the project, including some limitations in how literal support is implemented. It pulls back some of that support, and changes with type inference make other parts a little trickier. Hopefully this pull request will meet all the needs of the project. Let us know if there's anything we can do to make the transition easier or help in any way. Thanks!
",asynchrony-ringo,2016-09-21 17:10:05
614,2016-09-21 17:10:05,"Thank you for sending this PR.

I know you send this first, but I kinda started merge from the top.

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:10:05
613,2016-09-01 14:03:54,"Playground for anybody who want to play with SwiftyJSON.
",JeffGuKang,2016-10-31 05:28:45
613,2016-09-21 17:19:11,"Awesome, looks good. This is definitely a good start on utilizing the playground.

I actually have a bit more ambition on this, making it a living document for the actual code.
If you are interested: 

Like code examples in the README file, we can porting it over to this playground.

What do you think?
",zhigang1992,2016-10-31 05:28:45
613,2016-09-22 03:37:08,"Making a live document will be fun feature. 
Then, how about using [MarkUp](https://developer.apple.com/library/content/documentation/Xcode/Reference/xcode_markup_formatting_ref/index.html#//apple_ref/doc/uid/TP40016497) for the playground when do porting the examples from `README`?
",JeffGuKang,2016-10-31 05:28:45
613,2016-09-22 03:47:26,"@JeffGuKang definitely, let's do it. 😄 
",zhigang1992,2016-10-31 05:28:45
613,2016-09-23 07:32:40,"Cool. 👍 
",JeffGuKang,2016-10-31 05:28:45
613,2016-10-30 11:20:02,"I will update TODO list. 
",JeffGuKang,2016-10-31 05:28:45
613,2016-10-31 05:28:52,"LGTM 👍 
",zhigang1992,2016-10-31 05:28:45
612,2016-09-01 05:54:08,"### Problem

A `SwiftyJSON.JSON` created with `SwiftyJSON.JSON[key]` does not know itself's path.
If it does, it would be useful debugging information.
For example, debugging an error when accessing with a non existing key: `SwiftyJSON.JSON[key][nonExistKey]`
### Solution

A. Completely wrap SwiftyJSON.JSON
B. Add a property to SwiftyJSON.JSON to keep track of itself's path

I implemented B, and it could be used like this:

<S_CODE_TOKEN>

What is the path of `childJSON`? What keys were used?

<S_CODE_TOKEN>

I'm looking for a better name for the property `currentPath`. Maybe `pathToSelf`?
",muukii,2016-11-16 16:26:59
612,2016-09-21 17:40:43,"This is very useful indeed.

Can you kindly help resolve the conflict.

And maybe a some test cases to this?

Cheers
",zhigang1992,2016-11-16 16:26:59
612,2016-11-16 16:26:59,"Closing due to inactivity, feel free to reopen this if needed.
",zhigang1992,2016-11-16 16:26:59
611,2016-09-01 03:14:16,"This branch updates the project to support Swift 2.3. There's no language changes involved, so this mostly just serves to update the build settings.

Ideally this would be merged and shipped as a release before the upcoming Swift 3 changes.
",rpowelll,2016-09-21 16:56:29
611,2016-09-01 13:59:07,"+1
",bonkey,2016-09-21 16:56:29
611,2016-09-08 00:00:26,"Any updates here now that the GM's are released?
",AndrewBarba,2016-09-21 16:56:29
611,2016-09-08 00:04:04,"I'm downloading the GM now, I'll check that this builds properly with it once that's done
",rpowelll,2016-09-21 16:56:29
611,2016-09-08 00:45:09,"Amazing, thank you!
",AndrewBarba,2016-09-21 16:56:29
611,2016-09-08 01:16:32,"Builds like a charm 👌 
",rpowelll,2016-09-21 16:56:29
611,2016-09-12 01:08:51,"Great thanks mate!
",shawn-shen,2016-09-21 16:56:29
611,2016-09-19 04:39:40,"This works perfectly thanks @rpowelll. Why hasn't it been merged into master yet?
",mitchellporter,2016-09-21 16:56:29
611,2016-09-19 12:54:57,"Merge it already, come on!
",makoni,2016-09-21 16:56:29
611,2016-09-21 13:28:54,"Thanks for the fork @rpowelll. Although I encountered an issue with lowering the deployment target to iOS 7.0 when using Carthage. Had to set it back to 8.0 for it to go through iTunes Connect upload verification.
",MrAlek,2016-09-21 16:56:29
611,2016-09-21 16:23:44,"Crap, I started cleanup RP top down. 
And merged swift3 first into master. :(

But I've also did the same work cleaning up [swift2](https://github.com/SwiftyJSON/SwiftyJSON/tree/swift2) branch. 
It's should be exactly the same as this one.

I've also published version `2.4.0` to cocoapods, which is swift 2.3 compatible.

Can you give it a try?

Again, thanks you and sorry not got getting to this sooner.
",zhigang1992,2016-09-21 16:56:29
611,2016-09-21 16:39:30,"@zhigang1992 Just tried it out now with carthage going towards the `swift2` branch. Works like a charm. Thanks!
",MrAlek,2016-09-21 16:56:29
611,2016-09-21 16:56:29,"@MrAlek sweet. Thanks

Will close this one now, feel free to reopen it if you have any more questions. 

🍻 
",zhigang1992,2016-09-21 16:56:29
611,2016-09-21 18:43:58,"Thank you @zhigang1992!
",mitchellporter,2016-09-21 16:56:29
610,2016-08-31 21:26:37,"Swift cannot represent dictionaries with `nil` values as json (http://stackoverflow.com/questions/13908094/how-to-include-null-value-in-the-json-via-nsjsonserialization) and the current SwiftyJSON string representation that relies on the default swift JSON string representation will fail as way.

Here I created a custom string representation that doesn't doesn't rely on the built in one, and can handle things with nil or values. I also added a few tests.
",gsabran,2016-11-17 02:56:03
610,2016-09-21 16:47:49,"hm, not sure if I follows.

Is this what you're looking for?

<img width=""1072"" alt=""screen shot 2016-09-22 at 12 41 55 am"" src=""https://cloud.githubusercontent.com/assets/1057756/18720218/6d0c5b6a-805d-11e6-8676-9a60e901e8f2.png"">

Unless your intention is to convert `Optional.None` into `null`.
If that's the case, IMHO, I think they are a bit different, like `Optional.None` aka `nil` means this thing doesn't exist.
Where as `null` mean this thing (or key) exist, but the value is `null`.

So if the api is asking you to send `null` for empty fields, maybe we can map nil it to NSNull.

But doing it in the framework level seems a bit to specific.

What do you think? 😄 
",zhigang1992,2016-11-17 02:56:03
610,2016-09-21 17:24:32,"Yes, I'm trying to address the conversion of `nil` to json. Many objects have optionals and it felt natural to be able to convert them to json, and those json to string representation. It's really weird to think that a json with `nil` should have no string representation.
Currently it's not possible to convert such a json object to a string representation.

To you, how does _the value is `null`_ differ from _this thing doesn't exists_. In both cases, there's no confusion on wether or not the key exists, because both 

<S_CODE_TOKEN>

and

<S_CODE_TOKEN>

convey the idea that there's a key `foo`. I guess this question is not really json related, but more like what difference in meaning do you see between the two objects above?
",gsabran,2016-11-17 02:56:03
610,2016-09-21 17:32:31,"Thanks for the quick reply,

In you example, type `[String: Any?]` is not quiet the same as `[String: Any]`.

IMHO, JSON dictionary is a type `[String: JSON]` or in this case `[String: Any]`.

`Optional` type is swift only. You can't find 1 to 1 mapping in JSON that represent Optional.

Then with your example.

`var json:[String: Any] = [""hello"":""world""]`
setting something to nil.
`json[""sup""] = nil` remove the `sup` key if exist, and does nothing if it doesn't.
setting it to `NSNull`
`json[""sup""] = NSNull()` would actually create a key with `sup` and set its value to `NSNull`.

Hope I'm making sense here.

😄 
",zhigang1992,2016-11-17 02:56:03
610,2016-09-22 06:41:56,"I agree this is all very confusing. I've dig a bit into this, and found [even more confusing things](http://stackoverflow.com/questions/39630322/swift-setting-dictionary-value-to-nil-confusion?noredirect=1#comment66567115_39630322).

I get your point that `json[""sup""] = nil` deletes one key instead of setting a value to `nil`, and I believe that this shorthand is some bad design from swift more than anything else, especially given the questions raised in the SO post linked above. I'd much rather do `json.removeValue(forKey: ""sup"")` but this is a personal opinion.

I also think we need to have something that fits the daily challenges of developers, so I don't think it's fine to not be able to serialize dictionaries with `nil` values, that for instance could represent object with optionals fields. So if the solution is to drop the fields with `nil` values and serialized what's remaining, this is already much better than saying we can't convert json to string.

`NSNull` and `NSJSONSerialization` are Objective C things, and their design probably make sense there since there is no optional (other than that, I don't know Objective C that well).
But frankly in Swift I don't get the point of `NSNull` and the only time I've considered using it was to replace `nil` in dictionaries to parse them to json. So this might also be a bit of my personal opinion, but to me `Swift NSNull` should be forgotten, `Swift nil` is equivalent to `json null`, and Swift should forget about its shorthand to remove keys from dictionaries.

Happy to learn/discuss anything I'm missing here!
",gsabran,2016-11-17 02:56:03
610,2016-09-26 15:30:51,"Is the discussion closed? What about having this as an optional way to cast to string? Like

<S_CODE_TOKEN>
",gsabran,2016-11-17 02:56:03
610,2016-09-26 15:33:31,"sorry, I didnt close this on purpose, we cleaning the swift3 branch since we no long need it.
",zhigang1992,2016-11-17 02:56:03
610,2016-09-26 15:33:47,"Can you try pointing this to master branch?
",zhigang1992,2016-11-17 02:56:03
610,2016-09-26 15:35:31,"I'd definitely prefer to having a separate method or option doing this.

Not sure if you can extend  `JSONSerialization.WritingOptions` though.
",zhigang1992,2016-11-17 02:56:03
610,2016-09-26 16:22:14,"Ok I've rebased
",gsabran,2016-11-17 02:56:03
610,2016-09-26 16:26:16,"Let me see what I can do for the option
",gsabran,2016-11-17 02:56:03
610,2016-09-26 17:02:28,"I've changed things so that:
- the previous syntax works as before
- you have more options to describe the string casting, like `json.rawString(options: [.castNilToNSNull: true])`
",gsabran,2016-11-17 02:56:03
610,2016-11-16 16:36:07,"hey mate, sorry for the late reply.

Try a couple times solve the conflict and merge this PR, but seems like I'm can't push to you repo.

<S_CODE_TOKEN>

Can you help, will merge this ASAP.
",zhigang1992,2016-11-17 02:56:03
610,2016-11-16 21:40:46,"Ah sure. Let me look at what has change on the main branch
",gsabran,2016-11-17 02:56:03
610,2016-11-16 22:03:18,"I've rebased
",gsabran,2016-11-17 02:56:03
610,2016-11-17 02:56:07,"👍 
",zhigang1992,2016-11-17 02:56:03
609,2016-08-31 17:28:53,"<S_CODE_TOKEN>

shows that literal conversion might not behave like explicit conversion, which I've found to be quite hard to debug.
",gsabran,2016-10-07 12:17:20
609,2016-09-23 09:48:20,"So for literal conversion, we assume that the object on the right is a plain object.

This one would work:

<S_CODE_TOKEN>

Still You're right, we should address this inconsistency.
",zhigang1992,2016-10-07 12:17:20
609,2016-09-23 18:24:16,"Thanks. I was not good enough to find exactly where this difference is happening so I could not do a PR
",gsabran,2016-10-07 12:17:20
609,2016-10-07 12:17:20,"I think this PR address this issue.

Feel free to open this if needed.

🍻 
",zhigang1992,2016-10-07 12:17:20
607,2016-08-31 01:09:08,"Would it be possible to have:

<S_CODE_TOKEN>

behave like

<S_CODE_TOKEN>

?

That'd be quite helpful when a nested element has already been converted to JSON, and quite natural
",gsabran,2016-08-31 01:13:10
607,2016-08-31 01:13:09,"Actually it seems to already work :)
",gsabran,2016-08-31 01:13:10
606,2016-08-30 08:14:14,"It seems that `rawString` will simply call `NSJSONSerialization.dataWithJSONObject` on a dictionary: https://github.com/SwiftyJSON/SwiftyJSON/blob/master/Source/SwiftyJSON.swift#L640-L644

This fails if the dictionary has nil values since swift is not smart enough to cast them to json as `null`. What's the best way to get things to work? For instance if I have the dictionary

<S_CODE_TOKEN>

How can I end up with `{""name"": ""me"", ""username"": null}` ?
",gsabran,2016-11-17 20:50:56
606,2016-11-17 08:19:21,"@gsabran You can use something like this:

<S_CODE_TOKEN>
",ldiqual,2016-11-17 20:50:56
606,2016-11-17 20:50:56,"Yes, but this doesn't play well with dictionaries that have optional values, which can't be represented with `NSNull`. I've addressed it in my PR https://github.com/SwiftyJSON/SwiftyJSON/pull/610 and there's now an option to do that:

<S_CODE_TOKEN>
",gsabran,2016-11-17 20:50:56
605,2016-08-30 00:24:00,"I've been keeping a fork and trying to keep it up-to-date with the new Xcode 8 betas and Swift 3 (I know you have a branch of your own, but I need to be able to get it update to-date ASAP ... and I use it to generate pre-packaged-builds to improve our build process)

Apart from the issues with `AnyObject` (which I've currently overcome with `Any` ... it passes most of the tests so far), the biggest issue I had was with `Bool` when represented by a `NSNumber`

My understand of the inner workings of Swift is, non-existent, so I've spent a lot of time trying to understand the core issue.

I also stumbled across [this blog](http://sketchytech.blogspot.com.au/2015/05/json-and-swift-making-bool-magic-happen.html) which presents one idea (scroll to the bottom) which seems to work, but I also found the use of `type(of:)` to be most helpful

I couldn't seem to find a single neat way get `Bool` and `NSNumber(value: Bool)` to be represented in a comparable way, I was forced to separate the logic, the first is in the `NSNumber` extension, which basically tests to see if a `NSNumber` is wrapping a `Bool` (via something like `NSNumber(value: Bool)`

The second was to check to see if the (`Bool`) value was masquerading as a `NSNumber` (ie `true` can be treated as a `NSNumber`, but it's more difficult to detect if you try and test it as a `NSNumber`).

So I ended up with two checks when checking the type of `NSNumber`/`Bool`, one does a direct check against `Bool`, the other checks the underlying ""wrapped"" type of the `NSNumber`

The following is some test code I've been using in Playground...

<S_CODE_TOKEN>

I hope you find a better solution, but it might help you get passed some of the ""WTF"" moments I had when trying to get it to work.

Also, `Bool` in `NSArray` seems to get converted to a number (I assume `NSNumber`), so `[true] as NSArray` becomes `[1]` ... sorry, didn't solve that one (other then dropping the `as NSArray`)

Best of luck!
",RustyKnight,
605,2016-09-05 15:16:44,"Thanks so much for this. Thanks to your fork, I got my projects working again!
",CTKRocks,
605,2016-09-05 22:05:18,"I also found, yesturday, much to my horror, that when converted to `Data` and back again, `Bool` is converted automatically to `NSNumber` (`0` and `1`), I've not had time to research the issue and this might even be a bug in `JSONSerialization`

(Confirmed https://bugs.swift.org/browse/SR-2441)

The only solution I've tried is to update the optional `bool` property to include `.number` types as well

<S_CODE_TOKEN>

This is more of hack then a real solution (IMHO) as it's purely ""guess"" work
",RustyKnight,
604,2016-08-29 17:58:12,"I have a dictionary of [String: Anyobject] and am converting NSFetchRequest object into json adding it to the dictionary in short this is my code 

`var xyt = JSON(vrt)`

<S_CODE_TOKEN>

`

This is what is printed 

`{
    imageUrl = ""http://res.cloudinary.com/max-ng/image/upload/v1470172475/kjmfyurwnnhvthyxj6z4.jpg"";
    ""item_id"" = 6;
    name = ""Avocado Salad"";
    price = 1000;
    ""rest_id"" = 6;
}`

Instead of 

`{
  ""price"" : ""1000"",
  ""imageUrl"" : ""http:\/\/res.cloudinary.com\/max-ng\/image\/upload\/v1470172475\/kjmfyurwnnhvthyxj6z4.jpg"",
  ""item_id"" : ""6"",
  ""rest_id"" : ""6"",
  ""name"" : ""Avocado Salad""
}`

My backend will not recognise the `=`
",cosmo1234,2016-09-02 19:48:02
603,2016-08-28 04:51:37," Example is hard to use now without navigation way recommended by Apple HIG(Human Interface Guideline). 
- [ ] Push animation horizontally when go detail. (Not calling modal animation.)
- [ ] Navigation item for Back.
",JeffGuKang,
603,2016-09-23 10:34:50,"We should properly go with push animation. 👍 
",zhigang1992,
603,2016-12-04 02:58:45,I will start this issue. :),JeffGuKang,
602,2016-08-25 15:40:38,"Installed with cocoapods like so:

<S_CODE_TOKEN>

also adding this at the bottom:

<S_CODE_TOKEN>

Numerous (~67) errors result in SwiftyJSON. Some are:

> SwiftyJSON.swift:772:35: Expected ',' joining parts of a multi-clause condition
> SwiftyJSON.swift:635:23: No type named 'Boolean' in module 'Swift'
> SwiftyJSON.swift:70:59: Value of type 'Any' does not conform to specified type 'AnyObject'
> SwiftyJSON.swift:110:14: Cannot invoke 'JSON.init' with an argument list of type '([AnyObject])'
> SwiftyJSON.swift:125:14: Cannot invoke 'JSON.init' with an argument list of type '([String : AnyObject])'
> SwiftyJSON.swift:347:22: 'rawDictionary' is inaccessible due to 'private' protection level
> SwiftyJSON.swift:144:29: Return expression of type '[AnyObject]' does not conform to 'AnyObject'
> etc etc etc
",valheru7,2016-09-23 09:44:25
602,2016-08-26 14:30:42,"[this pull request](https://github.com/SwiftyJSON/SwiftyJSON/pull/582) may help.
",AnYuan,2016-09-23 09:44:25
602,2016-09-23 09:44:25,"[Swift3 and Swift2.3 support is here](https://github.com/SwiftyJSON/SwiftyJSON/issues/647)

Closing this one to cleanup the issue list, feel free to reopen this if needed.

Cheers
",zhigang1992,2016-09-23 09:44:25
601,2016-08-25 11:54:04,"Hi, I have the following code:

<S_CODE_TOKEN>

Any idea how to fix the leak?
",kolisko,2016-12-25 10:08:46
601,2016-10-30 11:53:21,"Any update?
",nhatlee,2016-12-25 10:08:46
601,2016-10-31 23:53:08,"Have the same problem. Found this thread on Alamofire github: https://github.com/Alamofire/Alamofire/issues/1200 
Seems they also believe it's a JSONSerialization leak (so I'm guessing SwiftyJSON leak??)

Any pointers as to how to solve or workaround this?
",guidove,2016-12-25 10:08:46
601,2016-11-06 04:25:53,"Maybe related to https://github.com/Alamofire/Alamofire/issues/1755
",wongzigii,2016-12-25 10:08:46
601,2016-12-25 10:08:46,I don't see this leak in the latest Xcode 8.2. It seems this issue has been resolved by Swift 3.0.2. Closing.  Reopen or hit me up if you still suffering this issue.,wongzigii,2016-12-25 10:08:46
600,2016-08-25 11:40:08,"Save and Load locally are useful functions to remain just before status for iOS applications. When the application is terminated.  For that reason,  I added the functions for SwiftyJSON. 
",JeffGuKang,2016-09-21 17:09:06
600,2016-09-21 15:37:34,"IMHO, this is more like a plugin than a part SwiftyJSON.

Might be we should create a new project for this. 😄 
",zhigang1992,2016-09-21 17:09:06
600,2016-09-21 17:09:06,"Cause user might want to save to somewhere else other than NSUserDefaults, even if it's NSUserDefaults, they might not want to put it in the standardDefaults.

But as a more concrete plugin, this will make sense.

I'll close this PR for now, cause I kinda had to clean this repo up a bit.

But feel free to reopen it if you'd like to discuss more.

Cheers
",zhigang1992,2016-09-21 17:09:06
599,2016-08-24 09:45:33,"`  
        let json = JSON(detailArray)

<S_CODE_TOKEN>

`
log shows:

Optional(""[\n  {\n    \""ProductId\"" : 5629,\n    \""SelectedQty\"" : 2\n  },\n  {\n    \""ProductId\"" : 6700,\n    \""SelectedQty\"" : 1\n  }\n]"")

[
  {
    ""ProductId"" : 5629,
    ""SelectedQty"" : 2
  },
  {
    ""ProductId"" : 6700,
    ""SelectedQty"" : 1
  }
]

What happen?

I need the stingValue  NOT array!
",AlasKuNull,2016-10-07 12:22:09
599,2016-10-07 12:22:09,"it's not a array, it's just that `print` method treat string type differently and printing out `\n` as actual line breaks.
",zhigang1992,2016-10-07 12:22:09
598,2016-08-23 21:13:24,,tmcw,2016-09-21 16:11:07
598,2016-09-21 16:10:55,"👍 
",zhigang1992,2016-09-21 16:11:07
598,2016-09-21 16:11:14,"forget to merge. lol
",zhigang1992,2016-09-21 16:11:07
597,2016-08-19 01:53:00,"Hi,

Changes for Swift 3.0 and Xcode 8 beta 6.  Hope this helps.

Thanks!
",druidsbane,2016-09-21 16:50:17
597,2016-08-22 01:01:41,"Only tests failing now are for subscripts. Assignment once an array or dictionary is created doesn't work though initial creation is fine. All other tests work.
",druidsbane,2016-09-21 16:50:17
597,2016-09-21 16:50:17,"Thank you for sending this PR.

I know you send this first, but I started merge from the top. lol

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 16:50:17
597,2016-09-21 16:51:49,"Thanks! Will check out.

Sent from my iPhone

> On Aug 30, 2016, at 7:06 PM, Nathan notifications@github.com wrote:
> 
> Private vars should be fileprivate
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub, or mute the thread.
",druidsbane,2016-09-21 16:50:17
596,2016-08-17 22:43:56,"Hello

I'm trying to create a JSON object like this

`[
  null,
  {
    ""name"": ""nameExample"",
    ""age"": 45
  },
  {
    ""name"": ""anotherName"",
    ""age"": 55
  }
]`

And eventually get that JSON object as a string.
How can do so ?!
",ElSifi,2016-11-17 08:15:00
596,2016-10-24 12:36:59,"I am making some playground docs in #613 .
And I write below the part of source that I used to make JSON.

In swift, you need to write to make JSON object directly as `Dictionary type` using `[ ]` instead of `{ }`.

<S_CODE_TOKEN>
",JeffGuKang,2016-11-17 08:15:00
596,2016-11-17 08:15:00,"There hasn't much activity on this issue for a while so I'll go ahead and consider it fixed. Let me know if you'd like me to reopen it. Thanks!
",ldiqual,2016-11-17 08:15:00
595,2016-08-16 23:57:46,"""dictionary"" is get-only property, should be dictionaryObject.
",evgeth,2016-09-21 16:27:18
595,2016-09-21 16:27:20,":+1:
",zhigang1992,2016-09-21 16:27:18
594,2016-08-16 13:54:06,"Changes - Xcode 8 beta 6 (Swift 3)
",acegreen,2016-09-21 17:41:49
594,2016-08-17 08:57:48,"Thanks!
",Xedart,2016-09-21 17:41:49
594,2016-08-18 17:39:18,"Thanks!
",l800891,2016-09-21 17:41:49
594,2016-09-21 17:41:49,"Thank you for sending this PR.

I know you send this first, but I kinda started merge from the top.

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:41:49
593,2016-08-16 12:42:32,"Library doesn't work with the latest Swift 3.0 release which is shipped with Xcode 8 beta 6. Perhaps somebody knows how to fix it?
",Xedart,2016-09-23 09:44:46
593,2016-08-16 17:03:43,"+1
",rudenik,2016-09-23 09:44:46
593,2016-08-16 19:39:00,"I was able to make small changes in many places to update the syntax as needed, but I'm stumped on this last one. In SwiftyJSON.swift I have 10 errors that say something similar to: 

`Cannot invoke 'JSON.init' with an argument list of type '([AnyObject])'`

Any ideas as to why the initializers aren't working?
",blwinters,2016-09-23 09:44:46
593,2016-08-16 19:40:34,"@blwinters Changing `AnyObject` to `Any` should fix the problem.
",haginile,2016-09-23 09:44:46
593,2016-08-16 19:40:54,"Check here, 

https://github.com/SwiftyJSON/SwiftyJSON/pull/594/commits/8971384559780e631b041ac91b16734a396d4c14

This fixed pretty much everything for me.
",rudenik,2016-09-23 09:44:46
593,2016-08-16 19:50:42,"@rudenik @haginile That did the trick. Thanks!
",blwinters,2016-09-23 09:44:46
593,2016-08-17 04:39:30,"I got 62 errors in Xcode8 beta 6, these are some of them:
SwiftyJSON.swift:772:35: Expected ',' joining parts of a multi-clause condition
SwiftyJSON.swift:70:59: Value of type 'Any' does not conform to specified type 'AnyObject'
SwiftyJSON.swift:110:14: Cannot invoke 'JSON.init' with an argument list of type '([AnyObject])'
SwiftyJSON.swift:144:29: Return expression of type '[AnyObject]' does not conform to 'AnyObject'
SwiftyJSON.swift:146:29: Return expression of type '[String : AnyObject]' does not conform to 'AnyObject'
SwiftyJSON.swift:148:29: Return expression of type 'String' does not conform to 'AnyObject'
SwiftyJSON.swift:233:27: Use of unresolved identifier 'rawArray'
...........
",itman85,2016-09-23 09:44:46
593,2016-08-17 13:18:36,"@itman85 Check my previous post. The link has the answers you are looking for. 
",rudenik,2016-09-23 09:44:46
593,2016-08-18 03:03:59,"@rudenik Thank you
",itman85,2016-09-23 09:44:46
593,2016-08-18 16:27:37,"[this pull request](https://github.com/SwiftyJSON/SwiftyJSON/pull/582) may help.
",AnYuan,2016-09-23 09:44:46
593,2016-08-22 19:05:59,"I used @rudenik 's solution. Works great, thanks. Let's get this fix merged!
",picciano,2016-09-23 09:44:46
593,2016-08-23 06:39:52,"@picciano Same here
",Lawris,2016-09-23 09:44:46
593,2016-09-02 07:37:00,"Carthage use this fork https://github.com/eggswift/SwiftyJSON
",eggswift,2016-09-23 09:44:46
593,2016-09-23 09:44:46,"[Swift3 and Swift2.3 support is here](https://github.com/SwiftyJSON/SwiftyJSON/issues/647)

Closing this one to cleanup the issue list, feel free to reopen this if needed.

Cheers
",zhigang1992,2016-09-23 09:44:46
592,2016-08-16 12:20:13,"Library doesn't work with the two latest releases of Swift in Xcode 8.0 beta 5 and beta 6. 
",Xedart,2016-08-16 12:27:36
591,2016-08-16 06:41:32,,bonkey,2016-09-21 17:42:53
591,2016-09-21 17:42:53,"Thanks for the PR,

We have landed Swift3 support in master.

Also `swift2` branch for swift2.3.

Feel free to check it out.

Cheers.
",zhigang1992,2016-09-21 17:42:53
590,2016-08-13 09:47:38,"Is this project still being developed? In its current state it is not compatible for use in a Swift 3 project, and most of the issues raised here have been unanswered. Any indication if work has already begun to review and accept the many pending PRs will be nice. and if yes, a possible timeline too 

Thanks
",livingstonef,2016-08-13 09:51:06
590,2016-08-13 09:51:06,"Oh Snap. My bad, just found the swift3 branch. 
",livingstonef,2016-08-13 09:51:06
589,2016-08-11 18:23:23,"We ran into some performance issues when using JSON documents with a large number of records.

The first commit adds a test case which demonstrates the issue. On my laptop, this test takes 23 minutes to run.

The second commit fixes the performance issue bringing the execution time to 3 seconds.

The main issue is that, in Swift, each iteration in the reduce treats the dictionary as non-mutable and copies it into a new instance each time it adds a new element. This results a lot of object creation/releasing churn with O(n*n) performance. The fix replaces this with an implementation with O(n) complexity.
",abuchanan920,2016-10-07 02:25:14
589,2016-09-08 15:42:47,"Just a quick correction - current behavior is O(n log n).
",abuchanan920,2016-10-07 02:25:14
589,2016-09-21 17:01:54,"Sweet, looks great. 👍 

Can you help solve conflicts and let's ship it. 😄 
",zhigang1992,2016-10-07 02:25:14
589,2016-09-21 17:06:04,"We are planning on rewrite the way we access dictionary on the next major version.
Which doesn't require creating all the intermedia objects.
But that might require a breaking change on the API.
",zhigang1992,2016-10-07 02:25:14
589,2016-10-07 02:25:14,"I think this is covered in https://github.com/SwiftyJSON/SwiftyJSON/pull/660

Feel free to reopen this if needed.
",zhigang1992,2016-10-07 02:25:14
588,2016-08-09 11:54:44,"Hi All,

I have manually copied the swift3 branch folder (after unzipping) into the root of my project folder, dragged the .xcodeproj file into Xcode and registered SwiftyJSON as a target dependency and embedded library (the exact same procedure I did with Alamofire) but it's still showing 'No such module 'SwiftyJSON' when attempting to import. 

Any ideas? 
",K1tson,2016-08-10 09:08:56
588,2016-08-09 15:52:53,"just drag the swiftfile to the project and add in xcode
",gaming-hacker,2016-08-10 09:08:56
588,2016-08-10 09:08:35,"Sorry!
All sorted and working now with updated changes. 
Thank You!
",K1tson,2016-08-10 09:08:56
587,2016-08-08 22:48:40,"import Foundation
import SwiftHTTP
import SwiftyJSON

class API {

<S_CODE_TOKEN>

}

output :

nil
",LastSoul,
587,2016-08-15 15:40:41,"I have the same problem. 

<S_CODE_TOKEN>

I can see the json exactly but i cant see the campaigns. Output comes like ""campaigns: nil""
",selaysoysal,
587,2016-08-17 21:42:09,"I'm having this issue as well. Using a third party tool I confirmed the data is structured as expected and being accessed properly:

Query: `json[""metadata"", ""music"", 0, ""external_metadata"", ""spotify"", ""album"", ""id""].string`

Data:

<S_CODE_TOKEN>

Result: `nil`
",merktassel,
587,2016-08-30 17:26:58,"I'm having a really unexpected nil as well. 

<S_CODE_TOKEN>

This code must have worked as it's out in the App Store, working. However I have the following problem in my code:

<S_CODE_TOKEN>

Version 7.3.1 (7D1014)
",LucasVanDongen,
587,2016-11-22 05:01:34,"@LastSoul @merktassel @selaysoysal @lucasderraugh Sorry for the delay on this. Can each one of you post the actual JSON data that you're parsing? Not just the dictionary representation but the full json data. Here's what I'm thinking so far:

 - @LastSoul I ran your code and the JSON parses correctly, I don't get `nil`. Are you on the latest version of SwiftyJSON and if not, would you mind trying again with the latest version?
 - @selaysoysal Would you mind posting the JSON data you're trying to parse? Will make it easier to investigate
 - @merktassel @lucasderraugh I believe both of you are accessing `id` with the incorrect type. In one case, you're using `.string` instead of `.int`, and in another case it's the opposite. It would be easily confirmed if you could post the actual data that you're parsing. Let me know

Thanks!",ldiqual,
587,2016-11-22 09:19:55,@ldiqual Think you pinged the wrong Lucas on this thread :) @LucasVanDongen ,lucasderraugh,
587,2016-11-22 12:05:44,I'll take a look once I get back to that project,LucasVanDongen,
587,2017-02-22 14:48:49,Closing this due to lack of activity. Feel free to reopen if you have any other questions!,wongzigii,
587,2017-02-22 14:56:29,"Hold it. This is a serious bug. Any field called ""id"" cannot be parsed in a direct way using intValue. I've been writing code that iterates over all fields in dictionary just to find an entry called ""id"" and then to get it's value. I am really sure that it has to do with the fact that the keyword id is something really special in Objective-C land.

import UIKit
import SwiftyJSON

<S_CODE_TOKEN>",LucasVanDongen,
587,2017-02-22 15:41:27,Hey @LucasVanDongen I assume yours is not related to this issue. Would you mind open another issue for this?,wongzigii,
587,2017-02-22 15:48:34,"Is it possible to split this topic? I responded because I noticed @merktassel also had problems parsing the specific ""id"" field. Also I don't know if what the other people are seeing is not related to my problem.

@ldiqual I can parse that field fine as an int as soon as I use my hackaround or ask the intValue of any other field contain a numeric value either in string or int.",LucasVanDongen,
586,2016-08-08 21:44:07,,yansally,2016-08-08 21:46:49
586,2016-08-08 21:46:49,"Just saw it was solved.
",yansally,2016-08-08 21:46:49
585,2016-08-04 02:02:42,,mg459046365,2016-09-23 09:45:14
585,2016-08-04 06:22:01,"Possible the author stopped to update the library  .....
",MarcSteven,2016-09-23 09:45:14
585,2016-08-04 23:22:33,"any one knows how to resolve this, Xcode 8 Beta 4 says 
The Boolean protocol has been removed. (SE-0109)
",piyushwadhwani,2016-09-23 09:45:14
585,2016-08-06 15:52:37,"i was able to compile and run by removing Swift.Boolean in the code, i havent tried getting a boolean value though
",piyushwadhwani,2016-09-23 09:45:14
585,2016-08-07 07:00:06,"+1
",Fritiof,2016-09-23 09:45:14
585,2016-08-09 15:53:30,"swift3 blows
",gaming-hacker,2016-09-23 09:45:14
585,2016-08-11 21:00:37,"+1
",exocode,2016-09-23 09:45:14
585,2016-08-15 17:23:15,"+1
",gorzny,2016-09-23 09:45:14
585,2016-09-23 09:45:14,"[Swift3 and Swift2.3 support is here](https://github.com/SwiftyJSON/SwiftyJSON/issues/647)

Closing this one to cleanup the issue list, feel free to reopen this if needed.

Cheers
",zhigang1992,2016-09-23 09:45:14
584,2016-08-03 21:03:42,"I am using the swift 3 branch in Xcode 8 beta 4 and doing:

<S_CODE_TOKEN>

But I get the error `Type(String, JSON) has no subscript members`
## 

![screen shot 2016-08-03 at 5 02 26 pm](https://cloud.githubusercontent.com/assets/9156815/17381854/2686ee7c-599c-11e6-947c-ed563c2e6588.png)
",simonnarang,2016-12-25 15:10:39
584,2016-10-05 20:35:00,"+1
",travisday,2016-12-25 15:10:39
584,2016-11-22 05:12:01,"@simonnarang Thanks for opening an issue! I believe you want to iterate over the `reponse2.data` array by using a `for in`. I think what you need to do is to use `json.arrayValue` or `json.array` and iterate on that. Something like

<S_CODE_TOKEN>

For the sake of safety, I would actually add more safeguards:

<S_CODE_TOKEN>

because `arrayValue` has an implicit fallback on `[]` and `as! String` may lead to crashes, especially with flexible structures like JSON.

Let me know if it solves your issue.",ldiqual,2016-12-25 15:10:39
584,2016-12-12 02:39:33,"I am having the same error but with a much simpler setup:

<S_CODE_TOKEN>

Third line (no matter in what variation I write the subscript) xcode says Type 'JSON' has no subscript members
although line 1 and 2 do not complain. 

Any idea why?",jaymutzafi,2016-12-25 15:10:39
584,2016-12-13 06:13:18,@jaymutzafi At first sight your example should definitely work. Can you share a sample project?,ldiqual,2016-12-25 15:10:39
584,2016-12-13 06:45:00,"@ldiqual Re-added this code and now it suddenly isn't giving this error anymore. But I've added a few lines just to test it and it's producing nil instead of data.

See line 123-126 in the project: https://github.com/jaymutzafi/Movie-Hop-URLS/blob/SwiftyJSON/Movie%20Hop/TMDBService.swift#L123

let parsedResult: [String:AnyObject]!
 do {
       parsedResult = try JSONSerialization.jsonObject(with: data!, options: .allowFragments) as! [String:AnyObject]
 } catch {
      print(""Could not parse the data as JSON: '\(data)'"")
      return
}
                let json = JSON(data!)
                print(json)
                let jsonResults = json[""results""].array
                print(jsonResults)
                
                var pageResult = [[String:AnyObject]]()
                pageResult = parsedResult[""results""] as! [[String:AnyObject]]


Basically with the same original data object, JSONSerialization lines work, but SwiftyJ don't. 

(if you end up running it, click New Game and you'll run through those lines)",jaymutzafi,2016-12-25 15:10:39
584,2016-12-25 15:10:39,"@jaymutzafi  

Your issue is because `let json = JSON(data!)` is actually calling this initializer `init(_ object: Any)`.
If you correct it to `let json = JSON(data: data!)`, then you will get it.
I admit this initializer is misleading somehow,  [as part of SwiftyJSON 3.1.4](https://github.com/SwiftyJSON/SwiftyJSON/pull/664/files#diff-b89f704655f1cdfa5eef8141e87c1abaR91),  in this case if you trying to passing a data object to `init(_ object: Any)`, data will be parsed successfully.",wongzigii,2016-12-25 15:10:39
583,2016-08-03 16:41:16,,adamnemecek,2016-10-07 02:26:32
583,2016-09-21 17:44:43,"Sweet, looks great

Can you help resolve the conflicts, and let's ship it. 😄 
",zhigang1992,2016-10-07 02:26:32
583,2016-10-07 02:26:32,"I think some of this PR is covered in

https://github.com/SwiftyJSON/SwiftyJSON/pull/671

Feel free to reopen this if needed.

🍻 
",zhigang1992,2016-10-07 02:26:32
582,2016-08-03 08:38:17,"wish to help.
",AnYuan,2016-09-21 17:45:47
582,2016-08-03 15:17:05,"I really need this!!!!
",simonnarang,2016-09-21 17:45:47
582,2016-08-03 15:49:46,"@simonnarang you're welcome😃
",AnYuan,2016-09-21 17:45:47
582,2016-08-06 15:54:06,"please merge this into swift3 branch
",piyushwadhwani,2016-09-21 17:45:47
582,2016-08-08 06:57:20,"please merge this into swift3 branch
",leejaedus,2016-09-21 17:45:47
582,2016-08-09 01:33:44,"please merge this into swift3 branch, I need it
",mylonly,2016-09-21 17:45:47
582,2016-08-09 16:23:55,"learn git and pull it into your own repo
",gaming-hacker,2016-09-21 17:45:47
582,2016-08-09 16:26:17,"It's not that hard, just get rid of the colon stuff in the json extension
",simonnarang,2016-09-21 17:45:47
582,2016-08-09 16:27:40,"its not about just removing its about merging it in swift3
",piyushwadhwani,2016-09-21 17:45:47
582,2016-08-10 09:31:07,"update under Xcode 8 beta5, and pass all the tests.
",AnYuan,2016-09-21 17:45:47
582,2016-08-18 12:49:11,"update under Xcode 8 beta6, and pass all the tests.
",AnYuan,2016-09-21 17:45:47
582,2016-08-23 06:54:13,"please merge
",funkenstrahlen,2016-09-21 17:45:47
582,2016-08-24 04:15:12,"please merge this into swift3 branch..
",sureshsubbaiah,2016-09-21 17:45:47
582,2016-08-26 17:03:24,"someone going to merge this?
",valheru7,2016-09-21 17:45:47
582,2016-08-29 00:00:28,"Bump for a merge? 

edit: @AnYuan can you fork and merge into your own repo? 
",arronhunt,2016-09-21 17:45:47
582,2016-08-29 00:42:05,"Tested this PR in an actual project. Confirmed that it compiles and it appears to work just fine.
",pcantrell,2016-09-21 17:45:47
582,2016-08-29 02:08:31,"@arronhunt [here](https://github.com/BaiduHiDeviOS/SwiftyJSON/tree/swift3) is my fork repo.
",AnYuan,2016-09-21 17:45:47
582,2016-08-29 18:05:12,"@AnYuan can you add the `s.pod_target_xcconfig = { 'SWIFT_VERSION' => '3.0' }` to your podfile for compatibility with Cocoapods
",esetnik,2016-09-21 17:45:47
582,2016-08-30 01:43:29,"@esetnik already merged your pull request to my repo, thanks.
",AnYuan,2016-09-21 17:45:47
582,2016-09-21 17:45:46,"Thank you for sending this PR, and apologize for not getting to this sooner.

I know you send this first, but I started merge from the top. lol

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:45:47
581,2016-08-02 19:29:36,"- Latest release is `2.3.3`, but `SwiftyJSON.podspec` sets version to `2.3.2`.
- CocoaPods repo doesn't have latest release: https://cocoapods.org/pods/SwiftyJSON (note `2.3.2` next to `SwiftyJSON` header).

Since `2.3.3` version has already been tagged, I think this can only be fixed in version `2.3.4`.
",otaran,2016-11-22 05:12:37
581,2016-08-09 15:39:12,"- I Have to release my Pod which depends on SwiftyJSON.
- I can't submit it to CocoaPod due to :

<S_CODE_TOKEN>
- Latest release is 2.3.3 which still doesn't fix this, but the **master branch already fix it** .

Please update your Pod ASAP

Many thanks 😄 
",CharlesGrimont,2016-11-22 05:12:37
581,2016-08-09 18:14:59,"@CharlesGrimont You could use `--allow-warnings` as a temporary fix to submit your pod, I have only used it on private specs but it should work.

But +1 for the release!
",amarcadet,2016-11-22 05:12:37
581,2016-08-09 18:50:38,"@otaran it could be fixed without tagging 3.2.4 as versions are related to tags.

However you can fix your problem using the `:commit` or `:tag` syntax in your Podfile. Not a long term solution but a decent one in the meantime.
See https://guides.cocoapods.org/syntax/podfile.html#pod for more information.
",amarcadet,2016-11-22 05:12:37
581,2016-08-09 19:01:49,"Thanks for a workaround, @amarcadet!

I am not sure I understand what you mean by ""versions are related to tags"". `SwiftyJSON.podspec` uses git tag to get pod source code. If maintainer will update pod version to `2.3.3`, it will point to `2.3.3` tag which doesn't include changes made to `SwiftyJSON.podspec`. If I understand this issue correctly, maintained will need to first update podspec, then tag commit which has changes made to podspec.
",otaran,2016-11-22 05:12:37
581,2016-08-09 19:55:17,"You're welcome :)

Actually, it doesn't matter if the `.podspec` currently commited in the tag `2.3.3` has version `2.3.2` because cocoapods use [the spec published in the specs repo](https://github.com/CocoaPods/Specs/blob/master/Specs/SwiftyJSON/2.3.2/SwiftyJSON.podspec.json#L22) and only the version in that file really matters when running `pod [install|update]`.

During the process of pushing a new version, cocoapods use the tag currently defined in the local `.podspec` to checkout the pod directly from the git repo and check if everything compile without issues. That's why you need to tag a version before pushing it to cocoapods.

So in theory, publishing the `2.3.3` afterwards is possible! Hope it's clear!
",amarcadet,2016-11-22 05:12:37
581,2016-08-09 20:00:33,"Ah, I see, now it makes sense, thank you!
",otaran,2016-11-22 05:12:37
581,2016-11-22 05:12:37,@otaran I believe your issue was addressed so I'll go ahead and close this. Let me know if we need to reopen!,ldiqual,2016-11-22 05:12:37
580,2016-08-02 18:19:55,"I get the following error in the swift 3 branch:
![screen shot 2016-08-02 at 2 18 02 pm](https://cloud.githubusercontent.com/assets/9156815/17339942/2c0b6f0c-58bc-11e6-834b-3c39efeb9492.png)
",simonnarang,2016-08-03 17:37:41
580,2016-08-02 21:40:17,"I am having the same issue and have not found a resolution thus far. 
",farice,2016-08-03 17:37:41
580,2016-08-03 15:52:39,"@farice you can try this branch: https://github.com/BaiduHiDeviOS/SwiftyJSON/tree/swift3
",AnYuan,2016-08-03 17:37:41
580,2016-08-03 17:07:47,"I deleted "": Swift.Boolean"" and it seems to be ok.  Not quite sure why that extension was different than the others
@farice this is the swift 3 branch, but a new breaking change with xcode 8 beta 4. 
",jasonhocker,2016-08-03 17:37:41
580,2016-08-03 17:09:23,"See pull request https://github.com/SwiftyJSON/SwiftyJSON/pull/579
",jasonhocker,2016-08-03 17:37:41
580,2016-08-03 17:37:37,"### Solved

## 

Just go to @AnYuan's fork <a href=""https://github.com/BaiduHiDeviOS/SwiftyJSON/tree/swift3"">here</a>
",simonnarang,2016-08-03 17:37:41
579,2016-08-02 17:52:57,"Updated to latest Xcode/Swift 
",ilyakooo0,2016-09-21 16:50:54
579,2016-08-02 18:06:31,"Thank you!  I'm no longer blocked with this beta  :) 
",jhudsonWA,2016-09-21 16:50:54
579,2016-09-21 16:50:54,"Thank you for sending this PR.

I know you send this first, but I started merge from the top. lol

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 16:50:54
578,2016-08-01 02:35:02,"fix some build errors for Xcode 8 beta 3 and Swift 3
",imairi,2016-09-21 16:53:05
578,2016-08-01 14:46:51,"+1
",sadhiappan,2016-09-21 16:53:05
578,2016-09-21 16:53:05,"This was included as part of Swift3 port.

Thanks for PR.

🍻 
",zhigang1992,2016-09-21 16:53:05
577,2016-07-31 20:32:06,"I copied the file to xCode Beta3 and xCode suggested me to change some syntax though it's a Swift 3 file I didn't understand why it's showing error. Probably the file is not configured a to z for swift 3. That's why I propose file change.
",ahayder,2016-09-21 17:46:23
577,2016-09-21 17:46:23,"Thank you for sending this PR.

I know you send this first, but I started merge from the top. 

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:46:23
576,2016-07-30 09:20:23,"Hi,

Thanks for your awesome repo. I added ""Getting an array of string from a JSON Array"" to subscript section.

I hope that will help others.

Good luck.
",Maryom,2016-09-21 17:47:03
576,2016-09-21 17:46:59,"Looks good. 👍 
",zhigang1992,2016-09-21 17:47:03
575,2016-07-28 02:32:44,"When trying to build SwiftJSON, package manager throws the following error:
`error: The package at /Users/SahandTheGreat/Desktop/kitura/Kitura-Sample/Packages/SwiftyJSON.git has no Package.swift for the specific version: 10.0.1`

Please help me!
",SahandTheGreat,2016-11-22 05:14:13
575,2016-08-03 17:40:28,"SwiftyJSON isn't SPM compatible
",simonnarang,2016-11-22 05:14:13
575,2016-08-03 17:41:09,"That will likely come in the fall when Swift 3 is officially released
",simonnarang,2016-11-22 05:14:13
575,2016-10-09 13:02:53,"I can see it has `Package.swift` file now, yet I'm still receiving this message:

<S_CODE_TOKEN>
",andig,2016-11-22 05:14:13
575,2016-11-14 21:50:47,"I am still getting the same error.
",kandelvijaya,2016-11-22 05:14:13
575,2016-11-21 21:19:01,"In your dependencies use the latest version.

like this:

`let package = Package(
    name: ""swiftyJSONtester"",
    dependencies: [
      .Package(url: ""https://github.com/SwiftyJSON/SwiftyJSON.git"", versions: Version(1,0,0)..<Version(3, .max, .max)),
    ]
  )`

or like this:

`let package = Package(
    name: ""swiftyJSONtester"",
    dependencies: [
      .Package(url: ""https://github.com/SwiftyJSON/SwiftyJSON.git"", majorVersion: 3, minor: 1)
    ]
  )`",cwkatzmann,2016-11-22 05:14:13
575,2016-11-22 05:14:13,"@SahandTheGreat The readme just got updated with instructions on adding the latest package version for SPM. I'll consider this fixed, let me know if we need to reopen. Thanks! https://github.com/SwiftyJSON/SwiftyJSON/pull/728",ldiqual,2016-11-22 05:14:13
574,2016-07-27 16:24:58,,KoNEW,2016-09-21 17:51:52
574,2016-09-21 17:51:51,"Hm, interesting.

This is definitely useful, but maybe it's a bit too specific for a JSON library.

Because as for as JSON goes, it has only 6 primitive types.

<S_CODE_TOKEN>

So IMHO, I think this would make a great plugin to SwiftyJSON.
But maybe should not be part of the core functionalities.

I'm gonna go ahead and close this PR, cause I had to clean this repo up a bit.

But feel free to reopen it if you like to discuss more.

Cheers 
",zhigang1992,2016-09-21 17:51:52
573,2016-07-25 12:54:15,"This PR includes a fix that I think is required to correctly check two JSONIndex instances whose internal types are .null for equality. Without this fix, two .null JSONIndexes are considered not equal, which leads to problems when iterating over JSON objects. 

Lets say we have the following code:

<S_CODE_TOKEN>

This leads to an infinite loop because the return values of startIndex, endIndex and index(after:) in the JSON: Collection extension all return .null Indexes which are considered not equal.
",cbot,2016-09-21 17:55:21
573,2016-09-21 17:55:18,"Nice catch. 👍 
",zhigang1992,2016-09-21 17:55:21
573,2016-09-26 06:17:51,"Didn't realize this is targeting swift3 branch, same fix had been deployed in the master as well.
",zhigang1992,2016-09-21 17:55:21
572,2016-07-24 15:31:55,"Undefined symbols for architecture arm64:
  ""Swift.UnsafeMutableBufferPointer.(subscript.materializeForSet : (Swift.Int) -> A).(closure #1)"", referenced from:
      function signature specialization <Arg[3] = Exploded> of generic specialization <Alib.JSON> of Swift.UnsafeMutableBufferPointer.subscript.materializeForSet : (Swift.Int) -> A in main.o
      function signature specialization <Arg[2] = Exploded> of generic specialization <Swift.UnsafeMutableBufferPointer<Alib.JSON> with Swift.UnsafeMutableBufferPointer<Alib.JSON> : Swift.MutableCollection in Swift and Swift.UnsafeMutableBufferPointer<Alib.JSON> : Swift.RandomAccessCollection in Swift> of Swift._siftDown <A where A: Swift.MutableCollection, A: Swift.RandomAccessCollection> (inout A, index : A.Index, subRange : Swift.Range<A.Index>, isOrderedBefore : inout (A.Iterator.Element, A.Iterator.Element) -> Swift.Bool) -> () in main.o
      function signature specialization <Arg[1] = Exploded> of generic specialization <Swift.UnsafeMutableBufferPointer<Alib.JSON> with Swift.UnsafeMutableBufferPointer<Alib.JSON> : Swift.MutableCollection in Swift and Swift.UnsafeMutableBufferPointer<Alib.JSON> : Swift.RandomAccessCollection in Swift> of Swift._heapSort <A where A: Swift.MutableCollection, A: Swift.RandomAccessCollection> (inout A, subRange : Swift.Range<A.Index>, isOrderedBefore : inout (A.Iterator.Element, A.Iterator.Element) -> Swift.Bool) -> () in main.o
      function signature specialization <Arg[1] = Exploded> of generic specialization <Swift.UnsafeMutableBufferPointer<Alib.JSON> with Swift.UnsafeMutableBufferPointer<Alib.JSON> : Swift.MutableCollection in Swift and Swift.UnsafeMutableBufferPointer<Alib.JSON> : Swift.RandomAccessCollection in Swift> of Swift._partition <A where A: Swift.MutableCollection, A: Swift.RandomAccessCollection> (inout A, subRange : Swift.Range<A.Index>, isOrderedBefore : inout (A.Iterator.Element, A.Iterator.Element) -> Swift.Bool) -> A.Index in main.o
ld: symbol(s) not found for architecture arm64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
",renanyoy,2016-11-22 05:16:20
572,2016-11-22 05:16:20,@renanyoy Sorry for the delay on this. SwiftyJSON v3 was released with full support for Xcode 8 + iOS/tvOS 10. Can you give it a shot and let me know if we need to reopen this? Thanks!,ldiqual,2016-11-22 05:16:20
571,2016-07-22 02:23:37,"extension Observable where Element : Result<JSON>{
我这样写有问题吗  
0: error: type 'Element' constrained to non-protocol type 'Result<JSON>'
",menhui222,2016-11-17 08:05:56
571,2016-07-22 02:32:03,"![](https://github.com/menhui222/BLOG_Image/blob/master/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-07-22%20%E4%B8%8A%E5%8D%8810.26.24.png?raw=true)
![](https://github.com/menhui222/BLOG_Image/blob/master/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-07-22%20%E4%B8%8A%E5%8D%8810.26.35.png?raw=true)
",menhui222,2016-11-17 08:05:56
571,2016-07-22 03:30:17,"![](https://github.com/menhui222/BLOG_Image/blob/master/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-07-22%20%E4%B8%8A%E5%8D%8810.40.48.png?raw=true)
![](https://github.com/menhui222/BLOG_Image/blob/master/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-07-22%20%E4%B8%8A%E5%8D%8810.41.12.png?raw=true)
",menhui222,2016-11-17 08:05:56
571,2016-11-17 08:05:56,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 08:05:56
570,2016-07-20 11:33:50,"Hello,
I can't find any branch for iOS Swift 2.3.
Is is possible to have one so we can start migrating SwiftyJSON to Swift 2.3 (+ use it in our projects with Carthage and CocoaPods).
Thanks,
Axel
",alpennec,2016-09-23 09:45:22
570,2016-08-10 22:31:50,"We have a big App and decide to go with Swift 2.3 first. Can we have Swift 2.3 branch soon?
",yansally,2016-09-23 09:45:22
570,2016-08-15 16:35:03,"+1
",nikolaeu,2016-09-23 09:45:22
570,2016-08-19 02:26:56,"+1
",eggswift,2016-09-23 09:45:22
570,2016-08-26 10:53:41,"+1
",mickyzinho,2016-09-23 09:45:22
570,2016-08-30 20:27:46,"I forked this repo and fiddled with it until it worked with Swift 2.3 on the master branch (working with Carthage):
https://github.com/abarnes/SwiftyJSON
",abarnes,2016-09-23 09:45:22
570,2016-09-02 18:23:19,"There's a pull request waiting. I think it's odd that such a popular library does not support Swift 2.3. If I can be of any use, I am ready to help.
 https://github.com/SwiftyJSON/SwiftyJSON/pull/611
",charlag,2016-09-23 09:45:22
570,2016-09-08 06:31:01,"＋1
",yoxisem544,2016-09-23 09:45:22
570,2016-09-16 17:41:08,"Came here looking for this support as well.
",tsfischer,2016-09-23 09:45:22
570,2016-09-19 01:05:02,"+1
",nicopuri,2016-09-23 09:45:22
570,2016-09-19 04:43:48,"There are multiple PR's waiting right now that support `Swift 2.3`. I'm currently using this one and it builds fine: https://github.com/SwiftyJSON/SwiftyJSON/pull/611
",mitchellporter,2016-09-23 09:45:22
570,2016-09-23 09:45:22,"[Swift3 and Swift2.3 support is here](https://github.com/SwiftyJSON/SwiftyJSON/issues/647)

Closing this one to cleanup the issue list, feel free to reopen this if needed.

Cheers
",zhigang1992,2016-09-23 09:45:22
569,2016-07-20 08:35:51,"Hi, I have working version of SwiftyJSON where I have fixed minor codes to remove warnings for latest swift3 of Xcode 8.0.

It will be appreciated if you have time to check this 😄 

Thank you.
",alexiosdev,2016-09-21 17:55:35
569,2016-09-21 17:55:35,"Thank you for sending this PR.

I know you send this first, but I started merge from the top. lol

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:55:35
568,2016-07-18 06:00:51,"Apple updated some syntax in Swift3. 
`NSDecimalNumber.notANumber()` changed to `NSDecimalNumber.notA`
`NSDecimalNumber.zero()` changed to `NSDecimalNumber.zero`
",JeffGuKang,2016-07-18 06:02:35
567,2016-07-17 10:54:52,,irar2,2016-07-17 11:40:07
566,2016-07-16 22:08:33,"I've  got the following errors with swift 3 `Apple Swift version 3.0 (swiftlang-800.0.33.1 clang-800.0.31)` bundled with the Xcode Beta 2 and found the appropriate lines here:
https://github.com/SwiftyJSON/SwiftyJSON/blob/swift3/Source/SwiftyJSON.swift#L739

<S_CODE_TOKEN>
",joernroeder,2016-11-22 05:17:03
566,2016-07-22 12:18:36,"If you're still on Xcode 8b2, try [my fork](https://github.com/ratkins/SwiftyJSON). Alas, it seems updating for 8b3 is going to be a little trickier but I'll see what I can do this afternoon.
",ratkins,2016-11-22 05:17:03
566,2016-07-28 05:09:29,"any update for xcode 8 beta 3
",piyushwadhwani,2016-11-22 05:17:03
566,2016-08-01 18:52:14,"Try this:

<S_CODE_TOKEN>
",picciano,2016-11-22 05:17:03
566,2016-11-22 05:17:03,"SwiftyJSON v3 was released with full support for Swift 3. Let me know if you need me to reopen this, thanks!",ldiqual,2016-11-22 05:17:03
565,2016-07-15 16:50:16,"- 'notANumber' has been renamed to 'notA'
- NSDecimalNumber.zero() : ""Cannot call value of non-function type 'NSDecimalNumber'""
",alpennec,2016-09-21 17:56:25
565,2016-09-21 17:56:25,"Thank you for sending this PR.

This is part of the change for swift3 support, which is now on master.

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:56:25
564,2016-07-15 12:26:24,"Changes for Xcode 8 Beta 2.
",zaubara,2016-09-12 23:25:00
563,2016-07-15 07:19:00,"Fixed Issue Number #562 

change NSDecimalNumber to NSNumberFormatter.
",Handlake,2016-07-15 07:24:30
562,2016-07-15 07:14:38,"<S_CODE_TOKEN>

This code has a floating problem. Such as location values.

If type is String. and value is ""127.02060440005249""
return decimal is 127.02060440005246

becuase NSDecimalNumber is fixed precision rather than arbitrary precision.
",Handlake,
562,2016-11-17 08:11:27,"@Handlake I see that you create a PR and then closed it. Is this issue fixed? Would you like to submit your code again and describe your changes in more details? Thank you
",ldiqual,
562,2016-11-22 05:17:31,@Handlake Bump,ldiqual,
561,2016-07-14 22:31:03,"Hello,
I am not able to build the SwiftyJSON framework using cocapods with Xcode 8 b2 / Swift 3.
I use the ""swift3"" branch. The error that is coming up is ""**Module file's minimum deployment target is ios 10.0**"".
I don't have any clue how to move forward. Can someone help?
",manovagyanik1,2016-11-17 08:09:37
561,2016-07-20 21:27:19,"+1
",ryangittings,2016-11-17 08:09:37
561,2016-07-26 17:26:17,"+1
",alexanderattar,2016-11-17 08:09:37
561,2016-07-26 18:08:02,"+1
",mlorenz92,2016-11-17 08:09:37
561,2016-07-30 00:30:51,"+1
",ahayder,2016-11-17 08:09:37
561,2016-08-25 15:36:12,"+1
",valheru7,2016-11-17 08:09:37
561,2016-09-02 07:37:32,"Carthage use this fork https://github.com/eggswift/SwiftyJSON
",eggswift,2016-11-17 08:09:37
561,2016-09-22 05:19:09,"Go to project settings ->go to the General Tab -> Select Deployment option -> Select Deplyoment Target 10.0.

this will resolved your issue.
",shivajitanpure,2016-11-17 08:09:37
561,2016-10-21 08:20:12,"@manovagyanik1 did you solve this? I am having the same issues for my custom libs...
",Sajjon,2016-11-17 08:09:37
561,2016-11-17 08:09:37,"SwiftyJSON is now swift3 compatible, closing this.
",ldiqual,2016-11-17 08:09:37
560,2016-07-14 19:27:08,"Hello,
I am not able to build the SwiftyJSON framework using Carthage with Xcode 8 b2 / Swift 3.
I use the ""swift3"" branch. Find below the error message logged in the terminal.

<S_CODE_TOKEN>

<img width=""1024"" alt=""screenshot 2016-07-14 21 25 36"" src=""https://cloud.githubusercontent.com/assets/2082662/16852755/a6d1944e-4a09-11e6-9a64-0253c9a50c39.png"">

Any idea how to get a correct compilation?
Thanks,
Axel
",alpennec,2016-11-17 08:08:52
560,2016-07-21 09:51:23,"@alpennec I've got same problem to for several day. Turns out we need to change xCode default from xcode 7 to xcode 8beta. Try this in terminal

`sudo xcode-select -s ~/Desktop/Xcode-beta-3.app` (your xcode beta.app position)
",aldocyanlabs,2016-11-17 08:08:52
560,2016-07-21 12:46:12,"I already changed the xcode version to use. I have the problem with the beta version. Are you able to build the framework using Carthage and the latest beta version?
",alpennec,2016-11-17 08:08:52
560,2016-07-22 04:32:52,"I could build the framework but I just realise when I run the app I got this error

  Referenced from: /Users/cyablabsdesign/Library/Developer/CoreSimulator/Devices/96F280A4-E724-47FE-AF38-BC8AD0C5FAC8/data/Containers/Bundle/Application/2F9AEC5B-332F-4B7A-B2A5-64CCF6A815D7/AldoContact.app/AldoContact
  Reason: image not found

So I right now I'm using the latest cocoapods prerelease and it works fine.
",aldocyanlabs,2016-11-17 08:08:52
560,2016-08-22 13:29:39,"@aldocyanlabs I have exactly the same problem. I can build the framework, but get also an error when the app is running and references something from the framework. Is there any fix out there? 
",thomaspaulmann,2016-11-17 08:08:52
560,2016-09-12 14:10:46,"@aldocyanlabs  I have switched the xcode 8 as default version. Still, I getting the same error as @alpennec  mentioned. I used Carthage to set dependency. Is there any fix for this issue ?
",chetandobariya,2016-11-17 08:08:52
560,2016-09-16 04:05:02,"@chetandobariya @thomaspaulmann I know its not a solution but I ditched carthage and using cocoapods, it works fine with cocoapods
",aldocyanlabs,2016-11-17 08:08:52
560,2016-09-16 06:05:36,"@aldocyanlabs better than nothing :-) I'll give it a try
",thomaspaulmann,2016-11-17 08:08:52
560,2016-09-16 07:06:40," @thomaspaulmann  @aldocyanlabs . I have fixed this issue with carthage, I have used github ""acegreen/SwiftyJSON"" ""swift3""  . And its works fine :)
",chetandobariya,2016-11-17 08:08:52
560,2016-09-16 07:11:53,"@chetandobariya that's even better!
",thomaspaulmann,2016-11-17 08:08:52
560,2016-11-17 08:08:52,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 08:08:52
559,2016-07-13 15:14:08,"Is there a possible way to use Regular Expressions in the Key ? E.g. (result[""key*""]) will return all the values in the json that has a key starts with keyXXX like key1, key2 and key3,.

Thank you for you work
",ish3lan,2016-11-17 08:08:12
559,2016-10-03 21:18:39,"Not directly, but you could potentially use  and filter that collection of keys to

<S_CODE_TOKEN>
",HT154,2016-11-17 08:08:12
559,2016-11-17 08:08:12,"Seems that @HT154 's solution is a viable one and it's probably not the responsibility of SwiftyJSON as a library to provide this kind a advanced key filtering, so I'm gonna go ahead and close this. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 08:08:12
558,2016-07-11 12:00:54,"Using the swift3 branch and Xcode beta 2 I get two buildtime errors (see screenshot).

<img width=""956"" alt=""screen shot 2016-07-11 at 13 56 24"" src=""https://cloud.githubusercontent.com/assets/16560001/16729883/a9978cf2-476f-11e6-89d4-a95a675fffbc.png"">
",pvroosendaal,2016-11-17 08:06:59
558,2016-07-11 19:36:52,"Try `NSDecimalNumber.notA` and `NSDecimalNumber.zero`
",slammer8,2016-11-17 08:06:59
558,2016-07-12 10:42:47,"@slammer8 Thanks, but I know the alternative. It needs to be fixed in the swiftyjson pod. I now also see a couple of pull requests with these fixes, so I'll just wait for it.
",pvroosendaal,2016-11-17 08:06:59
558,2016-11-17 08:06:59,"Fixed in the final swift3 release, thanks for reporting!
",ldiqual,2016-11-17 08:06:59
557,2016-07-10 05:03:06,"Hello

I got the return value from websocket, however I found it is not standard JSON format string, could you tell me how to parse this string below:

[""[{\""chrome_content\"":\""Jae H. Kim1233 sent you a new session message.\"",\""chrome_icon\"":\""http://14e9c4e69ca35cfb6c4c-aaf3b05f5033b13883b8f6e21438352c.r88.cf1.rackcdn.com/T010671456_Avatar_3.jpg\"",\""chrome_link\"":\""https://xwww.italki.com/lesson/session/2734345666\"",\""type\"":\""1998\"",\""v\"":\""10\""}]""]
",VictorWang,2016-11-17 08:06:20
557,2016-07-14 15:11:45,"This is no issue that belongs here on GitHub. Try asking a question on StackOverflow.
",knothed,2016-11-17 08:06:20
557,2016-11-17 08:06:20,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 08:06:20
556,2016-07-07 14:23:04,"Is there a way to get a minified (no line breaks and white space) string from `.rawString()`?
",LucidityDesign,2016-07-07 14:37:12
556,2016-07-07 14:37:12,"Probably this is the most efficient method

<S_CODE_TOKEN>
",LucidityDesign,2016-07-07 14:37:12
555,2016-07-06 16:07:28,,ratkins,2016-09-21 17:56:38
555,2016-07-07 10:35:26,"Seems to have failed because Travis isn't running Beta 2 yet?
",ratkins,2016-09-21 17:56:38
555,2016-09-21 17:56:38,"Thank you for sending this PR.

I know you send this first, but I started merge from the top. lol

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:56:38
554,2016-07-06 14:39:02,,stupergenius,2016-09-21 17:56:57
554,2016-07-06 15:18:57,"Compile fails because Travis currently doesn't have an image for Xcode 8 beta 2.
",stupergenius,2016-09-21 17:56:57
554,2016-07-08 11:56:32,"@lingoer, can you please merge one of those PR ? Thanks !
",ThibaultVlacich,2016-09-21 17:56:57
554,2016-09-21 17:56:57,"Thank you for sending this PR.

I know you send this first, but I started merge from the top. lol

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:56:57
553,2016-07-06 12:39:04,"Manifest file should not be empty in Swift 3.0
",EyeOfTheStorm,2016-09-21 17:58:14
553,2016-09-21 17:58:17,"hah hah, finally, good catch
",zhigang1992,2016-09-21 17:58:14
552,2016-07-06 11:20:41,"Empty manifest is no longer supported by Swift 3.0
",EyeOfTheStorm,2016-07-06 11:23:58
551,2016-07-06 05:47:53,,kiancheong,2016-09-21 17:58:37
551,2016-09-21 17:58:37,"Thank you for sending this PR.

I know you send this first, but I started merge from the top. lol

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:58:37
550,2016-07-05 22:07:53,"resolving this for anyone else that uses the new beta release of Xcode8
",ryan-luas,2016-09-21 17:59:17
550,2016-09-21 17:59:17,"Thank you for sending this PR.

We have landing swift3 support in master branch, which includes this change.

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:59:17
549,2016-07-05 22:04:58,,juliensagot,2016-09-21 17:59:27
549,2016-09-21 17:59:27,"Thank you for sending this PR.

I know you send this first, but I started merge from the top. lol

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:59:27
548,2016-07-04 12:12:41,"Fixed broken tests and updated to work on swift 3 and on Linux
",NikitaSullivan,2016-07-04 12:13:20
547,2016-07-03 22:11:36,,soules999,2016-11-17 08:06:12
547,2016-11-17 08:06:12,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 08:06:12
546,2016-07-03 11:03:01,"This code produces `unknown` json:

<S_CODE_TOKEN>

However this works perfectly:

<S_CODE_TOKEN>

What can it be?

Example json:

<S_CODE_TOKEN>
",s1ddok,2016-11-17 08:05:13
546,2016-07-03 11:04:53,"However this tip solves the problem:
https://github.com/SwiftyJSON/SwiftyJSON/issues/522
",s1ddok,2016-11-17 08:05:13
546,2016-11-17 08:05:13,"Closing as duplicate of #522. https://github.com/SwiftyJSON/SwiftyJSON/pull/664 aims to fix this confusion.
",ldiqual,2016-11-17 08:05:13
545,2016-06-30 11:14:17,"我突然发现数据JSON之后的顺序和API返回的顺序不一样。
API返回的数据：

<S_CODE_TOKEN>

但是经过JSON之后，顺序改变了：

<S_CODE_TOKEN>

以上的数据是为了描述问题，并非真实数据. 但是问题期望得到重视
",dengdaiderizi521,2016-07-06 03:13:25
545,2016-07-06 02:53:31,"字典是无序的，你这个问题根本不是问题啊
",JohnTsaii,2016-07-06 03:13:25
545,2016-07-06 03:13:17,"@JohnTsaii  的确，经过测试发现字典的确是无序的。
",dengdaiderizi521,2016-07-06 03:13:25
544,2016-06-30 11:10:37,"今天发现JSON之后数据的顺序和API返回的顺序不一样。
API数据返回：
",dengdaiderizi521,2016-11-17 08:04:03
544,2016-11-17 08:04:03,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 08:04:03
543,2016-06-29 06:34:55,"hi SwiftyJson Team,

I don't know will it be possible or not, I would like to do some kind of extension so that I get a error is the JSON is not parsed correctly, for eg:

// Inside Alamofire Response 
let json = JSON(response.result.value!)
let commonEntity = json[""CommonEntity""] //just want an alert or some kind of response if CommonEntity is not present.
//

Rather than doing a if else, it would be great If we can do something automatically in debug mode.

Thanks a lot
",vineethvijayan,2016-11-17 08:04:16
543,2016-06-29 09:47:06,"I did a simple extension like below and it works

<S_CODE_TOKEN>

Please do comment if its the right way to do it?
",vineethvijayan,2016-11-17 08:04:16
543,2016-07-01 02:56:18,"+1!
",jarrydfillmore,2016-11-17 08:04:16
543,2016-11-17 08:03:54,"@vineethvijayan You can use `json[""key""].exists()` to check whether a key exists, but if your goal is to print something every time you encounter an invalid key, I don't think it's the responsibility of SwiftyJSON as a library to print anything. The extension above seems like the most appropriate solution for your case and it seems to be work for your case so I'm going to close this. Let me know if you'd like me to reopen it.
",ldiqual,2016-11-17 08:04:16
543,2016-11-17 09:08:43,"Thanks @ldiqual I created a extension for my on purpose

<S_CODE_TOKEN>
",vinbhai4u,2016-11-17 08:04:16
542,2016-06-27 14:01:47,"Two issues - please help adjust for Swift3:
extension JSON: Swift.CollectionType, Swift.SequenceType, Swift.Indexable {

> /Pods/SwiftyJSON/Source/SwiftyJSON.swift:198:1: error: type 'JSON' does not conform to protocol 'IndexableBase' extension JSON: Swift.CollectionType, Swift.SequenceType, Swift.Indexable {

public func rawString(encoding: UInt = NSUTF8StringEncoding, options opt: JSONSerialization.WritingOptions = .prettyPrinted) -> String? {

> /Pods/SwiftyJSON/Source/SwiftyJSON.swift:646:41: error: default argument value of type 'String.Encoding' cannot be converted to type 'UInt'
",bloqlist,2016-11-17 08:00:56
542,2016-06-27 14:31:08,"Found first solution - IndexableBase was missing a function to complete conformation - no idea if response is correct but compiles now:
  public func index(after i: JSON.Index) -> JSON.Index {
        return JSON.Index();
    }
",bloqlist,2016-11-17 08:00:56
542,2016-07-10 15:17:52,"Are you using Swift3 branch? It compiles
",AlexMcArdle,2016-11-17 08:00:56
542,2016-07-10 18:59:18,"Installed via cocoapods
",bloqlist,2016-11-17 08:00:56
542,2016-09-16 05:33:49,"Try this:
`pod 'SwiftyJSON', :git => 'https://github.com/SwiftyJSON/SwiftyJSON.git', branch: 'swift3'`
",andertsk,2016-11-17 08:00:56
542,2016-09-17 21:04:26,"I tryed the swift3 branch but is not working, I still have compiling errors
",3zcurdia,2016-11-17 08:00:56
542,2016-09-18 06:00:45,"Yeah the branch works via pods but had to manually fix a few issues

On Saturday, September 17, 2016, Luis Ezcurdia notifications@github.com
wrote:

> I tryed the swift3 branch but is not working, I still have compiling errors
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> https://github.com/SwiftyJSON/SwiftyJSON/issues/542#issuecomment-247807962,
> or mute the thread
> https://github.com/notifications/unsubscribe-auth/ATO_Va2MxFG47UNWcWOdbbOqui3i_s5Lks5qrFXugaJpZM4I_H8A
> .
",bloqlist,2016-11-17 08:00:56
542,2016-11-17 08:00:56,"@bloqlist Seems that the issue is fixed for you so I'm gonna go ahead and close this. Thank you!
",ldiqual,2016-11-17 08:00:56
541,2016-06-25 09:48:18,"Update Travis for Xcode 8
",lucasderraugh,2016-06-27 02:04:55
541,2016-06-27 02:04:50,"Good job!
",lingoer,2016-06-27 02:04:55
541,2016-06-28 07:09:33,"I'm not sure why it fails the CI checks, but it seems to be something with Xcode 8 code signing.
",lucasderraugh,2016-06-27 02:04:55
540,2016-06-24 21:19:12,"Any workaround when trying out XCode8, Swift3.0 and iOS10 Beta?  When you open up a file it says that the pod must be signed?

Signing for SwiftyJSON requires a development team. Select a development team in the Target Editor.
Code signing is required for product type 'Framework' in SDK 'iOS 10.0'
",justdan0227,2016-11-17 08:00:05
540,2016-07-08 18:35:27,"Just sign with your own Team @justdan0227.

It's up to CocoaPods to fix this issue.
",Tulleb,2016-11-17 08:00:05
540,2016-11-17 08:00:05,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 08:00:05
539,2016-06-24 11:46:47,"… case
",sportlabsMike,2016-09-21 17:59:55
539,2016-09-21 17:59:55,"Thank you for sending this PR.

We have landing swift3 support in master branch, which includes this change.

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 17:59:55
538,2016-06-23 08:01:57,,jobinsjohn,2016-09-21 18:00:16
538,2016-09-21 18:00:18,"👍 
",zhigang1992,2016-09-21 18:00:16
537,2016-06-22 10:11:13,,arthurhammer,2016-09-10 16:26:42
537,2016-09-10 16:26:42,"Closing.
",arthurhammer,2016-09-10 16:26:42
536,2016-06-21 09:02:20,"I have a little problem with PushRow. I retrieves my values via JSON but I can't put them in the PushRow :/

My values :

<S_CODE_TOKEN>

1/ Declare a struct to hold the id and value :

<S_CODE_TOKEN>

2/ Make it conform Equatable

<S_CODE_TOKEN>

3/ Make MyStruct conforms CustomStringConvertible

<S_CODE_TOKEN>

And now, I have a problem to convert the json listValue response into an array of MyStruct.. 
(Cannot assign value of type '[String : JSON]' to type '[MyStruct]') 
How to do that?

In my code, I use [Eureka](https://github.com/xmartlabs/Eureka)

<S_CODE_TOKEN>

My listValue is a JSON (with SwiftyJSON)

Do you have an idea to help me ?
",ins0u,2016-06-24 13:05:50
536,2016-06-24 13:05:50,"Solution : 

<S_CODE_TOKEN>

<S_CODE_TOKEN>
",ins0u,2016-06-24 13:05:50
535,2016-06-18 05:13:22,,madsonic,2016-09-21 18:01:05
535,2016-09-21 18:01:05,"Nice catch, can you help solve the conflict since we have landed swift3 support. 

Cheers
",zhigang1992,2016-09-21 18:01:05
534,2016-06-17 14:42:18,"seems to be, that the Swift Package Manager has updated the kind of defining Versions.
But on ""swift build -v"" we have still a issue:

/Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin/swiftc --driver-mode=swift -I /Library/Developer/Toolchains/swift-latest.xctoolchain/usr/lib/swift/pm -L /Library/Developer/Toolchains/swift-latest.xctoolchain/usr/lib/swift/pm -lPackageDescription -target x86_64-apple-macosx10.10 /Users/jan/Development/iOS/Global\ Nights/Package.swift -fileno 4
/Users/jan/Development/iOS/Global Nights/Package.swift:15:17: error: incorrect argument labels in call (have 'url:tag:versions:', expected 'url:majorVersion:minor:')
        .Package(url: ""https://github.com/SwiftyJSON/SwiftyJSON.git"", tag: ""2.3.3"", versions: Version(1,0,0)..<Version(2,3,3)),
                ^                                                     ~~~           ~~~~~~~~
                                                                      majorVersion  minor
error: exit(1): /Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin/swiftc --driver-mode=swift -I /Library/Developer/Toolchains/swift-latest.xctoolchain/usr/lib/swift/pm -L /Library/Developer/Toolchains/swift-latest.xctoolchain/usr/lib/swift/pm -lPackageDescription -target x86_64-apple-macosx10.10 /Users/jan/Development/iOS/Global\ Nights/Package.swift -fileno 4
",exocode,2016-09-21 18:01:49
534,2016-09-21 18:01:53,"Good catch. 👍 
",zhigang1992,2016-09-21 18:01:49
533,2016-06-17 03:52:32,"<S_CODE_TOKEN>

`json.arrayObject = array`提示不能将json数组格式赋值给AnyObject数组格式。
希望能实现此做法。
另外还想问有什么可以代替这种做法吗？将json格式的集合，赋值给一个json的数组里面
",3895177,2016-11-17 07:59:56
533,2016-11-17 07:59:56,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:59:56
532,2016-06-16 10:00:01,"Set ""Use Legacy Swift Language Version""
",denissezavala,2016-09-21 18:02:33
532,2016-09-21 18:02:33,"Thank you for sending this PR.

I know you send this first, but I started merge from the top. lol

Anyway, we have landing swift3 support in master branch. 

Feel free to give it a go.

🍻 
",zhigang1992,2016-09-21 18:02:33
531,2016-06-14 22:35:36,"#347 is somewhat related to this issue but it seems like it was closed without conclusion. My issue is the following:

I have a macbook pro at home and imac at the office both has El Captain and XCode 7.3.1 installed.

Playground works as usual at home computer but I'm getting ""No such module SwiftyJSON"" error on office computer.

Screenshot from at home mac: http://d.pr/i/17zJ2/4Asi62da (working as expected)

I know this is a general issue not specific to SwiftyJSON but I'm wondering if any of you guys had the same issue.

Thanks
",cihadturhan,2016-06-19 00:22:37
531,2016-06-15 06:09:49,"@cihadturhan may be you are looking for [this](http://stackoverflow.com/a/35818746/1107063).
",animeshp,2016-06-19 00:22:37
531,2016-06-15 09:28:12,"@animeshp that's cool. I'll definitely try this. 
However, I want to know the real source of the problem 

Edit: it doesn't work either :(
",cihadturhan,2016-06-19 00:22:37
531,2016-06-17 16:36:39,"@cihadturhan I tried it yesterday and it worked for me what stage did it fail for you?
",animeshp,2016-06-19 00:22:37
531,2016-06-19 00:22:37,"I found the solution. It's because of pod version. Thanks
",cihadturhan,2016-06-19 00:22:37
530,2016-06-14 14:29:14,"The default migration tool to Swift 3.0 in Xcode 8 beta leaves a few errors in SwiftyJSON, most notably the use of `DictionaryIndex`. It'd be nice to have an updated SwiftyJSON source available for Swift 3.0.

Thanks!
",hoke-t,2016-06-14 23:25:45
530,2016-06-14 23:25:45,"See the code in swift3 branch
",lingoer,2016-06-14 23:25:45
530,2016-07-19 13:51:49,"Thanks for that, @lingoer. Just wanted to give you a heads up for that branch's code: In ""SwiftyJSON.swift"", for lines no. 739 and 740, there is a syntax error. Make sure you change that. Many thanks!
",simplealina,2016-06-14 23:25:45
529,2016-06-12 11:15:26,,samirae,2016-06-12 11:20:38
528,2016-06-09 19:34:14,"Closes SwiftyJSON/SwiftyJSON#527
",gkaimakas,2016-10-07 02:29:09
527,2016-06-09 19:24:45,"Would it be out of the scope of the project to add a protocol to init an object with a JSON?

In my projects I use something like the following to have my classes of structs conform to it

<S_CODE_TOKEN>

A possible use of the protocol would be when dealing with complex responses from the server e.g

<S_CODE_TOKEN>

Instead of creating a `TitleResponse` struct with the following implementation

<S_CODE_TOKEN>

we could create two completely separate structs
- `Response<T>`
- `Title`

that conform to the `JSONSerializable` protocol. The implementation would be something like the following the:

<S_CODE_TOKEN>

<S_CODE_TOKEN>

and when needed one could simply create a complex Response object simply by calling the initializer, e.g:

<S_CODE_TOKEN>

P.S: This isn't a big deal, but I think it would be convenient to all developers who use the library
",gkaimakas,2016-09-21 19:37:15
527,2016-09-21 18:21:28,"Nice example,

Thanks for proposing this.

So from my understanding,

The problem here, is `TitleResponse` and maybe `OtherResponse` not reusing code from each other, right?

The solution is to have a generate `Response<T>`, and T in this particular case means something that can be converted from JSON.

IMHO, from the aspect of abstracting. Your abstraction is perfect. Having a `JSONSerializable` and constrained type `T`.

But if we were abstracting it all the way to the library level.
1. It might cause mental overhead for other people that doesn't know what its for.
2. In order to move it to the library, we have to make it very generic. like why is the init failable, if it's failable then should we do error reporting, or at least being able to. In the end, it might be to generic to be used in this particular use case.

Anyway, let me know what do you think. 😄 
",zhigang1992,2016-09-21 19:37:15
527,2016-09-21 18:46:08,"1. I agree that it might cause some mental overhead for other people. A small explanation would work I think.
2. Consider this case:

You expect from the server a JSON response that must absolutely contain a field called `id` that is an integer, and the response might have another field, `title`, that is optional.

Your object would be the following then

<S_CODE_TOKEN>

If for some reason the server does not send the `id` field your code will continue to work and you can probably deduce that there was a mandatory field that was missing from the response to begin with. 

Someone could argue that having the init `throw` would be better suited and more generic but I think that it would complicate the code a lot. For my use cases it was sufficient for the init to be failable
",gkaimakas,2016-09-21 19:37:15
527,2016-09-21 19:19:46,"hah hah,

That's exactly my point.
Which is for something to be in the library, it will have a lot more to consider.
Like `failable` init or `throw`, `failable` works in your case, but `throw` can do error reporting and tell you exactly what went wrong. Or even something like [Argo](https://github.com/thoughtbot/Argo).

Maybe I wasn't being clear enough. 😄 

What I'm trying to say is, `JSONSerializable` is a perfect abstraction on `response<T>` level which close to the final concrete product: `response<Title>` or `response<Other>`.
But if we move it into the repo, then the level might be too high. For the two reason I listed.

Apologize if I sound really picky or unreasonable.

Let me know what you think. 😄 
",zhigang1992,2016-09-21 19:37:15
527,2016-09-21 19:37:15,"I see your point. I will take a look at it.

If I have anything new I will post a new PR
",gkaimakas,2016-09-21 19:37:15
526,2016-06-08 09:49:16,"实例变量赋值

<S_CODE_TOKEN>

<S_CODE_TOKEN>

log

<S_CODE_TOKEN>

预期：[""1"": 1, ""2"": 2]，实际： [:]
作为实例变量，赋值时，rawDictionary 总是重新赋值 
是我对 SwiftyJSON 的理解和使用有错误吗？ 
期待您的回复。

3x
",QiuZhiFei,2016-11-17 07:59:16
526,2016-06-12 04:01:36,"#412 同样的问题，规避的方法是变量定义换一种方式
",yikuo123,2016-11-17 07:59:16
526,2016-11-17 07:59:16,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:59:16
526,2016-11-25 01:52:23,"self.json[""1""] = ""1""

->

self.json![""1""] = ""1""

Fixed, 3x @ldiqual ",QiuZhiFei,2016-11-17 07:59:16
525,2016-06-08 04:05:48,"I added the SwiftyJSON following your instructions for CocoaPod and I get this error:
ld: warning: directory not found for option '-F/Users/dhf/Library/Developer/Xcode/DerivedData/RestJson-ejsakfpnasoeeheluuyzoqkzscrp/Build/Products/Debug-iphonesimulator/SwiftyJSON'
ld: framework not found SwiftyJSON

So I started over and used to manual way which I have used before and get the same error when building.
",dhf0820,2016-11-17 07:59:08
525,2016-11-17 07:59:08,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:59:08
524,2016-06-08 01:54:59,"pod 'swiftJSON' 

The abnormal errors
",yimouleng,2016-06-08 01:59:49
524,2016-06-08 01:57:31,"Settled, I'm sorry
",yimouleng,2016-06-08 01:59:49
523,2016-06-01 20:19:56,"I have a JSON array (say, foo) generated by SwiftyJSON and I try to remove its element like this:

`foo[1] = nil`
After execution, foo becomes

`[alpha, NULL, bravo, charlie]`

How do I actually remove the element from the JSON object at a specific index?
",rcobelli,2016-06-07 03:45:53
523,2016-06-07 03:44:34,"Try to use ""removeAtIndex(1)"".

You can find a similar question at: http://stackoverflow.com/questions/34836400/how-to-remove-a-swiftyjson-element

Before open a issue here you can check at stackoverflow, you will find a lots of questions there. Maybe it is a more appropriate place to  ask questions like this.

Cheers.
",marconemagnus,2016-06-07 03:45:53
522,2016-06-01 07:04:21,"Hello, i have the following code:
![2016-06-01 14 01 32](https://cloud.githubusercontent.com/assets/705208/15700954/0d424756-27f9-11e6-8357-fd762f10bb73.png)

But i get the following output `new json = unknown` instead of normal json output.
",andertsk,2016-11-17 07:58:51
522,2016-06-07 04:12:54,"Hi @andertsk, try to use:

<S_CODE_TOKEN>

instead of:

<S_CODE_TOKEN>

Cheers.
",marconemagnus,2016-11-17 07:58:51
522,2016-07-03 11:04:39,"This works, thanks!
",s1ddok,2016-11-17 07:58:51
522,2016-11-17 07:58:51,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:58:51
521,2016-05-28 18:27:33,"This resulted from answering a Stack Overflow question and it worked extremely well. I first tried it with a breadth-first search but it was far slower. To see the question, click [here](http://stackoverflow.com/q/37368939/6361557).
",ahaubenstock,
521,2016-11-16 16:38:45,"Sorry for the late reply.

Can you maybe add a bit of testing to it and let's merge this PR. 😄 
",zhigang1992,
520,2016-05-27 15:58:49,"when i import swiftyJSON, there is a problem that can't find it
",miciny,2016-05-27 15:59:01
520,2016-05-27 15:59:01,"it's ok now
",miciny,2016-05-27 15:59:01
519,2016-05-27 12:06:29,"I'm struggling with the following thing and still couldn't make it work. I want to have the following JSON structure:

<S_CODE_TOKEN>

which will be turned to a string by using the JSON.rawString function. 

I have tried to create the following:

<S_CODE_TOKEN>

and then JSON(structure) but this is not allowed.

I tried 

<S_CODE_TOKEN>

but then i received an error that a bridge cannot be created between swift class and ObjC class

Any ideas are much appreciated
",ddimitrov90,2016-11-17 07:58:32
519,2016-08-02 19:56:48,"@ddimitrov90 Just do this:

<S_CODE_TOKEN>
",simonnarang,2016-11-17 07:58:32
519,2016-11-17 07:58:32,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:58:32
518,2016-05-27 02:32:38,"The documentation talks about using the function .isExists() for checking if the value is there. I however found that .exists() is the function that does this. 
",rutgeur,2016-11-17 07:58:14
518,2016-11-17 07:58:14,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:58:14
517,2016-05-26 06:42:43,"For example:

<S_CODE_TOKEN>

is a json I am receiving from the server. How do I check for the ""numFound"" value? Like if it is 1, i should push the user to the main screen else ask him to input correct username/password. Help please?? I am using Alamofire. 
",Dershowitz011,2016-05-26 11:17:19
517,2016-05-26 06:47:11,"It's documented very clearly here https://github.com/SwiftyJSON/SwiftyJSON
",namanhams,2016-05-26 11:17:19
517,2016-05-26 06:51:32,"@namanhams I didn't get that. It's saying Page not found.
",Dershowitz011,2016-05-26 11:17:19
517,2016-05-26 06:54:53,"I updated the link. It's just the github link of this library. 
",namanhams,2016-05-26 11:17:19
517,2016-05-26 06:56:26,"I'm unable to use it. Help me with this please? Total newbie here. :(
",Dershowitz011,2016-05-26 11:17:19
517,2016-05-26 07:10:56,"What's the error you got ? The documentation says very clearly on how you can retrieve the value of a key in the json response. 
",namanhams,2016-05-26 11:17:19
517,2016-05-26 07:11:40,"No I am not getting any error. It is not showing me anything in the console at all. 

<S_CODE_TOKEN>

Am I doing it right? @namanhams 
",Dershowitz011,2016-05-26 11:17:19
517,2016-05-26 10:36:45,"1. You are trying to access an INT with .string
2. json32[0] might be wrong.
3. pls post the real json object, not the print from xcode 
",alexdd55,2016-05-26 11:17:19
517,2016-05-26 10:38:27,"Hey @alexdd55 , how do i do that? How to get the real json object?
",Dershowitz011,2016-05-26 11:17:19
517,2016-05-26 10:46:47,"From the URL you call.
This should be some json response. This response shows the real structure of the response object and will be easier to read then the print().
I guess that the Array you try to access is an object...?

I am on an iPad so, i can't check that myself right now 
",alexdd55,2016-05-26 11:17:19
517,2016-05-26 10:47:53,"I didnt understand @alexdd55 . Could you please tell me with the code I should write? :(
",Dershowitz011,2016-05-26 11:17:19
517,2016-05-26 11:02:07,"you are doing a GET on that URL. so you can easily replace you email and password with the actual data and call this URL in your browser. The browser should show you the JSON response.
take you response, copy&paste it into jsonlint.com to get a proper format and post it here.
",alexdd55,2016-05-26 11:17:19
517,2016-05-26 11:03:10,"Please wait. I'll do it. Here you go @alexdd55

<S_CODE_TOKEN>
",Dershowitz011,2016-05-26 11:17:19
517,2016-05-26 11:11:50,"ok. there you go.

you should be able to access data with:
`json32[""response""][""numFound""].int`
",alexdd55,2016-05-26 11:17:19
517,2016-05-26 11:12:24,"I'll check! Please wait. Thank you so muchh!! :)
",Dershowitz011,2016-05-26 11:17:19
517,2016-05-26 11:17:19,"It worked!! Thanks a bunch!! Thank you so so so so much @alexdd55 !!!! :) :) :) 
",Dershowitz011,2016-05-26 11:17:19
516,2016-05-25 22:11:27,"I'm parsing the below JSON: 

{
    ""_name"": ""HELENA"",
    ""description"": ""his wife, twenty-seven years old"",
    ""voice"": ""4""
}

The above JSON segment is then => jsonRole

In the debugger I'm getting the following output:

(lldb) exp jsonRole[""voice""].int
(Int?) $R3 = nil
(lldb) exp jsonRole[""voice""].intValue
(Int) $R4 = 4

So .intValue is returning correctly, but .int is returning nil regardless of value.
",willchen,2016-11-17 07:56:38
516,2016-08-30 06:43:13,"I seems to be the correct behaviour. Since ""4"" is a string, .intValue gets the value and it is able to typecast to int, therefore you get the result you want. In the other hand, .int tries to get an int value, which will return nil since it's actually a string ""4"" and not 4.
",lmoreton,2016-11-17 07:56:38
516,2016-08-30 19:12:43,"Gotcha.
",willchen,2016-11-17 07:56:38
516,2016-11-17 07:56:38,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:56:38
515,2016-05-25 09:05:09,,cacorka91,2016-06-08 09:24:36
514,2016-05-23 12:55:48,"ios 9.3.2
xcode 7.3.1

self.myPlot.offsetDB = CGFloat(getJSON.loadMyPlotConfig(""offsetDB"").floatValue)

returns error

VCplot2d.swift:156:54: Value of type 'String' has no member 'floatValue'

Did I miss something in the changelog??

Thanks
",gaming-hacker,2016-05-24 00:50:50
514,2016-05-24 00:50:50,"This seemed to fix the issue

//MARK:== Extensions ==
extension String
{
  var floatValue: Float
    {
      return (self as NSString).floatValue
  }
}
",gaming-hacker,2016-05-24 00:50:50
513,2016-05-23 03:34:36,"in code:  
 public subscript (position: JSON.Index) -> JSON.Generator.Element {
        switch self.type {
        case .Array:
            return (String(position.arrayIndex), JSON(self.rawArray[position.arrayIndex!]))
        case .Dictionary:
            let (key, value) = self.rawDictionary[position.dictionaryIndex!]
            return (key, JSON(value))
        default:
            return ("""", JSON.null)
        }
    }
String(position.arrayIndex)  ""Optional(0)"" not change : let index = Int(index)//nil
 String(position.arrayIndex!) Optional(0) can change : let index = Int(index)// 0

please edit String(position.arrayIndex)  ->  String(position.arrayIndex!)
",danwey,2016-11-17 07:56:24
513,2016-11-17 07:56:24,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:56:24
512,2016-05-23 00:01:07,"To save you some time when you decide to use SwiftyJSON
[JSONExport](https://github.com/Ahmed-Ali/JSONExport) now supports exporting model classes that uses SwiftyJSON to save you the time you spend writing it by hand :)
",Ahmed-Ali,2016-11-17 07:56:15
512,2016-11-17 07:56:15,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:56:15
511,2016-05-19 08:50:53,"Hi,

Thanks for the lib. However, after cloning the project, I cannot get it work in my XCode (XCode 7.3.1, Swift 2.2). Do you have this project updated in Swift 2.2?

Thanks
",quanguyen,2016-11-17 07:55:59
511,2016-05-21 01:32:14,"What isn't working for you?
",edasque,2016-11-17 07:55:59
511,2016-05-21 02:13:36,"Hi adasque,

I just cloned a new version around 15 mins ago and it compiles just fine! I recognized that this clone is 79KB while the previous clone (that I reported XCode could not compile) is 64KB. Is there something that you just supported or modified to work in Swift 2.2?
",quanguyen,2016-11-17 07:55:59
511,2016-11-17 07:55:59,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:55:59
510,2016-05-18 07:15:26,"let a = JSON()    //ARRAY
let b = JSON()    //ARRAY
I want to
 let c = a + b 
How to do？
",danwey,2016-05-19 01:55:31
510,2016-05-19 01:55:31,"a.arrayObject?.appendContentsOf(b.arrayObject!)
",danwey,2016-05-19 01:55:31
509,2016-05-12 12:44:26,"Allow the `exists` method to handle out of bounds and wrong type errors by checking for `errorValue.code == ErrorIndexOutOfBounds` and `errorValue.code == ErrorWrongType`.

For example, when we have `let jsonForArray = JSON([[""number"":1111]])` we would expect `jsonForArray[1].exists()` and `jsonForArray[""someValue""].exists()` to return false.

I think the change here might fix the issue related to https://github.com/SwiftyJSON/SwiftyJSON/issues/498
",jamesjn,2016-09-26 06:11:10
509,2016-09-21 18:33:18,"Sweet, can you help solve the conflict here and let's ship this.

Sorry for not getting to this earlier.
",zhigang1992,2016-09-26 06:11:10
509,2016-09-22 02:12:53,"@zhigang1992 Okay, rebased
",jamesjn,2016-09-26 06:11:10
506,2016-04-28 03:14:04,"my code:
a.swift:

<S_CODE_TOKEN>

b.swift:

<S_CODE_TOKEN>

and get crash with ide.just like this:

> 0  swift                    0x000000010e6cfa68 llvm::sys::PrintStackTrace(__sFILE_) + 40
> 1  swift                    0x000000010e6cff54 SignalHandler(int) + 452
> 2  libsystem_platform.dylib 0x00007fff910605aa _sigtramp + 26
> 3  libsystem_platform.dylib 0x00007fff521ee2f8 _sigtramp + 3239632232
> 4  swift                    0x000000010db73fac swift::Lowering::SILGenFunction::emitIgnoredExpr(swift::Expr_) + 108
> 5  swift                    0x000000010db93849 swift::Lowering::SILGenFunction::visitBraceStmt(swift::BraceStmt_) + 297
> 6  swift                    0x000000010db96908 swift::ASTVisitor<swift::Lowering::SILGenFunction, void, void, void, void, void, void>::visit(swift::Stmt_) + 152
> 7  swift                    0x000000010db62dc1 swift::Lowering::SILGenFunction::emitValueConstructor(swift::ConstructorDecl_) + 5617
> 8  swift                    0x000000010db3e06a swift::Lowering::SILGenModule::emitConstructor(swift::ConstructorDecl_) + 666
> 9  swift                    0x000000010db3f8db swift::SILModule::constructSIL(swift::Module_, swift::SourceFile_, swift::Optional<unsigned int>) + 475
> 10 swift                    0x000000010db3f988 swift::performSILGeneration(swift::SourceFile&, swift::Optional<unsigned int>) + 72
> 11 swift                    0x000000010da15e18 frontend_main(llvm::ArrayRef<char const*>, char const_, void_) + 3432
> 12 swift                    0x000000010da1396d main + 1677
> 13 libdyld.dylib            0x00007fff921c75fd start + 1
",moonrailgun,2016-11-17 07:55:44
506,2016-11-17 07:55:44,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:55:44
505,2016-04-26 11:10:25,,fanpyi,2016-11-16 16:39:31
505,2016-09-21 19:21:15,"hm, what's the motivation behind this?
",zhigang1992,2016-11-16 16:39:31
505,2016-11-16 16:39:31,"Closing due to inactivity.
Feel free to reopen this if needed.
",zhigang1992,2016-11-16 16:39:31
504,2016-04-25 03:59:36,"Hello,

I implemented SwiftyJSON with Alamofire SDK. 
It works fine for me. 
But How can I convert my SwiftyJSON array to NSArray?
also I want to convert SwiftyDictionary to NSDictionary

Because we can able to save SwiftyArray in UserDefaults.

Thank you,
",Piyush08,2016-11-17 07:55:15
504,2016-04-27 19:51:57,"If what you retrieved is a valid JSON array, then you'll be able to get it as `[AnyObject]` using SwiftJSON's API.
",bre7,2016-11-17 07:55:15
504,2016-04-28 04:31:17,"yes, but ""JSON"" object is not valid for NSUserDefaults.
I passed SwiftyJSON array from one class to another.
Now, I want to set SwiftJSON array in UserDefaults but it shows me error.
",Piyush08,2016-11-17 07:55:15
504,2016-04-28 04:49:07,"Use `aSwiftyJson[""aKey""].array` ?
",bre7,2016-11-17 07:55:15
504,2016-05-03 07:40:35,"`NSUserDefaults.standardUserDefaults().setInteger(json[""result""].array[0], forKey: ""UserID"")`

I am getting error!

@bre7  check this code.
I need to get &set property in another instance variable for save into NSUSerDefaults.

How to do this?
",Piyush08,2016-11-17 07:55:15
504,2016-05-20 11:26:40,"After getting response from alamofire store response as `let finalJson = JSON(value)` iterate over all dictionary as
 `let mutableArray = NSMutableArray()`

   `for arr in finalson.array!{`
                        `mutableArray.addObject(arr.dictionaryObject!)`
                 `}`
`let array = NSArray()`
`array = mutableArray.mutableCopy()`
Here is you NSArray contain all object and use it when ever you want
",umeshjavastar,2016-11-17 07:55:15
504,2016-11-17 07:55:15,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:55:15
503,2016-04-24 10:43:29,"Hi,

so trying the build with the newest snapshot 04-12 and it doesn't compile it all due to numerous error. Sadly, I can only give you the output, because I am not that familiar with the library or Swift or compiling to fix this myself.

<S_CODE_TOKEN>

I would appreciate any help to include the library. For now I am just dropping in the SwiftJSON.swift file.
",adrianbrink,2016-11-17 07:55:34
503,2016-11-17 07:55:34,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:55:34
502,2016-04-24 09:53:23,"Hi,

In my Podfile:

pod 'SwiftyJSON', '~> 2.3'

Run pod install:

[!] Unable to find a specification for 'SwiftyJSON'.

[!] Unable to load a podspec from `SwiftyJSON.podspec`, skipping:

Pod::DSLError

Thanks for help!
",iDevelopper,2016-11-17 07:59:34
502,2016-04-24 10:40:43,"Include the path to the github repo with "":git"", like in the example in the readme
",adrianbrink,2016-11-17 07:59:34
502,2016-04-24 13:39:14,"Same error:

Pre-downloading: `SwiftyJSON` from `https://github.com/SwiftyJSON/SwiftyJSON.git`
[!] Unable to find a specification for 'SwiftyJSON'.

[!] Unable to load a podspec from `SwiftyJSON.podspec`, skipping:

Pod::DSLError
",iDevelopper,2016-11-17 07:59:34
502,2016-04-27 14:38:18,"Sorry, I don't mean to go off-topic here. But why is this? I mean, why doesn't SwiftyJSON use the cocoapods versioning stuff? All this "":git"" line does is get the latest revision from master, which makes it equivalent to just using a git-submodule. I mean, if that's the case, I don't understand why it's a pod at all.
",skydivedan,2016-11-17 07:59:34
502,2016-05-08 04:24:34,"Hey,

Has anyone found a solution to this issue yet?
",stevenjemm,2016-11-17 07:59:34
502,2016-11-17 07:59:34,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Let me know if you'd like to reopen it.
",ldiqual,2016-11-17 07:59:34
502,2016-11-17 15:29:19,"Okay but you never answered!
",iDevelopper,2016-11-17 07:59:34
501,2016-04-23 20:17:15,"Hi,

I tried installing SwiftyJSON with SPM and just copy-pasted the instructions for SPM. However it fails.

Package.swift

<S_CODE_TOKEN>

Error Message:

<S_CODE_TOKEN>

How should the Package.swift file look?

When I replace the Version.max part with just the version number, like so:

<S_CODE_TOKEN>

I get this error:

<S_CODE_TOKEN>

Any help is appreciated.
",adrianbrink,2016-11-22 05:18:38
501,2016-07-01 23:23:53,"I'm getting the same error. I believe it has to do with the Package.swift not having anything in it.
",phase,2016-11-22 05:18:38
501,2016-11-22 05:18:38,"@adrianbrink SwiftyJSON was updated with SPM support, you can find the proper instructions here: https://github.com/SwiftyJSON/SwiftyJSON#swift-package-manager. Let me know if we need to reopen this. Thanks!",ldiqual,2016-11-22 05:18:38
500,2016-04-22 01:16:58,"For 

`https://my-assets.s3-us-west-2.amazonaws.com/imagesl/49.png?AWSAccessKeyId=AKIAIK4G37TPLNXJD7AA&Expires=1461286792&Signature=SzwKiGj1iX54fQ6%2FWcKFeOsEh20%3D`, 

.URL produces an NSURL object that links to 

`https://my-assets.s3-us-west-2.amazonaws.com/imagesl/49.png?AWSAccessKeyId=AKIAIK4G37TPLNXJD7AA&Expires=1461286792&Signature=SzwKiGj1iX54fQ6%252FWcKFeOsEh20%253D`.

<S_CODE_TOKEN>
",isair,2016-11-22 05:25:30
500,2016-10-17 23:04:59,"I just ran into this same issue. I don't think SwiftyJSON should be adding percent encoding when converting the string to a url.
",CraigSiemens,2016-11-22 05:25:30
500,2016-11-22 05:25:30,@isair @CraigSiemens Sorry for the delay on this. This issue was fixed in https://github.com/SwiftyJSON/SwiftyJSON/pull/678. Let me know if you need to reopen. Thanks!,ldiqual,2016-11-22 05:25:30
499,2016-04-19 19:54:57,,JamieWhite,2016-09-21 19:24:34
499,2016-09-21 19:24:34,"Thanks for the PR,

This is merged by

https://github.com/SwiftyJSON/SwiftyJSON/pull/616

Cheers
🍻 
",zhigang1992,2016-09-21 19:24:34
498,2016-04-18 15:07:43,"I seem to be experiencing an issue that if there is no JSON and I try to check if a key exists in the JSON, it returns `true`. Below is a code example from one of my alamofire network calls that returns a `204 no content`

<S_CODE_TOKEN>

I can handle this in my code but it seems like bug to me if `isExists()` returns true when no JSON even exists, let alone the key you are checking for.
",slhodson969,
498,2016-04-30 08:22:22,"I'm facing the same issue
",ghost,
498,2016-11-22 05:31:42,"@slhodson969 @pranshu-ziffi Sorry for the delay on this. Can you share some code to reproduce the issue? I've tried to reproduce with the code below but it prints `false` as expected:

<S_CODE_TOKEN>",ldiqual,
497,2016-04-18 13:38:56,"Application extension safe API was set on iOS, tvOS and watchOS targets, but was missing from OS X target, this PR sets it.
",DenHeadless,2016-09-21 19:26:27
497,2016-05-10 15:30:15,"+1 !
",nikolaeu,2016-09-21 19:26:27
497,2016-09-21 19:26:27,"Thanks for the PR.

It's merged in

https://github.com/SwiftyJSON/SwiftyJSON/pull/616

Cheers
🍻 
",zhigang1992,2016-09-21 19:26:27
496,2016-04-18 09:06:30,"When i try to validate my .podspec with SwiftyJSON 2.3.2 as a dependency I get a warning
saying SwiftyJSON has a line with '++' in it. And that '++' will be deprecated in Swift 3!

Now i have to do --allow-warnings to get SwiftyJSON through validation which is not optimal. Please consider changing this '++' line to += 1!

Kind regards,
Erik
",JipV,2016-11-17 07:51:52
496,2016-04-27 17:49:38,"Dupe #455
",bre7,2016-11-17 07:51:52
496,2016-05-21 06:47:12,"I believe this has been fixed on master, but there hasn't been a new release since it was fixed. Any plans on releasing a new version?
",vrutberg,2016-11-17 07:51:52
496,2016-11-17 07:51:52,"SwiftyJSON is now swift3 compatible. Closing this
",ldiqual,2016-11-17 07:51:52
495,2016-04-17 06:58:56,"I am trying to import Json data from a user uploaded txt file into a standard object that I can use via SwiftyJson framework

Here is the contents of the text fie:

> {
>   ""String"": ""answer"",
>   ""String2"": ""answer2""
> }

I have successfully read it and turned it into a String file using:

<S_CODE_TOKEN>

I am trying to convert this into a JSON object using:

`let jsonFile = JSON(contentsOfFile)`

**Problem**
The problem is that the resulting JSON object created appears to be blank for all the fields except rawvalue.  

Here is the screenshot from the debug console. enter image description here
![7ppdk](https://cloud.githubusercontent.com/assets/751115/14585594/34db3444-0472-11e6-9eb0-e5110f6372c4.jpg)

**Expected Behaviour**
I would have expected it to have been converted to relevant dictionary. 
",grantkemp,2016-11-17 07:52:49
495,2016-11-17 07:52:49,"Closed as a duplicate of https://github.com/SwiftyJSON/SwiftyJSON/issues/436
",ldiqual,2016-11-17 07:52:49
494,2016-04-16 18:55:12,"Fixed incorrect method specified in Readme which might be confusing new users. 
Noticed some typos as well. 
",grantkemp,2016-09-28 07:31:06
494,2016-09-28 07:31:02,"My bad, code change already in.
Merge away.
",zhigang1992,2016-09-28 07:31:06
494,2016-09-28 08:15:07,"Thanks for merging  ( and the great work on your library!) 
",grantkemp,2016-09-28 07:31:06
493,2016-04-16 06:52:24,"<S_CODE_TOKEN>

(lldb) po json
▿ unknown
- rawArray : 0 elements
- rawDictionary : 0 elements
- rawString : """"
- _type : SwiftyJSON.Type.Unknown
  ▿ _error : Optional(Error Domain=SwiftyJSONErrorDomain Code=999 ""It is a unsupported type"" UserInfo={NSLocalizedDescription=It is a unsupported type})
",fanpyi,2016-11-17 07:51:28
493,2016-11-17 07:51:28,"@fanpyi JSON keys can only be strings, which is why you're getting this errors. Closing this
",ldiqual,2016-11-17 07:51:28
492,2016-04-13 20:06:14,"Can we add support for `UIKeyboardTypeURL`?
",aminiz,2016-11-17 07:50:45
492,2016-04-17 17:21:57,"How would you like that supported- if you can specify then someone might be able to help
",grantkemp,2016-11-17 07:50:45
492,2016-11-17 07:50:45,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:50:45
491,2016-04-12 20:40:56,"I just upgraded to Xcode 7.3 and cannot use carthage to build from Carthage.resolved. Other frameworks such as Alamofire are fine except for SwiftyJSON. Please fix
",Koi9,2016-04-12 22:13:22
491,2016-04-12 22:13:22,"I solved this by changing the Carthage.resolved's line to  
`git ""https://github.com/SwiftyJSON/SwiftyJSON.git"" ""2.3.3""`. I am not sure if this is Carthage's problem but this happens only for SwiftyJSON. Hope it helps.
",Koi9,2016-04-12 22:13:22
490,2016-04-11 10:53:07,"Im making a api call, and Im getting json back and all that.
But Im having trouble getting the one value out that I want.

This is what I can print out when print(json[""result""])

SUCCESS
[
  {
    ""post_password"" : """",
    ""to_ping"" : """",
    ""category"" : [
      {
        ""description"" : """",
        ""id"" : ""28"",
        ""name"" : ""Bilka"",
        ""custom_fields"" : ""ACF plugin needs to be enabled, Back to documentation for further information"",
        ""slug"" : ""bilka"",
        ""parent"" : ""0"",
        ""image"" : ""Plugin Categories Images must be enabled"",
        ""count"" : ""3""
      }
    ],
    ""ID"" : ""6232"",
    ""post_date_gmt"" : ""April 7, 2016"",
    ""post_status"" : ""publish"",
    ""post_excerpt"" : """",
    ""pinged"" : """",
    ""post_type"" : ""post"",
    ""post_mime_type"" : """",
    ""author"" : [
      {
        ""jabber"" : """",
        ""avatar"" : ""http:\/\/1.gravatar.com\/avatar\/a43e252a067007ad9fc85c77d9f72bdd?s=96&#038;d=mm&#038;r=g"",
        ""custom_fields"" : ""ACF plugin needs to be enabled, Back to documentation for further information"",
        ""ID"" : ""2"",
        ""user_nicename"" : ""bilka"",
        ""user_url"" : """",
        ""user_registered"" : ""April 7, 2016"",
        ""description"" : """",
        ""aim"" : """",
        ""last_name"" : """",
        ""role"" : {
          ""author"" : true
        },
        ""user_login"" : ""Bilka"",
        ""user_email"" : ""test@test.dk"",
        ""nickname"" : ""Bilka"",
        ""yim"" : """",
        ""session_id"" : ""0u762ek2at5n1hfrss75cl56c4"",
        ""first_name"" : ""Bilka"",
        ""display_name"" : ""Bilka""
      }
    ],
    ""post_name"" : ""uge-55"",
    ""post_author"" : ""2"",
    ""post_content"" : ""http:\/\/ibeacon.ideadev.dk\/wp-content\/uploads\/2016\/04\/5328a5298d7ea-300x169.jpg"",
    ""post_title"" : ""Uge 55"",
    ""post_date"" : ""April 7, 2016""
  }
]

I then want these 2 values 
""post_content"" : ""http:\/\/ibeacon.ideadev.dk\/wp-content\/uploads\/2016\/04\/5328a5298d7ea-300x169.jpg"",
""name"" : ""Bilka"",

But Im having trouble trying to get that.
Pretty much all I try I just get null.

json[""result""][""post_content""] dont work. Also tried other things, but nothing seems to work for me. Just get null back.
",thetof91,2016-04-11 12:28:50
490,2016-04-11 11:02:02,"did you try `json[""result""][0][""post_content""]` ?
",alexdd55,2016-04-11 12:28:50
490,2016-04-11 12:23:22,"I thought I had tried that before. Because i tried `json[""result""][0]` but that just gave me null before too.

Now after taking break from it and tried run again it gave me the result back.
",thetof91,2016-04-11 12:28:50
489,2016-04-06 23:15:21,"You usually need to specify git repo url if you want to use a fork or if you want to reference to a specific commit. Im most cases just name of the pod is enough. Its url is in its spec: https://github.com/CocoaPods/Specs/blob/master/Specs/SwiftyJSON/2.3.2/SwiftyJSON.podspec.json#L21
",yas375,2016-09-21 19:28:44
489,2016-04-17 17:20:37,"This is good.  Should be merged. 
",grantkemp,2016-09-21 19:28:44
489,2016-09-21 19:28:44,"This already changed.

🍻 
",zhigang1992,2016-09-21 19:28:44
488,2016-04-04 19:21:28,"i got an uuid from my api, i tough it was going to be parsed as a String, then when i tried

<S_CODE_TOKEN>
",davidlondono,2016-11-17 07:50:32
488,2016-11-17 07:50:32,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:50:32
487,2016-03-30 01:35:50,"This extension is useful for non-optional properties in a failable initializer. For example:

<S_CODE_TOKEN>
",hollyschilling,
487,2016-05-12 17:08:32,"I'm strongly in favor if this, I think it's a great addition.

What would you say to removing ""required"" from the method names? It would fit with the existing SwiftyJSON naming conventions. Also, I think the type signature (`func string() throws -> String`) implies that the property would be required.
",jkubicek,
487,2016-05-27 14:28:41,"I would love to use this!
",charlag,
487,2016-06-12 08:32:55,"@jkubicek  I think this is confusing since we already have string property.
",CosynPa,
487,2016-06-28 03:34:42,"I think it's better to use the `rawString`, `rawArray` series API instead of the `stringValue`, `arrayValue` API to implement these methods. And I wish `requiredDictionaryObject` which returns `[String: AnyObject]` and `requiredArrayObject` which returns `[AnyObject]` are added too.
",CosynPa,
487,2016-07-01 06:41:15,"And `requiredBool` is a must, since boolean type is different type from number type.
",CosynPa,
487,2016-09-21 19:32:34,"Looks interesting, can you kindly add a bit of test and update the syntax to swift3.
Would love to ship this.

Also, sorry for not getting to this sooner.
",zhigang1992,
487,2016-11-22 03:51:46,"@zhigang1992 Looking at the code, it seems that we're gonna end up with a confusing API. For instance, to unpack a string you have

 - `json.string -> String?`
 - `json.stringValue -> String` with a fallback on `""""` if not found, potentially error prone
 - `json.requiredString throws -> String` which throws if the value is incorrect.

I would argue that we should be as strict as possible and leave the responsibility on the user to fallback on whatever is best if the value cannot be unpacked. This is why I'm proposing this unique interface:

 - `json.string() throws -> String`

It covers all the cases above:

 - `try? json.string()`
 - `try? json.string() ?? """"`
 - `try json.string()`

It also has the value to provide an explicit error if the unpack fail, as opposed to returning `nil` or a ""fake"" value. Imho it'll lead to more robustness in codebases.

However it does introduce a code-breaking change, probably worth a SwiftyJSON v4 or something. What do you think?",ldiqual,
487,2017-03-21 05:53:33,"@ldiqual This change is huge, but the benefit is not that much. I don't think the try syntax is very beginner friendly or easy to use.",CosynPa,
487,2017-03-21 11:50:14,"I must admit I all but forgot about this pull request. 

Although there could still be uses of this type of functionality in SwiftyJSON, my specific use case was abusing the library. As such, I built a component in my [BetterLibrary](https://github.com/BetterPractice/BetterLibrary) that is better designed for my purpose. It is available as a Cocoapod or through SPM. It is fairly mature now, but I would love to have more eyes on it.",hollyschilling,
486,2016-03-28 20:37:27,"Just updated Xcode to 7.3 so I can build on an iOS 9.3 device.  I updated my SwiftyJSON via Cocoapods to the latest version, and I'm experiencing 'Use of unresolved identifier JSON' and 'Use of undeclared type JSON' throughout my entire project now.  Prior to the update, everything was fine.

I've got SwiftyJSON imported at the top of my project files.  I have the framework linked in my project general tab, but I'm unable to resolve the issue.

Any advice would be greatly appreciated.  I've done a project clean and a build clean.  I've deleted the derived data.  Nothing has worked thus far.
",pnsean,2016-03-28 21:17:52
486,2016-03-28 21:17:46,"Runnings a pod install and relaunching xcode appears to have resolved the issue
",pnsean,2016-03-28 21:17:52
485,2016-03-27 08:34:15,,Dershowitz011,2016-09-21 19:33:36
485,2016-09-21 19:33:36,"Thanks for the PR.

This change is now outdated, travis.yaml has been updated in the master.

cheers
",zhigang1992,2016-09-21 19:33:36
484,2016-03-27 08:33:30,"Carthage|Compatible
",Dershowitz011,2016-09-21 19:34:15
484,2016-09-21 19:34:11,":+1:
",zhigang1992,2016-09-21 19:34:15
483,2016-03-23 09:16:36,"如题
",carly1987,2016-11-17 07:50:13
483,2016-03-23 10:34:20,"我发现不同点了
不成功的代码：
var data: JSON!
        data =  [
            [
                ""title"":""groupA"",
                ""list"":
                    [
                        [""word"":""A"", ""desc"":""aa""],
                        [""word"":""Aa"", ""desc"":""aa""]
                ]
            ],
            [
                ""title"":""groupB"",
                ""list"":
                    [
                        [""word"":""B"", ""desc"":""bb""],
                        [""word"":""Ba"", ""desc"":""bb""]
                ]
            ]
        ]

<S_CODE_TOKEN>

成功的代码如下：
var data: JSON =  [
            [
                ""title"":""groupA"",
                ""list"":
                    [
                        [""word"":""A"", ""desc"":""aa""],
                        [""word"":""Aa"", ""desc"":""aa""]
                ]
            ],
            [
                ""title"":""groupB"",
                ""list"":
                    [
                        [""word"":""B"", ""desc"":""bb""],
                        [""word"":""Ba"", ""desc"":""bb""]
                ]
            ]
        ]

<S_CODE_TOKEN>

这是为什么呢   很多时候  都会需要先var  之后赋值的
",carly1987,2016-11-17 07:50:13
483,2016-06-07 06:59:51,"我也遇到相同问题这个问题有解决吗
",czboosj,2016-11-17 07:50:13
483,2016-06-07 07:14:43,"解决了 var 的时候 var homeJson:JSON = []  这样定义, 就可以set了, 
",czboosj,2016-11-17 07:50:13
483,2016-06-12 04:00:33,"#412 the same problem
",yikuo123,2016-11-17 07:50:13
483,2016-07-14 06:39:48,"bump
",madsonic,2016-11-17 07:50:13
483,2016-07-14 06:42:33,"a possible workaround is to convert the JSON to native structures e.g. `var native = myJson.arrayObject`, set the value then construct the native structure back to JSON
",madsonic,2016-11-17 07:50:13
483,2016-11-17 07:50:13,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:50:13
482,2016-03-21 18:20:22,"Compiling with Swift 3 breaks SwiftyJSON
",ejohnsonw,2016-11-17 07:49:42
482,2016-03-22 17:46:45,"I'm seeing the following crash when compiling in Xcode 7.3 

`dyld: Symbol not found: __TMPdSa
  Referenced from: /.../Frameworks/SwiftyJSON.framework/SwiftyJSON
  Expected in: /.../Frameworks/libswiftCore.dylib
 in /.../Frameworks/SwiftyJSON.framework/SwiftyJSON`
",stowy,2016-11-17 07:49:42
482,2016-04-01 14:46:30,"SwiftyJSON/Source/SwiftyJSON.swift:399:47: warning: '++' is deprecated: it will be removed in Swift 3
",racer1988,2016-11-17 07:49:42
482,2016-11-17 07:49:42,"SwiftyJSON is now swift3 compatible. Closing this
",ldiqual,2016-11-17 07:49:42
481,2016-03-21 00:50:04,,karthikgollapudi,2016-09-21 19:34:34
481,2016-09-21 19:34:31,":+1:
",zhigang1992,2016-09-21 19:34:34
480,2016-03-18 21:27:17,"I expected the `jdata` structure to contain an error with the code below, but it does not.

How do I know if there was an error parsing?

<S_CODE_TOKEN>
",waynebloss,2016-11-22 05:33:38
480,2016-11-22 05:33:38,"@waynebloss As of SwiftyJSON v3 I cannot reproduce the issue with your code, so I'm assuming this is fixed. Let me know if I need to reopen. Thanks!",ldiqual,2016-11-22 05:33:38
479,2016-03-18 07:46:50,"For example,

<S_CODE_TOKEN>

Is there is something like that code above?

Writing init method bother me like below :(

<S_CODE_TOKEN>

I use not only one CLASS to parse JSON.
So I have to write init code of every variables in every classes.

Does anyone have an idea?
",shinise,2016-03-24 09:54:47
479,2016-03-21 18:32:38,"In the past used something like this:

//pseudo code
func hydrate (dictionary,objectInstance){
   for key in dictionary.keys  {
        let value = dictionary[key];
        //ask for value's type if its another dictionary, recurse
        if( type ....){
          var childObjectInstance
           hydrate(value,childObjectInstance)
           etc.
        }
        //retrieve property
        let property = objectInstance. get property

   }
}

Check this
http://derpturkey.com/get-property-names-of-object-in-swift/. Might want to use a recursive solution that accounts for nested objects.
",ejohnsonw,2016-03-24 09:54:47
479,2016-03-24 09:54:47,"@ejohnsonw Thanks a lot!!!! That is exactly what I wanted.
",shinise,2016-03-24 09:54:47
478,2016-03-18 07:26:35,"stops to build with this error:

/swiftdata/Packages/....../Sources/SwiftyJSON.swift:1264:20: error: cannot convert value of type '[String : AnyObject]' to type 'NSDictionary' in coercion
        return lhs.rawDictionary as NSDictionary == rhs.rawDictionary as NSDictionary

anyone, any clue?
",flandy84,2016-04-04 11:08:50
478,2016-03-18 07:28:52,"with the macOS-swift2.2-snapshot it builds successfully :/
",flandy84,2016-04-04 11:08:50
478,2016-04-04 11:08:50,"ok, now i know the official reason:

""Linux (Ubuntu 14.04 and Ubuntu 15.10)

Swift 2.2 includes support for Swift on Linux. The Linux port is still relatively new and in this release does not include the Swift Core Libraries (which will appear in Swift 3). The port does, however, include LLDB and the REPL.""

there is a Swifty-JSON fork (https://github.com/IBM-Swift/SwiftyJSON) to workaround that issue in linux/ubuntu.
",flandy84,2016-04-04 11:08:50
477,2016-03-17 08:32:14,,kandelvijaya,2016-09-23 05:35:17
477,2016-09-21 19:35:34,"Thanks for doing this,

Can you help update this PR and let's ship it.

🍻 
",zhigang1992,2016-09-23 05:35:17
477,2016-09-23 05:35:17,"I will fix and create a new PR
",kandelvijaya,2016-09-23 05:35:17
476,2016-03-16 08:21:03,,kandelvijaya,2016-09-22 18:31:40
476,2016-09-21 19:36:09,"Conflicts. 😄 
",zhigang1992,2016-09-22 18:31:40
476,2016-09-22 18:01:19,"Im on it. I will make another PR. Seems like a lot changed in the main repo. 
",kandelvijaya,2016-09-22 18:31:40
475,2016-03-15 14:10:21,"Hi,

In our code we will generate a json representation of some entities. We would like to have setters that handle optional to NOT output ""null"" values but simply ignore the key-value all together.

For example, by doing

<S_CODE_TOKEN>

the result should be `{}` and not `{""test"":null}`

Is there something already built-in for this?
",dral3x,
475,2016-11-17 07:49:23,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,
475,2016-11-17 07:54:13,"@ldiqual As far as I know, it's not fixed. I did an extension to work around this limitation 

<S_CODE_TOKEN>

Of course I did a function of each data type supported.

I can make a PR if you want to embrace this. Just let me know!
",dral3x,
475,2017-01-26 19:52:25,I'd like to see optional setters support as well. @dral3x could you send a PR to try and get this going?,hernangonzalez,
475,2017-01-27 07:27:30,Here it is the PR https://github.com/SwiftyJSON/SwiftyJSON/pull/784,dral3x,
474,2016-03-15 09:07:31,"Hi all,

I think that `rawString` should return a flat rappresentation of a json object but this is not true in the current implementation.
I don't want to break stuff so I decided to make the json format explicit by creating two new methods, `rawStringFlat` and `rawStringPretty` so it's much obvious which is the string format returned.

It also helps keep the code cleaner.
",dral3x,2016-11-16 16:41:59
474,2016-09-21 19:37:14,"Looks good. 👍 
",zhigang1992,2016-11-16 16:41:59
474,2016-11-16 16:41:59,"This now possible to passing in `JSONSerialization.WritingOptions` to rawString.

Closing this now, feel free to reopen this if need. 👍 
",zhigang1992,2016-11-16 16:41:59
474,2016-11-16 17:14:11,"Cool, thanks 👍 
",dral3x,2016-11-16 16:41:59
473,2016-03-12 19:42:13,"Hey folks, 

I have a problem here, when i go test my app, using **SwiftJSON** master version, my xcode show **7 Issues**, how are version they has use? anyone can give me a feedback?? Thanks. Erros :

 return anyGenerator {
                if let (key_: String, value_: AnyObject) = generate_.next() {
                    return (key_, JSON(value_))
                } else {
                    return nil
                }
            }

--> OTHER

  let data = try self.rawData(options: opt)
                return NSString(data: data, encoding: encoding)

--> OTHER

return map(self.object as! [AnyObject]){ JSON($0) }

--> OTHER

  return self.number?.unsignedIntegerValue
",joaomirandas,2016-11-17 07:45:45
473,2016-11-17 07:45:45,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:45:45
472,2016-03-09 05:44:04,,RobinChao,2016-11-07 13:23:15
472,2016-09-21 19:39:22,"Would like to merge this in.

Can you help resolve the conflicts?
",zhigang1992,2016-11-07 13:23:15
472,2016-11-07 13:23:15,"Closing for now, since we need to clean up a bit. feel free to reopen this if needed.
",zhigang1992,2016-11-07 13:23:15
471,2016-03-08 10:38:11,"I have an issue when parsing NSData object to JSON using swiftyJSON
the raw JSON is as follows:
`{
  ""totalCollectCharge"": 16.22,
  ""totalCustomsCharge"": 0,
  ""totalCashOnDeliveryCharge"": 0,
  ""discountOnCollectCharge"": -8.11,
  ""totalPayableCharges"": 8.11,
  ""shipments"": [
    {
      ""shipmentId"": 378992502,
      ""totalCharges"": 8.11,
      ""currency"": ""USD"",
      ""shipmentCharges"": [
        {
          ""type"": ""CC"",
          ""originalAmount"": 16.22,
          ""newAmount"": 8.11,
          ""discount"": -8.11,
          ""currency"": ""USD"",
          ""payableOnline"": true,
          ""validPromoCode"": true,
          ""promoCode"": ""CONSAPP001"",
          ""promoCodeDescription"": ""Consumer App 50% discount""
        }
      ]
    }
  ]
}`

Whenever i pass this NSData to JSON(data: data) it returns the following JSON, take a look at discountOnCollectCharge node how it adds floating points :
`{
  ""discountOnCollectCharge"" : -0.8100000000000001,
  ""totalCollectCharge"" : 16.22,
  ""shipments"" : [
    {
      ""totalCharges"" : 15.41,
      ""currency"" : ""USD"",
      ""shipmentCharges"" : [
        {
          ""promoCode"" : ""XXX"",
          ""newAmount"" : 15.41,
          ""promoCodeDescription"" : ""Auto Pay Test"",
          ""originalAmount"" : 16.22,
          ""discount"" : -0.8100000000000001,
          ""type"" : ""CC"",
          ""currency"" : ""USD"",
          ""payableOnline"" : true,
          ""validPromoCode"" : true
        }
      ],
      ""shipmentId"" : 378992502
    }
  ],
  ""totalPayableCharges"" : 15.41,
  ""totalCustomsCharge"" : 0,
  ""totalCashOnDeliveryCharge"" : 0
}`
",amjad-Alhusseini,2016-11-17 07:45:39
471,2016-03-09 22:20:19,"i think those are different  json data Try parse the data with NSJSONSerialization and print the data to check if it is from swiftyJSON or not 

<S_CODE_TOKEN>
",elnaqah,2016-11-17 07:45:39
471,2016-11-17 07:45:39,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:45:39
470,2016-03-03 11:23:00,"I have added support for unit testing.

Created a protocol, for any error like type mismatch and missing key, methods of that protocol will be invoked on JSON object. Interested target can give implementation for that protocol by extending JSON object, So that they can handle such error.

Please recommend any changes, to support unit testing.

Thanks
",RajathShetty-above,2016-09-21 19:43:08
470,2016-09-21 19:43:08,"hm, to me, JSON feels like a data, value type.

You should use it just like number or string or array.

IMHO, The way to use it in test, is not to extend it to be able to stub or mock.

But rather just create one.

And set the expected value in there, and just use it like a normal JSON.

Gonna go ahead and close this PR, but feel free to reopen this if you'd like to discuss more.

Cheers
",zhigang1992,2016-09-21 19:43:08
469,2016-03-02 11:25:11,"I have added support for unit testing.

Created a protocol, when type mismatch occurs, methods of that protocol will be invoked on JSON object. Interested target can give implementation for that protocol by extending JSON object, So that they can handle such error.

Please recommend any changes, to support unit testing.

Thanks
",RajathShetty-above,2016-03-03 11:19:06
468,2016-03-02 11:05:17,"I have added support for unit testing.

Created a protocol, when type mismatch occurs, methods of that protocol will be invoked on JSON object. Interested target can give implementation for that protocol by extending JSON object, So that they can handle such error. 

Please recommend any changes, to support unit testing.

Thanks 
",RajathShetty-above,2016-03-02 11:23:58
467,2016-03-01 17:26:18,"The increment (++) and decrement (--) operators will be deprecated with Swift 3.

For more information, see proposal SE-0004: https://github.com/apple/swift-evolution/blob/master/proposals/0004-remove-pre-post-inc-decrement.md
",glennrfisher,2016-03-15 03:47:36
467,2016-03-10 17:14:30,"I think this would be very good addition, since our Swift Package Manager project that uses SwiftyJSON reports this warning during our build.
",rfdickerson,2016-03-15 03:47:36
466,2016-03-01 11:22:32,"I’m trying to develop a framework which uses SwiftyJSON. But when I enable «Allow app extensions API only» in «Deployment Info» in «General», I see next warning from SwiftyJSON:
`
ld: warning: linking against dylib not safe for use in application extensions: /Users/oleg/Development/NKit/Carthage/Build/Mac/SwiftyJSON.framework/SwiftyJSON
`
",dreymonde,2016-03-18 09:13:34
466,2016-03-08 08:07:26,"maybe this warning is Apple's.  you can see [App Extension Programming Guide](https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/ExtensibilityPG/ExtensionScenarios.html#//apple_ref/doc/uid/TP40014214-CH21-SW1).
",RobinChao,2016-03-18 09:13:34
466,2016-08-11 12:14:03,"I also got this error like @dreymonde. As Apple's documentation suggests I did set the framework's Require Only App-Extension-Safe API” build setting to Yes.

> To configure an app extension target to use an embedded framework, set the target’s “Require Only App-Extension-Safe API” build setting to Yes.

Now I see this warning when I compile

<S_CODE_TOKEN>

Does this mean SwiftyJSON uses API endpoints that Apple does not allow in application extensions? Or does it only mean that XCode does not know if it uses APIs which are not allowed and therefore just shows me a warning to check manually?
",funkenstrahlen,2016-03-18 09:13:34
466,2016-08-11 14:25:39,"Yes, that's actually because SwiftyJSON author hasn't set that setting to Yes. 

Отправлено с iPhone

> 11 авг. 2016 г., в 15:14, Stefan Trauth notifications@github.com написал(а):
> 
> I also got this error like @dreymonde. As Apple's documentation suggests I did set the framework's Require Only App-Extension-Safe API” build setting to Yes.
> 
> To configure an app extension target to use an embedded framework, set the target’s “Require Only App-Extension-Safe API” build setting to Yes.
> 
> Now I see this warning when I compile
> 
> (null): Linking against a dylib which is not safe for use in application extensions: /Users/funkenstrahlen/Library/Developer/Xcode/DerivedData/Xenim-gcfvztovwnwiihdwuxgrugxvxquc/Build/Products/Debug-iphonesimulator/SwiftyJSON/SwiftyJSON.framework/SwiftyJSON
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub, or mute the thread.
",dreymonde,2016-03-18 09:13:34
465,2016-03-01 00:33:53,,Vkt0r,2016-09-21 19:43:34
465,2016-09-21 19:43:38,"👍 
",zhigang1992,2016-09-21 19:43:34
464,2016-02-28 18:38:21,,Katafalkas,2016-11-07 13:22:28
464,2016-11-07 13:22:28,"I believe isEmpty was dropped a bit before, during Swift3 migration.
This PR might be outdated. Feel free to reopen this if needed.
",zhigang1992,2016-11-07 13:22:28
464,2016-11-18 01:17:54,"Why was isEmpty removed?
",dmdque,2016-11-07 13:22:28
463,2016-02-25 21:14:31,"Why does Carthage keep building all platforms even though i have `--platform iOS` specified?

The `Huey` framework builds fine (only iOS) so i assume this is a problem with this library?
",maciekish,2016-11-17 07:45:31
463,2016-11-17 07:45:31,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:45:31
462,2016-02-24 12:22:45,"Hi,

I'm facing a JSON parsing issue I've no idea how to fix.

Part of the JSON data received from the backend are key-value pairs:

`""columns"": {
    ""created_at"": ""DESC"",
    ""id"": ""DESC""
  }
`

I need them to be stored in a `[String: String]?` optional dictionary. So, this is the code I'm using:

`self.columns = json[""columns""].dictionary?.map { 
(key, value) -> (String, String) in
            return (key, value.stringValue)
}`

This however produces a compiler error:

> 'inout JSON' is not convertible to 'JSON'

I should also mention that this is part of a larger JSON response, and it handles sorting data. All other data is parsing fine.

Any clues would be most appreciated, I'm kind of stuck on this one.
",miwanski,2016-11-17 07:45:23
462,2016-02-25 08:16:40,"I've updated the original post with actual JSON data I'm having issues with.
",miwanski,2016-11-17 07:45:23
462,2016-03-08 09:17:00,"i don't kown why you use `map` function in dictionary, you can try this:

`    func testConvertible() {
        var json: JSON = [""columns"" : [""created_at"" : ""DESC"", ""id"" : ""DESC""]]

<S_CODE_TOKEN>

wish this help.
",RobinChao,2016-11-17 07:45:23
462,2016-11-17 07:45:23,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:45:23
461,2016-02-24 07:55:17,"Why not to use `Uint` or `uint`?

Currently:

<S_CODE_TOKEN>

Better

<S_CODE_TOKEN>
",GRiMe2D,2016-11-17 07:45:12
461,2016-11-17 07:45:12,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:45:12
460,2016-02-23 13:01:01,"This closes #455. 
",natebird,2016-04-06 13:17:27
460,2016-02-23 14:31:54,"Looking into why the change is failing. Sorry.
",natebird,2016-04-06 13:17:27
460,2016-02-23 16:13:07,"The intent of returning the current index in now clearer but it’s a couple more lines of code and it’s doing multiple things (it was before as well). I can’t think of a better way of refactoring it since the method. Any other ideas?
",natebird,2016-04-06 13:17:27
460,2016-04-06 13:17:27,"I see that this has been changed in the master branch now. I’ll close this pull request.
",natebird,2016-04-06 13:17:27
460,2016-05-26 14:55:20,"I still get this warning 
SwiftyJSON/Source/SwiftyJSON.swift:399:47: warning: '++' is deprecated: it will be removed in Swift 3

on cartage (last version available is 2.3.3)

When is a new version planned?
",racer1988,2016-04-06 13:17:27
459,2016-02-22 09:04:31,"Why there are no any notes about **JSON.parse(string)** in start page/manual/docs? I'd hardly found it in issues after 2 hours of search! 

Please add to manual
",djdance,
459,2016-11-22 06:00:21,"@zhigang1992 I believe you added this in https://github.com/SwiftyJSON/SwiftyJSON/pull/406 to parse json strings as opposed to initialize with a string value like `JSON(""hello"")` which does accept invalid json strings. Since `JSON.parse` is undocumented already, how would you feel about having `init(jsonString: String) throws` instead? It would avoid the `init(object: )` confusion by making it clear you need a valid json string there. We would also throw if the data is invalid. Let me know.",ldiqual,
459,2016-11-23 08:34:20,"@ldiqual  I think that's a good idea, we should document the crap out of it this time. 😄  ",zhigang1992,
458,2016-02-18 22:50:03,"This pull request correctly changes the spelling of ""Existance"" to ""Existence""

Additional reference: http://www.yourdictionary.com/existance
",frankctan,2016-09-21 19:58:14
457,2016-02-17 16:49:57,"`isExists()` isn't the correct way to phrase that statement and makes the code harder to read. Simply using `exists()` makes it easer to read and grammatically correct.

<S_CODE_TOKEN>
",CraigSiemens,2016-03-15 03:48:47
457,2016-02-22 16:44:10,":+1: Really nice, simple change that improves the readability of the API.
",bcapps,2016-03-15 03:48:47
457,2016-03-15 03:48:40,"Nice!!!
",lingoer,2016-03-15 03:48:47
456,2016-02-17 05:24:43,"Ideally it would be nice if when initializing an object you could use the try/catch model to pass along the json parsing error. This is particularly useful for other libraries using SwiftyJSON. ideal usage would be something like this:

<S_CODE_TOKEN>

I'm not quite sure how to implement this though. Here's an extension that I came across that might provide some help perhaps: https://gist.github.com/akisute/f38a34985ee4aca1e5ad . As far as I can tell that extension doesn't quite add support for try/catch handling in the initializer.

Thanks again for all the work. Been using SwiftyJSON happily since Swift was released. Especially in my lib https://github.com/hamin/FayeSwift

:)
",hamin,
456,2016-11-22 06:00:53,I'm strongly in support of this. @zhigang1992 thoughts?,ldiqual,
456,2016-11-23 08:31:58,"Agreed, I think we need to rethink our error handling model.
Because most of the code for this library was written back in Swift1, it's definitely need a rewrite and take advantage of the new Swift features.",zhigang1992,
456,2016-12-12 19:07:42,"I desperately need this, since I  have to deal with malformed json from a legacy system.
ideally the malformed data would be provided in context, so I could a func to fix it while parsing",danat8x8,
456,2016-12-13 06:11:37,PR in review https://github.com/SwiftyJSON/SwiftyJSON/pull/731,ldiqual,
455,2016-02-16 23:07:46,"The following code triggers this warning when building with Swift 3:

<S_CODE_TOKEN>
",mlaster,2016-11-17 07:43:16
455,2016-02-23 14:47:12,"Wonder why they took that out, anyone know?
",mikeKane,2016-11-17 07:43:16
455,2016-02-23 16:01:48,"https://github.com/apple/swift-evolution/blob/master/proposals/0004-remove-pre-post-inc-decrement.md
",mlaster,2016-11-17 07:43:16
455,2016-03-04 11:45:22,"+1
",crmitchelmore,2016-11-17 07:43:16
455,2016-03-09 10:34:21,"How did you test it for swift 3? Unable to find a way to start writing code in swift 3 beta version 
",kartikjain,2016-11-17 07:43:16
455,2016-03-09 17:40:37,"It gives that warning in the latest Xcode 7.3 beta 5 update (may be in older betas too, can't remember, but they put in a bunch of future deprecation warnings in there)

+1 on fixing this now, rather than when Swift 3 launches
",amelnychuck,2016-11-17 07:43:16
455,2016-03-24 10:01:24,"This is also occurring on the latest stable version of Xcode. Is this going to be fixed?
",lyptt,2016-11-17 07:43:16
455,2016-04-27 18:00:36,"Fixed on March 1st. Use master with CP/Carthage (no new tags since Dec 2015)
",bre7,2016-11-17 07:43:16
455,2016-05-02 07:56:27,"Hi!
Any progress on this? It would be nice if the fix is released and available via CocoaPods (without pointing to the master branch manually). I've seen that it was fixed in a commit, but there is not new tags for it to specify in the Podfile.
",balazsgerlei,2016-11-17 07:43:16
455,2016-05-02 17:52:40,"You can specify a commit or use HEAD :wink: 
",bre7,2016-11-17 07:43:16
455,2016-05-03 09:11:28,"True, but a release would be still **much** nicer.
",balazsgerlei,2016-11-17 07:43:16
455,2016-07-07 05:10:14,"Is SwiftyJSON still being maintained? This error has been around for a while now
",andyyhope,2016-11-17 07:43:16
455,2016-07-07 11:08:01,"Doesn't seem that way. Although there's a Swift 3 branch, nothing's been released for a long while.
",lyptt,2016-11-17 07:43:16
455,2016-07-12 19:13:42,"Seems strange to have had a fix without a release for so long. And no-one is assigned to this issue. 
Pointing to master or an untagged commit isn't really acceptable.
Who should we mention in order to get a release out?
",richardbuckle,2016-11-17 07:43:16
455,2016-07-12 19:27:48,"The nuclear option is to fork the project and do a release, but this should probably be avoided in the hope of any approved committers agreeing to do it. The two members of the SwiftyJSON organisation are @lingoer and @tangplin, so one of these two would be able to do it.

If neither are interested in making a release, then forking the repository or finding an alternative JSON library might be the only other option.
",lyptt,2016-11-17 07:43:16
455,2016-07-13 00:31:33,"Looking at 99 open issues and 35 open pull requests, and the dates on them, I for one am tempted to just fork and tag it for Swift 2.x and look for better supported options for Swift 3.x.

The Big Nerd Ranch did one that I should take another look at. https://www.bignerdranch.com/blog/introducing-freddy-an-open-source-framework-for-parsing-json-in-swift/
",richardbuckle,2016-11-17 07:43:16
455,2016-08-08 11:33:40,"Please someone fork this and start a new library for swift3
",piyushwadhwani,2016-11-17 07:43:16
455,2016-11-17 07:43:16,"SwiftyJSON is now available for swift 3, closing this issue.
",ldiqual,2016-11-17 07:43:16
454,2016-02-16 05:17:50,"Hi,

I found the example project a little hard to follow. So I created my own - it's really simple and just shows a comparison between using swifty for JSON vs. using Swift's default JSON parsing.

I also added a comment to clarify the dataForNetworking object in the Readme, under Usage -> Initiailization

Feel free to merge or provide feedback for me, thanks!
",vatsg,2016-09-21 20:01:39
454,2016-09-21 20:01:39,"Seems like you're create a new folder for this example, and copying the source code?

How about doing it in the `Example` folder we already have and create a new PR?

I'll close this one for now, but feel free to reopen this if you'd like to discuss more.

Cheers
",zhigang1992,2016-09-21 20:01:39
453,2016-02-13 03:33:45,"This pull requests corrects the spelling of **CocoaPods** 🤓
https://github.com/CocoaPods/shared_resources/tree/master/media

<blockquote class=""twitter-tweet"" data-lang=""en""><p lang=""en"" dir=""ltr"">One day I’ll make a bot that looks through the READMEs of all Pods, looks to see if it uses “Cocoapods” and PRs “CocoaPods” :D</p>&mdash; Ørta (@orta) <a href=""https://twitter.com/orta/status/697374357975388160"">February 10, 2016</a></blockquote>

<script async src=""//platform.twitter.com/widgets.js"" charset=""utf-8""></script>


Created with [`cocoapods-readme`](https://github.com/dkhamsing/cocoapods-readme).  
",ReadmeCritic,2016-09-21 20:01:53
453,2016-09-21 20:01:57,"👍 
",zhigang1992,2016-09-21 20:01:53
452,2016-02-12 20:03:01,"I'd like to add an optional `parent` property that returns the `JSON` dictionary/array that a `JSON` object is contained in.

I'd also like an optional `parentKey` property (not sure on the name for this one) that would return the key on the `parent` that is used to access the `JSON` object.

I'd be willing to assist in implementing this, but I wanted to check for interest first.
",AnthonyMDev,2016-11-22 06:04:39
452,2016-11-22 06:04:39,"@AnthonyMDev Given that nobody has responded to this issue, I'm assuming that not a lot of people think that it could be part of their workflow. I personally fail to see the usecase here, and even if I had to refer to the parent, I would implicitly have that reference in my code because I would have provided the json path. I'm gonna go ahead and close this, let me know if you'd like me to reopen. Thanks!",ldiqual,2016-11-22 06:04:39
451,2016-02-10 12:03:23,"JSON objects can be indexed by a key path like ""items.0.isActive""
",vasilyIvanov,2016-10-08 04:52:33
451,2016-09-21 20:04:50,"Nice work.

One concern that I have is that this might break other ppl's existing app.
Also, how would you differentiate index 0 and string `""0""`?

Also, apologize for not getting to this PR earlier.
",zhigang1992,2016-10-08 04:52:33
451,2016-09-22 08:44:32,"Hi

how it can break existing apps? This branch is just adding support for key paths, old functionality is working as earlier. Can you please come up with breaking test case?

Yes, it's impossible to tell 0 and ""0"" at the moment. Those who want to use keys like ""0"" would have to stick to the old plain comma-separated paths. I guess it's not a big deal since it wouldn't crash anything, just failure.

When I were creating this PR my concern were to support key paths as it's already have been done in Apple frameworks so people wouldn't frustrate when moving to SwiftyJSON.
",vasilyIvanov,2016-10-08 04:52:33
451,2016-09-22 12:26:43,"Hm, for instance, if someone out there is using . in their json key. (I know it's not quiet possible)
Like:

{""com.apple.app1"":""fadbifdoafboadbfojabdfoajbfhauebbfuuryrwowrgk""}

Then this pr will cause their code to fail, and their is no way for them to easily fix it.

Granted, same thing happens for valueForKeyPath, still a bit of concern from my point of view.

What do you think? 
",zhigang1992,2016-10-08 04:52:33
451,2016-10-05 09:01:10,"Yes, agreed. On reading we can first try to read `com.apple.app1` and after failure `com`, `apple`, `app1`, but for writing I can't think of any decent logic.
Sorry for bothering, let's abandon this PR. Ok?
",vasilyIvanov,2016-10-08 04:52:33
451,2016-10-08 04:52:33,"Feel free to reopen this if needed.

Cheers
",zhigang1992,2016-10-08 04:52:33
450,2016-02-10 00:52:57,"i have jsonarrays **mySet** and **mySetNew** with the same structure.
how to add new items to mySet?
of course I can 

<S_CODE_TOKEN>

...but in first, it does not work, in second - how to do it simpler?
",djdance,2016-11-17 07:41:32
450,2016-11-17 07:41:31,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:41:32
449,2016-02-05 22:37:19,"Here is my experiment in PlayGround: 

<S_CODE_TOKEN>

Any advice on how to change to support more than 15 decimal precision?

Thank you. 
",zwang,2016-11-17 07:41:17
449,2016-02-05 23:15:28,"FYI: looks like this is a swift issue. https://bugs.swift.org/browse/SR-106
",zwang,2016-11-17 07:41:17
449,2016-11-17 07:41:17,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:41:17
448,2016-02-03 21:13:46,"`isExists()` isn't the correct way to phrase that statement and makes the code harder to read. Simply using `exists()` makes it easer to read and grammatically correct.

<S_CODE_TOKEN>
",CraigSiemens,2016-03-15 03:48:48
447,2016-02-03 03:30:20,"<S_CODE_TOKEN>
",acegreen,2016-11-17 07:41:01
447,2016-11-17 07:41:01,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:41:01
447,2017-03-27 21:51:35,I also get this error. Was there any fix?,miraan,2016-11-17 07:41:01
446,2016-01-31 12:34:04,"- `which's` doesnot seem to make lot of sense so i think its better off by using `whose`
- there was no space between `structuresby` which is changed to `structures by`
",kandelvijaya,2016-03-15 03:49:27
445,2016-01-31 03:45:44,"I have this JSON API returning an int Id which can be zero:

<S_CODE_TOKEN>

When parsing the json in Swift I try to cast it to an int:
`self.id = json[""id""].int!`

However when loading data **it detetects the 0 as a nil value** so it breaks. I know that the value is being received in the original Json (I checked the Raw Dictionary), so I guess it's actually the value of zero being treated as a nil.
",oscb,2016-11-17 07:40:52
445,2016-11-17 07:40:52,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:40:52
444,2016-01-31 01:10:45,"I have a project where I want to add some UI tests.  Whenever I run the test I get the following error:

<S_CODE_TOKEN>

Any ideas?  I don't have any issues running in the simulator or on a device.  I have a [test project](https://github.com/g0ld2k/CG-SwiftyJSON-Test-Issues) which you can download to reproduce the issue.

SwiftyJSON was added to the project as a submodule and included in the workspace.  Under ""Linked Frameworks and Libraries"" I had to set the status of SwiftyJSON.framework to Optional to prevent the following error when building on devices:

<S_CODE_TOKEN>

The code using SwiftyJSON is pretty simple:

<S_CODE_TOKEN>

Also my test is pretty simple as well:

<S_CODE_TOKEN>
",g0ld2k,2016-11-17 07:40:18
444,2016-11-17 07:40:18,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:40:18
443,2016-01-28 15:45:43,"The comment had array.empty which but it was implemented by array.isEmpty and similar for dictionary. Although the intent is clear, the comment suggested it was the code portion and it was mismatching. Thus, i think its necessary.
",kandelvijaya,2016-03-15 03:50:46
442,2016-01-28 15:01:26,"I've created an extension to implement [Moya](https://github.com/Moya/Moya) together with SwiftyJSON called [Moya-SwiftyJSONMapper](https://github.com/AvdLee/Moya-SwiftyJSONMapper).

It's also mentioned on the Moya page:
[Community Extensions](https://github.com/Moya/Moya#community-extensions)

Maybe it's possible to add a reference in the readme here aswel, to make it easier to adapt SwiftyJSON in combination with Moya?
",AvdLee,2016-11-17 07:39:59
442,2016-11-17 07:39:59,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:39:59
441,2016-01-22 21:29:52,"How do i append a Json array with new data?
",patchthecode,2016-04-17 17:52:04
441,2016-04-17 17:19:07,"Do you have an example of what you want to do  - and maybe we can help
",grantkemp,2016-04-17 17:52:04
441,2016-04-17 17:52:04,"It is ok. I already found a solution some time ago.
Will close this issue.
",patchthecode,2016-04-17 17:52:04
440,2016-01-21 20:13:08,"When I encode a URL string, SwiftyJSON is escaping all my forward slashes. So this

`http://path/to/some/thing.png`

becomes this (when viewing the JSON as text, it's fine when unencoded):

`http:\/\/path\/to\/some\/thing.png`

Which gets quite ugly and unreadable for long URLs. With JSON, it's nice to maintain the ""human-readable"" part of it, and it's handy to be able to copy-paste URLs from JSON into a browser. Is there any option to NOT escape forward slashes in SwiftyJSON? As I understand it, the JSON spec does not require it, and the whole string will be quoted in the file anyway.

So I guess this is a feature request to add that option, unless I'm missing it somewhere.
",benstahl,
440,2016-04-22 13:44:01,"having similar issue. Find a solution?
",geoherna,
440,2016-05-20 18:54:02,"This is `NSJSONSerialization.dataWithJSONObject` that likes to insert additional backslashes. Escaped forward slashes is also valid json.

Workaround 

<S_CODE_TOKEN>

It's not perfect, since `testForwardSlashes1` fails

<S_CODE_TOKEN>
",neoneye,
439,2016-01-17 08:38:08,"I have a JSON array (say, dataObj) generated by SwiftyJSON and I try to remove its element like this:

<S_CODE_TOKEN>

After execution, dataObj becomes

[..., null, ..., ... ]

What's the way to really remove an element for a JSON array created by SwiftyJSON?
",joe528,2016-11-17 07:38:28
439,2016-01-19 21:48:40,"@joe528 

Try

<S_CODE_TOKEN>
",syedsanahassan,2016-11-17 07:38:28
439,2016-02-09 22:39:25,"@syedsanahassan Thanks. That works for me. I feel like we should be able to use the `nil` syntax

`dataObj[m] = nil`

Hoping that this is coming soon?
",AnthonyMDev,2016-11-17 07:38:28
439,2016-11-17 07:38:28,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:38:28
438,2016-01-13 05:44:41,"Please, add support for mapping JSON to enums.
Suppose, it would be very helpful.
Thanks.
",EugeneGoloboyar,
438,2016-11-17 07:38:12,"@EugeneGoloboyar Can you clarify what you'd like us to implement, maybe with an usage example?
",ldiqual,
438,2016-11-22 06:06:58,@EugeneGoloboyar Bump.,ldiqual,
437,2016-01-12 21:32:25,"typo
",danipralea,2016-01-27 23:59:05
436,2016-01-12 17:57:44,"I found here that _\n_ is wrong char for string parsed by JSON.parse()
But some servers send it. 
To avoid this I have to do

<S_CODE_TOKEN>

instead of short (data: data)

So is it possible to optionally turn on possibility to allow \n in parsed string/data?
",djdance,
436,2016-11-22 06:26:05,"@djdance Sorry for the delay on this. It seems that the latest version of SwiftyJSON parses new lines correctly:

<S_CODE_TOKEN>

Do you have an example of code that fails to parse correctly? Thank you",ldiqual,
435,2016-01-12 17:47:12,"Let's try

<S_CODE_TOKEN>

output: _json=nil, json1=Optional(""Warning""), json2=Optional(""Warning"")_

Questions:
1. Why first json is nil? What kind of string has to be s?
2. Why no notes about JSON.parse() in start page/manual/docs? I'd found it in issues after 2 hours of search. Please add to manual
3. Why commented **let s2=...** is not possible in any case? Can it be made possible?

thanks
",djdance,2016-02-22 09:05:51
435,2016-02-21 19:14:53,"This framework has been designed to use with the way Cocoa works with http requests, which is with a block of data instead of strings. You could always make an extension to the json object with a convenience init that takes a string and converts it to the NSData format the framework is expecting.

I recommend you put each of your issues in a separate ticket, just like you would with regular bug reports so they can be tracked individually.

(Not associated with this project, just trying to help)
",voidref,2016-02-22 09:05:51
435,2016-02-22 09:05:51,"okay, just leave _strings questions_ here for someone who will be confused about it too.
yes, stranger, do no do so as described above.

_parse_ issues added to tickets
https://github.com/SwiftyJSON/SwiftyJSON/issues/459
",djdance,2016-02-22 09:05:51
434,2016-01-08 12:29:24,"Hi,

what is the best way to catch the json data which of type JSON in user defaults or coredata
",karnakar,2016-11-17 07:37:13
434,2016-01-12 01:04:32,"Do you mean cache?
",zhigang1992,2016-11-17 07:37:13
434,2016-06-20 05:48:50,"Is there a way we can use the same model classes for core data?
",rockylive,2016-11-17 07:37:13
434,2016-11-17 07:37:12,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:37:13
433,2016-01-06 01:39:24,"Consider the following:

<S_CODE_TOKEN>

I like that the optional `let name` fails -- but and not really satisfied with the lack or inconsistency of the errors.

Forgiveness if I'm missing something dumb -- I'm just getting started with SwiftyJSON.
",zorn,2016-11-17 07:36:58
433,2016-01-21 00:21:26,"@zorn Is there even an init for that?
",DominicFrei,2016-11-17 07:36:58
433,2016-01-21 01:35:00,"The type of `json[""name""]` is `Int`, it will work if you try 

<S_CODE_TOKEN>
",wanganjun,2016-11-17 07:36:58
433,2016-02-21 19:17:46,"I suspect there's no error as the error would just tell you ""could not convert to `type`"", which is implicitly obvious from the fact that you are in the `else` clause.
",voidref,2016-11-17 07:36:58
433,2016-11-17 07:36:58,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:36:58
432,2016-01-06 01:07:07,"OS X versions after OS X 10.8 Mountain dropped the “Mac” part of their
name. Now matches rest of README as well.
",saagarjha,2016-01-12 01:00:47
431,2016-01-05 02:22:56,"will be nil
",longxianlin,2016-01-05 02:34:31
431,2016-01-05 02:34:44,"mistake
",longxianlin,2016-01-05 02:34:31
430,2015-12-28 07:01:09,"has the master and 7.1 branch been merged?
",gaming-hacker,2016-01-03 20:15:21
430,2016-01-03 19:26:41,"Seems so - 
[https://github.com/SwiftyJSON/SwiftyJSON/commit/61c47231e06301bcd4e0c5d345d5a76cfa759b9a](https://github.com/SwiftyJSON/SwiftyJSON/commit/61c47231e06301bcd4e0c5d345d5a76cfa759b9a)
",lachezar,2016-01-03 20:15:21
430,2016-01-03 20:15:21,"cool
",gaming-hacker,2016-01-03 20:15:21
429,2015-12-27 16:36:58,"array json, cannot be parsed by string, but by data.

source of example: @LECASON

<S_CODE_TOKEN>

will work

<S_CODE_TOKEN>

will work

BUT

<S_CODE_TOKEN>

will not work

<S_CODE_TOKEN>

will not work

<S_CODE_TOKEN>

will not work
",frogcjn,2016-01-28 02:22:17
429,2016-01-28 02:22:17,"You're looking for `parse` 
https://github.com/SwiftyJSON/SwiftyJSON/blob/master/Source/SwiftyJSON.swift#L86

The string literal conversion was meant to be used within JSON object.
like this:

<S_CODE_TOKEN>

Cheers.

:beers: 
",zhigang1992,2016-01-28 02:22:17
428,2015-12-24 03:12:07,"build failed when use `carthage update` command.
### log

<pre>
*** Cloning SwiftyJSON
*** Checking out SwiftyJSON at ""2.3.1""
*** xcodebuild output can be found in /var/folders/xl/z7j5r29d0cs6t5jg7_bqkk5w0000gn/T/carthage-xcodebuild.UXfY4s.log
*** Building scheme ""SwiftyJSON OSX"" in SwiftyJSON.xcworkspace
*** Building scheme ""SwiftyJSON watchOS"" in SwiftyJSON.xcworkspace
** BUILD FAILED **


The following build commands failed:
    Check dependencies
(1 failure)
A shell task failed with exit code 65:
** BUILD FAILED **


The following build commands failed:
    Check dependencies
(1 failure)
</pre>
",aotian16,2016-11-17 07:36:12
428,2016-01-05 23:55:24,"It is the same as tvOS platform.

In the log it says:

> Build settings from command line:
>    ONLY_ACTIVE_ARCH = NO
>   SDKROOT = appletvsimulator9.1
> === BUILD TARGET SwiftyJSON tvOS OF PROJECT SwiftyJSON WITH CONFIGURATION Release ===
> 
> Check dependencies
> target 'SwiftyJSON tvOS' has bitcode disabled (ENABLE_BITCODE = NO), but it is required for the 'appletvos' platform
",candostdagdeviren,2016-11-17 07:36:12
428,2016-02-05 18:26:16,"I just had the same problem but since I only need the framework for iOS I ran `carthage update --platform iOS` and it worked.
",iONsky,2016-11-17 07:36:12
428,2016-11-17 07:36:12,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:36:12
427,2015-12-21 16:49:36,,nanoxd,2016-01-12 01:01:13
426,2015-12-21 11:08:06,"below is my test case

<S_CODE_TOKEN>

 XCTAssertEqual failed: (""nil"") is not equal to (""Optional(1)"")

Maybe it's not a issue, but I still feel strange.
",bjzhou,2016-11-17 07:35:59
426,2015-12-30 10:07:39,"your sex response is string ,not int. If you want to get the value, please use the intValue
",hilen,2016-11-17 07:35:59
426,2016-11-17 07:35:59,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:35:59
425,2015-12-15 18:53:12,"XCTAssertEqual(JSON(NSNumber(unsignedLong: ULONG_MAX)).description,""(ULONG_MAX)"")

Xcode Version 7.2 (7C68)
",lptr2,2016-11-17 07:35:27
425,2016-11-17 07:35:27,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:35:27
424,2015-12-15 08:46:47,"<S_CODE_TOKEN>
",YLKwan,2016-11-17 07:35:12
424,2015-12-15 15:40:16,"@YLKwan in the second JSON the data value is a NSNumber type, since string property is a optional value its able to return a nil but stringValue is not an optional, so when you try to get the value via stringValue this property is able to use the stringValue type from the NSNumber object.

 check the code for the string property

<S_CODE_TOKEN>

also for the stringValue

<S_CODE_TOKEN>

observe the case when the type is a number 

<S_CODE_TOKEN>

object is another property that returns the self.rawNumber and rawNumber a NSNumber type

Regards.
",jorjuela33,2016-11-17 07:35:12
424,2015-12-18 06:21:45,"@YLKwan , In Swift, for AnyObject type stringValue is used to type cast Int to String . In your case when you are doing "".string"" is incorrect as you have integer value in your data so to type cast it to string you need to do "".stringValue""
",neelamsharma12,2016-11-17 07:35:12
424,2016-11-17 07:35:12,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:35:12
423,2015-12-11 11:58:42,,ZetrixWeb-iOS,2015-12-14 10:48:47
423,2015-12-11 16:45:26,"You need to provide more information.

Project target?
CocoaPods version?
Xcode version?

I tested with Xcode 7.2 using the latest version of CocoaPods and it works with:

<S_CODE_TOKEN>
",paradoxally,2015-12-14 10:48:47
423,2015-12-14 10:46:57,"I think he has the same thing i got aka no such module on import.
For me it's project target osx 10.9, pods 0.39, xcode 7.1.1
",tirrorex,2015-12-14 10:48:47
422,2015-12-11 03:57:55,"I create a class Message with details as bellow:
import Foundation
import SwiftyJSON
class Message{
    var type:String
    var content:[UInt8]

<S_CODE_TOKEN>

}

1, I create a message instance: 
let content:[UInt8] = [1,2,3,4,5]
let msg = Message(""test"",content)
2, And then I print(msg.json) , the content UInt8 array not convert successfully!
Can you help me?
Thanks a lot.
",fcbflying,2016-11-17 07:32:06
422,2016-11-17 07:32:06,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.
",ldiqual,2016-11-17 07:32:06
421,2015-12-10 16:45:10,"Where is `json[""date""].date` or `json[""time""].time`?
",rmoffett,2016-01-30 03:26:15
421,2015-12-17 10:18:28,"You may use an extension like below,

<S_CODE_TOKEN>

and initialize formatters depending on the data you may receive.

<S_CODE_TOKEN>
",kukabi,2016-01-30 03:26:15
421,2016-01-28 03:13:02,"I like this answer, however I have a question.  If the dateFormat I enter in the Formatter class doesn't match the json, will it not return anything?

For example, my json date is `2016-01-27T12:01:40.915-07:00` and my `dateFormat` is `""yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'SSS'-'xxx""` but nothing is returned. Is that because my `dateFormat` is wrong, or do I have issues elsewhere?
",craigpearce5,2016-01-30 03:26:15
421,2016-01-29 14:27:43,"My JSON format is same as yours and here is the format I used: ""yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'SSSZZ""
",lmacfadyen,2016-01-30 03:26:15
421,2016-01-29 16:13:32,"@lmacfadyen Thanks very much, I will give that a try.
",craigpearce5,2016-01-30 03:26:15
421,2016-01-30 03:15:00,"@lmacfadyen That worked.  Thanks very much.
",craigpearce5,2016-01-30 03:26:15
421,2016-01-30 03:15:42,"@rmoffett This issue should be closed.
",craigpearce5,2016-01-30 03:26:15
421,2016-06-21 10:46:23,"It would be good to add locale setting on the NSDateFormatter to this, otherwise it may fail depending on device locale.
",yesitsdave,2016-01-30 03:26:15
421,2017-01-31 18:50:05,"Thank you for this nice snippet, it saved me some time. 

Here is the code updated for Swift3:

<S_CODE_TOKEN>",AlBlanc,2016-01-30 03:26:15
420,2015-12-09 14:44:53,"was set to use always the most current watch OS version (currently 2.1) with the result that the lib is not usable with apps deploying on watchOS 2.0
",AlexanderNey,2016-01-28 00:00:17
419,2015-12-09 02:03:15,"Great framework!
",Adlai-Holler,2016-03-15 03:46:07
419,2016-03-15 03:40:17,"this is a nice PR, can you please merge it ?
",maxday,2016-03-15 03:46:07
419,2016-03-15 03:46:03,"Oh, yes! thank you!
",lingoer,2016-03-15 03:46:07
419,2016-03-15 03:49:20,"Thanks :)
",maxday,2016-03-15 03:46:07
418,2015-12-08 04:05:11,"i thought there was an example somewhere of how to read JSON file, modify a value and then write back to same file without modifying other contents? does JSON conform to NSData? NSDictionary? NSArray?? using NSFileHandle???

figured it out, you have to recast to a NSDictionary via object
",gaming-hacker,2015-12-08 08:34:45
417,2015-12-07 17:31:12,"Say I have `let jsonObject = json[""AReallyLongName""][""AndASecondReallyLongName""]`.  Is it possible to line wrap this statement, like:

`let jsonObject = json[""AReallyLongName""]`
`[""AndASecondReallyLongName""]`

Currently, this is a compile error.  I can work around it by assigning multiple jsonObjects, but I'd rather line wrap.

`let jsonObject1 = json[""AReallyLongName""]`
`let jsonObject2 = jsonObject1[""AndASecondReallyLongName""]`

Thanks,
Michael
",michaeltnguyen,2016-11-17 07:34:32
417,2015-12-18 06:36:25,"@michaeltnguyen , Yes it is possible . If your "" json[""AReallyLongName""][""AndASecondReallyLongName""] "" is returning string object then you need to do  json[""AReallyLongName""][""AndASecondReallyLongName""].string.

Additional info: 
If your json[""AReallyLongName""] part returning array then you need access it by using index as json[""AReallyLongName""] [index] .
And then you can use it like this , 
jsonObject = json[""AReallyLongName""][index][""AndASecondReallyLongName""].string
",neelamsharma12,2016-11-17 07:34:32
417,2015-12-18 15:05:01,"@neelamsharma12 
Thanks for your comment, but it doesn't really address my question.  I'd like to have a multi-line json statement (e.g., for one that is greater than 80 characters and won't fit on a single line).

I suppose it's more of a swift question than a SwiftyJSON question, though.
",michaeltnguyen,2016-11-17 07:34:32
417,2016-11-17 07:34:32,"There hasn't been much activity on this issue for a while so I'm gonna go ahead and consider it fixed. Please let us know it you'd like to reopen it.

On a side note, you can probably use something like

<S_CODE_TOKEN>
",ldiqual,2016-11-17 07:34:32
416,2015-12-07 05:24:31,"I have a problem when I am converting a json like string to a json.The string is:
[{day:""2015-12-07 11:30:00"",open:""12.110"",high:""12.180"",low:""12.110"",close:""12.170"",volume:""5913884""},{day:""2015-12-07 13:30:00"",open:""12.170"",high:""12.180"",low:""12.160"",close:""12.160"",volume:""480608""}]
my code is:
let apijson = JSON(data:string.dataUsingEncoding(NSUTF8StringEncoding)!)
print (apijson)
print (""this is (apijson[0].stringValue)"")
but it is supposed to run out an error,So is there any proper way to parse this string to Json?
",zhmiblog,2015-12-19 10:37:48
416,2015-12-07 16:50:24,"@zhmiblog, I haven't tried to verify this in a playground, but your string is not valid JSON.  Per http://www.json.org, you must quote the keys of your objects:  `[{""day"":""2015-12-07 11:30:00"",""open"":""12.110"",""high"":""12.180""`....
",regan-sarwas,2015-12-19 10:37:48
416,2015-12-14 05:08:49,"Yes like @regan-sarwas said is a invalid JSON
",jorjuela33,2015-12-19 10:37:48
416,2015-12-15 01:35:33,"@regan-sarwas,@jorjuela33. I already tried to standardize the string, added quotes to all keys. then it worked. thank you two.
",zhmiblog,2015-12-19 10:37:48
415,2015-12-06 19:09:01,"Any plans to merge this into master?
",JamieWhite,2015-12-14 11:57:18
415,2015-12-11 10:45:04,"+1
",Hardenn,2015-12-14 11:57:18
415,2015-12-11 13:53:48,"Hi! https://github.com/SwiftyJSON/SwiftyJSON/compare/xcode7.1 shows commits in xcode7.1 that aren't in master. There are none, it was merged here: 61c47231e06301bcd4e0c5d345d5a76cfa759b9a
",rbrown,2015-12-14 11:57:18
415,2015-12-14 11:57:17,"Ah I wasn't looking at it properly for some reason! It seems odd to keep this branch around though.
",JamieWhite,2015-12-14 11:57:18
414,2015-12-06 08:39:29,"Hello, 

I took the latest source from the master branch. When adding it into my project im getting ~ 75 errors; ranging from...

AnyObject is not convertable... did you mean to use ! to force downcasting
Type JSON does not conform to protocol 'Sequence Type'
Availability has been named to available. 
Extra Arguements
# has been removed..

Im fairly new to swift, help would be greatly appreciated!
",gminky019,2015-12-06 08:57:01
414,2015-12-06 08:57:18,"I was using the wrong version!
",gminky019,2015-12-06 08:57:01
414,2015-12-23 17:33:53,"I'm having this issue too. What's the ""right version""?? 
",klampotang,2015-12-06 08:57:01
414,2015-12-23 17:42:35,"You have to be careful on your version of xcode as well.

I still believe I took the latest version and it worked. I do not remember off the top of my head but it is on my public repository project; all i know is I had to get to a special project page for the correct version. Heres the link to the project feel free to grab the files there maybe it will work for you! https://github.com/gminky019/GDC_Protoype
",gminky019,2015-12-06 08:57:01
413,2015-12-06 05:35:03,"Hello guys, are there any plans in near future make it linux compatible?
",DarthRamone,
413,2015-12-06 07:23:19,"Waiting for Linux support Swift
",dickwu,
413,2015-12-06 07:27:53,"https://swift.org/download/#latest-development-snapshots

Isn't it what are you waiting for, or Im wrong?:)
",DarthRamone,
413,2015-12-07 01:50:28,"you can only use terminal to write swift. We need an IDE to write the full project
",dickwu,
413,2015-12-07 09:51:50,"But you already have one - Xcode. To make code works on linux doesn't mean that it has to be written on linux an linux friendly IDE. Linux can compile project if it was made on Mac, code is code, you know. BTW, what do you mean by saying ""we need""? I don't see your contributions in SwiftyJSON :) Maybe developers should answer it. 
",DarthRamone,
413,2015-12-09 21:56:42,"This is essentially the same issue as mine: 

https://github.com/SwiftyJSON/SwiftyJSON/issues/410
",hpux735,
413,2016-01-28 07:42:34,"@DarthRamone  @hpux735  You could try this pure Swift JSON package [TidyJSON](https://github.com/benloong/TidyJSON) that run on all Swift platform.
",benloong,
413,2016-03-10 16:27:30,"Or https://github.com/czechboy0/Jay
",czechboy0,
413,2016-04-25 10:27:38,"Or [IBM-Swift/SwiftyJSON](https://github.com/IBM-Swift/SwiftyJSON) branch
",weakish,
413,2016-04-25 15:26:56,"I've been enjoying https://github.com/postmates/PMJSON so far :)
",hpux735,
413,2016-11-22 06:29:54,"@shmuelk @ianpartridge It seems that you guys have been maintaining an IBM fork of SwiftyJSON. Would you mind elaborating on the context of the fork and whether it would be worth merging your changes into the main repo? If your fork contains Linux support, as @weakish seems to suggest, it would be really valuable.",ldiqual,
413,2016-11-22 10:17:22,"Hi, yes the `IBM-Swift/SwiftyJSON` repo does add support for Linux.",ianpartridge,
413,2016-11-22 19:48:28,"@ianpartridge Interesting. Any other changes that would be worth merging in the main repo? Also, are the changes production-ready or is it just an internal fork that respond to specific IBM needs?",ldiqual,
413,2016-11-23 10:04:18,"We ported to Swift 3 a while ago, but I guess this repo has that now as well. I think the rest of the work was around compatibility between Darwin NSJSONSerialization and swift-corelibs's version.",ianpartridge,
412,2015-12-04 12:30:47,"//setter does not work,data1 has no element
var data1:JSON!
data1 = JSON([:])
data1[""sn""].string = ""1111""

//this is ok
var data2:JSON = JSON([:])
data2 = JSON([:])
data2[""sn""].string = ""1111""

//also ok
var data3:JSON = JSON.null
data3 = JSON([:])
data3[""sn""].string = ""1111""
",yikuo123,2016-11-22 07:32:37
412,2016-01-12 20:14:06,"var data = JSON.parse("""") not work too :-( i.e. - date has no element for ""sn""
",djdance,2016-11-22 07:32:37
412,2016-07-14 06:39:43,"bump
",madsonic,2016-11-22 07:32:37
412,2016-11-22 06:34:59,"@yikuo123 Sorry for the delay on this. I was able to reproduce by using your code above, I'll look more into this asap.
@djdance `JSON.parse("""")` not working is intended, because the provided string is not a valid JSON string. I'm proposing a new initializer here https://github.com/SwiftyJSON/SwiftyJSON/issues/459#issuecomment-262155181, please add a 👍 if you think it'd be valuable (especially the `throws` part). Thanks!",ldiqual,2016-11-22 07:32:37
412,2016-11-22 07:32:37,Closing as duplicate of https://github.com/SwiftyJSON/SwiftyJSON/issues/215,ldiqual,2016-11-22 07:32:37
411,2015-12-04 02:26:04,"can you tell me this request arrived you?
",denemealican,2015-12-04 09:07:42
410,2015-12-03 23:55:02,"There are a hand full (maybe about 20) of compile errors under open source swift.  I'm not sure if this is any kind of priority, but it would be cool for it to work! :)
",hpux735,2016-11-17 07:29:24
410,2016-11-17 07:29:24,"Closing as duplicate of https://github.com/SwiftyJSON/SwiftyJSON/issues/413 which has a longer comment thread
",ldiqual,2016-11-17 07:29:24
409,2015-12-01 11:08:41,"sometimes analyze empty string """" to be a Bool type . hope you can solve it .
",smalldu,2015-12-03 01:04:08
409,2015-12-02 03:19:41,"@smalldu Can you provided a bit of more example on this?

Maybe a code snippet?
",zhigang1992,2015-12-03 01:04:08
409,2015-12-02 04:10:07,"<S_CODE_TOKEN>

if i reproduce it someday , i will show you the json data and code snippet
",smalldu,2015-12-03 01:04:08
409,2015-12-03 01:04:08,"Cool, feel free to reopen this if needed.
",zhigang1992,2015-12-03 01:04:08
408,2015-11-30 05:13:15,"I think the the performance problems ( eg #241 ) are related to the type-casts of Swift Dictionary and NSDictionary.

The Instruments shows that SwiftyJSON keeps type-casting every NSDictionary to Dictionary and causes much memory allocating and copying.

In my experience, use objects as they are in Swift can be much faster, do not do any type-cast.
",wxiaoguang,
408,2016-08-04 06:21:34,"Any reaction from the developers regarding this?
",Raymond26,
408,2016-11-22 07:08:26,"@wxiaoguang @Raymond26 As of SwiftyJSON 3 and Swift 3, I don't believe there is any type cast to NS* values besides in the `Comparable` extension: https://github.com/SwiftyJSON/SwiftyJSON/blob/master/Source/SwiftyJSON.swift#L1266. Would you mind sharing some code that would cause performance issues so we can look into it deeper?",ldiqual,
407,2015-11-26 11:50:14,,chukky94,2015-11-26 11:54:11
406,2015-11-26 11:37:50,,zhigang1992,2015-11-26 11:45:33
405,2015-11-25 15:23:10,"This pull request updates the code sign identity so that `carthage update --platform iOS` won't fail on travis ci.
",diogoguimaraes,2015-11-26 12:00:30
405,2015-12-02 12:57:19,"@zhigang1992 do you have an ETA to the next release? 
Thank you.
",diogoguimaraes,2015-11-26 12:00:30
405,2015-12-04 09:09:15,"@diogoguimaraes I just tagged the release, we will update CocoaPods shortly.
",zhigang1992,2015-11-26 12:00:30
405,2015-12-04 10:32:20,"Thanks!
",diogoguimaraes,2015-11-26 12:00:30
404,2015-11-25 03:58:39,"Hey, when I tried running the SwiftyJSON I got 5 warnings and 7 issues in the main file in the following lines:

<S_CODE_TOKEN>

Opening SwiftyJSON.swift in Xcode 7.1.1 will show the same issues
",timroesner,2016-11-17 07:26:35
404,2015-11-26 11:39:08,"This seems to be pretty old code.

Can you try to update it to the newer version?
",zhigang1992,2016-11-17 07:26:35
404,2016-11-17 07:26:35,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:26:35
403,2015-11-25 02:28:24,"I use sshtunnel proxy the cocoapod request.

pod update

<S_CODE_TOKEN>
### pod file

<S_CODE_TOKEN>
",wood23636,2015-11-25 13:06:06
403,2015-11-25 13:05:56,"oh, success after cocoapod update to 0.39.0
",wood23636,2015-11-25 13:06:06
402,2015-11-24 21:40:16,"So we don't contaminate public equal operator as referenced [here](https://github.com/SwiftyJSON/SwiftyJSON/issues/302)
",zhigang1992,2015-11-24 22:08:26
401,2015-11-24 17:29:47,"This pull request makes the library potentially safer by removing almost all instances of force unwrapping in favor of optional binding and nil coalescing.

Please take a look and let me know what you think. I've run the tests to verify this functionality, and all seems good there.
",bcapps,2015-11-24 21:24:27
401,2015-11-24 17:48:37,"cc @zhigang1992 
",bcapps,2015-11-24 21:24:27
401,2015-11-24 23:17:07,"Looks great. thx
",zhigang1992,2015-11-24 21:24:27
400,2015-11-20 07:31:16,"Wrong JSON's type specification URL, it should be http://www.json.org.
",azone,2015-11-24 21:25:09
399,2015-11-18 09:34:47,"Hi there,

I deleted the Framework search paths for target OSX Test - otherwise I get a warning during build (e.g. using carthage). The other targets are fine.
",LordNali,2015-11-24 21:42:21
398,2015-11-11 14:38:51,"Fixes #397
",erez-rabih,2015-11-13 20:32:21
397,2015-11-11 09:57:23,"Hi,

I just tried to use the example provided in the README for reading JSON via AlamoFire responses and it doesn't work: 

<S_CODE_TOKEN>

It looks like Alamofire's responseJSON method does not take the 4 argument closure as an argument anymore, at least on the latest version which is 3.X.X

I am willing to supply a working example if needed.

Thanks.
",erez-rabih,2015-11-13 20:32:21
397,2015-11-11 13:42:49,"@erez-rabih did you manage to get it working? I would be glad if you could post the correct way to use it.
",guidev,2015-11-13 20:32:21
397,2015-11-11 15:00:39,"#398 works with current versions of Alamofire and SwiftyJSON:
- Alamofire (3.1.2)
- SwiftyJSON (2.3.1)
",erez-rabih,2015-11-13 20:32:21
397,2015-11-11 21:32:34,"thank you
",guidev,2015-11-13 20:32:21
396,2015-11-10 17:44:19,"arm64 must be set in UIRequiredDeviceCapabilities for tvOS targets when uploading to iTunes Connect.
",simonbs,2015-11-13 20:32:35
395,2015-11-09 06:09:18,"I just want to build iOS scheme but fails on watchOS scheme.

Command I executed is as follows:

<S_CODE_TOKEN>

What should I do?
",hiragram,2015-11-09 08:00:10
395,2015-11-09 07:18:30,"the latest SwiftyJSON version is `2.3.1` and it seems you were using the `2.2.1` ?
",lingoer,2015-11-09 08:00:10
395,2015-11-09 07:20:53,"@lingoer I am still using Swift 1.2 ...
",hiragram,2015-11-09 08:00:10
395,2015-11-09 08:00:08,"@lingoer This issue was solved by removing Carthage directory.
Maybe Carthage/Build/tvOS directory caused this issue I think.
Thanks for your quick reply.
",hiragram,2015-11-09 08:00:10
394,2015-11-08 19:14:05,"I have a `JSON` dictionary that a `UIViewController` references, and when i overwrite values, it doesn't update the value with the new value

<S_CODE_TOKEN>

I've also tried `self.dict[""favorites""].int = newValue` and `self.dict[""favorites""].intValue = newValue`

No matter what happens, the value always remains what it was originally set to.

Eg: If the original value of `dict[""favorites""]` is `5` — and run `decrement`, followed by `increment` (meaning step down to `4`, back to `5`), you would expect it to be `5`, but instead it's `6` — which I can only conclude that there is a bug in overriding old values with the Setters.
",ded,2015-11-08 19:34:29
394,2015-11-08 19:34:29,"After researching some of the other open issues, I see that #284 is related to my problem. As it turns out, non-optionals are immutable :confused: 

Good to know for the future.
",ded,2015-11-08 19:34:29
393,2015-11-08 17:10:13,"How can i make `[String: AnyObject]` from `JSON`?

<S_CODE_TOKEN>
",mirzadelic,2015-11-09 07:24:32
393,2015-11-09 07:24:16,"<S_CODE_TOKEN>
",lingoer,2015-11-09 07:24:32
392,2015-11-08 14:12:38,"When we get json like this `""query""=""1""` we'd like to as check for this parameter as well as to get it as integer. Unfortunately, `.intValue` does not return optional, neither `.number?` accepts `.type == .String`

So, we are not able to use this simple sentence `guard let query = json[""query""].int else {}` nor this one `guard let query = json[""query""].intValue else {}`, because it's not optional, and because it returns 0 even if no `query` variable in JSON
",dmytro-shchurov,2015-11-13 20:36:45
392,2015-11-13 20:36:42,"This should work

<S_CODE_TOKEN>
",zhigang1992,2015-11-13 20:36:45
392,2015-11-13 20:37:02,"Feel free to reopen if needed
",zhigang1992,2015-11-13 20:36:45
392,2015-11-13 20:58:34,"This will not work for `""query"": 1` as 

<S_CODE_TOKEN>

In case `self.type == .Number` `json[""query""].string` returns `nil`
`stringValue` is not optional again
",dmytro-shchurov,2015-11-13 20:36:45
392,2015-11-13 21:01:45,"So the JSON scheme itself is not static?
",zhigang1992,2015-11-13 20:36:45
392,2015-11-13 21:04:08,"I only can imagine which engine is used on a server to generate JSON data, and which generation schema might be used... Some ""optimiser"" might decide to reduce quote characters for numbers, or otherwise to wrap all values with quotes.
",dmytro-shchurov,2015-11-13 20:36:45
392,2015-11-13 21:10:50,"+1
Yep.. at the moment I check exactly for a key, and then get a `..Value` property (which is casted).
But, what about using Optional mark for not existing parameters? Now, optionality means failed casting and this is anti-pattern IMHO
",dmytro-shchurov,2015-11-13 20:36:45
392,2015-11-13 21:12:58,"Imho casting failure must be handled by user, because it means something unexpected/wrong data
",dmytro-shchurov,2015-11-13 20:36:45
392,2015-11-13 21:13:54,"Can you give a bit more code on this?

I'm not quiet 100% sure about the situation here. lol
",zhigang1992,2015-11-13 20:36:45
392,2015-11-13 21:15:44,"would something like this help?

<S_CODE_TOKEN>
",zhigang1992,2015-11-13 20:36:45
392,2015-11-13 21:36:04,"+1
Seems acceptable as allows to guard and assign at once. This will make code clear. Thank you )
PS But still `.int | .string` result mixes missing parameter and unexpected casting in one method with no explicit indication.
",dmytro-shchurov,2015-11-13 20:36:45
391,2015-11-08 11:18:26,"If I include SwiftyJson in a TVOS and try and submit to the app store I get

ERROR ITMS-90502: ""Invalid Bundle. Apps that only contain the arm64 slice must
also have 'arm64' in the list of UIRequiredDeviceCapabilities in Info.plist.""

It seems this is a new thing that apple are doing, what would be the impact of adding this to the info.plist?
",ztolley,2015-11-13 20:37:46
391,2015-11-13 20:37:46,"Should've been fix [here](https://github.com/SwiftyJSON/SwiftyJSON/pull/396)
",zhigang1992,2015-11-13 20:37:46
390,2015-11-06 18:50:46,"The documentation for installing via CocoaPods should be updated. It no longer works following the instructions listed. 
",BraydenGirard,2015-11-24 21:23:16
390,2015-11-07 09:21:04,"Can you paste in the error that you run into? 
",zhigang1992,2015-11-24 21:23:16
390,2015-11-18 18:34:38,"Worked fine for me. If you are having trouble importing the library, try building your project in Xcode (⌘b).
",mfstephens,2015-11-24 21:23:16
389,2015-11-06 09:33:12,"in example has 

> let path = [1,""list"",2,""name""]
> let name = json[path].string

i try it and get a parse error 

> Cannot subscript a value of type 'JSON' with an index of type '[NSObject]'
",lyragosa,2015-11-09 10:06:02
389,2015-11-06 10:12:59,"another example

> //Array & Dictionary
> var json: JSON =  [""name"": ""Jack"", ""age"": 25, ""list"": [""a"", ""b"", ""c"", [""what"": ""this""]]]
> json[""list""][3][""what""] = ""that""
> json[""list"",3,""what""] = ""that""
> let path = [""list"",3,""what""]
> json[path] = ""that""

has the same problem in line -> json[path] = ""that""

osx 10.11.1  xcode 7.0.1
",lyragosa,2015-11-09 10:06:02
389,2015-11-06 15:45:20,"Seems to be a type issue, can you try this 

<S_CODE_TOKEN>
",zhigang1992,2015-11-09 10:06:02
389,2015-11-09 09:55:33,"hmmm, it works ,thx
",lyragosa,2015-11-09 10:06:02
388,2015-11-06 01:53:47,"I want transform dictionary to string, but I can't use SwiftyJSON to do 

Is SwiftyJSON can not do it or I'm used wrong.

ex:

<S_CODE_TOKEN>
",seedotlee,2015-11-06 15:46:58
388,2015-11-06 15:46:45,"<S_CODE_TOKEN>
",zhigang1992,2015-11-06 15:46:58
387,2015-11-04 01:52:44,"I want to create swiftyJSON file like below, it does not work. any help?

<S_CODE_TOKEN>
",nikki2pro,2015-11-04 02:53:46
387,2015-11-04 02:53:30,"This should work

<S_CODE_TOKEN>
",zhigang1992,2015-11-04 02:53:46
387,2015-11-04 02:53:46,"Feel free to reopen this if you have any more questions. :)
",zhigang1992,2015-11-04 02:53:46
386,2015-11-03 08:52:13,"When i use `cartheage update` , get the following error:

_xcodebuild: error: Failed to build workspace SwiftyJSON with scheme SwiftyJSON iOS.
    Reason: The run destination iPad 2 is not valid for Running the scheme 'SwiftyJSON iOS'.
A shell task failed with exit code 70:_

This problem was happened before?
",russellyi,2015-11-04 02:09:54
386,2015-11-03 12:38:15,"Please upgrade to carthage version 0.9.2
",zhigang1992,2015-11-04 02:09:54
386,2015-11-04 02:09:54,"Hao le, thanks!
",russellyi,2015-11-04 02:09:54
385,2015-11-01 21:54:03,"I have this JSON:

<S_CODE_TOKEN>

This is work: `json[""10.11.2015""][index]`, but how to get value using indexes like 0, 1, 2,… in index1: `json[index1][index2]`.
",polyskalov,2015-11-02 19:25:51
385,2015-11-02 18:58:35,"Please keep in mind that order in dictionary are not strictly the same as order coming in from JSON Response.

<S_CODE_TOKEN>
",zhigang1992,2015-11-02 19:25:51
385,2015-11-02 19:25:51,"Thanks so much! 
",polyskalov,2015-11-02 19:25:51
384,2015-11-01 03:22:06,"Add a empty playground file
",zhigang1992,2015-11-01 03:29:05
383,2015-11-01 03:01:38,,zhigang1992,2015-11-01 03:14:30
382,2015-10-31 09:01:20,"Not sure if anybody else got the same error, but, building the latest code of Example project, my Xcode complained ""'array' is unavailable: please construct an Array from your lazy sequence: Array(...)"" on line 55 and 86 in ViewController.swift.

After changing them to:
         let key: AnyObject = Array(self.json.dictionaryValue.keys)[row]
the build passed. Any other thought?
",haitaoxin,2015-11-01 03:14:58
382,2015-11-01 03:14:58,"Just fixed in master.

Thx for pointing it out.

:beers: 
",zhigang1992,2015-11-01 03:14:58
381,2015-10-31 00:55:53,,zhigang1992,2015-10-31 03:46:15
380,2015-10-30 01:28:51,,joshuatbrown,2015-10-30 17:49:05
380,2015-10-30 17:49:20,":+1: 

:beers: 
",zhigang1992,2015-10-30 17:49:05
379,2015-10-29 12:46:11,"I try to transform the json 

<S_CODE_TOKEN>

than get the type is SwiftyJSON.Type.Null

can swiftyjson parsing  ""\n""?
",seedotlee,2015-10-29 14:17:43
379,2015-10-29 14:17:06,"IMHO
If we don't escape `\n` then the string becomes

<S_CODE_TOKEN>

Which is corrupted...

JSON parsing in `SwiftyJSON` is actually delegated to iOS's `NSJSONSerialization` which is where this parse is failing.

Also you can escape it simply by wrapping it with another `\`. like `\\n`
",zhigang1992,2015-10-29 14:17:43
378,2015-10-29 11:06:40,"dyld: Symbol not found: __TMp10SwiftyJSON17JSONSubscriptType
  Referenced from: /var/mobile/Containers/Bundle/Application/1A23C46A-33BC-4582-93EF-3812344FAD8B/test.app/test
  Expected in: /private/var/mobile/Containers/Bundle/Application/1A23C46A-33BC-4582-93EF-3812344FAD8B/test.app/Frameworks/SwiftyJSON.framework/SwiftyJSON
 in /var/mobile/Containers/Bundle/Application/1A23C46A-33BC-4582-93EF-3812344FAD8B/test.app/test

i am getting this error. please help
",rsdev-darshan,2015-10-30 05:44:56
378,2015-10-29 14:20:03,"Have you try `clean build folder` and build again?

If so, it's also possible that you're not embedding the frameworks in your app. 

Are you using CocoaPods or Carthage?
",zhigang1992,2015-10-30 05:44:56
378,2015-10-30 05:44:52,"Its working now.. the problem occurred after updating to Xcode 7.1. I just deleted the ""embed pods framework"" in build phases.
",rsdev-darshan,2015-10-30 05:44:56
377,2015-10-29 01:38:09,"This what I'm doing to convert it. The log return ""nil""

<S_CODE_TOKEN>
",TeamVerre,2015-10-29 14:20:39
377,2015-10-29 02:29:58,"What do you wanna out of `jsonObj.stringValue`?

But I'm guessing you want something this?

<S_CODE_TOKEN>
",zhigang1992,2015-10-29 14:20:39
377,2015-10-29 18:57:57,"I want to convert the Dictionary into a valid JSON string which I can post to the server. 

Running this print statement, also returns an empty string. 

print(jsonObj[0][""lastName""].stringValue)
",TeamVerre,2015-10-29 14:20:39
377,2015-10-30 17:39:54,"You're looking for `rawString`

<S_CODE_TOKEN>
",zhigang1992,2015-10-29 14:20:39
376,2015-10-28 16:02:41,"[https://github.com/SwiftyJSON/SwiftyJSON/issues/375](https://github.com/SwiftyJSON/SwiftyJSON/issues/375)

So that we can use `enum` as keys like this:

<S_CODE_TOKEN>

And use it like this

<S_CODE_TOKEN>
",zhigang1992,2015-11-01 03:02:46
376,2015-10-28 16:05:01,"Sorry about deleting the trailing spaces.

I can revert them if it's too much trouble.

:)
",zhigang1992,2015-11-01 03:02:46
375,2015-10-28 10:09:00,"Thanks for making and maintaining this library, I know how hard open source can be!

I have a this attribute name enum:

<S_CODE_TOKEN>

and use it like so:

`let idNumber = j[J.ChannelId].number ?? j[J.Id].number ?? NSNumber(int: 0)`

I then get a compile error:

`Cannot subscript a value of type 'JSON' with an index of type 'J'`

Is this supposed to work? 
Thanks a lot!
",manmal,2015-11-01 03:04:28
375,2015-10-28 15:35:15,"I'm guessing you have to this

<S_CODE_TOKEN>
",zhigang1992,2015-11-01 03:04:28
375,2015-10-28 15:36:13,"Sure, but this is ugly :)

> Am 28.10.2015 um 16:35 schrieb Zhigang Fang notifications@github.com:
> 
> I'm guessing you have to this
> 
> let idNumber = j[J.ChannelId].number ?? j[J.Id].number ?? NSNumber(int: 0)
> —
> Reply to this email directly or view it on GitHub https://github.com/SwiftyJSON/SwiftyJSON/issues/375#issuecomment-151884729.
",manmal,2015-11-01 03:04:28
375,2015-10-28 15:37:21,"This?

<S_CODE_TOKEN>
",zhigang1992,2015-11-01 03:04:28
375,2015-10-28 15:39:14,"No my code is what I'd like to have, but it doesn't compile.
",manmal,2015-11-01 03:04:28
375,2015-11-01 03:04:28,"Pull Request has been merged.
You can try it out now in master branch.
",zhigang1992,2015-11-01 03:04:28
374,2015-10-26 20:11:08,"SwiftyJSON is great!

This is a feature request.

With SwiftyJSON we're able to define paths to any JSON element, including deeply nested elements, and there are convenience accessors (""string"", ""stringValue"", ...) for accessing the element, if it exists.

We have a few cases where we would like to be able to access the JSON element at a particular path, and if the element exists such that we can hold a reference to it and more easily access multiple children elements. E.g.:

<S_CODE_TOKEN>

For our use cases, it would be very convenient if we could do this like so:

<S_CODE_TOKEN>

Where optional would be a new extension method JSON that returns a JSON? that is nil if the path to the element does not exist.

I don't know SwiftyJSON internals very well, but the implementation might be something like:

<S_CODE_TOKEN>

Is this already possible, if not, is it something that could reasonably be added to SwiftyJSON?
",jpbetz,2015-10-26 20:49:59
374,2015-10-26 20:49:59,"Actually, this might not be needed.
",jpbetz,2015-10-26 20:49:59
373,2015-10-26 09:00:41,"Hi. The code is below:

<S_CODE_TOKEN>

The problem is like this: the jsonString has some chinese character in its values, if i read the value of json, xcode throws a fatal error: unexpected found nil while unwrapping an optional value

but if i delete the chinese character, the code runs fine. 

jsonString is like this:

<S_CODE_TOKEN>

Is SwiftyJSON not supported with chinese character or i do something wrong in my code?
",cmnewfan,2015-10-29 02:36:25
373,2015-10-29 02:36:25,"It's was actually because `NSJSONSerialization` doesn't accept this encoding. 

<S_CODE_TOKEN>

This code was crashing as well.

I'm not sure if you have a particular reason to use this encoding, but try use `NSUTF8StringEncoding`

<S_CODE_TOKEN>
",zhigang1992,2015-10-29 02:36:25
372,2015-10-25 17:04:06,"I am using SwiftyJSON 2.3.0 obtained via Carthage.

Whenever I try to archive my iOS application on Xcode Version 7.1 (7B91b), I get the following linker error:

<S_CODE_TOKEN>

Is this a known issue or am I doing something wrong?
",adityatrivedi,2015-11-03 12:37:04
372,2015-11-01 13:55:04,"Can you also provide Carthage version?
",zhigang1992,2015-11-03 12:37:04
372,2015-11-03 03:22:49,"@zhigang1992, it was Carthage v0.8.
",adityatrivedi,2015-11-03 12:37:04
372,2015-11-03 03:32:27,"<img width=""986"" alt=""screen shot 2015-11-02 at 9 31 07 pm"" src=""https://cloud.githubusercontent.com/assets/1057756/10900748/3165005c-81a9-11e5-9599-cf05433ea6a3.png"">

Try this new version
",zhigang1992,2015-11-03 12:37:04
372,2015-11-03 03:35:27,"Please let me know if this helped
",zhigang1992,2015-11-03 12:37:04
372,2015-11-03 04:20:19,"Yep the latest version of carthage seems to mitigate the issue. Thanks @zhigang1992!
",adityatrivedi,2015-11-03 12:37:04
371,2015-10-22 20:47:30,,RohanNagar,2015-10-26 09:41:58
370,2015-10-22 08:50:22,"More appropriate to use 'index' as a variable name for an array
",KyleMay,2015-10-26 09:43:21
369,2015-10-22 08:01:08,"Not sure if its a bug or not, but the comment and actual results are different
![screen shot 2015-10-22 at 10 57 40](https://cloud.githubusercontent.com/assets/1636440/10659911/fd7f444c-78ab-11e5-92b7-2453490da4c4.png)

comments says that by default it returns false, but it actually returns true. This behavior also differs from the past versions.
",Katafalkas,2015-10-26 09:55:15
369,2015-10-26 09:55:07,"Missed comment, we do return `true` at this situation. 
",lingoer,2015-10-26 09:55:15
369,2015-10-26 09:55:58,"https://github.com/SwiftyJSON/SwiftyJSON/commit/5f5d00dbdcd256600a250765d9f674964080ceee
",lingoer,2015-10-26 09:55:15
369,2016-02-28 18:20:13,"Hey, Its me again. Somehow I bumped again into this. What is the reasoning behind this behaviour ? If an object is a String or some other type - it can still be non empty. But now if an object is non-dict and non-array, it automatically counts as empty even tho it is not.
",Katafalkas,2015-10-26 09:55:15
369,2016-02-28 18:39:15,"I created a PR that fixes it. Hope it makes sense. It did fix my problem.
https://github.com/SwiftyJSON/SwiftyJSON/pull/464
",Katafalkas,2015-10-26 09:55:15
369,2016-08-04 13:30:52,"@lingoer By any chance someone could explain to me this behaviour ?
",Katafalkas,2015-10-26 09:55:15
369,2016-09-21 19:57:55,"It feel to me this method is really confusing to people, and also myself.
And it's not add enough value for us to clarify and document this method.

Also every team might have different definition of empty, so maybe this should not be part of the SwiftyJSON, but rather a simple extension on the actual product code.
",zhigang1992,2015-10-26 09:55:15
368,2015-10-22 07:58:36,,Katafalkas,2015-10-26 09:56:36
367,2015-10-20 03:22:55,"Added tvos as target
",marcospolanco,2015-10-26 09:19:59
366,2015-10-19 22:34:50,"Just one line to make tvOS play nice via cocoapods :)
",samscam,2015-10-21 04:53:44
365,2015-10-18 20:16:41,"Currently I am using the following code, but it's ugly:

<S_CODE_TOKEN>

Is there a way to convert json string to JSON using SwiftyJSON?
",borut-t,2015-10-29 06:44:38
365,2015-10-29 02:40:18,"Well, I don't think there is any way other than this.

If you think it's too ugly maybe you can try this:

<S_CODE_TOKEN>

Not sure if it helps
",zhigang1992,2015-10-29 06:44:38
365,2015-10-29 06:44:38,"No problem. I thought there is smth. similar implemented within library. Thanks!
",borut-t,2015-10-29 06:44:38
364,2015-10-16 07:54:07,"<S_CODE_TOKEN>

not woking item didnt have subscript string

<S_CODE_TOKEN>
",longxianlin,2015-11-06 15:47:21
364,2015-10-29 02:44:25,"I'm not quiet sure what exactly is the issue here.

Can you explain a little bit more?
",zhigang1992,2015-11-06 15:47:21
364,2015-11-06 15:47:36,"Feel free to reopen this issue if needed
",zhigang1992,2015-11-06 15:47:21
363,2015-10-15 14:43:19,"Can u convert the syntax like:

<S_CODE_TOKEN>

to 

<S_CODE_TOKEN>

""[*]"" means any object in an array/dict
""[-1]"" means the last object in an array, etc
",alexlee002,2016-11-17 07:23:55
363,2016-11-17 07:23:55,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:23:55
362,2015-10-14 15:37:39,"This patch adds support to the pod to be used on a tvOS app project.

I have a development kit and have verified it working on my AppleTV app.
",victor,2015-10-15 03:34:33
362,2015-10-15 03:36:05,"Merged in xcode7.1 branch.
",tangplin,2015-10-15 03:34:33
362,2015-10-15 21:59:00,"At first I understood that branch 7.1 already supported tvOS, but I don't see explicit support for tvOS in the podspec, and without it `pod install` complains that tvOS is an unsupported platform.

I don't understand why you closed the pull request without action, I'd appreciate knowing what you require in order to merge this patch, or why it was not considered.
",victor,2015-10-15 03:34:33
362,2015-10-16 16:25:05,"@tangplin The necessary line of code for tvOS support is still not appearing in the `xcode7.1` branch's podspec. Do you know when that might happen?
",IndianAg0711,2015-10-15 03:34:33
361,2015-10-14 13:40:21,,AlessandroTolomio,2015-10-15 03:35:38
361,2015-10-15 03:35:38,"Merged in `xcode7.1` branch.
",tangplin,2015-10-15 03:35:38
360,2015-10-14 07:36:58,"<S_CODE_TOKEN>
",longxianlin,2015-10-29 02:49:36
360,2015-10-29 02:48:13,"Seems like it's the same issue with https://github.com/SwiftyJSON/SwiftyJSON/issues/351

Use this

<S_CODE_TOKEN>
",zhigang1992,2015-10-29 02:49:36
359,2015-10-10 06:15:34,"Fix https://github.com/SwiftyJSON/SwiftyJSON/issues/354

Because OS X 10.9 is the oldest OS X which supports Swift language.
",tylerlong,2015-10-14 08:20:09
358,2015-10-06 07:00:45,"Oops. Please Ignore this. Was meant to merge into my own fork and accidentally created a PR on this
",meteochu,2015-10-06 07:02:46
357,2015-10-05 16:16:19,"Here's a simple code snippet that crashes:

<S_CODE_TOKEN>
",dmauro,2015-10-27 15:50:17
357,2015-10-05 16:17:07,"It's specifically ""% o"" that does it. No idea why, but it only happens on device oddly enough.
",dmauro,2015-10-27 15:50:17
357,2015-10-27 05:49:29,"This actually not quiet related to SwiftyJSON, can you specify which platform and which version is it crashing on.
Because it's actually printing `0` on my Mac.

Also, can you simply try

<S_CODE_TOKEN>

And see if it causes the same crash there.
",zhigang1992,2015-10-27 15:50:17
357,2015-10-27 05:51:06,"Also you can try this:

<S_CODE_TOKEN>
",zhigang1992,2015-10-27 15:50:17
357,2015-10-27 15:50:17,"<S_CODE_TOKEN>

Does crash.

<S_CODE_TOKEN>

Does not crash.

Looks like a problem with NSLog, I'll file a radar thanks!
",dmauro,2015-10-27 15:50:17
357,2016-09-12 17:09:00,"This is still an issue.  I'm getting a crash on NSLog of the JSON object, but only when there is a '%' in it.
",sabernar,2015-10-27 15:50:17
356,2015-10-05 15:10:33,"This should fix #355 by adding `BITCODE_GENERATION_MODE` build settings to the watchOS and iOS targets. See [this issue](https://github.com/Carthage/Carthage/issues/535) for more info.
",Thomvis,2015-10-14 09:09:17
355,2015-10-05 12:30:44,"There is an issue with this on carthage when using archive builds of a project using the created framework, You can check out this link https://github.com/Carthage/Carthage/issues/53 for more detail. Basically you need to add user-defined-setting of ""BITCODE_GENERATION_MODE"" set to ""bitcode"" in the framework project before it will be able to work from a carthage builds. I have already cleared this with the guys at Alamofire and it works.
",silver619,2015-10-14 09:39:13
355,2015-10-14 09:39:13,"Merged
",tangplin,2015-10-14 09:39:13
354,2015-10-05 06:21:11,"I installed it via Carthage. It seems that it doesn't support OS X 10.9.

<S_CODE_TOKEN>
",tylerlong,2015-10-14 08:20:09
353,2015-10-03 09:33:53,"Little change for Swift 2.
",apiyron,2015-10-14 09:09:04
352,2015-10-01 10:41:09,"The changes made for Swift 2 are backwards incompatible with Swift 1, and therefore the version number for that release should have been v3 and not v2.3.
",mwaterfall,2016-11-17 07:23:32
352,2015-10-07 15:02:26,"v3 is not even committed on github ^^
",thedamfr,2016-11-17 07:23:32
352,2015-10-11 15:31:46,":+1: 
",AlexChesters,2016-11-17 07:23:32
352,2016-11-17 07:23:32,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:23:32
351,2015-10-01 04:52:17,"<S_CODE_TOKEN>

But unfortunately I got the erro ""Cannot invokle intializer for type 'JSON' with an argument list of type '(Result<AnyObject>)'""
",happiehappie,2015-10-29 02:58:03
351,2015-10-01 09:19:53,"I guess you haven't read the docs for alamofire. But they have changed it so they now  wrap the response in an enum. So for you it'd be:

`JSON(json.value)`
",iamtomcat,2015-10-29 02:58:03
350,2015-09-30 10:36:05,"I get compiler errors with master branch.

""Consecutive statements on a line must be separated by ';'""
",zibann-dev-eugene,2015-10-29 04:55:03
350,2015-10-01 09:20:50,"Yeah because the master has been upgraded to use swift 2.0.
",iamtomcat,2015-10-29 04:55:03
350,2015-10-29 04:53:41,"try with tag `2.2.0`, if it's in CocoaPods do it like this:

<S_CODE_TOKEN>

or

<S_CODE_TOKEN>
",zhigang1992,2015-10-29 04:55:03
349,2015-09-30 01:42:37,"There are a bunch of errors when I upgrade Xcode and Swift version to the newest. I install the library through pod. Is the pod version not new enough? (I checked that the version I installed is 2.3.0)
",firstprayer,2015-09-30 01:44:23
349,2015-09-30 01:44:23,"Solved by using the git path for podfile.
",firstprayer,2015-09-30 01:44:23
349,2015-12-23 17:37:51,"What do you mean you used the git path for podfile? I'm getting a bunch of errors and can't figure out what to do
",klampotang,2015-09-30 01:44:23
348,2015-09-26 21:53:43,"Having trouble accessing elements using SwiftyJSON.

Code: let json = JSON(data:menuJson.dataUsingEncoding(NSUTF8StringEncoding)!)
Here json looks like: 

<S_CODE_TOKEN>

Code: let menu = json[""menus""][0].string
      I get nil for menu. Shouldn't this be giving me the array ""menus"" from the JSON?

I followed the examples in the documentation and still have not been able to parse the json properly. 
",om23,2015-10-20 04:48:48
348,2015-09-28 11:55:17,"Where is your data coming from? Is it a string, alamofire? Also if you can format your json so it's a little more readable it would be helpful.
",iamtomcat,2015-10-20 04:48:48
348,2015-09-28 15:16:48,"Its coming from Parse as a string.
",om23,2015-10-20 04:48:48
348,2015-10-01 09:34:41,"Looking at your example `let menu = json[""menus""][0].string` getting a nil make perfect sense as the item you're accessing is not a string and therefore will fail the cast.

If I do this `let temp = json[""menus""][0].object` then I get an object back as that's is what is attached to that key. If you want to get the values you have to either directly access each key or iterate through them.
",iamtomcat,2015-10-20 04:48:48
348,2015-10-20 04:48:48,"I was able to figure out my problem. It seemed like they were being saved as an array so I first saved the first element of the array and then saved as a dictionary. This worked. Thanks for your help!
",om23,2015-10-20 04:48:48
347,2015-09-26 18:27:05,"Hi,

when i try to import the ""SwiftyJSON.swift"" file into Playground, i get an error (noch such module ""SwiftyJSON"".

Does somebody has any idea?

![Uploading SwiftyJSON_Error.png…]()
![Uploading SwiftyJSON_Error.png…]()
",xTron23,2015-10-29 04:50:22
347,2015-09-28 11:56:21,"You need to have your playground within a workspace shared with swifty.
",iamtomcat,2015-10-29 04:50:22
347,2015-09-28 13:58:01,"OK, THX. I try this
",xTron23,2015-10-29 04:50:22
347,2015-10-02 08:54:58,"Hi,

I'm very new at this and I was wondering if you could provide a small tutorial on how to create a playground to a workspace shared. I'm struggling to add to my project SwiftyJSON and Alamofire. I've tried with pods and with manually install but  I've got for both SwiftyJSON and Alamofire at the import section this type of error: ""No such module"".

At a point I've managed to import to my project only Alamofire (manually) and it worked but now when i'm trying to add also SwiftyJSON i havethis problem.

Can you help?

10x 
",zanfirovidius,2015-10-29 04:50:22
347,2015-10-02 09:57:07,"I can probably put together a little project together if you want?
",iamtomcat,2015-10-29 04:50:22
347,2015-10-02 12:17:01,"That will be grate.
10x
",zanfirovidius,2015-10-29 04:50:22
347,2015-10-29 04:50:22,"<img width=""1440"" alt=""screen shot 2015-10-29 at 12 49 42 pm"" src=""https://cloud.githubusercontent.com/assets/1057756/10810398/8e88e594-7e3b-11e5-9e97-98a086d3a853.png"">

Click the plus in your workspace

It's that easy.. :smile: 

But remember, you have to build the target first before you can import it in the playground
",zhigang1992,2015-10-29 04:50:22
346,2015-09-24 13:36:36,"I had an issue where a numeric 0 was being returned in the JSON from my server.  When I attempted to get an optional value out of the JSON with something like the following where json[0][""identifier""] = 0, I was getting a nil value for the optional.

<S_CODE_TOKEN>

When using .stringValue to get a non-optional, the correct string of ""0"" was being returned.

This PR addresses this for both Bool values and Numeric values.
",slangley,2015-10-14 09:04:37
346,2015-10-14 09:08:35,"The Bool values and Numeric are not String. The `.string` means the JSON is a String type not others.
",tangplin,2015-10-14 09:04:37
345,2015-09-23 09:01:19,,patricks,2015-10-14 09:00:38
344,2015-09-21 14:23:29,"Hi,

I use SwiftyJSON in another CocoaPods podspec as dependency. But since Xcode 7 the lint checker fails, because my Podfile supports the watchOS2 platform and SwiftyJSON doesn't.

I get the following error: 

<S_CODE_TOKEN>

I saw there is already a pull request for this problem. #320 
",patricks,2015-10-29 05:37:52
344,2015-10-29 05:37:52,"It's merged, watchOS2 should be working properly.

Feel free to reopen this issue if there are any more issues.

:smile: 
",zhigang1992,2015-10-29 05:37:52
343,2015-09-20 09:34:46,"I can't resolve the syntax error I get for the 4 lines in `sbscript` function. Have anyone resolved this error somehow?

<S_CODE_TOKEN>
",nodayoshikazu,2015-10-29 05:44:00
343,2015-09-20 11:29:05,"Just found the latest source https://github.com/SwiftyJSON/SwiftyJSON/blob/master/Source/SwiftyJSON.swift has the update for Xcode 7.0. No syntax errors with the file.
",nodayoshikazu,2015-10-29 05:44:00
343,2015-10-29 05:44:00,"Cool, please use version 2.3.0 or up for Xcode7 support
",zhigang1992,2015-10-29 05:44:00
342,2015-09-19 21:05:32,"I'm not entirely sure if this is my fault or SwiftyJSON's, but I will post here in an attempt to get some help in solving this.

Basically, I am using this service API provided by some guys to test a wrapper I wrote for them: http://api.atarashiiapp.com/2/anime/232

(You can run that as GET anywhere and it will give you a result. It doesn't require authentication if you want to test with this).

When I run this in Postman, the response I get is this:

<S_CODE_TOKEN>

I noticed SwiftyJSON was returning null for the following keys: manga_adaptations, sequels, side_stories (you can see they exist).

I decided to print SwiftyJSON's response to see what was going on:

<S_CODE_TOKEN>

Like you can see, the response I get is formatted weirdly. And this response does have the manga_adaptations, sequels and side_stories keys, but when I try to fetch them with myDictionary[key]. they return nil.

The one thing I noticed is that the first key (`title`) has a value that is not inside quotation marks (`Cardcaptor Sakura`). After that, there's many keys that have strings as value but they are not quoted (`synopsis`, `status`, to name a few) . I believe that is throwing SwiftyJSON off.

I am not manipulating the result in anyway without giving it to SwiftyJSON. As soon as Alamofire is done downloading the response, I pass it to SwiftyJSON.

Like I said (and can be tested by anyone), when I call API with something else, it is not formatted weirdly as SwiftyJSON's. I really want to fix this so I will help test this is as necessary.

EDIT: Nice, Github highlights invalid JSON, so it makes it easier to see where the problems are.
",AndyIbanez,2015-09-19 21:18:22
342,2015-09-19 21:18:22,"It is as though I'm an idiot. Apologies for wasting your time.
",AndyIbanez,2015-09-19 21:18:22
341,2015-09-19 13:30:02,"This will allow people to use SwifyJSON on tvOS.
",PorterHoskins,2015-10-15 03:34:25
341,2015-10-05 19:42:53,"+1
",kcharwood,2015-10-15 03:34:25
341,2015-10-09 08:14:27,"+1 this need to be merged in
",donnywals,2015-10-15 03:34:25
341,2015-10-15 03:36:31,"Merged in xcode7.1 branch.
",tangplin,2015-10-15 03:34:25
340,2015-09-18 21:15:43,"Hi, I just notice that Alamofire update their code. 

This is the new way I found it to integrate without error handling, why?

<S_CODE_TOKEN>
",Edig,2015-09-19 15:50:44
340,2015-09-19 07:27:29,"+1
",sicaboy,2015-09-19 15:50:44
340,2015-09-19 07:48:46,"@Edig actually, result.value returns the value of response, result.data just returns the error info instead. pls refer to its doc.
",sicaboy,2015-09-19 15:50:44
340,2015-09-19 15:01:42,"This does not belong here, read https://github.com/Alamofire/Alamofire/pull/627
",ArtworkAD,2015-09-19 15:50:44
340,2015-09-19 15:50:44,"Yes actually I solved that way, I leave it here if someone needs it

<S_CODE_TOKEN>
",Edig,2015-09-19 15:50:44
339,2015-09-18 12:12:31,"Support for tvOS framework and test targets
",bscarano,2015-10-15 03:34:20
339,2015-10-15 03:36:27,"Merged in xcode7.1 branch.
",tangplin,2015-10-15 03:34:20
338,2015-09-18 09:58:06,,simonbs,2015-10-15 03:26:44
338,2015-10-07 14:52:04,"Looks like there are three similar PRs to add tvOS support, this being the first one. See #339 and #341.
",jeffbowen,2015-10-15 03:26:44
338,2015-10-15 03:26:44,"Merged 9e099f356da78cf9e74636009cb68e60d0dffd1f
",tangplin,2015-10-15 03:26:44
337,2015-09-18 00:16:23,"I updated to  SwiftyJSON 2.2.1, but the error is still there.  on the 'if' line below I get ""Extra argument 'error' in call"".

<S_CODE_TOKEN>
",groovedev,2015-10-29 05:43:20
337,2015-09-18 11:17:07,"+1
",giacgbj,2015-10-29 05:43:20
337,2015-09-20 09:25:06,"This is at least remove the syntax error:

<S_CODE_TOKEN>

Can't run yet as I can't resolve other errors.
",nodayoshikazu,2015-10-29 05:43:20
337,2015-10-29 05:43:02,"Are you using Xcode7 for this?

If so, please upgrade to 2.3.0 version or up
",zhigang1992,2015-10-29 05:43:20
336,2015-09-17 22:32:58,"I juts update the code from swift 1.2 to swift 2.0 and I have several problems

before I use it like this

<S_CODE_TOKEN>

But when I just .object I have this error:

`initializer for conditional binding must have optional type not AnyObject`

If I change it to `directoryObject` everything else its wrong, I need to know the correct way before start modifying because I have over 100 lines to modify.

Best.
",Edig,2015-10-29 05:40:46
336,2015-09-20 12:04:53,"Just removes the question marks. As said by the error, resp[""something""] is not an optional.
",ThibaultVlacich,2015-10-29 05:40:46
336,2015-10-29 05:40:46,"I'm guessing you only needs to do

<S_CODE_TOKEN>
",zhigang1992,2015-10-29 05:40:46
335,2015-09-17 20:47:37,"Now that Xcode 7 is out, can `xcode7` be merged into `master`, as well as a new tag in cocoapods?
",ldiqual,2015-10-29 05:45:34
335,2015-09-18 02:06:31,"Come on mates!
",vincentsong,2015-10-29 05:45:34
335,2015-09-18 09:32:24,"+1
",Rhuantavan,2015-10-29 05:45:34
335,2015-09-18 11:09:02,"+1
",giacgbj,2015-10-29 05:45:34
335,2015-09-22 11:22:01,"+1
",bluesand,2015-10-29 05:45:34
335,2015-09-22 13:15:38,"+1
",davidjelliott,2015-10-29 05:45:34
335,2015-09-25 04:40:10,"+1
",ekimia,2015-10-29 05:45:34
335,2015-09-29 21:42:58,"Xcode 7 branch is already merged, he just didn't have time to close this issue.
",Mazyod,2015-10-29 05:45:34
335,2015-10-29 05:45:34,"merged into master, tag `2.3.0` has been published to CocoaPods

:beers: 
",zhigang1992,2015-10-29 05:45:34
334,2015-09-16 22:10:12,,ogisan,2015-09-16 22:14:26
333,2015-09-16 20:36:01,"The following build commands failed:
    CompileSwift normal x86_64 /ProjectName/carthage/Checkouts/SwiftyJSON/Source/SwiftyJSON.swift
    CompileSwiftSources normal x86_64 com.apple.xcode.tools.swift.compiler
(2 failures)

Carthage Version: 0.9.1
XCode 7.0 (7A220)

All sorts of errors are listed, such as
error: '#' has been removed from Swift; double up 'index index' to make the argument label the same as the parameter name
error: @availability has been renamed to @available

I can upload a full list if that would help.
",df-andrews,2015-09-17 00:26:40
333,2015-09-17 00:26:40,"Closed: Fixed by switching to xcode 7 branch and recompiling everything.
",df-andrews,2015-09-17 00:26:40
332,2015-09-16 10:07:40,"<S_CODE_TOKEN>
",yikuo123,2015-10-29 06:03:14
332,2015-09-20 12:07:18,"You can't assign a new value like that. You have to do like this : 

<S_CODE_TOKEN>
",ThibaultVlacich,2015-10-29 06:03:14
332,2015-10-27 05:41:42,"Oddly, this code is actually working fine here

<img width=""881"" alt=""screen shot 2015-10-27 at 1 39 49 pm"" src=""https://cloud.githubusercontent.com/assets/1057756/10750430/4652a0b2-7cb0-11e5-9e8c-98421bd18fab.png"">
",zhigang1992,2015-10-29 06:03:14
332,2015-10-29 06:03:14,"Also since `JSON` is a struct, try preventing copying

<S_CODE_TOKEN>

Feel free to reopen this issue of you've further questions
",zhigang1992,2015-10-29 06:03:14
331,2015-09-15 17:55:15,"Hi,

So I'm able to use SwiftyJSON to get my data in the right format as below. The problem comes when I try to 

for JsonResult in newJsonResults, the result comes out as below. I don't get one object at a time as I would expect but all of them in a format (String, JSON) i.e. (""0"", JSON stuff)

Basically I want expect JsonResult to be one result of newJsonResults per loop

`(""0"", {
  ""content"" : ""<b>Accenture plc<\/b>. (NYSE:ACN) has received a buy rating for the short term, according to the latest rank of 2 from research firm, Zacks. The shares could manage an average rating of 1.88 from 16 analysts. 8 market experts have marked it as a strong buy."",
  ""titleNoFormatting"" : ""Accenture plc. (NYSE:ACN) Analyst Rating Update"",
  ""relatedStories"" : [
    {
      ""location"" : """",
      ""signedRedirectUrl"" : ""http:\/\/news.google.com\/news\/url?sa=T&ct2=us&fd=S&url=http:\/\/www.insidertradingreport.org\/large-inflow-of-money-witnessed-in-accenture-plc-2\/698743\/&cid=52778949978864&ei=vFr4VcGQOeikwQHLpJqgAg&usg=AFQjCNGyCBnDQw8FuYEbkk1yDWNLZyfQBg"",
      ""unescapedUrl"" : ""http:\/\/www.insidertradingreport.org\/large-inflow-of-money-witnessed-in-accenture-plc-2\/698743\/"",
      ""title"" : ""Large Inflow of Money Witnessed in <b>Accenture plc<\/b>."",
      ""titleNoFormatting"" : ""Large Inflow of Money Witnessed in Accenture plc."",
      ""language"" : ""en"",
      ""publisher"" : ""Insider Trading Report"",
      ""publishedDate"" : ""Tue, 15 Sep 2015 01:37:30 -0700"",
      ""url"" : ""http%3A%2F%2Fwww.insidertradingreport.org%2Flarge-inflow-of-money-witnessed-in-accenture-plc-2%2F698743%2F""
    })`

newJsonResults:

<S_CODE_TOKEN> [
  {
    ""content"" : ""<b>Accenture plc<\/b>. (NYSE:ACN) has received a buy rating for the short term, according to the latest rank of 2 from research firm, Zacks. The shares could manage an average rating of 1.88 from 16 analysts. 8 market experts have marked it as a strong buy."",
    ""titleNoFormatting"" : ""Accenture plc. (NYSE:ACN) Analyst Rating Update"",
    ""relatedStories"" : [
      {
        ""location"" : """",
        ""signedRedirectUrl"" : ""http:\/\/news.google.com\/news\/url?sa=T&ct2=us&fd=S&url=http:\/\/www.insidertradingreport.org\/large-inflow-of-money-witnessed-in-accenture-plc-2\/698743\/&cid=52778949978864&ei=u1b4VaDdFardwQGtl4CgAQ&usg=AFQjCNFJp16XfWxhJFStIk78IBePfhiF9g"",
        ""unescapedUrl"" : ""http:\/\/www.insidertradingreport.org\/large-inflow-of-money-witnessed-in-accenture-plc-2\/698743\/"",
        ""title"" : ""Large Inflow of Money Witnessed in <b>Accenture plc<\/b>."",
        ""titleNoFormatting"" : ""Large Inflow of Money Witnessed in Accenture plc."",
        ""language"" : ""en"",
        ""publisher"" : ""Insider Trading Report"",
        ""publishedDate"" : ""Tue, 15 Sep 2015 01:37:30 -0700"",
        ""url"" : ""http%3A%2F%2Fwww.insidertradingreport.org%2Flarge-inflow-of-money-witnessed-in-accenture-plc-2%2F698743%2F""
      },
      {
        ""location"" : """",
        ""signedRedirectUrl"" : ""http:\/\/news.google.com\/news\/url?sa=T&ct2=us&fd=S&url=http:\/\/www.americantradejournal.com\/company-shares-of-accenture-plc-nyseacn-rally-3-07\/674032\/&cid=52778949978864&ei=u1b4VaDdFardwQGtl4CgAQ&usg=AFQjCNF5oJo29buggkO0gFk5uNdDtXbSdQ"",
        ""unescapedUrl"" : ""http:\/\/www.americantradejournal.com\/company-shares-of-accenture-plc-nyseacn-rally-3-07\/674032\/"",
        ""title"" : ""Company Shares of <b>Accenture plc<\/b>. (NYSE:ACN) Rally 3.07%"",
        ""titleNoFormatting"" : ""Company Shares of Accenture plc. (NYSE:ACN) Rally 3.07%"",
        ""language"" : ""en"",
        ""publisher"" : ""American Trade Journal"",
        ""publishedDate"" : ""Sun, 13 Sep 2015 11:00:00 -0700"",
        ""url"" : ""http%3A%2F%2Fwww.americantradejournal.com%2Fcompany-shares-of-accenture-plc-nyseacn-rally-3-07%2F674032%2F""
      },
      {
        ""location"" : """",
        ""signedRedirectUrl"" : ""http:\/\/news.google.com\/news\/url?sa=T&ct2=us&fd=S&url=http:\/\/www.stocksdaily.net\/can-accenture-plc-nyseacn-shares-touch-117\/7528\/&cid=52778949978864&ei=u1b4VaDdFardwQGtl4CgAQ&usg=AFQjCNHzR_sc9ocYlZTjMwCjdWDUi4KURw"",
        ""unescapedUrl"" : ""http:\/\/www.stocksdaily.net\/can-accenture-plc-nyseacn-shares-touch-117\/7528\/"",
        ""title"" : ""Can <b>Accenture plc<\/b>. (NYSE:ACN) Shares Touch $117?"",
        ""titleNoFormatting"" : ""Can Accenture plc. (NYSE:ACN) Shares Touch $117?"",
        ""language"" : ""en"",
        ""publisher"" : ""Stocks Daily"",
        ""publishedDate"" : ""Mon, 14 Sep 2015 12:07:30 -0700"",
        ""url"" : ""http%3A%2F%2Fwww.stocksdaily.net%2Fcan-accenture-plc-nyseacn-shares-touch-117%2F7528%2F""
      }
    ],
    ""url"" : ""http%3A%2F%2Fwww.moneyflowindex.org%2Faccenture-plc-nyseacn-analyst-rating-update%2F3130374%2F"",
    ""publishedDate"" : ""Tue, 15 Sep 2015 02:45:00 -0700"",
    ""title"" : ""<b>Accenture plc<\/b>. (NYSE:ACN) Analyst Rating Update"",
    ""publisher"" : ""Money Flow Index"",
    ""GsearchResultClass"" : ""GnewsSearch"",
    ""location"" : """",
    ""unescapedUrl"" : ""http:\/\/www.moneyflowindex.org\/accenture-plc-nyseacn-analyst-rating-update\/3130374\/"",
    ""signedRedirectUrl"" : ""http:\/\/news.google.com\/news\/url?sa=T&ct2=us&fd=S&url=http:\/\/www.moneyflowindex.org\/accenture-plc-nyseacn-analyst-rating-update\/3130374\/&cid=52778949978864&ei=u1b4VaDdFardwQGtl4CgAQ&usg=AFQjCNEx9LNCbYc39yUflewBfL1SjHi0bg"",
    ""language"" : ""en"",
    ""clusterUrl"" : ""http:\/\/news.google.com\/news\/story?ncl=d8spephj7ico9XMNJzQiC76bYmnZM&hl=en&ned=us""
  },
  {
    ""content"" : ""SAN FRANCISCO; Sept. 15, 2015 - <b>Accenture<\/b> (NYSE: ACN) has entered into an agreement to acquire Cloud Sherpas, a leader in cloud advisory and technology services specializing in Google, Salesforce and ServiceNow. The move will further strengthen&nbsp;..."",
    ""titleNoFormatting"" : ""Accenture plc: Accenture to Acquire Cloud Sherpas, Accelerating Its Cloud ..."",
    ""relatedStories"" : [
      {
        ""location"" : """",
        ""signedRedirectUrl"" : ""http:\/\/news.google.com\/news\/url?sa=T&ct2=us&fd=S&url=http:\/\/seekingalpha.com\/news\/2779216-accenture-buys-cloud-service-advisory-firm-with-1100-plus-employees&cid=52778951195381&ei=u1b4VaDdFardwQGtl4CgAQ&usg=AFQjCNH2RLU37JqEUcopjVX08C3PffgoxQ"",
        ""unescapedUrl"" : ""http:\/\/seekingalpha.com\/news\/2779216-accenture-buys-cloud-service-advisory-firm-with-1100-plus-employees"",
        ""title"" : ""<b>Accenture<\/b> buys cloud service advisory firm with 1100+ employees"",
        ""titleNoFormatting"" : ""Accenture buys cloud service advisory firm with 1100+ employees"",
        ""language"" : ""en"",
        ""publisher"" : ""Seeking Alpha"",
        ""publishedDate"" : ""Tue, 15 Sep 2015 09:52:30 -0700"",
        ""url"" : ""http%3A%2F%2Fseekingalpha.com%2Fnews%2F2779216-accenture-buys-cloud-service-advisory-firm-with-1100-plus-employees""
      },
      {
        ""location"" : """",
        ""signedRedirectUrl"" : ""http:\/\/news.google.com\/news\/url?sa=T&ct2=us&fd=S&url=http:\/\/www.nasdaq.com\/article\/accenture-to-aquire-cloudservices-company-cloud-sherpas-20150915-00892&cid=52778951195381&ei=u1b4VaDdFardwQGtl4CgAQ&usg=AFQjCNG3aLK2RxGTFav8mL8TZgvwyOjmOQ"",
        ""unescapedUrl"" : ""http:\/\/www.nasdaq.com\/article\/accenture-to-aquire-cloudservices-company-cloud-sherpas-20150915-00892"",
        ""title"" : ""<b>Accenture<\/b> to Aquire Cloud-Services Company Cloud Sherpas"",
        ""titleNoFormatting"" : ""Accenture to Aquire Cloud-Services Company Cloud Sherpas"",
        ""language"" : ""en"",
        ""publisher"" : ""Nasdaq"",
        ""publishedDate"" : ""Tue, 15 Sep 2015 09:30:00 -0700"",
        ""url"" : ""http%3A%2F%2Fwww.nasdaq.com%2Farticle%2Faccenture-to-aquire-cloudservices-company-cloud-sherpas-20150915-00892""
      },
      {
        ""location"" : """",
        ""signedRedirectUrl"" : ""http:\/\/news.google.com\/news\/url?sa=T&ct2=us&fd=S&url=http:\/\/www.marketwatch.com\/story\/accenture-to-acquire-cloud-sherpas-accelerating-its-cloud-first-agenda-2015-09-15-9159313&cid=52778951195381&ei=u1b4VaDdFardwQGtl4CgAQ&usg=AFQjCNHN6uMVkBZss1QAR3e_VH6OdGlH0Q"",
        ""unescapedUrl"" : ""http:\/\/www.marketwatch.com\/story\/accenture-to-acquire-cloud-sherpas-accelerating-its-cloud-first-agenda-2015-09-15-9159313"",
        ""title"" : ""<b>Accenture<\/b> to Acquire Cloud Sherpas, Accelerating Its Cloud First Agenda"",
        ""titleNoFormatting"" : ""Accenture to Acquire Cloud Sherpas, Accelerating Its Cloud First Agenda"",
        ""language"" : ""en"",
        ""publisher"" : ""MarketWatch"",
        ""publishedDate"" : ""Tue, 15 Sep 2015 06:09:22 -0700"",
        ""url"" : ""http%3A%2F%2Fwww.marketwatch.com%2Fstory%2Faccenture-to-acquire-cloud-sherpas-accelerating-its-cloud-first-agenda-2015-09-15-9159313""
      }
    ],
    ""url"" : ""https%3A%2F%2Fwww.twst.com%2Fupdate%2Faccenture-plc-accenture-to-acquire-cloud-sherpas-accelerating-its-cloud-first-agenda%2F"",
    ""publishedDate"" : ""Tue, 15 Sep 2015 05:56:15 -0700"",
    ""title"" : ""<b>Accenture plc<\/b>: Accenture to Acquire Cloud Sherpas, Accelerating Its Cloud <b>...<\/b>"",
    ""publisher"" : ""The Wall Street Transcript"",
    ""GsearchResultClass"" : ""GnewsSearch"",
    ""location"" : """",
    ""unescapedUrl"" : ""https:\/\/www.twst.com\/update\/accenture-plc-accenture-to-acquire-cloud-sherpas-accelerating-its-cloud-first-agenda\/"",
    ""signedRedirectUrl"" : ""http:\/\/news.google.com\/news\/url?sa=T&ct2=us&fd=S&url=https:\/\/www.twst.com\/update\/accenture-plc-accenture-to-acquire-cloud-sherpas-accelerating-its-cloud-first-agenda\/&cid=52778951195381&ei=u1b4VaDdFardwQGtl4CgAQ&usg=AFQjCNH5WqmcrP8qAoMsz4NPTr2iqeuYCA"",
    ""language"" : ""en"",
    ""image"" : {
      ""tbHeight"" : 60,
      ""tbUrl"" : ""http:\/\/t0.gstatic.com\/images?q=tbn:ANd9GcRs5RWtQ2P58NFS88Wj2A_WJSCNAZ_C6JeiGGO6lcTI0wmnJbCcSi75ClKN"",
      ""originalContextUrl"" : ""http:\/\/www.zdnet.com\/article\/accenture-bolstering-cloud-services-with-cloud-sherpas-acquisition\/"",
      ""url"" : ""http:\/\/zdnet2.cbsistatic.com\/hub\/i\/r\/2015\/07\/29\/59884ebe-911d-4095-9e1a-d037f0096db5\/thumbnail\/770x578\/d8b2bb9b36be37c8038eb3791e1819e6\/cloud.jpg"",
      ""publisher"" : ""ZDNet"",
      ""tbWidth"" : 80
    },
    ""clusterUrl"" : ""http:\/\/news.google.com\/news\/story?ncl=dbxAM0cPnu4YboMprA1B20ludZHRM&hl=en&ned=us""
  }
]<S_CODE_TOKEN>```
",acegreen,2015-11-24 21:23:32
331,2015-09-16 01:04:55,"Please wrap your code in triple backticks [ ``` ] to make it formatted, otherwise nobody can really help you since its unreadable.
",Danappelxx,2015-11-24 21:23:32
331,2015-09-16 01:10:56,"@Danappelxx Thanks for the suggestion, I was always wondering how to force format on github. 

Just to summarize, the idea is:
- I have newJsonResults which all the results after doing JSON(data: data!)
- I try to put it in a loop like for JsonResult in newJsonResults
- JsonResult comes out in format (String, JSON) with all the results
- Expected that JsonResult would be each single element as you go through the for loop
",acegreen,2015-11-24 21:23:32
331,2015-10-27 05:44:32,"Can you show a bit of code rather than just the json data. :)
",zhigang1992,2015-11-24 21:23:32
330,2015-09-15 14:21:17,"Fixes #327 
",spenrose,2015-09-16 11:00:04
329,2015-09-14 09:01:42,"Internal code changes to drastically improve the performance of SwiftyJSON. 
",AJLindberg,2015-10-14 09:09:33
328,2015-09-13 03:36:10,"The set of commits are as follows:
1. This accommodates a Foundation change in XCode 7 GM (`NSNumber` now conforms to `Swift.Comparable` by default)
2. XCTest > and < assertions care more about types, so this fixes the test in BaseTests that broke
3. The third commit fixes the way exceptions are handled in `rawData`. `testInvalidJSONForRawData` demonstrates the use case. Prior to the change, this test will fail, but it is never caught as `NSJSONSerialization` throws a different exception. Apple recommends validating the input with `isValidJSONObject` so I've added this to `rawData()` within a Swift 2.0 `guard`
",otanistudio,2015-10-14 08:59:03
328,2015-09-13 03:45:44,"Also happy to break things down to logically separate pull requests if you wish.
",otanistudio,2015-10-14 08:59:03
327,2015-09-11 19:16:11,"Cartfile has `github ""SwiftyJSON/SwiftyJSON"" ""xcode7""`

Running `carthage update --verbose` I see this error:

<S_CODE_TOKEN>
",spenrose,2015-09-22 22:25:11
327,2015-09-13 17:06:29,"I got that error, too.
",kukushi,2015-09-22 22:25:11
327,2015-09-13 21:29:46,"+1
",jordanhamill,2015-09-22 22:25:11
327,2015-09-14 07:42:45,"+1
",beneiltis,2015-09-22 22:25:11
327,2015-09-14 16:46:32,"I've got that error too.. any idea?
",jayrparro,2015-09-22 22:25:11
327,2015-09-15 13:43:04,"me too.
",AKIRA-MIYAKE,2015-09-22 22:25:11
327,2015-09-15 13:59:15,"Is there a reason `ENABLE_BITCODE` is disabled for SwiftyJSON?
",jordanhamill,2015-09-22 22:25:11
327,2015-09-22 11:20:37,"+1
",Sljux,2015-09-22 22:25:11
327,2015-09-22 22:25:09,"Fixed by #330
",spenrose,2015-09-22 22:25:11
327,2015-11-30 11:18:03,"I seem to be experiencing this issue again 

<S_CODE_TOKEN>
",mattlanham,2015-09-22 22:25:11
327,2015-12-12 21:54:34,"I'm seeing this issue again with xcode 7.2 and SwiftyJSON 2.3.3
",jordanhamill,2015-09-22 22:25:11
327,2016-07-06 02:59:13," target for Specific platform

`carthage update --platform iOS`
",airshiplay,2015-09-22 22:25:11
326,2015-09-11 01:03:59,,mono0926,2015-10-14 08:57:54
326,2015-09-11 10:39:33,"This doesn't fix anything but reverts to Swift < 2! Since you are trying to merge this with the xcode7 branch I guess this should be rejected.
",MSchmidt,2015-10-14 08:57:54
326,2015-09-11 10:46:01,"I ran the project on the Xcode 7 GM.
Are there any problems?
If I mistook, sorry and close this PR :(
",mono0926,2015-10-14 08:57:54
325,2015-09-10 22:09:39,"Hi Pinglin,

We are trying to compile SwiftyJSON against Xcode 7 GM and we get the following errors (please see attachment).

Please let us know if there's a potential fix in the pipeline.

Best Regards,
Jeremy 

<img width=""387"" alt=""screen shot 2015-09-10 at 5 46 56 pm"" src=""https://cloud.githubusercontent.com/assets/14183216/9802292/15700086-57e7-11e5-9229-e7d97f23acf7.png"">
",jeremy-idialogs,2015-09-14 21:57:53
324,2015-09-10 19:27:18,"I just updated to Xcode 7 GM, and the code from yesterday no longer compiles, throwing what appears to be some sort of cocoa pod error:

/Users/**_PATH**_/MyFile.swift:10:8: Module file's minimum deployment target is ios8.1 v8.1: /Users/**_PATH**_/Library/Developer/Xcode/DerivedData/iOS-ThreatProtection-gafiqokfwjumofewcprlzkycmgkt/Build/Products/Debug-iphonesimulator/SwiftyJSON.framework/Modules/SwiftyJSON.swiftmodule/x86_64.swiftmodule

And here is my podfile:

source 'https://github.com/CocoaPods/Specs.git'

platform :ios, '8.1'
use_frameworks!

pod 'Alamofire', '~> 2.0'
pod 'SwiftyJSON', :git => 'https://github.com/SwiftyJSON/SwiftyJSON.git', :branch => 'xcode7'
",danwalkowski,2015-09-11 17:24:32
324,2015-09-10 21:13:13,"This is also occurring in cococoapods 0.39 b4
",danwalkowski,2015-09-11 17:24:32
324,2015-09-11 17:24:29,"This seems to be a bad interaction between upgrading Xcode and Cocoapods.
It can be cleared up by wiping Xcode's derived data for your project and then running 'pod install' again.
",danwalkowski,2015-09-11 17:24:32
323,2015-09-10 14:51:15,"I use Alamofire to make an API call and use SwiftyJSON to wrap around the json response. XCode Instrument shows that there's memory leak created by Alamofire library.
Here's the code (pretty simple) : 

<S_CODE_TOKEN>

If i comment out the line `let json = JSON(result.value!)` then no more memory leak. 
",namanhams,2016-11-17 07:23:07
323,2015-09-16 05:56:31,"Is this with `master` or the `xcode7` branch?
",bmorton,2016-11-17 07:23:07
323,2015-09-16 06:40:25,"Hi,

It seems that XCode apps are quite unreliable now. I tried with XCode 7.1 beta then it shows memory leak. I tried with XCode 7.0 GM then no memory leak. I highly believe this is XCode problem, because i did investigate this issue and it seems that SwiftyJSON doesn't do anything that can cause the memory leak. 
I'll keep monitoring it more.
",namanhams,2016-11-17 07:23:07
323,2015-09-18 23:22:22,"I have detected the same memory leak problem with the JSON(result) with xCode 7.0 GM.  I commented out the let json = JSON(result) line and the leak went way.  Am I using the code incorrectly?  I have a lot of Alamofile URL Get and JSON results,  this caused my application to run out of memory quickly.
",tehong,2016-11-17 07:23:07
323,2015-09-19 01:59:10,"Could this be the same memory leaks in the Argo swift?  See  https://github.com/thoughtbot/Argo/issues/205.  This is related to Switch ... as.. statement that Apple said that could result in memory leak.
",tehong,2016-11-17 07:23:07
323,2015-09-19 02:15:31,"According to Apple xCode 7.0 release note.  

https://developer.apple.com/library/prerelease/ios/releasenotes/DeveloperTools/RN-Xcode/Chapters/xc7_release_notes.html

---

Using switch against multiple types with as patterns may cause a memory leak. For example, avoid this kind of switch statement:
switch x {
  case let a as A: ...
  case let b as B: ...
  case let c as C: ...
  default: ...
}

## Rewrite the code to use if let a = x as? A statements instead of switch. This pattern performs type checks that avoid the memory leak. (22587077)

SwiftyJSON uses the syntax extensively.  We need a workaround ASAP.
",tehong,2016-11-17 07:23:07
323,2015-09-19 02:31:33,"There is only one block of code that has the switch... as expressions.  I modified the following code in the SwiftyJSON.swift file and the memory leak went away:

if let number = newValue as? NSNumber {
                if number.isBool {
                    _type = .Bool
                } else {
                    _type = .Number
                }
                self.rawNumber = number
            } else if let string = newValue as? String {
                _type = .String
                self.rawString = string
            } else if let _ = newValue as? NSNull {
                _type = .Null
            } else if let array = newValue as? [AnyObject] {
                _type = .Array
                self.rawArray = array
            } else if let dictionary = newValue as? [String : AnyObject] {
                _type = .Dictionary
                self.rawDictionary = dictionary
            } else {
                _type = .Unknown
                _error = NSError(domain: ErrorDomain, code: ErrorUnsupportedType, userInfo: [NSLocalizedDescriptionKey: ""It is a unsupported type""])
            }

<S_CODE_TOKEN>

So this is the right workaround.
![screenshot 2015-09-18 19 28 58](https://cloud.githubusercontent.com/assets/13394121/9974266/d0b82ecc-5e3b-11e5-9d09-9bd13aa4b973.png)
",tehong,2016-11-17 07:23:07
323,2015-09-27 03:46:16,"I just found out exactly the same as Tehong. It seems that this is bug with Swift, but has been fixed in XCode 7.1 beta 2. 
",namanhams,2016-11-17 07:23:07
323,2015-10-01 12:49:04,"Has this been addressed yet? I am seeing this too in XCode 7.0
",tminard,2016-11-17 07:23:07
323,2015-10-04 02:01:28,"This is addressed in XCode 7.1 beta 2.  It is in the release notes.
",tehong,2016-11-17 07:23:07
323,2015-10-05 11:23:39,"Is there a pr with a workaround that those of us not using Xcode 7.1 beta 2 can use?
",marlowcharite,2016-11-17 07:23:07
323,2015-10-05 22:27:00,"I don't think so.  Just modify SwiftyJSON.swift in your xCode SwiftyJSON framework directory as I did and that will eliminate the memory leak for any product produced with xCode prior to xCode 7.1 beta 2.
",tehong,2016-11-17 07:23:07
323,2015-10-06 15:20:03,"I just ran into this on Xcode 7.0.1 and can confirm @tehong's solution works.
",cmcnab,2016-11-17 07:23:07
323,2015-10-06 15:22:41,":+1: 
",alexdd55,2016-11-17 07:23:07
323,2015-10-07 03:43:48,"@tehong That worked for me too. Thanks
",aldo-jlaurenstin,2016-11-17 07:23:07
323,2016-02-10 21:44:24,"+1
",iantheparker,2016-11-17 07:23:07
323,2016-11-17 07:23:07,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:23:07
322,2015-09-09 15:23:17,"Code should never use floating point numbers to represent money, or any other value where exact decimal rounding is important. (See [here](http://spin.atomicobject.com/2014/08/14/currency-rounding-errors/) and [here](http://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency) for the reasons why.)

Because of this, developers often use strings to represent currency in JSON. However, SwiftyJSON’s `numberValue` applied to a string element parses the string as a double, thus defeating this technique. Because `numberValue` returns `NSNumber` and not `Double`, it’s not at all obvious to someone using SwiftyJSON that this floating point conversion happens — a potential source of dangerous bugs!

Cocoa provides `NSDecimalNumber` for exactly this situation, and SwiftyJSON should return it when parsing a string as a number. This patch does that.

Two notes:
- The `number` property (as opposed to `numberValue`) does not even attempt to parse strings. It might make more sense for it to attempt the parsing, and return nil if the parsing fails. While potentially surprising, I have left the existing behavior in place.
- `NSDecimalNumber` returns `NaN` instead of `0` if a string does not parse. This behavior arguably makes more sense. However, I’ve preserved SwiftyJSON’s existing behavior for `numberValue`.
",pcantrell,2015-10-14 08:44:54
322,2015-10-14 08:45:07,"@pcantrell thanks.
",tangplin,2015-10-14 08:44:54
322,2015-10-16 14:03:53,"Quite welcome!
",pcantrell,2015-10-14 08:44:54
321,2015-09-09 04:04:46,"Currently cocoapods has very limited support for [setting a pod spec dependency from a branch](https://github.com/CocoaPods/CocoaPods/issues/922#issuecomment-15771597). This is an issue for my framework because it depends on the Xcode 7 branch of SwiftyJSON, but I can't add it to the podspec due to cocoapods limitations.

This could be fixed in a variety of ways, but the one that I can come up from the top of my head is creating an obscure version (so podfiles with no versioning won't get screwed up) to allow us Swift 2 users to not specify a branch.

Thanks!
",Danappelxx,2015-09-10 06:42:52
321,2015-09-10 06:42:52,"Same as https://github.com/SwiftyJSON/SwiftyJSON/issues/308
",Danappelxx,2015-09-10 06:42:52
321,2015-09-14 02:51:40,"Would love for this to happen :)
",mikenolimits,2015-09-10 06:42:52
320,2015-09-05 08:36:11,,bassrock,2015-10-14 08:35:21
320,2015-09-21 09:34:25,"+1
",patricks,2015-10-14 08:35:21
320,2015-09-27 13:06:20,"+1
",JaFonz,2015-10-14 08:35:21
319,2015-09-02 14:09:35,"Sometimes it's important to know whether value listed in JSON or not. 
",kohtenko,2015-10-14 08:34:45
318,2015-09-01 16:32:36,"http://stackoverflow.com/questions/32322881/issue-with-swiftyjson-when-parsing-json-with-unicode-characters
",dudeinthemirror,2015-09-04 16:28:48
318,2015-09-04 10:32:45,"Are you sure? This works for me using your json.

<S_CODE_TOKEN>
",iamtomcat,2015-09-04 16:28:48
318,2015-09-04 16:09:49,"Hi Tom, thanks for your reply. So, it works fine when reading from a file, however when retrieving the same data via a REST API (in this case Spree), I get the error.
If you don’t mind please try : http://eastereggs.mysimplestore.com/api/taxonomies/1/taxons
",dudeinthemirror,2015-09-04 16:28:48
318,2015-09-04 16:16:22,"This is what I get when I use the url. Maybe I'm missing something more specific to what your'e trying to do?
![screen shot 2015-09-04 at 5 15 33 pm](https://cloud.githubusercontent.com/assets/6033483/9688674/978fa094-5328-11e5-984f-3dd963289897.png)
",iamtomcat,2015-09-04 16:28:48
318,2015-09-04 16:28:48,"I am using Alamofire to get the data. So, it looks like there is something funky going on somewhere between getting the json back and parsing. Closing this for now, it's clear it's not a SwiftyJSON issue. Thanks for your help Tom !
",dudeinthemirror,2015-09-04 16:28:48
318,2015-09-04 16:31:01,"No worries man. Let me know if you need any more help.
",iamtomcat,2015-09-04 16:28:48
317,2015-08-31 12:48:30,"Since #257 seems to bit dead and has a wrong `PRODUCT_BUNDLE_IDENTIFIER` I created a new fork mainly for using it myself…
",t-unit,2015-09-08 07:00:18
316,2015-08-30 13:07:54,"I deal with a 3rd party API where every value except for `nil` is wrapped in quotation marks, and thus gets parsed as `.String`. Using the `var int: Int?` in this case will always returns nil. The solution, currently, is to conditionally unwrap the `string` representation, and then pass that to `Int.init?` to finally get an `Int?`. This is ungainly, and probably not too rare a problem, as legacy APIs go.

I propose that `var int: Int?` be modified to handle this case implicitly, by checking for a `.String` and returning the result of passing that value to `Int.init?`. This would properly align the semantics of the code with the data, for the developer, rather than the peculiarities of the original serialization.

(Other types might also merit this treatment, but so far I'm only dealing with `Int`s personally)

I can handle the code changes personally, depending on receptiveness/feedback.
",endash,2015-11-02 19:09:06
316,2015-09-04 10:05:18,"For some reason I thought this was the case already. It seems weird that the integer setter assumes that a number will be passed.
",iamtomcat,2015-11-02 19:09:06
316,2015-11-02 19:09:06,"This should do it

<S_CODE_TOKEN>

:beers: 
",zhigang1992,2015-11-02 19:09:06
316,2015-11-02 20:14:09,"@zhigang1992 Yeah, that's the workaround I mentioned in the description. Multiply that by a dozen times and it's not very nice, compared to the intuitive, obvious, and terse `j[""a""].int`. The priority, as far as the semantics go, should be developer intention and usefulness.  We're using SwiftyJSON to parse our _data_ and not _code_, and it stops just short of that goal by insisting that a string in the source JSON has to be parsed as a `String`, even if I know it is an `Int`. 

Everything starts out as a `String`, that's why we're using a library to parse it. The JSON spec may say that `""5""` is a string and `5` is a number, but I happen to know differently. I care whether an `Int` can be parsed from it, not whether or not _SwiftyJSON_ happens to know that it is an `Int`. Developer knowledge should trump naive type detection.
",endash,2015-11-02 19:09:06
315,2015-08-28 11:28:37,"Given that other people seem to be using the Xcode 7 branch without problems I suspect that this may be an issue with my code, but on the off-chance that it's not here's my issue. 
##### Background

I'm running Xcode 7 (beta 5) and am working on an iOS 9 app. I added SwiftyJSON to my project the manual way, by dragging it into my source tree. It didn't compile right away, but the errors were pretty simple to fix with Xcode providing fix-it suggestions for all of them. 
##### Issue

I am able to retrieve JSON data from a server using the standard NSData/NSJSONSerialization method, but when I attempt to do the same with SwityJSON I get an error. Here's some console output I captured by dropping a breakpoint into the task handler.

<S_CODE_TOKEN>

Here's some example code. Note that ""requestUrl"" below is a string representing a URL which returns valid JSON.

<S_CODE_TOKEN>
",Subject22,2015-08-31 07:26:51
315,2015-08-28 11:43:35,"Heh. Progress update. I had another think about this and tried plugging the NSJSONSerialization data into SwiftyJSON and it worked! It's not perfect, but for now I'll take it. If anyone has any further insight I'd love to hear it.

<S_CODE_TOKEN>
",Subject22,2015-08-31 07:26:51
315,2015-08-31 07:26:51,"Replace `let json = JSON(data!)` by `let json = JSON(data:data!)`
",tangplin,2015-08-31 07:26:51
315,2015-08-31 07:42:54,"Thanks very much! Would you mind explaining why that works? What did the original code attempt to do, and why did it fail?
",Subject22,2015-08-31 07:26:51
315,2016-02-05 09:21:19,"@Subject22 I know this is an old issue, but this is also for everyone who finds this later on.

When you look at the SwiftyJSON initializers you can see that
`let json = JSON(data)` would call the initializer `public init(_ object: AnyObject)`
whereas `let json = JSON(data: data)` invokes the dedicated initializer `public init(data: NSData)`
",ast3150,2015-08-31 07:26:51
315,2016-02-16 18:53:22,"@ast3150 Thanks!
",Subject22,2015-08-31 07:26:51
314,2015-08-27 11:41:26,"I could build and run iOS project with Xcode 6.4. However, after cocoapds SwiftyJSON and build workspace, I received below failed message.

error: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/libtool: unknown option character `X' in: -Xlinker
",singkorn,2015-10-29 06:23:30
314,2015-10-15 08:52:12,"same here
",rikschennink,2015-10-29 06:23:30
314,2015-10-29 06:10:35,"Is the issue still exist?

If so can you create a sample project?
",zhigang1992,2015-10-29 06:23:30
314,2015-10-29 06:16:15,"I opened the wrong cocoapods project file so, no problems here.

On Thu, Oct 29, 2015 at 7:10 AM, Zhigang Fang notifications@github.com
wrote:

> Is the issue still exist?
> 
> ## If so can you create a sample project?
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/SwiftyJSON/SwiftyJSON/issues/314#issuecomment-152088771
",rikschennink,2015-10-29 06:23:30
313,2015-08-27 00:58:39,"I was working on a project that required swiftyjson because it was used on swift1.2. Hence i took my time to convert it for the internal use and after successfully working for my project, i would like to request change to support swift2.
",kandelvijayavolare,2015-10-14 09:30:50
312,2015-08-26 05:59:22,"Is there a way to got from a JSON object and pull out just a subset of the fields? For example, if this was my JSON blob stored in the JSON object.

<S_CODE_TOKEN>

And I want to remove the `runs` tag so the new object only contains.

<S_CODE_TOKEN>

Any suggestions? I have spent the past 4+ hours trying various things.
",dyermd,2015-10-29 06:28:33
312,2015-08-26 11:22:40,"What exactly are you trying to accomplish? 
Why don't you just not use the property?
If you have access to the server you could just not send it.
",iamtomcat,2015-10-29 06:28:33
312,2015-08-26 12:08:44,"I am trying to generate a new JSON object that has a subset of the information. The original API call returns data from multiple models. When I send the PATCH call I just need to send data associated with the specific model I need to PATCH, thus trying to strip out a few things.
",dyermd,2015-10-29 06:28:33
312,2015-10-29 06:28:32,"This should have done it

<S_CODE_TOKEN>

feel free to reopen the issue if you have further questions

:beer: 
",zhigang1992,2015-10-29 06:28:33
311,2015-08-25 20:18:38,"Using the latest XCode 7 beta, I get the following warning in the console even with inhibit_all_warnings! set in the podfile:

'stringByAddingPercentEscapesUsingEncoding' is deprecated: Use stringByAddingPercentEncodingWithAllowedCharacters(_:) instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent since each URL component or subcomponent has different rules for what characters are valid.

It refers to `SwiftyJSON.swift -> extension JSON -> public var URL -> get -> encodedString_`
",mosesoak,2015-10-29 06:07:10
311,2015-10-29 06:07:10,"This issue should have been resolved

Feel free to reopen it if you have further questions.
",zhigang1992,2015-10-29 06:07:10
310,2015-08-25 05:13:17,,saagarjha,2015-08-31 07:03:16
309,2015-08-24 04:45:42,"I have downloaded and installed this library but it cannot compile.
I fixed the errors so that it can compile successfully but the ios simulator cannot run.
Do the authors have any plan to update this library to the newest version of swift?
There are many similar issues on board. It seems that the authors' update is highly appreciated.
",shuuchen,2015-10-29 06:11:55
309,2015-08-25 14:43:46,"+1
Same here. Months ago I started a project with this dependence. I'm trying to run today with Swift 2.0 and errors everywhere. I hope will see a new version of SwiftyJSON soon.
",calosth,2015-10-29 06:11:55
309,2015-08-25 15:06:16,"Are you checking out the ""xcode7"" branch?
",iamtomcat,2015-10-29 06:11:55
309,2015-08-25 15:27:00,"@iamtomcat Thanks!
",calosth,2015-10-29 06:11:55
309,2015-08-25 16:06:08,"No worries man. Just so you're aware most libraries that are built on swift generally have a branch where they update to the latest version of swift.
",iamtomcat,2015-10-29 06:11:55
309,2015-08-25 19:32:24,"Good to know! Thanks again
On Tue, Aug 25, 2015 at 11:36 Tom Clark notifications@github.com wrote:

> No worries man. Just so you're aware most libraries that are built on
> swift generally have a branch where they update to the latest version of
> swift.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/SwiftyJSON/SwiftyJSON/issues/309#issuecomment-134651132
> .
",calosth,2015-10-29 06:11:55
309,2015-09-10 09:31:58,"Hi I just wondering when the xocde 7 branch was going to get merged into develop. Since xcode 7 has been seeded
",wokandroll,2015-10-29 06:11:55
309,2015-09-11 12:25:33,"Any idea when these changes will make it to master / released to Cocoapods / production ready?
",mwaterfall,2015-10-29 06:11:55
309,2015-09-17 05:55:44,"+1
",borut-t,2015-10-29 06:11:55
309,2015-09-17 19:03:26,"Looks like the xcode7 branch has been merged in to master. Is there a plan to update the podspec?
",cmoulton,2015-10-29 06:11:55
309,2015-09-18 11:11:44,"+1
",giacgbj,2015-10-29 06:11:55
309,2015-09-27 01:27:41,"@cmoulton Looks like the podspec was updated... atleast the readme.

<S_CODE_TOKEN>
",craigpearce5,2015-10-29 06:11:55
309,2015-10-29 06:11:55,"CocoaPods is updated

:beers: 
",zhigang1992,2015-10-29 06:11:55
308,2015-08-23 18:35:56,"Hi,

Would it be possible to tag a release for swift 2.0, so that we can add SwiftyJSON as a dependency in our pods?
",mikenolimits,2015-10-29 06:12:40
308,2015-08-25 17:24:31,"<S_CODE_TOKEN>

You're able to specify a specific branch in your Podfile.
",aaronhuisinga,2015-10-29 06:12:40
308,2015-08-25 17:40:22,"Hi Aaron, 

Yes you're right, that would work fine if you were using the package, but it won't work if you are making a Cocoapod yourself and SwiftyJSON is listed as a dependency.
",mikenolimits,2015-10-29 06:12:40
308,2015-09-14 19:13:52,":+1: 
",mikenolimits,2015-10-29 06:12:40
308,2015-09-18 01:00:25,"with the official release of ios9, now would be a great time for this update
",doguhanokumus,2015-10-29 06:12:40
308,2015-09-18 01:55:35,"Maybe someone has a fork for this?
",mikenolimits,2015-10-29 06:12:40
308,2015-10-29 06:12:40,"It's tagged, and released to cocoapods

:beers: 
",zhigang1992,2015-10-29 06:12:40
307,2015-08-23 15:53:40,,amarrella,2015-10-14 08:30:22
306,2015-08-21 16:42:39,"Mostly needs downcasts, but other errors too
",agreensh,2015-10-29 06:19:55
306,2015-10-29 06:19:55,"Which version of SwiftyJSON are you using?

If you're using Xcode6.4 for Swift1.2, please use version 2.2.1 or below
",zhigang1992,2015-10-29 06:19:55
305,2015-08-20 23:11:06,"Getting this error on Xcode 7:

<S_CODE_TOKEN>

This is the piece of code:

<S_CODE_TOKEN>

Thanks
",eneko,2015-08-22 20:59:36
305,2015-08-22 19:29:53,"I just pulled the Xcode7 branch, and I am also seeing this error
",rajohns08,2015-08-22 20:59:36
305,2015-08-22 19:52:05,"Try updating to Xcode 7 beta5.
",rajohns08,2015-08-22 20:59:36
305,2015-08-22 20:59:36,"Yeah, sorry, my bad. Works fine on beta5.
",eneko,2015-08-22 20:59:36
304,2015-08-20 01:34:58,"Is there any interest in moving away from NSJSONSerialization to a full Swift parser?
",lukescott,2016-11-22 06:54:08
304,2015-09-13 15:52:46,"@lukescott I am working on exactly that. Have you made any progress yourself? I'm working on efficiently parsing nested data structures (e.g. arrays within arrays within dictionaries)
",ephemer,2016-11-22 06:54:08
304,2015-09-14 03:50:19,"@ephemer I actually finished a stream tokenizer and parser. It's a company project though, and they haven't decided to open source it yet due to an internal project that's dominating most of our time at the moment. They don't want to release something without the ability to maintain it.
",lukescott,2016-11-22 06:54:08
304,2015-09-14 07:49:38,"Oh ok, interesting. I pushed a repo last night in pure swift (www.github.com/ephemer/strongly-json) that has about 85% of the parsing functionality I'm after.

It currently doesn't deal with string literals or backspaced tokens yet, for example, but both will be easy to add. I've only been working on it for a couple of days so far.

My aim was to make a pure Swift 2.0 solution (no frameworks) for when the language goes open source. Maybe you and/or the company would be interested in contributing to that project instead?

On Mon, Sep 14, 2015 at 5:50 AM, Luke Scott notifications@github.com
wrote:

> ## @ephemer I actually finished a stream tokenizer and parser. It's a company project though, and they haven't decided to open source it yet due to an internal project that's dominating most of our time at the moment. They don't want to release something without the ability to maintain it.
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/SwiftyJSON/SwiftyJSON/issues/304#issuecomment-139956154
",ephemer,2016-11-22 06:54:08
304,2015-09-14 08:18:31,"I had the same goal (Swift only, no Foundation). The parser is already done. It already does string literals, numbers w/ exponents, escape sequences including unicode w/ surrogate pairs.
",lukescott,2016-11-22 06:54:08
304,2015-12-10 05:27:34,"Incidentally, now that open source swift is out, NSJSONSerialization https://github.com/apple/swift-corelibs-foundation/blob/master/Foundation/NSJSONSerialization.swift was included, but is largely unimplemented.  Would any of your code work there?
",hpux735,2016-11-22 06:54:08
304,2015-12-10 09:58:50,"Yes, I'm in discussions with the Swift dev group about it already

On Thu, Dec 10, 2015 at 6:27 AM, William Dillon notifications@github.com
wrote:

> ## Incidentally, now that open source swift is out, NSJSONSerialization https://github.com/apple/swift-corelibs-foundation/blob/master/Foundation/NSJSONSerialization.swift was included, but is largely unimplemented.  Would any of your code work there?
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/SwiftyJSON/SwiftyJSON/issues/304#issuecomment-163491015
",ephemer,2016-11-22 06:54:08
304,2016-01-21 00:20:20,"@ephemer Any update on that?
",DominicFrei,2016-11-22 06:54:08
304,2016-01-21 13:12:00,"Last I checked it'd been implemented, but not by me
Dominic Frei notifications@github.com schrieb am Do., 21. Jan. 2016 um
01:20:

> @ephemer https://github.com/ephemer Any update on that?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/SwiftyJSON/SwiftyJSON/issues/304#issuecomment-173410569
> .
",ephemer,2016-11-22 06:54:08
304,2016-11-22 06:54:07,"@lukescott Given that https://github.com/apple/swift-corelibs-foundation/blob/master/Foundation/NSJSONSerialization.swift is now fully implemented in swift and does not perform ObjC bridging, I believe this issue is now fixed. Let me know if I need to reopen.",ldiqual,2016-11-22 06:54:08
303,2015-08-18 08:01:20,"Date values are always nil...

When using this:
let json = JSON(item) as JSON

Item looks like this:
dict before json: {
    date = ""2015-04-15 12:00:00 +0000"";
    details = ""bla bla bla"";
    id = 363;
    name = ""Name"";
}

After that date is always nil...
",Urkman,2015-11-24 21:26:40
303,2015-10-29 06:30:17,"Can you paste in the code of how you're getting this date value?
",zhigang1992,2015-11-24 21:26:40
303,2015-11-24 21:26:40,"Feel free to reopen this if you have any more questions.
",zhigang1992,2015-11-24 21:26:40
302,2015-08-16 16:33:18,"Hi,
First:
Thanks for writing/maintaining SwiftyJSON!
I really like it.

My Question/Problem is:
SwiftyJSON overwrites the default behaviour of the comparison operators for NSNumber. (==,!=,<,>...)
I.e. comparing 1 == true now gives false instead of true
What is the reason for that?

I just had a bug that was caused only by importing SwiftyJSON in some file and therefore pretty magical to debug...
Is it absolutely necessary to change such basic functionality?
",doschi,2015-11-24 22:10:20
302,2015-08-20 08:10:16,"+1
",Nelyus,2015-11-24 22:10:20
302,2015-09-14 15:48:10,"I believe it's due to how booleans are handled internally. When determining type, it's difficult to know whether it's a boolean (0,1) or a number, so SwiftyJSON does some clever things with NSNumber to figure out which one it is. I assume overloading the equality operator is (unfortunately) part of this.
",Danappelxx,2015-11-24 22:10:20
302,2015-11-19 09:01:50,"+1, was just bitten by the same issue.
",gereons,2015-11-24 22:10:20
302,2015-11-24 22:10:01,"Just did a fix and make the operator overload internal to SwiftyJSON. It shouldn't affecting anything outside the framework anymore.
",zhigang1992,2015-11-24 22:10:20
301,2015-08-13 11:38:40,,duemunk,2015-08-14 06:50:51
300,2015-08-13 08:09:38,"I executed:

<S_CODE_TOKEN>

The output was:

<S_CODE_TOKEN>

When I follow some breakpoints it looks like subscripting always hits the error

<S_CODE_TOKEN>

Any ideas?
",rexmas,2015-10-29 06:34:34
300,2015-08-25 05:15:07,"Any updates here?
",rexmas,2015-10-29 06:34:34
300,2015-10-29 06:34:34,"I don't think SwiftyJSON is creating nested dictionaries

<S_CODE_TOKEN>

Output

<S_CODE_TOKEN>

For now, you'd have to do

<S_CODE_TOKEN>
",zhigang1992,2015-10-29 06:34:34
299,2015-08-13 08:02:44,"Hi 

I am just wondering what the likely date is for the xcode7 branch to merged into master. I do not want to release the app with a branch version. 

If there is any way I can help, I will just let me know how. 
",wokandroll,2015-10-01 09:30:17
299,2015-09-05 21:07:55,"+1
",sdduursma,2015-10-01 09:30:17
299,2015-09-15 07:05:20,"+1
",Ekhoo,2015-10-01 09:30:17
299,2015-09-15 14:21:01,"+1 @tangplin 
",bcapps,2015-10-01 09:30:17
299,2015-09-15 21:30:20,":+1:
",shouze,2015-10-01 09:30:17
299,2015-09-16 01:02:53,":+1: 
",Danappelxx,2015-10-01 09:30:17
299,2015-09-16 09:16:55,":+1: 
",TadeasKriz,2015-10-01 09:30:17
299,2015-09-20 01:34:14,"Looks like this has been done (1f38ced11).
",cdmwebs,2015-10-01 09:30:17
299,2015-09-21 09:29:53,"ok so this issue have to be closed.
",shouze,2015-10-01 09:30:17
298,2015-08-11 18:59:31,"Fixes a crash when a parse error occurs, but no NSErrorPointer has been passed into the JSON initialiser.
",ndevenish,2015-08-18 03:06:02
298,2015-08-17 15:43:53,"@tangplin Any thoughts on this PR? Not great to crash in this scenario.
",bcapps,2015-08-18 03:06:02
297,2015-08-11 09:13:17,"I install this framework by Cocapods, but it throw out following exception while debugging in iphone 6 Device. 

dyld: Library not loaded: @rpath/SwiftyJSON.framework/SwiftyJSON
  Referenced from: /private/var/mobile/Containers/Bundle/Application/B3BC9E72-FABB-4A74-9C32-C9490D00877F/ddtcrm.app/ddtcrm
  Reason: Incompatible library version: ddtcrm requires version 2.0.0 or later, but SwiftyJSON provides version 1.0.0

My Podfile is as the following:
source 'https://github.com/CocoaPods/Specs.git'
platform :ios, '8.0'
use_frameworks!
# pod 'SwiftForms'

pod 'Alamofire', '~> 1.3’
pod 'SwiftyJSON', '>= 2.2.1'
pod 'SwiftDate'
",nutts,2015-08-11 10:25:46
296,2015-08-10 05:41:44,"fixes compiler warning and uses NSCharacterSet.URLQueryAllowedCharacterSet() as allowedCharacters
",mrgrauel,2015-08-21 07:54:04
296,2015-08-19 08:13:51,":+1: 
",4np,2015-08-21 07:54:04
296,2015-08-21 08:04:45,":+1: 
",Nelyus,2015-08-21 07:54:04
295,2015-08-09 00:35:07,"I've got 40 errors in the SwiftyJSON.swift file.
They are all exactly the same:

<S_CODE_TOKEN>

What's going on? Downloaded the file 4 times now, it just refuses to work. Using Xcode 6. 
Thanks, 
Adam
",adam-short,2015-10-30 17:41:46
295,2015-08-12 05:02:03,"See #271. Latest SwiftyJSON.swift should solve the issue.
",yasuoza,2015-10-30 17:41:46
295,2015-10-30 17:41:45,"This issue should have been resolved.

If you're using Xcode7, please use version 2.3.0 and up

If you're using Xcode6, please stay on version 2.2.1
",zhigang1992,2015-10-30 17:41:46
294,2015-08-09 00:06:17,"So,  this is my code .

<S_CODE_TOKEN>

the thing is im getting 10.0 as  when using the double value which my model expects as Double. when println restDict[""precio""] the real value is 10.00

i need to get the two decimal spaces.. the same thing happen's when using floatValue
",hopye,2015-11-01 03:18:34
294,2015-08-25 16:05:15,"This is correct behaviour. Are you just wanting format the value?

It would look like this:
`String(format: ""%.2f"", arguments: [10.0])`
",iamtomcat,2015-11-01 03:18:34
293,2015-08-08 20:50:12,"<S_CODE_TOKEN>

The above is deprecated as of Xcode 7/Swift 2.0

This is Apple's recommended replacement:

<S_CODE_TOKEN>
",condaatje,2015-08-21 07:55:09
293,2015-08-08 20:56:24,"That being said, using NSCharacterSet.alphanumericCharacterSet() could lead to some issues, so perhaps someone could review what the desired character set should be.

I've had more success around my code (and with finnicky APIs - specifically yahoo finance) with:

<S_CODE_TOKEN>

Actually, I'll update the code with that charset.
",condaatje,2015-08-21 07:55:09
292,2015-08-08 06:52:02,,Kussembayev,2015-08-09 02:14:44
291,2015-08-07 11:48:08,"Yesterday I had issues with Xcode 7 beta 4 and SwiftyJSON. Today, I noticed that there's a beta 5. Will test that. Closing this issue.
",peter40b,2015-08-07 11:55:55
290,2015-08-06 14:17:10,"Related: https://github.com/SwiftyJSON/SwiftyJSON/issues/259
",briankracoff,2015-08-14 06:50:31
289,2015-08-02 11:06:04,"get json object, but i want pure json string
",longxianlin,2015-10-29 07:09:12
289,2015-08-03 10:25:47,"rawString
",tangplin,2015-10-29 07:09:12
288,2015-07-31 09:15:06,"您好，我现在在做列表页上拉加载更多的功能，但发现JSON貌似没找到怎么让旧的元素和新的元素相加。这个怎么办呢？谢谢
",fanly,2015-08-01 13:57:34
288,2015-08-01 13:57:34,"UITableViewController 中数据源用[JSON]类型而不是JSON
",tangplin,2015-08-01 13:57:34
287,2015-07-30 16:03:10,"Xcode JSON智能提示没有JSON(data:)只有 JSON()
直接使用

if let data = NSData(contentsOfURL: url, options: .allZeros, error: nil) {
    let json = JSON(data) //智能提示只有这个 不返回数据
    let json = JSON(data:data) //手动输入参数名 返回正确数据
}
",androidcn,2015-08-01 13:58:30
287,2015-08-01 13:58:30,"仔细看一下OOP编程中的多态再考虑下你问这个问题是不是有价值。
",tangplin,2015-08-01 13:58:30
287,2015-08-02 03:23:06,"多态我当然懂,但是初学者要使用,智能提示会有更好的帮助

<img width=""330"" alt=""screen shot 2015-08-02 at 11 19 58 am"" src=""https://cloud.githubusercontent.com/assets/271715/9024563/b25dd628-3908-11e5-9fb2-a07c43b7eff1.png"">
",androidcn,2015-08-01 13:58:30
287,2015-08-02 03:48:50,"请联系Apple解决Xcode的问题。

发自我的 iPhone

> 在 2015年8月2日，11:23，androidcn notifications@github.com 写道：
> 
> 多态我当然懂,但是初学者要使用,智能提示会有更好的帮助
> 
> —
> Reply to this email directly or view it on GitHub.
",tangplin,2015-08-01 13:58:30
286,2015-07-30 03:15:20,"Hi, I got this error message even I already import SwitfyJSON

<S_CODE_TOKEN>

My code

<S_CODE_TOKEN>

Please advice. Thank you.
",datomnurdin,2015-11-24 22:11:11
286,2015-08-04 15:52:31,"@datomnurdin more information is proibably needed.

How have you integrated SwiftyJSON: Cocoapods? Carthage? Copy/paste of files?
",murrayds,2015-11-24 22:11:11
286,2015-08-05 03:10:13,"I'm using via Cocoapods.
",datomnurdin,2015-11-24 22:11:11
286,2015-08-30 00:57:05,"Hi, did someone found solution? I have the same error via CocoaPods. Thanks
",pawelmilek,2015-11-24 22:11:11
286,2015-08-30 14:16:22,"I found related thread with the same error and solution. Maybe it will be helpful.
https://github.com/SwiftyJSON/SwiftyJSON/issues/192 
",pawelmilek,2015-11-24 22:11:11
286,2015-11-24 22:11:10,"It's should be working with the latest version now.

:beers: 
",zhigang1992,2015-11-24 22:11:11
286,2015-11-25 06:03:05,"thanks.
",datomnurdin,2015-11-24 22:11:11
286,2016-03-25 22:23:38,"This issue literally just happened to me. I'm using cocoapods and i've linked the framework to my project.
I also added the 'import SwiftyJSON' and I still got  the error Use of undeclared type 'JSON'.
Easiest fix at least for me was to use the fully qualified class name.
Example:
//Give Use of undeclared type 'JSON' error
func toJSON() -> JSON
//Works with no issues
func toJSON() -> SwiftyJSON.JSON

Hope this helps you as well. 
",ghost,2015-11-24 22:11:11
285,2015-07-29 20:00:28,"When doing:

<S_CODE_TOKEN>

If jsonString is this:

<S_CODE_TOKEN>

modelsArray is this:

<S_CODE_TOKEN>

If jsonString is this:

<S_CODE_TOKEN>

modelsArray is this:

<S_CODE_TOKEN>
",marsman12019,2015-11-24 22:08:15
285,2015-11-01 13:53:35,"This part is actually handled by system `NSJSONSerialziation` class, seems like currently it doesn't actually support number with e format
",zhigang1992,2015-11-24 22:08:15
285,2015-11-24 22:08:15,"Since it's not in the `http://www.json.org/` standard. And IMHO, it's should be part of JSON Parser's job, instead SwiftyJSON.
",zhigang1992,2015-11-24 22:08:15
284,2015-07-28 18:18:23,"I'm using SwiftyJSON to populate a table view with data pulled from a web api. So I set up an instance variable to hold my JSON:

<S_CODE_TOKEN>

Then I make a request somewhere to update the data, and the table gets reloaded:

<S_CODE_TOKEN>

Some of my cells, I want my user to be able the update the underlying data model. So for instance, I have some text fields embedded in a cell, and then using a delegate method, I want to update the JSON, like so:

<S_CODE_TOKEN>

This doesn't work, the tableData remains unchanged. However, if I create a JSON object from a dictionary, that does get updated:

<S_CODE_TOKEN>

So it appears that this is a problem limited to SwiftyJSON objects created via the responseJSON in Alamofire. I need to keep the underlying data model up to date based on the changes my user has made. If the cell scrolls off screen, that text field might have its text reset when the table view reuses its parent cell for example. Or if my user decides to save his changes and upload them to the server, I need to have the current values reflected in the data model, not what they were when he last made a request. Any idea why this isn't working and how to achieve it?
",DevinShelly,2016-11-22 06:55:34
284,2015-07-29 16:19:53,"OK, I've figured it out. It has something to do with implicitly unwrapping a JSON value. If I store it in an optional value or a non-optional variable, I can update it just fine. It's only an implicitly unwrapped variable that refuses to update. I'm not sure why this is, but I threw together the following playground to demonstrate it:

<S_CODE_TOKEN>
",DevinShelly,2016-11-22 06:55:34
284,2016-11-22 06:55:34,@DevinShelly I was able to reproduce the issue and will followup in https://github.com/SwiftyJSON/SwiftyJSON/issues/412. Closing this as a duplicate. Thanks!,ldiqual,2016-11-22 06:55:34
283,2015-07-25 13:27:00,,qq251569880,2015-09-16 11:24:46
283,2015-08-09 00:19:53,"Please fix that:  'stringByAddingPercentEscapesUsingEncoding' is deprecated: Use stringByAddingPercentEncodingWithAllowedCharacters(_:) instead
See ligne 888
Xcode 7 b5
",leversol,2015-09-16 11:24:46
283,2015-09-11 14:50:19,"Tried to build it with carthage, but got this error: `target 'SwiftyJSON watchOS' has bitcode disabled (ENABLE_BITCODE = NO), but it is required for the 'watchos' platform` Help?
",maartenschumacher,2015-09-16 11:24:46
283,2015-09-12 20:41:42,"@tangplin Should this be merged into master (with a new Cocoapods version) now that Xcode 7 GM is out?
",bcapps,2015-09-16 11:24:46
283,2015-09-12 20:57:16,"Please do so - I'm can't add swiftyjson as a dependency in my pod spec before you do.
",Danappelxx,2015-09-16 11:24:46
283,2015-09-14 02:21:39,"I think it's time to merge Xcode 7 branch in master. Alternatively you guys can consider using [CocoaSeeds](https://github.com/devxoul/CocoaSeeds) to specify branch.
",devxoul,2015-09-16 11:24:46
282,2015-07-25 06:24:25,"Using arrayValue/dictionaryValue to get count is not efficient, just use object instead.
",wordlessj,2015-07-27 03:17:00
281,2015-07-24 08:27:13,"The order of  elements of   two array
""self.json.dictionaryValue.keys.array""   and  ""(self.json.object as!
NSDictionary).allKeys""  is  different  , so  it  causes a  bug  in
appearance   i  turn them into the same one
",kai60,2015-07-27 03:17:26
280,2015-07-22 00:52:17,"Hello, is there any way for me to quickly change SwiftyJSON so that it will be able to parse using ISO-8859-1 instead of UTF-8?

Thanks!
",FredLoh,2015-10-30 17:46:39
280,2015-08-07 15:56:08,"With no prior knowledge of SwiftyJSON (I stumbled on this by chance), if you're talking about parsing a JSON string (in 8859-1 encoding) into model objects, then it should be impossible — JSON must be Unicode text (http://www.ietf.org/rfc/rfc4627.txt) so an 8859-1 string cannot be valid JSON.
",Rupert-RR,2015-10-30 17:46:39
280,2015-10-30 17:46:29,"JSON Parsing in `SwiftyJSON` are actually done by `NSJSONSerialization`.

And NSJSONSerialization supports

> The data must be in one of the 5 supported encodings listed in the JSON specification: UTF-8, UTF-16LE, UTF-16BE, UTF-32LE, UTF-32BE. The data may or may not have a BOM. The most efficient encoding to use for parsing is UTF-8, so if you have a choice in encoding the data passed to this method, use UTF-8. 

https://developer.apple.com/library/ios/documentation/Foundation/Reference/NSJSONSerialization_Class/#//apple_ref/occ/clm/NSJSONSerialization/JSONObjectWithData:options:error:
",zhigang1992,2015-10-30 17:46:39
279,2015-07-21 21:56:48,"Swifty Json seems to be the cause of about 90% of the crashes in my app. All from this line of code let jsonDict = JSON(data: data, options: NSJSONReadingOptions.AllowFragments, error: nil)

crashlytics doesn't give me much info about how it crashed just that its always this line of code.

Is there someway I can put a try catch around this so it won't crash the entire app?
",aTylerRice,2016-11-17 07:22:06
279,2015-09-13 15:54:05,"@aTylerRice might be worth passing an error pointer into the error argument and printing the result in your debugging
",ephemer,2016-11-17 07:22:06
279,2015-10-30 17:48:02,"Also can you provide a sample of you json response?
",zhigang1992,2016-11-17 07:22:06
279,2016-11-17 07:22:06,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:22:06
278,2015-07-20 03:28:59,,leestarxin,2016-11-17 07:21:50
278,2015-07-28 06:46:09,"<S_CODE_TOKEN>
",hamzaansari09,2016-11-17 07:21:50
278,2015-11-01 13:56:49,"@leestarxin Can you provide a bit more details
",zhigang1992,2016-11-17 07:21:50
278,2016-11-17 07:21:50,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:21:50
277,2015-07-18 16:19:14,"JSON of the form:

<S_CODE_TOKEN>

is parsed as a `String`, when it should be parsed as an `Int`. Getting its `numberValue` returns an `NSNumber` containing a `Double`, which crashes some code. 
",duci9y,2015-11-01 13:59:32
277,2015-07-28 17:04:50,"@duci9y you can try `json[""code""].intValue`
",tangplin,2015-11-01 13:59:32
276,2015-07-18 02:36:57,"My `Cartfile` has the following:

<S_CODE_TOKEN>

This was working great until I upgraded to XCode7 beta 3. I got an error that Swifty had been built using an older version of the compiler (Alamofire was suffering from the same error). So I deleted SwiftyJSON from carthage checkout and build folders, and ran `carthage update` again. Alamofire re-fetched and re-built, but SwiftyJSON is being skipped altogether. No output regarding SwiftyJSON in the carthage log. 

I'm not sure if this is a SwiftyJSON issue or a carthage issue. I thought to check here first because my other frameworks did update.

Any ideas? Thanks!
",rainypixels,2015-07-28 16:37:44
276,2015-07-18 06:57:52,"I am having the same issue.
",Donwangugi,2015-07-28 16:37:44
276,2015-07-18 12:48:50,"Try renaming `Example.xcodeproj` to `zExample.xcodeproj` and run `carthage build`.
",carlosefonseca,2015-07-28 16:37:44
276,2015-07-18 21:04:42,"@carlosefonseca Worked like a charm. Thanks much!

I'll leave this issue open to be triaged by @tangplin, though. 
",rainypixels,2015-07-28 16:37:44
275,2015-07-17 21:55:36,"I get these warnings in Swift 2: 

![image](https://cloud.githubusercontent.com/assets/5590876/8757985/e03cd9a8-2c93-11e5-8724-49c406a8d7b1.png)
",mattgabor,2015-07-28 16:57:13
275,2015-07-21 17:25:24,"use the Xcode 7 branch
",remzr7,2015-07-28 16:57:13
274,2015-07-15 06:26:09,,xueselangman91,2015-11-02 19:11:40
274,2015-07-15 23:38:46,"+1
I loaded this project into my iOS 8.3 project and it threw hundreds of errors.

Thus... I'm not really sure what to do about it since I have no prior development experience with iOS  <= 7 otherwise I would love to help
",ded,2015-11-02 19:11:40
274,2015-07-22 07:49:43,"it is nothing ,what  is the  matter,have you resolved it?
",xueselangman91,2015-11-02 19:11:40
274,2015-08-25 15:12:50,"It says you can drag in the swifty.json file for iOS 7. Never tried this as the apps I work on only support 8 and above atm. But I don't see what it wouldn't work. Also iOS7 is the minimum version to use swift.
",iamtomcat,2015-11-02 19:11:40
274,2015-11-02 19:11:40,"It was because of Xcode version upgrade,

Right now, the master is using Xcode7.

If you have to use Xcode6 and Swift1.2, tryout version 2.2.1 or below.

:beers: 
",zhigang1992,2015-11-02 19:11:40
273,2015-07-14 08:06:47,"It's similar with problem in #143 
",kilnyy,2015-07-27 03:18:39
272,2015-07-14 04:04:56,"I seem to be running into an issue when trying to import the SwiftyJSON framework into my project. I've set up Carthage exactly as they described in their README and added SwiftyJSON.framework while also having to add the Framework Search Paths to include Carthage/Builds. It builds, however when it runs it hits this error:

<S_CODE_TOKEN>

I've looked all around and I don't seem to be seeing any solutions for this. For the record I am running Xcode 7 Beta 3 and Swift 2.0. Is this a Carthage issue, SwiftJSON issue, or an Apple issue?
",aaronpang,2015-07-28 16:37:44
271,2015-07-13 07:59:09,"![screen shot 2015-07-13 at 3 59 59 pm](https://cloud.githubusercontent.com/assets/191425/8645250/479024d0-2978-11e5-8a03-8cf1010caba4.png)
I am using 6.3.2 and still getting the error.
",afixibiranchi,2015-11-01 14:00:08
271,2015-07-14 13:11:18,"For Xcode >= 6.3, use current latest release https://github.com/SwiftyJSON/SwiftyJSON/releases/tag/2.2.0.
",yasuoza,2015-11-01 14:00:08
271,2015-07-16 20:39:14,"Issue exists at Xcode v6.4
",amitmahbubani,2015-11-01 14:00:08
271,2015-07-17 13:17:15,"6.4 here and I get those 40 errors as well.
",FezVrasta,2015-11-01 14:00:08
271,2015-07-17 13:40:01,"Hey guys, are you using 2.2.0?

Line 173 in the above screen shot (now it's line 184) looks different from latest release version 2.2.0. 

https://github.com/SwiftyJSON/SwiftyJSON/blob/2.2.0/Source/SwiftyJSON.swift#L184 
",yasuoza,2015-11-01 14:00:08
271,2015-11-01 14:00:08,"This issue should have been resolved.

If you're using Xcode7, please use version 2.3.0 and up

If you're using Xcode6, please stay on version 2.2.1
",zhigang1992,2015-11-01 14:00:08
270,2015-07-09 09:35:42,"<S_CODE_TOKEN>

error: cannot assign value of type string to a value of type json
",kyl2007,2015-11-24 22:12:02
270,2015-07-10 09:22:21,"<S_CODE_TOKEN>

This should work.
",yasuoza,2015-11-24 22:12:02
269,2015-07-08 19:58:12,"This improves performance in a common case (deserializing something
produced via NSJSONSerialization) since it can compile to a simple type check and not
coerce the underlying value.

I don't have any synthetic benchmarks, but it made my use case about 10x faster.
",aleffert,2015-09-24 15:17:59
269,2015-09-24 15:17:59,"It looks like most of this code has been rewritten. Closing.
",aleffert,2015-09-24 15:17:59
268,2015-07-08 12:55:42,"This example isn't really conveying that line 2, 3 and 5 have the same effect:

<S_CODE_TOKEN>

...since previous examples already make clear that incorrect assignments will fail silently.
A more clear way of writing would be:

<S_CODE_TOKEN>
",anohren,2015-11-02 19:20:09
268,2015-11-02 19:20:09,"This was actually a example for successful assignment.
Not a evaluation.

:beers: 

Feel free to reopen this issue of you have any other questions.
",zhigang1992,2015-11-02 19:20:09
267,2015-07-06 17:57:39,"Hi guys,
I'm using SwiftyJSON with Alamofire to handle response from a REST server.
Now this server return an HTTP Error Status Code (!=200) when an error has occurred and print a description of the error into the response JSON body inside the ""message"" key.

So, in order to handle it I've provided my custom response handler.
That's the code:

<S_CODE_TOKEN>

Now I've tried to return directly parsed JSON object outside the function (so I don't need to parse it another time if it's already parsed inside the response handler).
However  `return (JSONObj,nil)` does not work because:  `""Type 'JSON' does not conform to protocol 'AnyObject'""` required by the Request exension response function.
Is there a workaround to it?
My initial idea is to encapsulate it inside a 'AnyObject' conform object, but I don't think it's the best way to accomplish my task.
",malcommac,2015-07-13 11:50:24
267,2015-07-13 06:21:40,"`JSON` is not conform to AnyObject because it is just a struct.

Try `#object` method for your case. i.e

<S_CODE_TOKEN>

<S_CODE_TOKEN>
",yasuoza,2015-07-13 11:50:24
267,2015-07-13 11:50:24,"Thank you :)
",malcommac,2015-07-13 11:50:24
266,2015-07-06 16:54:04,"Xcode update ton of errors
",sedwards21,2015-11-02 19:11:47
266,2015-07-07 09:33:34,"+1
",MyGuySi,2015-11-02 19:11:47
266,2015-07-10 20:02:32,"+1
",dividedpudding,2015-11-02 19:11:47
266,2015-07-15 23:41:35,"It looks like #274 is a duplicate of this. But I'll add my +1. As mentioned earlier, I'd love to help but have no clue where to start since it's literally throwing hundreds of errors when attempting to load in this library
",ded,2015-11-02 19:11:47
266,2015-07-28 17:06:44,"Which Xcode version? 
",tangplin,2015-11-02 19:11:47
266,2015-07-29 09:10:16,"XCode 7 beta for me with the updated version of Swift
",MyGuySi,2015-11-02 19:11:47
266,2015-11-02 19:11:47,"It was because of Xcode version upgrade,

Right now, the master is using Xcode7.

If you have to use Xcode6 and Swift1.2, tryout version 2.2.1 or below.

:beers: 
",zhigang1992,2015-11-02 19:11:47
265,2015-07-05 15:09:30,"提供统一的JSONSerialize 接口，从而实现将 json对象序列化为 swift model对象。
",myloveCc,2015-10-14 08:57:14
264,2015-07-01 19:01:14,"line 142
144
173
184
etc..
xcode 6.3
",pfloresl,2015-07-01 19:04:18
264,2015-07-01 19:04:32,"wrong swiftyjson version.
",pfloresl,2015-07-01 19:04:18
263,2015-07-01 12:55:08,"用xcode7 分支无法carthage update
",kingslay,2015-07-28 16:37:44
263,2015-07-15 08:22:39,"same issue here
",hotogwc,2015-07-28 16:37:44
262,2015-07-01 09:05:15,"Thanks for such wonderful library for swift in a short time. 

As we have seen mapping between JSON data to Data Model Object in RestKit & JSONModel, I couldn't find such feature in SwiftyJSON. Using SwiftyJSON, it is a time consuming task to parse JSON. It will be better if there is any such mapping feature. 

Thanks again.
",milankamilya,2016-11-17 07:21:39
262,2015-07-24 20:06:19,"+1000000000
Will there be any support to mapping ?
",ammoqq,2016-11-17 07:21:39
262,2015-07-26 03:18:55,"It will be better if you add it.
",milankamilya,2016-11-17 07:21:39
262,2016-11-17 07:21:39,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:21:39
261,2015-06-29 13:11:57,"We see regularly strange crashes with SwiftyJSON in our app. I'm wondering anyone else has seen issues like this:

<S_CODE_TOKEN>
",marcvanolmen,2016-11-17 07:21:28
261,2015-07-28 16:52:38,"Yes, seeing same problem in my app.  I notice there was a commit in the subscript code on June 19 and July 28.  Are you using the latest yet?  If so, any improvements?
",velohomme,2016-11-17 07:21:28
261,2015-07-28 17:00:39,"@marcvanolmen @velohomme
Which branch? xcode7?
",tangplin,2016-11-17 07:21:28
261,2015-07-28 17:03:05,"I am on master, not the 7 branch.

> On Jul 28, 2015, at 10:00 AM, Pinglin Tang notifications@github.com wrote:
> 
> @marcvanolmen https://github.com/marcvanolmen @velohomme https://github.com/velohomme
> Which branch? xcode7?
> 
> —
> Reply to this email directly or view it on GitHub https://github.com/SwiftyJSON/SwiftyJSON/issues/261#issuecomment-125679360.
",velohomme,2016-11-17 07:21:28
261,2015-07-28 17:12:24,"@velohomme  thanks.
Can you give me the origin JSON and crash subscript code?
",tangplin,2016-11-17 07:21:28
261,2015-07-28 17:24:07,"Unfortunately the app has secure data which I can’t access (unless the user wants me to).  We’ve had 2 of these crashes and neither user wanted to help us.
Here is a line of code that cause the crash.  There are other lines of code above it doing the same thing without problem.  The other time the crash was on a similar line.

contact.subtype = contactJson[""contactSubType""].stringValue

> On Jul 28, 2015, at 10:12 AM, Pinglin Tang notifications@github.com wrote:
> 
> @velohomme https://github.com/velohomme thanks.
> Can you give me the origin JSON and crash subscript code?
> 
> —
> Reply to this email directly or view it on GitHub https://github.com/SwiftyJSON/SwiftyJSON/issues/261#issuecomment-125681787.
",velohomme,2016-11-17 07:21:28
261,2015-10-19 14:42:19,"@velohomme Did you end up finding a fix?
",bourquep,2016-11-17 07:21:28
261,2015-10-19 15:58:30,"No, still seeing the crashes.  We are submitting a new app to the store next week with Swift 2 and a new SwiftyJson release so I'm hoping that might improve things.  
",velohomme,2016-11-17 07:21:28
261,2015-10-19 15:59:42,"Same here: releasing a Swift 2 version with the latest SwiftyJSON.

Let's hope for the best...
",bourquep,2016-11-17 07:21:28
261,2016-11-17 07:21:28,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:21:28
260,2015-06-28 16:12:19,"replaces usage of stringByAddingPercentEscapesUsingEncoding (deprecated in iOS 9) with stringByAddingPercentEncodingWithAllowedCharacters
",pardel,2015-10-14 08:57:08
260,2015-07-30 10:32:06,"Hey, I thought about fixing this the same way, when I read the following about stringByAddingPercentEncodingWithAllowedCharacters [in the docs](https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSString_Class/index.html#//apple_ref/occ/instm/NSString/stringByAddingPercentEncodingWithAllowedCharacters:):

> This method is intended to percent-encode an URL component or subcomponent string, NOT the entire URL string.

Isn't this precisely what we're doing here, encoding the entire URL string?
",VFUC,2015-10-14 08:57:08
260,2015-08-08 21:20:54,"+1, this should be resolved one way or the other. Just saw this after creating my PR with the same/similar fix, but I'll let the admins close mine if necessary.
",condaatje,2015-10-14 08:57:08
259,2015-06-27 15:12:51,"Fatal error occurs when the input parameter: error = nil and occurs exception in the try. I think need check parameter ""error"" in catch:

<S_CODE_TOKEN>
",twox,2015-11-01 03:16:38
259,2015-08-06 09:40:08,"+1
",konradowy,2015-11-01 03:16:38
259,2016-02-03 03:35:32,"Ah this is bullshit, just ran into this while in production. 
",acegreen,2015-11-01 03:16:38
258,2015-06-26 05:18:54,"Currently UInt64 is not supported. This is annoying, because it means you have to convert it to and from a string yourself to encode a large int.
",kgreenek,2015-07-28 17:14:36
258,2015-07-28 17:14:36,"try

<S_CODE_TOKEN>
",tangplin,2015-07-28 17:14:36
257,2015-06-25 05:26:45,"Adding watchOS framework on top of the Xcode 7 branch
",bassrock,2015-10-14 08:29:58
257,2015-08-24 03:37:55,"Any chance of this getting into the xcode 7 branch at least?
",dmauro,2015-10-14 08:29:58
256,2015-06-24 13:08:23,"Maybe I didn't get it correctly, but here is my issue:
I'm unit testing if my custom model --> json generator works correctly. So I'm checking the json dictionary directly afterwards. And for some properties I just want to make sure that a json attribute was serialized and should not be empty. I don't care about the value it contains. So my test code looks something like this:

<S_CODE_TOKEN>

now I need to change it to the following. which is a bit more to write than the traditional `NSDictionary` style.

<S_CODE_TOKEN>

Is there a better way in `SwiftyJSON` to check for `NotNil` and `NotEmpty`?
",Buju77,2015-11-01 03:30:49
256,2015-07-03 08:26:51,"That's a bug in Swift; you can't check structs for nil. Use these methods instead:

<S_CODE_TOKEN>
",BasThomas,2015-11-01 03:30:49
256,2015-11-01 03:30:48,"Try

<S_CODE_TOKEN>

Feel free to reopen this if you have more questions
",zhigang1992,2015-11-01 03:30:49
255,2015-06-20 18:31:32,"So how do you go about removing something from JSON, for instance a key from a dictionary?
",nazariyg,2015-11-02 19:09:37
255,2015-06-20 19:15:27,"This is what I've come up with by this point:

<S_CODE_TOKEN>

Is there a shorter way?
",nazariyg,2015-11-02 19:09:37
255,2015-07-14 13:26:26,"This is shorter.

<S_CODE_TOKEN>
",yasuoza,2015-11-02 19:09:37
255,2015-07-28 17:20:56,"<S_CODE_TOKEN>
",tangplin,2015-11-02 19:09:37
254,2015-06-16 10:00:19,,remzr7,2015-06-19 06:44:03
253,2015-06-16 09:41:26,"Thus loops do not work on the Xcode 7 branch
",remzr7,2015-11-02 19:16:40
253,2015-11-02 19:16:40,"Should have been in master

:beers: 
",zhigang1992,2015-11-02 19:16:40
252,2015-06-15 13:12:37,"Found this property very useful when iterating through JSON objects, since there is no clean way to do this check otherwise. Figured it doesn't hurt to share, right?
",daniel-pedersen,2015-10-14 08:55:42
251,2015-06-13 01:54:31,"Is this a problem with SwiftyJSON or my implementation?

In my app I'm trying to extract the ""comments"" field of the following subJson.

<S_CODE_TOKEN>

Here's my code for that task:

<S_CODE_TOKEN>

But `self.comments` is always an empty string.
I think I'm correctly following the example in the SwiftyJSON readme. Any help with this would be greatly appreciated. Thank you.
",ndmeiri,2015-11-24 22:16:38
251,2015-06-17 18:06:05,"@ndmeiri it'd be helpful if you show how your `subJson` variable came to be.  I couldn't reproduce the issue you describe in storyboard:

![screen shot 2015-06-17 at 11 05 30 am](https://cloud.githubusercontent.com/assets/75067/8214834/d5a7a98e-14e0-11e5-8133-ed6f02989be3.png)
",dduan,2015-11-24 22:16:38
251,2015-06-18 00:04:05,"First, I get a JSON response from an Alamofire POST request. Then I break that JSON into parts and pass each part to an initializer for my `Operation` class.

<S_CODE_TOKEN>

This is what that initializer looks like.

<S_CODE_TOKEN>

Please let me know if any other information would be helpful.
",ndmeiri,2015-11-24 22:16:38
251,2015-11-24 22:16:38,"You should do this:

<S_CODE_TOKEN>

Sry 4 late reply, plz feel free to reopen it if needed
",zhigang1992,2015-11-24 22:16:38
250,2015-06-12 23:44:11,"Can I use CocoaSeeds to install SwiftyJSON?
How should be the line in the Seedfile?

Is this ok?

<S_CODE_TOKEN>
",germanger,2015-06-13 00:04:51
249,2015-06-11 18:54:14,"If we take the following json:

<S_CODE_TOKEN>

.. and I try to reference each past, present, future's child ""result"" as follows:

<S_CODE_TOKEN>

or even..

<S_CODE_TOKEN>

with the variables defined and initialized as follows:

<S_CODE_TOKEN>

... it turns out that _every_ array (pastEvents, presentEvents, futureEvents) contains an array of one object {foo:1, bar:2}.  I expect just pastEvents to contain the array of one object {foo:1, bar:2} and the others to be empty arrays, but when I execute this code, all three of the variables contain an array of one object {foo:1, bar:2}

Could this be a result of the word ""result"" being common to each of these ""subJsons"" ?  Or does the problem lie between my keyboard and chair? :)
",peteclark3,2015-11-24 23:57:32
249,2015-06-25 07:54:08,"Cannot confirm. Works as expected. Here's the testing code:

<S_CODE_TOKEN>

Output:

<S_CODE_TOKEN>
",nazariyg,2015-11-24 23:57:32
249,2015-11-24 23:57:31,"feel free to reopen it if needed
",zhigang1992,2015-11-24 23:57:32
248,2015-06-10 17:52:30,"I have a cartfile as 

github ""Alamofire/Alamofire""
github ""SwiftyJSON/SwiftyJSON"" >= 2.2.0

The console output is as follows:

**\* Fetching SwiftyJSON
**\* Fetching Alamofire
**\* Checking out Alamofire at ""1.2.2""
**\* Checking out SwiftyJSON at ""2.2.0""
**\* xcodebuild output can be found in /var/folders/jp/6yvbpm056sbd17twhbx6t7_00000gn/T/carthage-xcodebuild.q56nwp.log
**\* Building scheme ""Alamofire iOS"" in Alamofire.xcworkspace
**\* Building scheme ""Alamofire OSX"" in Alamofire.xcworkspace

As you can see, the Alamofire has been compiled but the there is no information about SwiftyJSON. In the carthage/checkout folder, both alamofire and swiftyJSON are there. However, in the carthage/build folder, only Alamofire is there while swiftyJSON is missing.

The log file is as follows:

Build settings from command line:
    SDKROOT = iphonesimulator8.3

=== BUILD TARGET Alamofire iOS OF PROJECT Alamofire WITH CONFIGURATION Release ===

Check dependencies

Write auxiliary files
write-file /Users/peter/Library/Developer/Xcode/DerivedData/Alamofire-hetrsqzpxgymnjgjdhegwmzqherm/Build/Intermediates/Alamofire.build/all-product-headers.yaml

=== BUILD TARGET Alamofire iOS Tests OF PROJECT Alamofire WITH CONFIGURATION Release ===

Check dependencies

*\* BUILD SUCCEEDED **

Build settings from command line:
    SDKROOT = iphoneos8.3

=== BUILD TARGET Alamofire iOS OF PROJECT Alamofire WITH CONFIGURATION Release ===

Check dependencies

Write auxiliary files
write-file /Users/peter/Library/Developer/Xcode/DerivedData/Alamofire-hetrsqzpxgymnjgjdhegwmzqherm/Build/Intermediates/Alamofire.build/all-product-headers.yaml

=== BUILD TARGET Alamofire iOS Tests OF PROJECT Alamofire WITH CONFIGURATION Release ===

Check dependencies

*\* BUILD SUCCEEDED **

=== BUILD TARGET Alamofire OSX OF PROJECT Alamofire WITH CONFIGURATION Release ===

Check dependencies

Write auxiliary files
write-file /Users/peter/Library/Developer/Xcode/DerivedData/Alamofire-hetrsqzpxgymnjgjdhegwmzqherm/Build/Intermediates/Alamofire.build/all-product-headers.yaml

=== BUILD TARGET Alamofire OSX Tests OF PROJECT Alamofire WITH CONFIGURATION Release ===

Check dependencies

*\* BUILD SUCCEEDED **
",ansonyao,2015-07-28 16:52:04
248,2015-06-10 20:44:40,"Same issue here.
",julien-c,2015-07-28 16:52:04
248,2015-06-11 13:49:03,":+1:  Same here.
",mcb,2015-07-28 16:52:04
248,2015-06-12 08:52:34,"same here
",charlyliu,2015-07-28 16:52:04
248,2015-06-12 12:31:25,"SwiftyJSON doesn't support Carthage right know. For more info please read: https://github.com/Carthage/Carthage/issues/532.

Here is fork to use before PR will be merged: https://github.com/Thomvis/SwiftyJSON

PR fixing this issue is in the queue: https://github.com/SwiftyJSON/SwiftyJSON/pull/244
",PatrykKaczmarek,2015-07-28 16:52:04
248,2015-06-14 17:13:22,"+1
",alec-c4,2015-07-28 16:52:04
248,2015-06-15 08:21:20,"same issue here
",JerryNil,2015-07-28 16:52:04
248,2015-06-25 21:28:17,"same issue for me
",PhilippeRiegert,2015-07-28 16:52:04
248,2015-06-26 14:56:40,"Just put the `Example.xcodeproj` file from the `Carthage/Checkouts/SwiftyJSON/` directory into a new subdirectory and you'll be fine. We just have to wait for someone to merge the PR #244 :smile: 
",Pym,2015-07-28 16:52:04
248,2015-06-30 15:59:48,"same issue here
",liaolj,2015-07-28 16:52:04
248,2015-06-30 16:17:42,"It's ok , thanks to Pym
",liaolj,2015-07-28 16:52:04
247,2015-06-09 18:44:18,"When I switch to Xcode 7-beta, it shows some suggestion to convert my current project to Latest Swift Syntax. 

Also, I see there are a lot Syntax change in the new version like this below: 
Before conversion
    private subscript(#index: Int) -> JSON { 
After conversion
    private subscript(index: Int) -> JSON { 
",coolgeng,2015-11-24 22:17:54
247,2015-06-09 18:44:59,"![pasted_image_at_2015_06_09_11_20_am](https://cloud.githubusercontent.com/assets/345397/8066523/f262a35c-0e9c-11e5-98f1-fe0f0568516f.png)
",coolgeng,2015-11-24 22:17:54
247,2015-06-10 00:02:07,"+1
",kamoljan,2015-11-24 22:17:54
247,2015-06-10 17:37:37,"+1
",yuhua-chen,2015-11-24 22:17:54
247,2015-06-10 20:25:23,"+1
",Kaspik,2015-11-24 22:17:54
247,2015-06-12 19:15:59,"+1
",dmauro,2015-11-24 22:17:54
247,2015-06-13 06:00:03,"try xcode7 branch
",tangplin,2015-11-24 22:17:54
247,2015-06-14 01:29:49,"Worked for me with one warning: stringByAddingPercentEscapesUsingEncoding' was deprecated in Apple watchOS 2.0: Use -stringByAddingPercentEncodingWithAllowedCharacters: instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent since each URL component or subcomponent has different rules for what characters are valid.
",halgatewood,2015-11-24 22:17:54
247,2015-06-16 01:52:05,"@tangplin Any plan to merge back to mater? Xcode7 branch works fine. 
",coolgeng,2015-11-24 22:17:54
247,2015-07-08 23:33:23,"with latest Xcode beta3, there are many errors. my mistake, i grabbed the wrong fork.
",gaming-hacker,2015-11-24 22:17:54
247,2015-07-09 06:43:13,"@coolgeng I guess when Xcode7 is no longer in beta
",Nelyus,2015-11-24 22:17:54
247,2015-07-09 12:44:28,"@halgatewood did you fix the warning or ignore it?

i think this fixes the warning and results in the valid string the writer of the code wanted??

 if let encodedString_ = self.object.stringByAddingPercentEncodingWithAllowedCharacters(NSCharacterSet.alphanumericCharacterSet())
",gaming-hacker,2015-11-24 22:17:54
247,2015-07-09 17:27:15,"branch Xcode7，try it！

发自我的 iPhone

> 在 2015年7月9日，20:44，G Alexander notifications@github.com 写道：
> 
> @halgatewood did fix the warning or ignore it?
> 
> —
> Reply to this email directly or view it on GitHub.
",tangplin,2015-11-24 22:17:54
247,2015-07-09 19:56:49,"I can't download beat3 yet in China!

发自我的 iPhone

> 在 2015年7月9日，07:33，G Alexander notifications@github.com 写道：
> 
> with latest Xcode beta3, there are many errors.
> 
> —
> Reply to this email directly or view it on GitHub.
",tangplin,2015-11-24 22:17:54
247,2015-07-09 19:56:54,"This is just in beta. Don't use beta xcode Formal Environment！

> 在 2015年7月9日，07:33，G Alexander notifications@github.com 写道：
> 
> with latest Xcode beta3, there are many errors.
> 
> —
> Reply to this email directly or view it on GitHub.
",tangplin,2015-11-24 22:17:54
247,2015-07-09 19:56:59,"If Xcode 7 do release ！

发自我的 iPhone

> 在 2015年6月16日，09:52，cooper notifications@github.com 写道：
> 
> @tangplin Any plan to merge back to mater? Xcode7 branch works fine.
> 
> —
> Reply to this email directly or view it on GitHub.
",tangplin,2015-11-24 22:17:54
247,2015-07-10 06:15:03,"@gaming-hacker that cleared up the warnings for me. Thanks!
",halgatewood,2015-11-24 22:17:54
247,2015-07-15 21:42:05,"i tested my fix and it works well for my data
",gaming-hacker,2015-11-24 22:17:54
247,2015-09-20 03:34:42,"+1
",seiyamaeda,2015-11-24 22:17:54
247,2015-09-20 05:42:09,"+1
",samodrole,2015-11-24 22:17:54
247,2015-09-24 16:36:09,"+1 
",jigneshsheth,2015-11-24 22:17:54
247,2015-11-24 22:17:54,"It's done

:beers:
",zhigang1992,2015-11-24 22:17:54
247,2016-01-05 22:24:56,"Cool !!!
",coolgeng,2015-11-24 22:17:54
247,2016-01-06 02:24:48,"Thank you!
",kamoljan,2015-11-24 22:17:54
246,2015-06-09 13:20:17,"Converted SwiftyJSON to Swift2 syntax and fixed all warnings
",andrelind,2015-10-14 08:27:21
246,2015-06-10 00:01:30,"+1
",kamoljan,2015-10-14 08:27:21
246,2015-06-10 15:32:35,"+1
",mathiasnagler,2015-10-14 08:27:21
246,2015-06-11 22:03:58,"+1
",duemunk,2015-10-14 08:27:21
246,2015-06-11 22:52:17,"+1 (for this being manually merged into a new swift-2.0 branch, not accepted on master until XCode 7 is at least in public beta).
",ryanschneider,2015-10-14 08:27:21
246,2015-06-12 02:51:12,"Great job!
Since XCode7 and Swift2 is still in beta I'm considering branching the repo to support Swift1 and 2 separately. What do you think?
",lingoer,2015-10-14 08:27:21
246,2015-06-12 02:56:01,"@lingoer +1 please do this!
",kamoljan,2015-10-14 08:27:21
246,2015-06-12 08:53:21,"@lingoer Most repos just use the swift-2.0 branch and works just fine.
",duemunk,2015-10-14 08:27:21
246,2015-06-17 20:10:35,"@lingoer +1 for @duemunk's branching model. Keep the Swift 2 compatible version on a `swift-2.0` branch while Xcode 7 is in beta. In addition, please consider:
1. switch the default branch on Github to `swift-2.0` (to affirm Swift-2.0 readiness and make it easier to discover).
2. tag a new release on `swift-2.0` (for Carthage users).
",dduan,2015-10-14 08:27:21
246,2015-06-19 17:11:44,"+1 @dduan 
",JackieQi,2015-10-14 08:27:21
246,2015-07-03 22:59:55,"Any update on this? cc @tangplin 
",RuiAAPeres,2015-10-14 08:27:21
246,2015-07-04 20:14:08,"@RuiAAPeres There is a ""Xcode7"" branch which fixed the issue.
",JackieQi,2015-10-14 08:27:21
246,2015-07-04 21:29:05,"@JackieQi tried it and it didn't work.
",RuiAAPeres,2015-10-14 08:27:21
246,2015-07-15 23:42:57,"What's the status on this PR?
",ded,2015-10-14 08:27:21
246,2015-09-05 17:38:57,"+1! How can I use swift-2.0 branch using Cocoa Pods?
",ricardogobbo,2015-10-14 08:27:21
246,2015-09-12 19:23:10,"+1 I would really love to see the stable branch for Swift 2.0 releasing.
",rockia,2015-10-14 08:27:21
246,2015-09-13 22:46:07,"Is there any update on this yet?
",patrickreynolds,2015-10-14 08:27:21
246,2015-09-13 22:52:15,"Bah I've been waiting for a week now can you please just merge the branches 😓
",Danappelxx,2015-10-14 08:27:21
246,2015-09-14 22:55:35,"@ricardogobbo  I was able to use CocoaPods by targeting the XCode 7 branch like this:

`pod 'SwiftyJSON', :git => 'https://github.com/SwiftyJSON/SwiftyJSON.git', :branch => 'xcode7'`
",iamjason,2015-10-14 08:27:21
246,2015-09-15 00:45:03,"@iamjason that works in your podfile, but you can't add it as a dependency in your podspec.
",Danappelxx,2015-10-14 08:27:21
246,2015-09-17 16:45:48,"iOS 9 and XCode 7 are now out of beta and are the latest public stable releases. Is there any update here? SwiftyJSON is now broken for anyone downloading the latest stable XCode release.
",leegoodrich,2015-10-14 08:27:21
246,2015-09-21 01:07:25,"+1
",vbrazo,2015-10-14 08:27:21
246,2015-09-21 01:44:05,"Make it so... please
",scibidoo,2015-10-14 08:27:21
246,2015-09-25 18:45:54,"Any status update on this?
",Jleaton,2015-10-14 08:27:21
246,2015-09-26 07:41:40,"+1
",alexdd55,2015-10-14 08:27:21
246,2015-10-14 14:10:59,"Got an email saying this issue was closed....but nothing here that says so....whats up?
",owingst,2015-10-14 08:27:21
246,2015-10-14 14:35:09,"@owingst Swift 2 support is already in the master branch :)
",Danappelxx,2015-10-14 08:27:21
246,2015-10-14 14:53:40,"That is great. Thanks!
",owingst,2015-10-14 08:27:21
245,2015-06-09 13:19:19,,hannesjung,2015-10-14 08:55:13
244,2015-06-09 09:55:26,"Carthage tries to build the framework targets in the first project it finds. It finds `Example.xcodeproj` first, so no frameworks are built, or at least not all the time. See https://github.com/Carthage/Carthage/issues/532.

This PR moves the example project into a subdirectory and makes SwiftyJSON work with Carthage again.
",Thomvis,2015-08-09 13:56:14
244,2015-06-24 02:41:47,"+1
",Adlai-Holler,2015-08-09 13:56:14
244,2015-06-25 16:52:27,":+1: 
",Pym,2015-08-09 13:56:14
244,2015-06-27 09:53:57,"+1
",valeIT,2015-08-09 13:56:14
244,2015-06-29 08:44:30,"+1
",wakinchan,2015-08-09 13:56:14
244,2015-07-02 08:34:11,"+1
",XiongCaixing,2015-08-09 13:56:14
244,2015-07-03 16:05:23,"When can we expect this to be merged?
",kylejm,2015-08-09 13:56:14
244,2015-07-05 13:36:12,"+1
",schickling,2015-08-09 13:56:14
244,2015-07-06 07:49:04,"is this going to be merged soon? been almost a month. 
thanks
",bachirelkhoury,2015-08-09 13:56:14
244,2015-07-08 06:46:19,"+1
",jarrodrobins,2015-08-09 13:56:14
244,2015-07-08 08:08:23,"@tangplin is there anything missing?
",schickling,2015-08-09 13:56:14
244,2015-07-08 22:46:04,"+1
",freennnn,2015-08-09 13:56:14
244,2015-07-11 23:48:27,"+1
",parkej60,2015-08-09 13:56:14
244,2015-07-14 06:03:25,"+1. Found the same issue. A workaround is to delete **Example.xcodeproj** in the Carthage/Checkouts/SwiftyJSON directory. Once deleted move to your project directory and issue the **carthage build** command rather than the **carthage update** command. If you reissue carthage update you'll have the same problem.
",devnevins,2015-08-09 13:56:14
244,2015-07-15 03:11:10,"+1
",morizotter,2015-08-09 13:56:14
244,2015-07-17 01:38:13,"+1
",rhydiant,2015-08-09 13:56:14
244,2015-07-23 20:14:50,"+1
",algal,2015-08-09 13:56:14
244,2015-07-27 18:22:56,"Kind of annoying that this is still an issue...
",LunaCodeGirl,2015-08-09 13:56:14
244,2015-07-28 00:31:54,"Yeah. Any chance of a merge, @tangplin? Pleeeeease?
",jarrodrobins,2015-08-09 13:56:14
244,2015-08-09 12:20:45,"@tangplin fixed this in 4cf6f023d4023848914b6e35baa655d278f34ef6. :sparkles: Thanks! :+1: 

@Thomvis, I think you can close this pull request. :closed_book: 
",narfdotpl,2015-08-09 13:56:14
243,2015-06-08 22:54:39,"I'm trying to parse server response produced by following code (api for rails app developed with grape)

<S_CODE_TOKEN>

When user submit wrong data i see following response from server:

<S_CODE_TOKEN>

I use on client side following code:

<S_CODE_TOKEN>

In this code errors variable contains 

<S_CODE_TOKEN>

 but i cannot use errors[""email""] - it contains no data. How can i loop thru errors and access all data?

PS: i'm using Alamofire in API
",alec-c4,2015-06-09 20:59:00
243,2015-06-09 20:59:00,"Hi,
the problem was on a server side, because it generated escaped json. I've fixed it with following

<S_CODE_TOKEN>
",alec-c4,2015-06-09 20:59:00
242,2015-06-08 06:49:09,"Hi. I tried to use this library, but when I copy it to my project, as it said in usage section, I face something around 170 errors and many of them are like ""expected ',' separator"" or ""expected type after 'as' ""
Don't know what I did wrong....any help would be great. tnx
",mohammadzzz,2015-06-08 08:06:37
241,2015-06-01 11:37:11,"The json subscript is very slow. My application is huge and uses a lot of swiftyjson. According to instruments, subscipting in Swiftyjson is taking the longest time. What aproach should I take to make it faster?
",rishimukherjee,2016-11-17 07:21:15
241,2015-06-01 11:56:40,"Right now I am experiencing similar problems. What I do is once the JSON response is downloaded I translate (map) every needed key value pair and save it (as variable or using Core Data). This way SwiftyJSON only gets called once.
",arm0nic,2016-11-17 07:21:15
241,2015-06-01 12:57:18,"Yeah, I am thinking of converting each response to a static class.
",rishimukherjee,2016-11-17 07:21:15
241,2015-06-01 13:09:56,":+1: here is a thread on stackoverflow. http://stackoverflow.com/questions/29252158/swiftyjson-performance-issues
",Gerst20051,2016-11-17 07:21:15
241,2015-08-17 08:40:09,"unfortunately, I have the same problem, did you solve the problem?
",liuweicode,2016-11-17 07:21:15
241,2016-11-17 07:21:15,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:21:15
240,2015-05-29 11:30:24,"It should be 0.36 and not Version 36 for Cocoapods.
",palewar,2015-10-14 08:29:04
239,2015-05-28 18:25:09,"I manually integrated the file into my project tree by dragging and dropping.

I get a lot of errors in the SwiftyJSON file. Anyone else facing this issue? Is there a solution to this which I might have missed? I read up a bit on other websites and some people are facing the same issue. 
",anaik268,2015-05-29 00:20:47
239,2015-05-28 20:30:39,"Update:

The issue might have been happening because I was on xcode 6.2, swift 1.1 -- I will update again after I get the latest xcode and try it.

Thank you
",anaik268,2015-05-29 00:20:47
239,2015-05-29 00:20:47,"my apologies. I had not updated to version 6.3, and therefore had the issues occurring.

Thank you
",anaik268,2015-05-29 00:20:47
237,2015-05-25 20:15:56,"Would be great if this can be possible:

<S_CODE_TOKEN>

But JSON structure lacks failable initializer so it's not. Here's what I'm using so far (causes warning):

<S_CODE_TOKEN>

Or without warning (but pretty long):

<S_CODE_TOKEN>
",okla,2015-11-02 19:15:46
237,2015-11-02 19:15:46,"You can use Optional Chaining

<S_CODE_TOKEN>
",zhigang1992,2015-11-02 19:15:46
236,2015-05-23 16:51:06,"Hi, I'm using cocoapods 37.1. When I try to use my podfile to install (pod 'SwiftyJSON', '>=2.2.0'),  I get the error message 

<code>
[!] Unable to satisfy the following requirements:
- `SwiftyJSON (>= 2.2.0)` required by `Podfile`
  </code>

Any idea what is happening?
",daviddliu,2016-03-01 16:22:48
236,2015-05-25 04:30:51,"Podfile

<S_CODE_TOKEN>

Update the `Cocoapods`

<S_CODE_TOKEN>

Update the `spec`

<S_CODE_TOKEN>

Install

<S_CODE_TOKEN>
",tangplin,2016-03-01 16:22:48
236,2015-05-29 22:47:05,"Ran this and it still doesn't work... does it have to do with new CocoaPods version?
",bradbernard,2016-03-01 16:22:48
236,2015-05-29 22:51:45,"Podfile

<S_CODE_TOKEN>

$ pod install

<S_CODE_TOKEN>

Then in my VC.swift

<S_CODE_TOKEN>

$ pod --version

<S_CODE_TOKEN>
",bradbernard,2016-03-01 16:22:48
236,2015-08-09 15:00:20,"Any update about this issue ? Having the same on my side.
",DanGTZ,2016-03-01 16:22:48
236,2015-09-23 02:54:03,"I'm getting the same issue with xcode telling me no such module SwiftyJSON, however it still builds successfully.  That error also didn't show up until after I had cleaned the file following a pod update.
",craigpearce5,2016-03-01 16:22:48
236,2015-11-02 16:33:37,"I'm getting this error too.  First it said that it couldn't load the underlying module.  I deleted the .xcworkspace file and re-generated it with 'pod install' , and now it says 'no such module SwiftyJSON'
Also it doesn't build the project.
",gadget00,2016-03-01 16:22:48
236,2015-11-05 18:26:16,"Where can I just download the SwiftyJson.framework instead of using pods. Pods never works
",khanhankkhan,2016-03-01 16:22:48
236,2015-11-05 19:34:51,"@khanhankkhan From https://github.com/SwiftyJSON/SwiftyJSON

<S_CODE_TOKEN>
",craigpearce5,2016-03-01 16:22:48
236,2015-11-05 19:36:31,"@gadget00 I found that the issue was not related to SwiftyJSON but with Xcode.  That being said I didn't find a solution.  Try commenting out the SwiftyJSON code `//import SwiftyJSON`, does the error move to another line?  That's what was happening to me.
",craigpearce5,2016-03-01 16:22:48
236,2015-11-24 23:55:42,"@craigpearce5 Which version of Xcode/Swift are you using?
",zhigang1992,2016-03-01 16:22:48
236,2015-11-25 04:08:20,"@zhigang1992 As I mentioned in a previous comment, the error I was getting was most definitely related to either xcode or cocoapods.  The error xcode was giving me was non specific and moved to my 3rd import statement regardless of what that was importing.  For example, the error would transition to `import Alamofire` if I commented out `import SwiftyJSON`.  I'm not sure what fixed the error but it seemed to go away and I have submitted my app and been approved.
",craigpearce5,2016-03-01 16:22:48
235,2015-05-23 15:15:27,"I have a working Hello JSON project working and added 
# Uncomment this line to define a global platform for your project
# platform :ios, '8.0'

target 'MyJSONProject' do
  pod ""SwiftyJSON"", "">= 2.2"" 

end

target 'MyJSONProjectTests' do

end

and get:
error: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/libtool: unknown option character `X' in: -Xlinker
Usage: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/libtool -static [-] file [...] [-filelist listfile[,dirname]] [-arch_only arch] [-sacLT] [-no_warning_for_no_symbols]
Usage: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/libtool -dynamic [-] file [...] [-filelist listfile[,dirname]] [-arch_only arch] [-o output] [-install_name name] [-compatibility_version #] [-current_version #] [-seg1addr 0x#] [-segs_read_only_addr 0x#] [-segs_read_write_addr 0x#] [-seg_addr_table <filename>] [-seg_addr_table_filename <file_system_path>] [-all_load] [-noall_load]
",justdan0227,2015-11-02 23:39:28
235,2015-05-25 04:31:18,"Podfile

<S_CODE_TOKEN>

Update the `Cocoapods`

<S_CODE_TOKEN>

Update the `spec`

<S_CODE_TOKEN>

Install

<S_CODE_TOKEN>
",tangplin,2015-11-02 23:39:28
235,2015-11-02 23:41:15,"Sorry this was an issue back in May.  I fixed it about a week after that and forgot to update this.  Thank you for the reply
",justdan0227,2015-11-02 23:39:28
234,2015-05-23 05:07:41,"How to parse from string? e.g.

<S_CODE_TOKEN>

Thanks
",katopz,2016-01-04 17:15:13
234,2015-05-23 09:42:43,"AFAIK

<S_CODE_TOKEN>

Anyone know shorter one? Or maybe we need to promote shorter function if it not exist?
",katopz,2016-01-04 17:15:13
234,2015-06-20 10:53:33,"I was stuck for days trying to figure out why my json coming from a django app and Alamofire would not parse.

JSON(data:string.dataUsingEncoding(NSUTF8StringEncoding)!) 

This solved my problem.
",SamDavies,2016-01-04 17:15:13
234,2015-07-30 07:44:06,"In the old version,i used the following way to solve this:
let jsonData = messageString.dataUsingEncoding(NSUTF8StringEncoding)
let json = JSONValue(jsonData)

Anyway,it's not a perfect solution.
",KiraPerhaps,2016-01-04 17:15:13
234,2015-11-08 15:16:58,"Please add some shorter function.

<S_CODE_TOKEN>
",vinod1988,2016-01-04 17:15:13
234,2016-01-04 16:10:59,"There is already parse function for this.

<S_CODE_TOKEN>

I hope we can close this issue now.
",aksswami,2016-01-04 17:15:13
234,2016-01-04 17:15:13,"@aksswami cool thanks
",katopz,2016-01-04 17:15:13
233,2015-05-19 15:50:52,"(as to as! down casting, NSString is no longer String)
",Anonyy,2015-05-19 15:54:46
232,2015-05-19 07:15:26,"![93cbdaaf-ce2c-4f40-916c-f4af607ee8e7](https://cloud.githubusercontent.com/assets/8529909/7697207/d895eb84-fe37-11e4-99fb-19921d6b36fe.png)

Is  my code's problem? =。= 
",q462127821,2015-12-04 07:01:53
232,2015-06-01 10:19:39,"dict[""value""].dictionaryValue   return  a  not  optional  value,    but  why xcode tips me to  add the “!”, and show  the  value is optional..
",q462127821,2015-12-04 07:01:53
232,2015-11-02 23:38:48,"Is this issue still exist?
",zhigang1992,2015-12-04 07:01:53
232,2015-11-24 22:19:02,"Seems to be a really interesting issue
",zhigang1992,2015-12-04 07:01:53
232,2015-12-04 07:01:53,"The `dict[""value""].dictionaryValue` do return a none optional value,
It's the second subscription:`valueDict[""display""]` that produce an optional value.
<img width=""582"" alt=""screen shot 2015-12-04 at 2 57 09 pm"" src=""https://cloud.githubusercontent.com/assets/3095758/11583696/a022f178-9a97-11e5-8426-c2f6425cc91f.png"">
you should directly subscription like `dict[""value""][""display""]` to access the value wrapped in a JSON
",lingoer,2015-12-04 07:01:53
231,2015-05-16 14:46:58,"It wasn' t clear what to import in the doc.
",xgdgsc,2015-05-25 04:00:20
230,2015-05-13 21:53:01,"It'll be useful for the folks who're using Carthage.
",Frostman,2015-05-25 05:19:23
229,2015-05-13 07:14:27,"update NSError memeber variable when init fail
",neil-wu,2015-10-14 08:26:48
228,2015-05-11 17:51:38,"All examples show parsing but not writing.

I need a simple quick example of how to update values in an existing file and how to create a new one.

Thanks.
",gaming-hacker,2015-11-03 00:16:59
228,2015-11-03 00:16:59,"<S_CODE_TOKEN>
",zhigang1992,2015-11-03 00:16:59
227,2015-05-07 06:02:55,"SwiftyJSON mixes the order of dictionary items. Below is a JSON data example before and after SwiftyJSON

This is the value I get from my API, and print it in the console. Dates are ordered

<S_CODE_TOKEN>

After I use JSON(data!) and print it, I see the dates are mixed up. Why is this happening, and how do I fix this?

<S_CODE_TOKEN>
",emrahu,2015-11-03 00:18:16
227,2015-05-07 07:43:40,"I fieled this a time ago. Closed by: directries does not have an order. Well actually that is true, there is no order in the specs but is is very annoying. In various cases we need an order! Think about unit tests and thing about an editor... The order is absolutely mandetory. I hope someone can bring up an order-preserve option to this wonderful lib.
",petershaw,2015-11-03 00:18:16
227,2015-05-07 16:41:39,"I am generating a chart and dates order in the above example must correspond to days in a month. If order of dates are mixed up my chart displays wrong data. There are cases we need to preserve the order of dictionary items.
",emrahu,2015-11-03 00:18:16
227,2015-05-14 10:07:29,"Hey..Is there an order in Dictionary or NSDictionary?..Maybe you should try to keep order by any other ways.
But to be honest. SwiftyJSON is awesome!!! How can I star it twice?
",dreampiggy,2015-11-03 00:18:16
227,2015-06-01 07:19:26,"Full ack, but we have to solve the order issue somehow. Pls any suggestions. 
",petershaw,2015-11-03 00:18:16
227,2015-07-13 04:54:17,"This is not a SwiftyJSON issue, is the design of JSON.

 JSON definition says:

> An object is an unordered set of name/value pairs.
> http://www.json.org/

And the order issue is also reported at SO http://stackoverflow.com/questions/15125562/keeping-the-order-of-nsdictionary-keys-when-converted-to-nsdata-with-nsjsonseri.

My suggestion is that make an ordered array of date string keys. Then loop the `totals` dictionary using the keys. Or change the API to return like:

<S_CODE_TOKEN>
",yasuoza,2015-11-03 00:18:16
226,2015-05-04 07:51:17,"Would you be opposed to a simple convenience initializer that inits from a json string, e.g.:

<S_CODE_TOKEN>
",qixotic,2015-05-11 04:46:03
226,2015-05-04 07:54:03,"Ah, just noticed https://github.com/SwiftyJSON/SwiftyJSON/pull/31, although there's no mention of initialization from a json string in the README, and what I've written is a simpler change. What do you think? Encourage explicit string to NSData conversion by calling it out in the README still?
",qixotic,2015-05-11 04:46:03
226,2015-05-05 02:28:18,"f75736d83fb054ac1bef62388823ebe28ab80a6e
",tangplin,2015-05-11 04:46:03
225,2015-04-27 06:47:41,"I got this error message after updated my xcode to 6.3.1.

<S_CODE_TOKEN>

Code

<S_CODE_TOKEN>
",datomnurdin,2015-11-03 00:19:21
225,2015-05-08 17:17:36,"I got this error too in xcode 6.3.1 :(
",josch1985,2015-11-03 00:19:21
225,2015-05-11 15:05:07,"yeah, nothing works since this update. 90+ errors on the swiftyjson lib. thanks, apple.
",datayeah,2015-11-03 00:19:21
225,2015-05-13 05:59:26,"I think this is fixed this is the new line:
 `return NSString(data: data, encoding: encoding) as? String`
",aks0020,2015-11-03 00:19:21
225,2015-05-17 14:44:53,"That's right aks0020, we need to downcast (optionally) to String.  @datayeah all those errors are the same issue.  Take a look at this: https://www.murage.ca/downcasting-in-swift-1-2-with-as-exclamation/ I fixed adding ""?"" to optionally convert in all those cases where there was an error.  Not sure if I had to use ? or ! though, but it is working now.  
",zjorge,2015-11-03 00:19:21
225,2015-07-14 13:34:34,"@aks0020    : thanks man it works
",FaizanKhanani,2015-11-03 00:19:21
224,2015-04-27 06:24:53,,datomnurdin,2015-05-01 13:49:22
223,2015-04-26 21:02:56,"- Use Swift 1.2 syntax: multiple if-let clauses
- Use Swift objects, that is `[String; AnyObject]` instead of `NSDictionary`
- In the second example, cast the final result to String
- Don't use `NSJSONReadingOptions.MutableContainers`, it does make the example look more awful than it is, but it is rarely needed...
",kmikael,2015-05-01 13:47:12
223,2015-05-01 13:47:26,"@kmikael thanks.
",tangplin,2015-05-01 13:47:12
222,2015-04-26 07:53:10,"As per subject, I got this error message on this line of code. I can't use JSON.

<S_CODE_TOKEN>

Please advice. Thank you.
",datomnurdin,2015-11-03 00:20:03
222,2015-11-03 00:20:03,"<S_CODE_TOKEN>
",zhigang1992,2015-11-03 00:20:03
221,2015-04-26 07:42:45,"I declare my UICollectionViewCell model but I got this error message

<S_CODE_TOKEN>

My code

<S_CODE_TOKEN>

Please advice. Thank you.
",datomnurdin,2015-11-24 22:48:06
221,2015-11-24 22:48:06,"sry for late reply, this issue should have been fixed with the latest version of SwiftyJSON.

Can you try again?

Feel free to reopen it if needed.

:beer: 
",zhigang1992,2015-11-24 22:48:06
221,2015-11-25 06:02:51,"Fixed, thanks.
",datomnurdin,2015-11-24 22:48:06
220,2015-04-24 15:34:23,"... am I making a simple blunder or is an upgrade necessary or???

mostly 'Expected type after as' errors

1) downloaded zip opened project results as above for various tests/targets
2) copied file to os x project results as above
3) carthage install opened project result as above
",dewib,2015-04-25 20:38:28
220,2015-04-24 23:32:20,"Just upgrade your Xcode to 6.3. And you will be fine.
",xctom,2015-04-25 20:38:28
220,2015-04-25 09:46:42,"Thank you, I figured that might be it. This might just be the motivation I needed to upgrade to Yosemite... 
",dewib,2015-04-25 20:38:28
220,2015-04-25 20:38:28,"... it was and all works as expected. I'll face down Logic 9 stability at a later date...
",dewib,2015-04-25 20:38:28
219,2015-04-24 02:17:06,"This lets .number try to return a value if the object is String. Before you could only use .numberValue to get a number from a string, but that would return 0 even if the value didn't exist
",yonaskolb,2015-05-01 13:45:03
219,2015-05-01 13:45:03,"@yonaskolb `.number` should return a exquisite value in JSON,  `numberValue` is that function which ignore type and `nil`. 
",tangplin,2015-05-01 13:45:03
218,2015-04-23 18:58:22,"As per subject, I got a lot of this error message inside the library.

<S_CODE_TOKEN>
",datomnurdin,2015-04-26 06:23:55
218,2015-04-23 20:44:55,"Are you using Xcode 6.3?
",carloperez,2015-04-26 06:23:55
218,2015-04-24 03:11:50,"yes, i'm using xcode 6.3.
",datomnurdin,2015-04-26 06:23:55
218,2015-04-24 13:07:00,"Just dowloaded and get with xcode 6.3.1
",LeeVidor,2015-04-26 06:23:55
218,2015-04-26 06:23:55,"Fixed with xcode 6.3.1.
",datomnurdin,2015-04-26 06:23:55
218,2015-07-13 07:58:09,"I am using 6.3.2 and still getting the error.
",afixibiranchi,2015-04-26 06:23:55
218,2015-07-27 19:49:52,"I am getting the error with 6.4. About 40 of them.
",nelsonkd,2015-04-26 06:23:55
218,2015-07-31 12:46:29,"40 errors with Xcode 6.4
",neonowy,2015-04-26 06:23:55
218,2015-12-15 18:49:04,"in Version 7.2 (7C68)
these errors are back 
",lptr2,2015-04-26 06:23:55
217,2015-04-22 20:17:28,"Great work here! I'm getting familiar with this library and just trying to figure something out here.

Example when checking for type
`case let string as NSString:
                _type = .String`

Why not just check  for `String` rather than `NSString`?
",DimaVartanian,2016-11-17 07:21:03
217,2016-11-17 07:21:03,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:21:03
216,2015-04-22 16:50:19,"I can't replicate this issue myself. Based on a crashlog from a user, the app is consistently crashing on line 124 of SwiftyJSON, inside the variable setter `public var object: AnyObject`:

<S_CODE_TOKEN>

Crashlog:

> 12  Today                         0x00000001001147ac Today.JSON.array.getter : [Today.JSON]? (SwiftyJSON.swift:124)

A level above that is my own app, where the line it crashes on is:

<S_CODE_TOKEN>
",ProjectDent,2016-11-17 07:20:38
216,2015-12-18 07:01:39,"@ProjectDent , Could you please check whether jsonValue[""items""] is returning array or dictionary as this   piece of code works fine for me. If it is returning dictionary then use jsonValue[""items""].dictionary.
",neelamsharma12,2016-11-17 07:20:38
216,2016-11-17 07:20:38,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:20:38
215,2015-04-18 19:36:31,"Hi, I'm stuck trying to edit JSON object.
After some investigation found a problem with JSON type object property (Swift 1.2):

<S_CODE_TOKEN>

`public` accessors on class and/or var doesn't help
",wayx,2017-02-20 15:14:09
215,2015-04-18 19:54:07,"Removing `!` from `data` prop declaration helped.
But it seems like a bug though
",wayx,2017-02-20 15:14:09
215,2016-02-09 23:03:05,"+1

Not sure how to fix this, but it seems like a pretty big bug to me.

Is it possible that this is occurring due to the property being an `Optional`? When i'm not using an optional property it works. 

It also works if I unwrap the optional before setting the property.

`data?[0] = JSON(55)` Works just fine.

Relevant StackOverflow question:
http://stackoverflow.com/questions/24091729/implicitly-unwrapped-optional-made-immutable
",AnthonyMDev,2017-02-20 15:14:09
215,2017-02-20 15:16:39,"#793 has been merged into master. 

For more mutability, please check out [MutabilityTests](https://github.com/SwiftyJSON/SwiftyJSON/blob/master/Tests/SwiftyJSONTests/MutabilityTests.swift)

Cheers. ",wongzigii,2017-02-20 15:14:09
214,2015-04-17 04:05:38,"... more consistent.
",pRizz,2015-05-01 13:37:05
213,2015-04-16 07:30:18,"Using XCode 6.3 (Swift 1.2), this works just fine:

<S_CODE_TOKEN>

However, this next block reports a compiler error:

<S_CODE_TOKEN>

Error: _Cannot subscript a value of type 'JSON' with an index of type '[String]'_

I don't understand why these two would be any different.
",tempire,2016-11-17 07:19:19
213,2015-04-16 09:33:48,"@tempire try:

<S_CODE_TOKEN>

It's should be a easy way:

<S_CODE_TOKEN>
",tangplin,2016-11-17 07:19:19
213,2016-11-17 07:19:19,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:19:19
213,2016-11-22 16:29:15,I have the same issue here...,Domsware,2016-11-17 07:19:19
213,2016-11-22 19:54:31,@Domsware Can you try @tangplin 's solution and get back to me with your result? Thanks!,ldiqual,2016-11-17 07:19:19
212,2015-04-15 04:36:27,"In your README.md you mention that:

pod ""SwiftyJSON"", "">= 2.2""

Whereas when I use CocoaPods in my terminal, pod search SwiftyJSON returns me:

-> SwiftyJSON (2.1.3)

So you should fix that ASAP.

And also I wanted to tell you thank you for this iOS API.
",King-Wizard,2015-04-16 06:21:04
212,2015-04-16 06:21:04,"SwiftyJSON 2.2.0 has been pushed.
",tangplin,2015-04-16 06:21:04
211,2015-04-14 11:08:55,"skydeiMac:MobileOffice-Swift sky$ pod update
Update all pods
Analyzing dependencies
[!] Unable to satisfy the following requirements:
- `SwiftyJSON (>= 2.2)` required by `Podfile`
  skydeiMac:MobileOffice-Swift sky$ 
",bluesky0109,2015-04-16 06:20:51
211,2015-04-15 01:32:07,"Please update the Podspec for version 2.2.0, I update the Xcode to V6.3,Swift1.2 can not work with SwiftyJSON2.1.3,thanks.
",bluesky0109,2015-04-16 06:20:51
211,2015-04-15 06:31:36,"have the same problem
",Onetaway,2015-04-16 06:20:51
211,2015-04-16 06:20:51,"SwiftyJSON 2.2.0 has been pushed.
",tangplin,2015-04-16 06:20:51
210,2015-04-14 07:17:14,"Please consider publishing the Podspec for version 2.2.0, since it's now supports Swift 1.2 and is in the master branch.
",evenh,2015-04-16 06:21:20
210,2015-04-14 08:29:34,":+1: 
",damienadermann,2015-04-16 06:21:20
210,2015-04-14 08:32:52,"I agree with evenh! Please publish the pod to the trunk!
",vitobellini,2015-04-16 06:21:20
210,2015-04-14 12:39:58,"Would be great! 
",arm0nic,2015-04-16 06:21:20
210,2015-04-14 13:38:05,"skydeMacBook-Pro-2:MobileOffice-Swift sky$ pod update
Update all pods
Analyzing dependencies
[!] Unable to satisfy the following requirements:
- `SwiftyJSON (>= 2.2)` required by `Podfile`
  skydeMacBook-Pro-2:MobileOffice-Swift sky$ 

skydeMacBook-Pro-2:MobileOffice-Swift sky$ pod search SwiftyJSON
-> SwiftyJSON (2.1.3)
   SwiftyJSON makes it easy to deal with JSON data in Swift
   pod 'SwiftyJSON', '~> 2.1.3'
- Homepage: https://github.com/SwiftyJSON/SwiftyJSON
- Source:   https://github.com/SwiftyJSON/SwiftyJSON.git
- Versions: 2.1.3 [master repo]
  skydeMacBook-Pro-2:MobileOffice-Swift sky$ 

I can not get v2.2.0 via cocoapods
",bluesky0109,2015-04-16 06:21:20
210,2015-04-14 16:05:40,":+1:
",juggernate,2015-04-16 06:21:20
210,2015-04-15 23:03:18,":+1: 
",ghecho,2015-04-16 06:21:20
210,2015-04-16 04:27:32,":+1:
",wakinchan,2015-04-16 06:21:20
210,2015-04-16 06:21:20,"SwiftyJSON 2.2.0 has been pushed.
",tangplin,2015-04-16 06:21:20
210,2015-04-16 06:23:17,"Thank you @tangplin :clap: 
",evenh,2015-04-16 06:21:20
209,2015-04-14 01:33:21,"Weird Problem - 

upgraded to Swift 1.2, now when I download a JSON file some of the elements are just missing when sent thru swifty JSON.

For instance:

data =     (
                {
            ""accounts_id"" = 1;
            ""created_at"" = ""2015-04-13 00:37:22"";
            id = 1;
            maxTime = 0;
            name = ""workout 1"";
            rest = 20;
            rounds = 3;
            ""updated_at"" = ""2015-04-13 00:37:22"";
            ""users_id"" = 1;
               ....

from a NSMutableDIctionary  becomes

""data"" : [
    {
      ""rounds"" : 3,
      ""maxTime"" : 0,
      ""id"" : 1,
      ""users_id"" : 1,
      ""created_at"" : ""2015-04-13 00:37:22"",
.....

when returned from swiftyJSON.      I am using the version for xcode 6.3.
",raleydotcom,2015-04-14 01:40:04
209,2015-04-14 01:40:04,"operator error.  nothing to see here.  move along.
",raleydotcom,2015-04-14 01:40:04
208,2015-04-13 13:56:35,"Hi

I tried to use v2.2 but I get this error from CococaPods:

<S_CODE_TOKEN>

And when I try to use previous versions, there are lots of error which appeared in Swift 1.2, such as using `as!` instead of `as`
",ControlAdad,2015-04-16 06:21:36
208,2015-04-13 14:08:14,"Use the xcode6.3 branch for now, which works with Swift 1.2

<S_CODE_TOKEN>

I think that branch will eventually get merged into master, then you can use the normal 2.x in your Podfile again.
",j-h-a,2015-04-16 06:21:36
208,2015-04-13 14:14:06,"Thanks for quick reply! Worked!
",ControlAdad,2015-04-16 06:21:36
208,2015-04-13 15:51:52,"Since xcode 6.3 is released, that would be great to submit a new version of the pod that require sdk 8.3
",thedamfr,2015-04-16 06:21:36
208,2015-04-13 15:55:20,"I agree with @thedamfr 

Could you at the very least make a change to the readme with this fix @j-h-a ?
",RShergold,2015-04-16 06:21:36
208,2015-04-13 17:14:34,"This isn't my project - I could make the change and send a pull-request like anyone else I suppose. I've only been learning Swift for 2 days and was trying this for fun/learning. It's probably best to let the maintainer do things like this as he might be planning to merge the branch soon anyway, and I don't know the state of this other branch (experimental? unstable? work-in-progress?).

I think the maintainer is @tangplin - is it best to add such a note to the readme for now, or will this become the master soon?
",j-h-a,2015-04-16 06:21:36
208,2015-04-16 06:21:36,"SwiftyJSON 2.2.0 has been pushed.
",tangplin,2015-04-16 06:21:36
207,2015-04-13 05:22:00,"Currently tests are being built when compiling the scheme. Tests should only be built for testing.
",spanage,2015-04-13 06:38:41
206,2015-04-12 19:17:46,"This init method...

<S_CODE_TOKEN>

Only sets the object and does not inspect it to determine the type - does this mean that `_type` will be incorrect (default is `.Null` type)?

Also it doesn't check for valid object types, if it's something else shouldn't `error` be set?
",j-h-a,2015-04-12 19:44:59
206,2015-04-12 19:44:58,"My bad - it's set in the object setter.
",j-h-a,2015-04-12 19:44:59
205,2015-04-12 19:14:46,"There seems to be a method `.null` which returns `NSNull` to represent a null JSON object, or `nil` to represent some other JSON. This is quite confusing. Would it not be better to have a method `isNull` to check if the JSON represents a null? Which of the following is more intuitive?

<S_CODE_TOKEN>

Also how should `isEmpty` behave if `self.type` is `.Null`? I would think it should return `true` but currently it returns `false`.

I've only been learning swift for one day so please just explain if my thinking is wrong.
",j-h-a,
205,2015-04-16 06:32:26,"[JSON](http://json.org/) 's null is a `value` not `Swift`'s `nil`. 
`isEmpty`: If `type` is `.Array` or `.Dictionary`, return `array.empty` or `dictonary.empty` otherwise return `false`.
",tangplin,
205,2015-04-20 04:04:38,"Ok I understand the null value.

Why is `isEmpty` defined to return false for null values?
",j-h-a,
205,2015-04-20 12:16:57,"For everything except `.Array` and `.Dictionary`:
- `count()` returns zero
- `generate()` returns an empty generator

but
- `isEmpty()` returns `false`

That seems a bit strange to me.
",chschu,
205,2015-07-01 13:54:52,"This seems also strange for me. 

Currently I have to do this for checking nil values in a json dictionary:

<S_CODE_TOKEN>

Proposal:

<S_CODE_TOKEN>

and/or extent `isEmpty` to also return `true` for `.Null`
",Buju77,
205,2015-07-16 12:50:34,"@tangplin wouldn't it be better if isEmpty() defaulted to true? Imho it's very confusing when it returns false for .Null or .Unknown json types.
",zmeyc,
205,2015-10-15 20:24:19,"I had a similar question. Now it looks like the isEmpty code does return true, but the comments still say it returns false.
",rufferto,
205,2016-11-17 07:18:45,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,
205,2017-01-06 14:32:50,"Did this ever get fixed? Null checking should be trivial, not completely confusing. I still don't know how the framework doesn't have a simple ""isNull""...???",marchy,
205,2017-02-10 11:26:42,"Totally agree. As always in code, simplicity and syntax are important",AroundPixels,
205,2017-03-13 21:52:06,@ldiqual Lois can we re-open this? Still can't figure out how to (reliably) know how to check for null values in SwiftyJson! This is crazy. Let's add that 'isNull' already and be done with it!,marchy,
205,2017-03-13 22:13:54,"@ldiqual we found a bug why this wasn't reliable and driving us crazy. If you store a JSON result in a variable the null value gets lost on it! This is quite critical and unexpected.

Example:
<S_CODE_TOKEN>",marchy,
204,2015-04-12 13:31:54,"This update adds compatibility with Swift 1.2.
",jankaltoun,2015-04-13 06:38:14
204,2015-04-13 06:38:14,"Done db2b0274684779ee0d6e0f169f89f499883260a0
",tangplin,2015-04-13 06:38:14
203,2015-04-10 21:46:28,"This PR is a workaround for an issue with the subscript operator on AnyObject in Swift 1.2 on Xcode 6.3.
",chschu,2015-04-13 05:52:35
203,2015-04-10 21:52:51,"This fixes the occasional `nil` dictionary values reported in #200.
",chschu,2015-04-13 05:52:35
203,2015-04-11 17:46:52,":+1: 
",adooylabs,2015-04-13 05:52:35
203,2015-04-13 05:52:35,"Done 4b3bdd6f04ddf435af695bd43d95202396a5cab3
@chschu thanks!
",tangplin,2015-04-13 05:52:35
203,2015-07-31 00:32:50,"wow, thx! We found this also occurs with the Facebook 4.1.0 SDK
",twobitlabs,2015-04-13 05:52:35
202,2015-04-09 22:06:00,"Changed 

<S_CODE_TOKEN>

to 

<S_CODE_TOKEN>

or 

<S_CODE_TOKEN>

(as needed)
(2nd try)
",scottdelly,2015-04-13 06:37:43
202,2015-04-13 06:37:43,"Done db2b0274684779ee0d6e0f169f89f499883260a0
",tangplin,2015-04-13 06:37:43
201,2015-04-09 21:33:36,"Changed 

<S_CODE_TOKEN>

to 

<S_CODE_TOKEN>

or 

<S_CODE_TOKEN>

(as needed)
",scottdelly,2015-04-09 22:01:12
200,2015-04-09 18:51:11,"Hi,

I am developing an app in Swift and I have ported SwitfyJSON and it worked fine in iOS 8.2. Once I upgraded my iOS to 8.3 and Xcode to 6.3, I got lot of compile errors in Swifty and most of them are warnings to change ""as"" with ""as?"" optional. There was one error in function rawString which complained ""NSString? is not convertible to String?""

I have modified the code from 

return NSString(data: data, encoding: encoding)

 to 

return NSString(data: data, encoding: encoding) as? String

Then the code compiled successfully but all data retrieval statements are not working now.For example,
response[""myname""] returned the value in 8.2 but the same line returning null in 8.3 after fixing compilation errors
",slysid,2015-04-13 06:39:15
200,2015-04-09 19:16:21,"I notice there's a branch called xcode6.3 -- could be tested against the final Xcode release, and then merged back to master. Will keep an eye on this issue for updates.
",macu,2015-04-13 06:39:15
200,2015-04-09 19:24:36,"This is a pretty major issue...is anyone actively working on this?
",zacharyclaysmith,2015-04-13 06:39:15
200,2015-04-09 19:45:54,"Wish I didn't update to latest version ... now i have to wait until a stable release
:(
",teliaz,2015-04-13 06:39:15
200,2015-04-09 19:53:37,"same here. does anyone know a way to rollback to swift 1.1 on xcode 6.3?
",paulhyunkim,2015-04-13 06:39:15
200,2015-04-09 20:39:45,"Most of the autofixes in XCode work and retain SwiftyJSON functionality. most just find and replacing ""as"" with ""as!""

NSString not actually being a String anymore seems problematic. I force downcasted it... but I'm not sure that's the best solution.
",das3in,2015-04-13 06:39:15
200,2015-04-09 21:10:11,":(
",brentkirkland,2015-04-13 06:39:15
200,2015-04-09 21:36:00,"I tried the same fix and the code gets compiled successfully but the values are not retrieved from JSON. Are you able to retrieve the value?

> On 09 Apr 2015, at 23:16, webbersky notifications@github.com wrote:
> 
> I edited the code, fixing the as! and NSString issue, new to github, wasn't sure how to paste the code so i've put it up on pastebin
> http://pastebin.com/k8ehqwwH
> Hope this helps (:
> 
> —
> Reply to this email directly or view it on GitHub.
",slysid,2015-04-13 06:39:15
200,2015-04-09 22:32:14,"Any plans to publish an update with this?
",chrux,2015-04-13 06:39:15
200,2015-04-09 23:26:32,"You guys can use `xcode6.3` brunch for now. It works fine on my side. Happy to see this branch merge into master soon 
",rcgary,2015-04-13 06:39:15
200,2015-04-10 07:59:03,"For the copy paste lovers (like me), here is the pod entry for the xcode6.3 branch:

`pod 'SwiftyJSON', :git => 'https://github.com/SwiftyJSON/SwiftyJSON.git', :branch => 'xcode6.3'`
",rguldener,2015-04-13 06:39:15
200,2015-04-10 09:31:12,"I'm using the xcode6.3 branch and haven't noticed anything different. Still, next time, I'll give it more time until I update to the latest versions os swift. Specially if the language features are not backwards compatible.. Yesterday was update and fix broken code all day long.
",nunogoncalves,2015-04-13 06:39:15
200,2015-04-10 10:49:08,"The xcode 6.3 branch works with some minor fixes on as!. Just Xcode suggestions and everything will be fine.
",josephkandi,2015-04-13 06:39:15
200,2015-04-10 11:19:42,"Xcode 6.3 branch compiled without any error for me but subscript with valid key is not working for me. for example,

var temp = JSON({""unit:kms""}())

 println(temp[""unit""])

prints null
",slysid,2015-04-13 06:39:15
200,2015-04-10 14:22:35,"+1
",kamoljan,2015-04-13 06:39:15
200,2015-04-10 14:59:49,"升了6.3后  碰到问题了     Alamofire 1.2已经OK   大大快加油
",DingSoung,2015-04-13 06:39:15
200,2015-04-10 18:13:16,"I can reproduce @slysid error here !

+1
",Jan0707,2015-04-13 06:39:15
200,2015-04-10 18:15:26,"Oddly though, some requests work just fine, while others won't. It's completely reproducible.
",Jan0707,2015-04-13 06:39:15
200,2015-04-10 18:20:02,"When extending the code snippet like this:

<S_CODE_TOKEN>

We receive the following error:

<S_CODE_TOKEN>
",Jan0707,2015-04-13 06:39:15
200,2015-04-10 19:47:44,"There seems to be an issue with the subscript operator in Swift 1.2. It returns `nil` when a Swift dictionary is converted to `AnyObject`, which is what SwiftyJSON does here.

The following snippet prints `nil`, not `Optional(""World"")`:

<S_CODE_TOKEN>

I already reported a bug to Apple.

Pull request follows.
",chschu,2015-04-13 06:39:15
200,2015-04-10 20:43:13,"The error seems to occur only if there is an ""import SpriteKit"" somewhere in the project.
",chschu,2015-04-13 06:39:15
200,2015-04-10 22:34:51,"@slysid, @Jan0707: `JSON({""unit:kms""}())`, is basically the same as `JSON(""unit:kms"")`. It just creates a a `JSON` instance representing the string `""unit:kms""`. To create a `JSON` instance representing a dictionary, you need to pass a Swift dictionary to the initializer, e.g. `JSON([""unit"" : ""kms""])`. To parse a string into a `JSON` instance, you could use something like that (quite ugly because the quotes need to be escaped):

<S_CODE_TOKEN>
",chschu,2015-04-13 06:39:15
200,2015-04-11 06:16:25,"The platform of the target `Pods` (iOS 7.1) is not compatible with `SwiftyJSON (2.1.3)` which has a minimum requirement of OS X 10.9 - iOS 8.0.
EDIT:
I replaced SwiftyJson.swift with the one in Xcode 6.3 branch and it worked fine now no errors. :-)
",hamzaansari09,2015-04-13 06:39:15
200,2015-04-11 12:23:40,"I am seeing some serious backwards compatablity issues with the 6.3 branch. Besides that I now everywhere need to use .string instead of .stringValue (And other types as well), it simply breaks when the datatype in JSON is different from the type you asks. I just spent nearly a day fixing most of my app because I assumed certain conversions in the app happen by SwiftyJson (And in the past it did that correctly).
",paul999,2015-04-13 06:39:15
200,2015-04-11 15:54:45,"@chschu I do not import SpriteKit anywhere in my project but the sample code still fails
",Jan0707,2015-04-13 06:39:15
200,2015-04-11 17:13:05,"I'm having the same problem. 
",adooylabs,2015-04-13 06:39:15
200,2015-04-11 18:15:25,"Do we have a consensus short-term solution to this problem?
",whusted,2015-04-13 06:39:15
200,2015-04-11 18:17:43,"this works for me https://github.com/SwiftyJSON/SwiftyJSON/pull/199
",adooylabs,2015-04-13 06:39:15
200,2015-04-11 18:27:46,"@adooylabs Thank you!
",whusted,2015-04-13 06:39:15
200,2015-04-11 23:36:08,"Down to one update bug. Seems like a tough one. Have had no luck if a second set of eyes can take a look at it.  Thanks
![screen shot 2015-04-11 at 7 18 37 pm](https://cloud.githubusercontent.com/assets/1279819/7103688/fd7b7adc-e081-11e4-95f2-ab5d188f26f2.png)
",ejpusa,2015-04-13 06:39:15
200,2015-04-11 23:48:25,"Ok, this Pod line seems to fix all: pod 'SwiftyJSON', :git => 'https://github.com/SwiftyJSON/SwiftyJSON.git', :branch => 'xcode6.3'
",ejpusa,2015-04-13 06:39:15
200,2015-04-12 11:03:53,"@ejpusa In Swift 1.2 NSString does not equal String and therefore violates the functions return policy.

You can simply convert it though, have a look at this playground example:

<S_CODE_TOKEN>
",Jan0707,2015-04-13 06:39:15
200,2015-04-12 18:50:13,"Did this solution work for anyone?

Ok, this Pod line seems to fix all: pod 'SwiftyJSON', :git => 'https://github.com/SwiftyJSON/SwiftyJSON.git', :branch => 'xcode6.3'
",andrewfashion,2015-04-13 06:39:15
200,2015-04-12 19:46:56,"This is breaking with Alamofire as well. Anybody have the same issue?

WORKS WITH THE FOLLOWING:
pod 'SwiftyJSON', :git => 'https://github.com/SwiftyJSON/SwiftyJSON.git', :branch => 'xcode6.3' 
",rlam3,2015-04-13 06:39:15
200,2015-04-12 21:36:23,"I tried the xcode 6.3 branch, it compiles, but I am getting the following error while trying to get an Array now.

Eg with the following Json:
{
""frames"": [
   {""x"":2,""y"":2,""w"":49,""h"":49 }, 
   {""x"":53,""y"":2,""w"":49,""h"":49 }, 
   {""x"":104,""y"":2,""w"":49,""h"":49 }, 
   {""x"":155,""y"":2,""w"":49,""h"":49 }, 
   {""x"":206,""y"":2,""w"":49,""h"":49 }, 
   {""x"":257,""y"":2,""w"":49,""h"":49 }, 
   {""x"":308,""y"":2,""w"":49,""h"":49 }, 
   {""x"":308,""y"":2,""w"":49,""h"":49 }
 ],
""meta"": {
    ""version"": ""1.0"",
    ""image"": ""explosion1.png"",
    ""size"": {""w"":359,""h"":53 }
 }
}

When calling:
let frames = json[""frames""]

frames is an empty array where it was containing all the frames in the past..

digging to understand, but if someone know why, this might be great
",franksauvag,2015-04-13 06:39:15
200,2015-04-13 08:32:50,"I still get the following error:

`Optional(Error Domain=SwiftyJSONErrorDomain Code=901 ""Dictionary[""_links""] failure, It is not an dictionary"" UserInfo=0x7fce64c0b820 {NSLocalizedDescription=Dictionary[""_links""] failure, It is not an dictionary})`

When trying:

`let json = JSON(data:data)
        if let previousEpisodeUrl = json[""_links""][""previousepisode""][""href""].URL {
            println(previousEpisodeUrl.URLString)
        } else {
            println(json[""_links""][""previousepisode""][""href""].error)
        }`

You can see the JSON I am receiving here: [http://api.tvmaze.com/shows/4?embed=previousepisode](http://api.tvmaze.com/shows/4?embed=previousepisode)

This used to work before, as the code already is half a year old. Did I miss any breaking changes or is this an bug on SwiftyJSON's side ?
",Jan0707,2015-04-13 06:39:15
200,2015-04-13 08:40:00,"Fix works for me. All my SwitfyJSON functionalities in my project are working fine. 
",slysid,2015-04-13 06:39:15
200,2015-04-13 10:02:40,"Thanks, everything is back to normal with the latest master :) :+1: 
",franksauvag,2015-04-13 06:39:15
200,2015-04-13 19:12:27,"@Jan0707: After removing the `.URLString` from your code, it compiles and prints `http://api.tvmaze.com/episodes/144440` on my environment. Which iOS SDK do you use?
",chschu,2015-04-13 06:39:15
200,2015-04-14 09:46:18,"@chschu My `Base SDK` is set to `Latest iOS (iOS 8.3)` and it still throws that error here. It might be worth mentioning that I do not include SwiftyJSON via Cocoapods but rather copy the Swift file manually ( which I of course took from the latest master).
",Jan0707,2015-04-13 06:39:15
200,2015-04-15 16:53:34,"Note that there is a problem with iOS 8.3 Submitting an HTTP POST request with Content-type of application/json will still send as application/x-www-form-urlencoded.
There is a radar logged in on this issue: http://openradar.appspot.com/20489846
With a work around here: http://stackoverflow.com/questions/29528293/nsmutableurlrequest-body-malformed-after-ios-8-3-update Check out Rufel's comment.

It seems your issue is more related to Swift strings though.
",Litome,2015-04-13 06:39:15
200,2015-04-16 08:12:54,"@Jan0707 Strange, that's exactly how I do it. Maybe you could create a minimal example (Code Snippet including a small JSON string) that fails and put it into a Gist?
",chschu,2015-04-13 06:39:15
200,2015-04-16 17:57:01,"@chschu Oddly enough, this gist works perfectly fine:

https://gist.github.com/Jan0707/cc8db99778c0f527bef5

There must be something wrong in my project - especially since some of my request work while others won't.
",Jan0707,2015-04-13 06:39:15
200,2015-04-16 18:59:34,"I can also post my whole project if that is any help ?
",Jan0707,2015-04-13 06:39:15
200,2015-04-16 19:44:56,"Finally got it ! Apparently there were some changes in the `stringValue` . Sorry for the inconvenience !
",Jan0707,2015-04-13 06:39:15
199,2015-04-09 08:14:42,"Updated and I can compile to Swift 1.2 Xcode 6.3
",kimdv,2015-04-13 06:37:30
199,2015-04-09 09:27:49,"+1
",MarvinSchramm,2015-04-13 06:37:30
199,2015-04-09 12:18:32,":+1:
",wakinchan,2015-04-13 06:37:30
199,2015-04-09 12:55:53,"+1
",evenh,2015-04-13 06:37:30
199,2015-04-09 15:09:37,":+1: 
",jlalvarez18,2015-04-13 06:37:30
199,2015-04-09 15:15:23,"+1
",minhoryang,2015-04-13 06:37:30
199,2015-04-09 15:23:41,"+1
",Kevsterstyle,2015-04-13 06:37:30
199,2015-04-09 15:47:35,"👍
",ccerinojr,2015-04-13 06:37:30
199,2015-04-09 19:40:25,"+1
",dwa012,2015-04-13 06:37:30
199,2015-04-09 20:52:40,":+1: 
",jlalvarez18,2015-04-13 06:37:30
199,2015-04-09 23:21:12,"Awesome! but can we also update the tests? when running with carthage to build it, it's giving me

<S_CODE_TOKEN>
",chrux,2015-04-13 06:37:30
199,2015-04-10 01:46:16,"+1
",al7,2015-04-13 06:37:30
199,2015-04-10 01:50:26,"+1
",wangyhzzz,2015-04-13 06:37:30
199,2015-04-10 16:49:29,"Please maintain the original whitespace so that meaningful changes stand out in diff.
",macu,2015-04-13 06:37:30
199,2015-04-10 17:09:40,"@macu +1
",chrux,2015-04-13 06:37:30
199,2015-04-10 19:09:55,"+1
",parkej60,2015-04-13 06:37:30
199,2015-04-11 18:27:25,"@mb89 Thanks for noting this
",whusted,2015-04-13 06:37:30
199,2015-04-13 06:37:30,"Done db2b0274684779ee0d6e0f169f89f499883260a0
",tangplin,2015-04-13 06:37:30
198,2015-04-09 05:52:38,"Just updated to Xcode 6.3 and with the last version of SwiftyJSON I get this error on line 454 (`return NSString(data: data, encoding: encoding)`):

`'NSString?' is not convertible to 'String?'`
",nico75005,2015-04-09 06:10:51
198,2015-04-09 05:55:33,"One way to fix it seems to be by adding `as? String` at the end of the line.
",nico75005,2015-04-09 06:10:51
198,2015-04-09 06:03:40,"@nico75005 There is a `xcode6.3` branch have not merged into `master` yet, if you want to use on Swift 1.2, you need wait the merge or get code from `xcode6.3` for now 
",rcgary,2015-04-09 06:10:51
198,2015-04-09 06:10:51,"Okay sorry I didn't pay attention about the branch. Thanks!
",nico75005,2015-04-09 06:10:51
197,2015-04-09 04:28:11,"There doesn't seem to be a mechanism to create an empty dictionary object? Since [] in swift can be interpreted as an empty array or empty object. And,

var json:JSON = JSON([])

creates an empty array, so you can't add properties.

E.g., This would seem to be appropriate, but doesn't work

var json:JSON = JSON()
json[""id""].intValue = 123
println(json)
{
  ""id"": 123
}
",richburdon,2015-11-03 00:22:21
197,2015-04-16 15:35:02,"In Swift, [:] represents an empty dictionary, but SwiftyJSON doesn't have an dictionary-based initializer yet. This should be quite easy to add.
",chschu,2015-11-03 00:22:21
197,2015-04-16 18:09:53,"Just checked it: `var json:JSON = [:]` works, because `JSON` implements the `DictionaryLiteralConvertible` protocol.
",chschu,2015-11-03 00:22:21
197,2015-05-14 18:38:19,"I think this issue can be closed.
",dbsima,2015-11-03 00:22:21
196,2015-04-09 03:18:32,"This would crash when getting a not existing path. But not always.
",Candyroot,2015-04-13 05:58:29
196,2015-04-13 05:58:29,"Done #203 
",tangplin,2015-04-13 05:58:29
195,2015-04-09 03:17:36,,justinmakaila,2015-04-13 06:01:37
195,2015-04-09 03:21:52,"Hmm... build completes on my machine but not Travis. Looking into it now. 

EDIT:
Looks to be because travis' Xcode tools are out of date. 
",justinmakaila,2015-04-13 06:01:37
195,2015-04-09 06:10:52,"@justinmakaila Please check on the `xcode6.3` brunch.
",rcgary,2015-04-13 06:01:37
195,2015-04-09 17:24:09,":+1: 
",justinmakaila,2015-04-13 06:01:37
195,2015-04-13 06:01:37,"Done db2b0274684779ee0d6e0f169f89f499883260a0
",tangplin,2015-04-13 06:01:37
194,2015-04-05 18:06:07,"Updated Carthage note to show the latest version 2.1.3
",manijshrestha,2015-04-13 05:58:44
193,2015-04-02 09:40:40,"使用 `carthage update --platform Mac` 无法编译出 Mac 用的 Framework。
应该像 Alamofire 那样，再建一个 Mac 的 target，共享它的 Scheme。
",lexrus,2015-04-16 09:41:11
193,2015-04-16 09:41:11,"现在应该好了~
",tangplin,2015-04-16 09:41:11
192,2015-03-30 10:09:27,"Hi there,

I was wondering if this is a bug or if I'm doing something wrong.
I'm working with Cocoapods 0.36, Xcode 6.2 and followed the steps in the README of SwiftyJSON.

My Podfile looks like this

<S_CODE_TOKEN>

I've updated my pods via `pod install`
This resulted in following output, so I guess everything is OK

<S_CODE_TOKEN>

Now I tried the following code

<S_CODE_TOKEN>

When I just drag and drop the SwiftyJSON files in my project (the 'manual' way) it does work, but I would like to use Cocoapods!

Kind regards,
Frederik
",frederik-jacques,2015-11-03 00:22:50
192,2015-04-02 16:30:38,"I have exactly the same problem
",Nemmo,2015-11-03 00:22:50
192,2015-04-09 11:01:35,"Did you `import SwiftyJSON` to the file? 
",Isuru-Nanayakkara,2015-11-03 00:22:50
192,2015-04-18 16:49:55,"Tried the import, now I get the error:

<S_CODE_TOKEN>
",salali,2015-11-03 00:22:50
192,2015-04-22 16:00:34,"+1
",patricks,2015-11-03 00:22:50
192,2015-04-22 21:38:28,"Project > General > Linked Framework and Libraries > 
add SwiftyJSON

import SwiftyJSON

walaaaa!!!
",xerron,2015-11-03 00:22:50
192,2015-05-03 18:53:40,"Also having this issue. xerron's comment above didn't resolve it for me.
",joshuajenkins,2015-11-03 00:22:50
192,2015-05-05 01:27:37,"I'm having this issue as well and xerron's issue didn't resolve it. I'm also experiencing this problem with SwiftHTTP so I'm starting to suspect that it's a Cocoapods issue.
",danielhklein,2015-11-03 00:22:50
192,2015-05-05 09:59:41,"i've tried to  import SwiftyJSON.. but this doesn't work eighter in the Linked Framework and Libraries
",alexlezeu,2015-11-03 00:22:50
192,2015-05-05 10:02:35,"It works for me here is my Podfile:

platform :ios, '8.0'

use_frameworks!
pod ""SwiftyJSON"", "">= 2.2""

link_with ""MyAppTarget""
link_with ""MySecondTarget""
",patricks,2015-11-03 00:22:50
192,2015-05-05 10:25:23,"@patricks  your solution doesn't work eighter .. 
",alexlezeu,2015-11-03 00:22:50
192,2015-05-05 16:21:57,"what version of xcode use?
work in 6.3
ios 8
osx 10.10
",xerron,2015-11-03 00:22:50
192,2015-05-06 07:22:03,"Xcode 6.3 and iOs 8
I have the same bug over and over again ...Use of unresolved identifier 'JSON'
",alexlezeu,2015-11-03 00:22:50
192,2015-05-06 20:00:05,"+1
",ndmeiri,2015-11-03 00:22:50
192,2015-05-08 07:12:53,"+1
",leoromanovsky,2015-11-03 00:22:50
192,2015-05-08 09:30:40,"Solved this with an `import SwiftyJSON` on each file used 

> On 8 May 2015, at 08:13, Leo Romanovsky notifications@github.com wrote:
> 
> +1
> 
> —
> Reply to this email directly or view it on GitHub https://github.com/SwiftyJSON/SwiftyJSON/issues/192#issuecomment-100129328.
",bluedaniel,2015-11-03 00:22:50
192,2015-05-08 16:16:53,"I tried what @bluedaniel suggested, but it did not work for me.
",ndmeiri,2015-11-03 00:22:50
192,2015-05-19 07:16:58,"I had same problem

""Project > General > Linked Framework and Libraries > 
add SwiftyJSON

import SwiftyJSON

walaaaa!!!""

This works for me, but shouldnt it work without adding the SwiftyJSON to Linked Frameworks (i mean cocoapods should be fine alone right )?
any other solution guys ?
",ammoqq,2015-11-03 00:22:50
192,2015-05-19 08:35:43,"After link library and ""import SwiftyJSON""

I resolve this issue  

1 deleting all the generated files by Cocoapods
2 pod install
3 open the project again

it works! :)
",fertejada,2015-11-03 00:22:50
192,2015-05-19 15:43:21,"@fertejada Which files do you specifically mean? I'd like to try your solution on my project. Thanks!
",ndmeiri,2015-11-03 00:22:50
192,2015-05-19 18:08:50,"@ndmeiri you need to delete only the  . xcworkspace file, after that run the command ""pod install""
",fertejada,2015-11-03 00:22:50
192,2015-05-20 04:58:51,"This solution seems to have worked for me. In fact, I only needed to run `pod install`, rather than deleting the .xcworkspace file and then running that command. Strangely, I had tried this in the past, but it hadn't worked for me. But it did this time! Thanks @fertejada!
",ndmeiri,2015-11-03 00:22:50
192,2015-07-24 12:25:42,"I solved this by deleting the derived data under the Window->Projects menu
",AllenConquest,2015-11-03 00:22:50
192,2015-08-21 17:56:11,"When I get this issue, I just build the project and it usually goes away, probably something with the linker
",torrencio,2015-11-03 00:22:50
192,2015-09-14 10:12:13,"@torrencio This worked for me also, thanks for the simple fix.
",bcamur,2015-11-03 00:22:50
192,2015-09-21 15:45:54,"@xerron 
Thanks, it helped!!!

> Project > General > Linked Framework and Libraries > 
> add SwiftyJSON
> 
> import SwiftyJSON
> 
> walaaaa!!!
",kosiara,2015-11-03 00:22:50
192,2015-10-03 08:33:11,"@xerron 
Is wonderful fix ... but do not forget to clean and build the project ... 
",zizutg,2015-11-03 00:22:50
192,2015-11-28 19:34:50,"I had this error using Xcode7.1, the magic for me is do not import, I mean no need to write ""import SwiftyJSON"", just use it if your already drag-and-drop the .swift file.   
",ZeranLatte,2015-11-03 00:22:50
192,2015-12-23 23:31:51,"@AllenConquest Thank you so much! This fixed the issue instantly.
",HEPBO3AH,2015-11-03 00:22:50
192,2016-05-14 06:29:10,"Yes that worked for me, pod install -> clean -> run it !!!!!
",DineshKachhot,2015-11-03 00:22:50
192,2016-07-24 09:55:41,"All I had to do was 'Project > Clean Build Folder...' (holding down the alt key reveals this option), and it worked.

I'm using CocoaPods.
",oyvind-hauge,2015-11-03 00:22:50
192,2016-10-13 05:32:45,"@oyvind-hauge Thanks,it works!
",wpen,2015-11-03 00:22:50
192,2016-10-16 04:02:24,"Kind of following @fertejada tip...
After link library and ""import SwiftyJSON""
1. closed xcode
2. ""pod deintegrate"" (to erase the pod files)
3. ""pod install""
4. opened project
5. voile!
",joaoh82,2015-11-03 00:22:50
192,2017-02-17 01:22:50,"after pod install, cleaning + building fixed the error. ",VicFrolov,2015-11-03 00:22:50
192,2017-02-17 06:03:19,"Good to know, @VicFrolov If you have any issue, feel free to open a new issue.",wongzigii,2015-11-03 00:22:50
191,2015-03-29 19:52:59,"I wanted to parse a array of type MyObject. I have
   <code> func toJSON() -> JSON </code>
into my class, but with an array, I can't do <code>myArray.map { $0.toJSON() } </code> and then have a JSON with the result... I got this error : ""Array<JSON> is not convertible to 'JSON'""
I test in Swift 1.0 and 1.2
I think, write a JSONable protocol should be good to help to transform user classes into JSON :)

Please can you fix this, or help me to fix ?
Thanks !
",zarghol,2015-11-03 00:23:48
191,2015-04-16 15:31:37,"You could use the (quite new) array-based initializer: `JSON(myArray.map { $0.toJSON() })`, which has been added in 28ab56bc653298111f623b1269088355f65a6b8b.

I don't think this can be done with an implicit type conversion in Swift.
",chschu,2015-11-03 00:23:48
190,2015-03-29 09:21:35,"处理一个2层的json，拿一个值出来要大概几毫秒，一次要拿6个值，然后要循环20次
let username = json[0][""name""].stringValue   类似这样的每次取6个值，循环20次
在模拟器里测试循环这20次大概要300-600毫秒，真机iphone5测试 大概是1-2.5秒
",l12ab,2015-04-29 07:33:29
190,2015-04-09 00:27:37,"Je donnerai bien un coup de main, dommage qu'il ne soit pas possible de s'entendre sur une langue commune....
",dcharbonnier,2015-04-29 07:33:29
190,2015-04-13 09:27:12,"I try to translate the problem @l12ab asked:
Question title: Low performance issue 
Process a two layer Json will cost few miliseconds to get the result.
If we need to get 6 results once and loop 20 times:
Ex.  let username = json[0][""name""].stringValue ( loop 20 times and get 6 different values )
In simulator this will take around 300 - 600 ms,
but in real phone(iPhone 5), it took around 1.0 - 2.5 s
",baby03201,2015-04-29 07:33:29
190,2015-04-16 06:34:55,"@l12ab 实际上SwiftyJSON是没有做解析的。能把JSON文件给我吗？
",tangplin,2015-04-29 07:33:29
190,2015-04-16 12:45:41,"https://xxx.com/api/testforswfityjson
做了个测试页，可选GET参数
page 数值
wfdm 汉字
",l12ab,2015-04-29 07:33:29
190,2015-04-23 15:37:16,"@l12ab 看到你的这个issue后 我就一直没有使用SwiftyJSON  不过刚才我按照你的做法和你给的sample做了一个测试，发现很快啊。我把代码贴过来，你看看是不是这样测试的，如果不是，能不能贴一下你的代码？

English translation for everyone:  
@l12ab I decided not to use SwiftyJSON as I saw your issue here. I did a test using your instruction and sample just now, turns out it was not that slow. Please take a look of my test code below. If this is not the correct way to reproduce it, could you please provide me your own testing code?

<S_CODE_TOKEN>

XCode 6.3.1

模拟器(simulator): iPhone 8.3
结果是: 0.0225430130958557

真机 (real device): iPhone 6 plus   iOS8.3
结果是: 0.144482016563416
- @tangplin 
",meng-zhang,2015-04-29 07:33:29
190,2015-04-25 11:58:24,"@meng-zhang 
网络请求后调用方法handleCodeSearchResult()

<S_CODE_TOKEN>

<S_CODE_TOKEN>

Xcode 6.2 6C131e
output in simulator iPhone 6  (8.2)

start-1429962807.5562
0-qzcs-1429962807.60147
0-cfzl-1429962807.60249
0-fkjemin-1429962807.60353
0-fkjemax-1429962807.6054
0-expired-1429962807.60745
0-desc(4 json values)-1429962807.62691
0-data(3 json values)-1429962807.63184
1-qzcs-1429962807.63318
1-cfzl-1429962807.63491
1-fkjemin-1429962807.63594
1-fkjemax-1429962807.63747
1-expired-1429962807.63941
1-desc(4 json values)-1429962807.64528
1-data(3 json values)-1429962807.65024
2-qzcs-1429962807.65208
2-cfzl-1429962807.65378
2-fkjemin-1429962807.65704
2-fkjemax-1429962807.65813
2-expired-1429962807.66059
2-desc(4 json values)-1429962807.66812
2-data(3 json values)-1429962807.6836
3-qzcs-1429962807.68708
3-cfzl-1429962807.68834
3-fkjemin-1429962807.6893
3-fkjemax-1429962807.69098
3-expired-1429962807.69393
3-desc(4 json values)-1429962807.70208
3-data(3 json values)-1429962807.70772
4-qzcs-1429962807.7451
4-cfzl-1429962807.77093
4-fkjemin-1429962807.77388
4-fkjemax-1429962807.78971
4-expired-1429962807.79165
4-desc(4 json values)-1429962807.82777
4-data(3 json values)-1429962807.83446
5-qzcs-1429962807.85104
5-cfzl-1429962807.89115
5-fkjemin-1429962807.89324
5-fkjemax-1429962807.91149
5-expired-1429962807.91483
5-desc(4 json values)-1429962807.93198
5-data(3 json values)-1429962807.93487
6-qzcs-1429962807.93595
6-cfzl-1429962807.937
6-fkjemin-1429962807.94115
6-fkjemax-1429962807.943
6-expired-1429962807.94423
6-desc(4 json values)-1429962807.94926
6-data(3 json values)-1429962807.95494
7-qzcs-1429962807.95725
7-cfzl-1429962807.95942
7-fkjemin-1429962807.96165
7-fkjemax-1429962807.96517
7-expired-1429962807.96654
7-desc(4 json values)-1429962807.97006
7-data(3 json values)-1429962807.97301
8-qzcs-1429962807.97573
8-cfzl-1429962807.97669
8-fkjemin-1429962807.97809
8-fkjemax-1429962807.97924
8-expired-1429962807.9805
8-desc(4 json values)-1429962807.9851
8-data(3 json values)-1429962807.99079
9-qzcs-1429962808.00148
9-cfzl-1429962808.0038
9-fkjemin-1429962808.00479
9-fkjemax-1429962808.00574
9-expired-1429962808.00681
9-desc(4 json values)-1429962808.03581
9-data(3 json values)-1429962808.04027
10-qzcs-1429962808.04173
10-cfzl-1429962808.04277
10-fkjemin-1429962808.04394
10-fkjemax-1429962808.04495
10-expired-1429962808.0463
10-desc(4 json values)-1429962808.06056
10-data(3 json values)-1429962808.07081
11-qzcs-1429962808.07187
11-cfzl-1429962808.07282
11-fkjemin-1429962808.0738
11-fkjemax-1429962808.08233
11-expired-1429962808.09182
11-desc(4 json values)-1429962808.0989
11-data(3 json values)-1429962808.10396
12-qzcs-1429962808.10725
12-cfzl-1429962808.10902
12-fkjemin-1429962808.11058
12-fkjemax-1429962808.11174
12-expired-1429962808.11422
12-desc(4 json values)-1429962808.11989
12-data(3 json values)-1429962808.12298
13-qzcs-1429962808.12456
13-cfzl-1429962808.12553
13-fkjemin-1429962808.12649
13-fkjemax-1429962808.12743
13-expired-1429962808.12838
13-desc(4 json values)-1429962808.13288
13-data(3 json values)-1429962808.177
14-qzcs-1429962808.18092
14-cfzl-1429962808.18208
14-fkjemin-1429962808.19266
14-fkjemax-1429962808.19972
14-expired-1429962808.20121
14-desc(4 json values)-1429962808.20872
14-data(3 json values)-1429962808.21156
15-qzcs-1429962808.2126
15-cfzl-1429962808.21397
15-fkjemin-1429962808.216
15-fkjemax-1429962808.21955
15-expired-1429962808.23482
15-desc(4 json values)-1429962808.25705
15-data(3 json values)-1429962808.26584
16-qzcs-1429962808.26734
16-cfzl-1429962808.26905
16-fkjemin-1429962808.27024
16-fkjemax-1429962808.27151
16-expired-1429962808.27247
16-desc(4 json values)-1429962808.27592
16-data(3 json values)-1429962808.2795
17-qzcs-1429962808.29531
17-cfzl-1429962808.2966
17-fkjemin-1429962808.29758
17-fkjemax-1429962808.30002
17-expired-1429962808.35788
17-desc(4 json values)-1429962808.36999
17-data(3 json values)-1429962808.38016
18-qzcs-1429962808.38141
18-cfzl-1429962808.38378
18-fkjemin-1429962808.38609
18-fkjemax-1429962808.38868
18-expired-1429962808.40601
18-desc(4 json values)-1429962808.42831
18-data(3 json values)-1429962808.44655
19-qzcs-1429962808.44777
19-cfzl-1429962808.45955
19-fkjemin-1429962808.46407
19-fkjemax-1429962808.46701
19-expired-1429962808.48486
19-desc(4 json values)-1429962808.48849
19-data(3 json values)-1429962808.49219
end-1429962808.49237
0.936176061630249

936毫秒，平均每次468毫秒（每次取了12个值）
这个耗时浮动也较大，刚刚测了20多次，在400多-900多之间浮动，上面是耗时最多的一次
我手上只有iPhone 5真机，性能比模拟器差，耗时肯定更高，就不测了。
",l12ab,2015-04-29 07:33:29
190,2015-04-25 14:31:48,"@meng-zhang 你的那段代码我在我这里试了一下，耗时约200-500毫秒。

后来调试中发现，json.array?.count 或者json.arrayValue.count也很耗时，约30-50毫秒，所以换了方法

把while循环改成for (index: String, subJson: JSON) in json， 内部的json[i]换成subJson，然后耗时降到了30-90毫秒。
但是还是没有你的22毫秒快，而且我在想，如果你的那段代码也改成这样，会不会更快

<S_CODE_TOKEN>
",l12ab,2015-04-29 07:33:29
190,2015-04-26 08:16:17,"@tangplin @meng-zhang 刚刚升级到了Xcode 6.3.1，性能再一次提升，如果使用json[i]模式，耗时100-200毫秒，如果是subJson模式，耗时20-60毫秒。看来
",l12ab,2015-04-29 07:33:29
190,2015-04-28 05:18:21,"@l12ab  所以我觉得这个速度是可以接受的吧？
",meng-zhang,2015-04-29 07:33:29
190,2015-04-28 12:48:55,"@meng-zhang 嗯，能接受了。不过苹果这swift 1.1版本性能确实差了点。然后能麻烦编辑一下上面的回复，把我发的那个网址去掉吗？ 我自己发的已经去掉了
",l12ab,2015-04-29 07:33:29
190,2015-04-28 19:48:57,"@l12ab 去掉了
",meng-zhang,2015-04-29 07:33:29
190,2015-04-29 07:33:29,"@meng-zhang 谢谢~~
",l12ab,2015-04-29 07:33:29
189,2015-03-26 19:47:54,"I ran into an issue when I was writing a function in a different class that had a parameter of type JSON. I'm absolutely certain that the variable being passed in is of type JSON and is not nil. However, the compiler keeps throwing an error of type `'JSON' is not convertible to 'JSON'`.

What is interesting is that if I move the function into the same class as the calling function, the code will compile just fine. This is a problem because it would require me to copy that function into multiple classes which would not be good. Also, it is a very strange issue to have the compiler say that it can't convert an object to a type that it is already.
",willsteinmetz,2016-11-17 07:18:16
189,2015-06-12 06:07:29,"I would suggest sharing some reproducible code with us. As it stands, I feel there is insufficient information to help you further. I believe I saw this once but it was a syntactical error on my part.
",bugs181,2016-11-17 07:18:16
189,2016-04-21 11:02:39,"I am facing exactly same issue. Code snippet and more details are here,
http://stackoverflow.com/questions/36763094/cannot-convert-value-of-type-json-to-expected-argument-type-json
",harshag,2016-11-17 07:18:16
189,2016-04-28 04:50:45,"After banging my head for several hours found out that issue was due to including SwiftyJSON file for both app and test targets.
",harshag,2016-11-17 07:18:16
189,2016-11-17 07:18:16,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:18:16
188,2015-03-26 14:10:35,"The swift Array and Dictionary are transparently bridged to and from Objective-C NSArray and NSDictionary. Unfortunately, this bridge is not really toll free. As explained into the documentation, it involves a cost that often is very high. This pull request remove some of the costs associated to this conversion.

The base idea is that in most of the cases, the data hold by JSON instances is produced through parsing and therefore the most of the embedded data is NSArray or NSDictionary instances. This means that most of the casts to [AnyObject] or [String:AnyObject] are expensive and useless. Since the code producing the data is completely beyond the control of developers (unless Apple rewrites NSData, etc. in Swift), for those concerned by the speed, the only possibility to reduce this cost is avoiding the casts. In our case, using the changes proposed by this pull request we noticed huge performance gains, the time spent during get methods being reduced by more than 95%.

Of course, if the data is constructed using pure Swift objects (for example for serialization), the casts are performed in the opposite direction. Since the creation of these objects is under complete control of the developer, if the data is created from the beginning using NSArray or NSDictionary, these potential performance problems are largely diminished. Also, the effective serialization will be much faster because no superfluous conversions will be performed.

This pull request also disables a wrong test case that is checking a value against the 1st entry into the allKeys array produced by a NSDictionary. The documentation clearly states that the order of these keys is not defined, so checking the value at 1st index doesn't really make sense.
",mirion,2015-04-13 05:57:27
188,2015-04-09 20:54:09,":+1: 
",jlalvarez18,2015-04-13 05:57:27
188,2015-04-13 05:57:27,"JSON's object is [String : AnyObject] not  NSDictionary.
",tangplin,2015-04-13 05:57:27
188,2015-04-13 08:39:00,"There is a misunderstanding here. As I said into the pull request, the object that is received from cocoa is a NSDictionary. Systematically casting it to [String : AnyObject] is **very expensive** and useless. Please take a deeper look at the patch or even better, profile the code to better understand the implications.

Your code is great, but it has this speed penalty. It would be a pity to leave it in this state.
",mirion,2015-04-13 05:57:27
187,2015-03-25 18:26:38,"Just by opening the project, Xcode is modifying the buildable name in the OS X scheme. My guess is that when the OS X target was created along with the scheme, the scheme just didn't get updated properly when the `Product Name` of the target was updated. This small change fixes up the issue.
",cnoon,2015-04-13 05:56:00
186,2015-03-25 18:22:28,"In order to properly support Carthage and CocoaPods at the same time with cross-platform targets, the code signing identities need to be modified a bit to make sure everyone can build SwiftyJSON using Carthage.

To properly support Carthage, iOS targets and tests need to code sign as `iPhone Developer`. This is due to the fact that Xcode _requires_ them to be code signed. Thankfully, SwiftyJSON already has all of this set properly. Mac OS X targets and tests are different altogether. They don't require code signing at all. Therefore, it should be disabled to allow users without a `Mac Developer` account to build SwiftyJSON on OS X and run the tests. All frameworks will get resigned anyways when embedded within the final app target.

This will make creating cross-platform libraries ontop of SwityJSON much easier for all those involved. You can find more information [here](https://github.com/Carthage/Carthage/issues/399) and [here](https://github.com/Carthage/Carthage/issues/281).
",cnoon,2015-04-13 05:55:24
185,2015-03-25 02:37:41,"I got a json array from http, and I want to push an object in this array, but nothing happend.

I want to:

<S_CODE_TOKEN>

how to do it?
",Hanggi,2015-11-03 00:25:31
185,2015-04-17 16:10:04,"That doesn't seem to be possible currently. The subscript setter can only update existing entries for the array case.

Modifying the wrapped Array via `json.arrayObject!.append(...)` could work.
",chschu,2015-11-03 00:25:31
185,2015-11-03 00:25:31,"Should be working now

<S_CODE_TOKEN>
",zhigang1992,2015-11-03 00:25:31
184,2015-03-25 00:21:29,"Hey i'm in trouble installing SwiftJSON in my project.
I'm using cocoapods 0.36 and xcode 6.2, deploy target >= 8.0

I'm using Alamofire and when I i'm trying to parse the json with this piece of code:

<S_CODE_TOKEN>

Xcode is showing the next error:

<S_CODE_TOKEN>

Why? Thanks!
",pekpon,2015-12-20 02:29:27
184,2015-04-13 12:59:33,"Hi pekpon

Please try to use following constructor of JSON class:

public init(data:NSData, options opt: NSJSONReadingOptions = .AllowFragments, error: NSErrorPointer = nil)
",jayasme,2015-12-20 02:29:27
184,2015-05-05 08:26:51,"i already have this constructor class 
",alexlezeu,2015-12-20 02:29:27
184,2015-06-19 11:53:41,"try `import SwiftyJSON` at the top of the file where you are using JSON.
",pferdefleisch,2015-12-20 02:29:27
184,2015-12-18 07:08:42,"@pekpon , I had the same issue. To resolve this just import SwiftyJSON at the top of your file in which you are using it 
",neelamsharma12,2015-12-20 02:29:27
184,2015-12-20 02:29:27,"Thanks to all! ;)
",pekpon,2015-12-20 02:29:27
183,2015-03-24 03:21:40,"I would like to be able to check if `json[key]` is a JSON object.

The REST API I'm interacting with may embed a string for a key where circular embeds would happen. For instance:

<S_CODE_TOKEN>

My serialization method expects `user.account.owner` to be of type `User`, but because the API avoids embedding circular data, it crashes every time.

A workaround I've used in the past:

<S_CODE_TOKEN>

Another idea:

<S_CODE_TOKEN>

Any suggestions on how to handle this?
",justinmakaila,2016-11-17 07:18:03
183,2015-11-03 00:31:34,"I can't think of any other way to do this.

<S_CODE_TOKEN>
",zhigang1992,2016-11-17 07:18:03
183,2016-11-17 07:18:03,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:18:03
182,2015-03-23 02:24:06,"Hi,there.

I use SwiftyJSON for parsing JsonObject.
But i could not build project because of below error.

My project's deployment-taget is iOS7.

<S_CODE_TOKEN>

How do i do?
",shiratsu,2015-11-03 00:33:26
182,2015-04-02 03:21:01,"In your Build Settings, try setting Mach-O type to ""Static Library""
",jpellegrino89,2015-11-03 00:33:26
182,2015-04-02 10:53:13,"Hi @jpellegrino89

Thank you for replying.
I tryed it.However new error produced.

<S_CODE_TOKEN>

I didn't get answer to search on google.
How do i do?
",shiratsu,2015-11-03 00:33:26
182,2015-10-13 22:31:25,"yeah - this didn't work for me either, however I couldn't even clean the project after making that change. 

Must be something else 
",grantkemp,2015-11-03 00:33:26
182,2015-10-13 22:34:49,"I managed to get it working by removing the hash from the pod file line before platform.  No idea why it worked.  Hope it helps @shiratsu 

eg  

<S_CODE_TOKEN>
",grantkemp,2015-11-03 00:33:26
182,2015-10-16 03:25:43,"OK,thank you.I will try it.
",shiratsu,2015-11-03 00:33:26
182,2015-11-03 00:33:26,"`use_frameworks!` Only works on iOS8 or up.

For iOS7, you can drag and drop the files into the project. 

:)
",zhigang1992,2015-11-03 00:33:26
181,2015-03-20 09:06:41,"Hi,there.

I would like to use SwiftyJSON by Carthage.
But i could not install it.
My error is below

<S_CODE_TOKEN>

But i could install Alamofire but i could not install SwiftyJSON.
what is difference btween Alamofire and SwiftyJSON?

it is difference with https://github.com/SwiftyJSON/SwiftyJSON/issues/177. 
so i posted issue.

How do i do?

Best regards.
",shiratsu,2015-04-08 00:59:45
181,2015-04-02 15:36:22,"+1

I'm able to build but a coworker is having the exact same error.  
",jeeftor,2015-04-08 00:59:45
181,2015-04-02 19:02:14,"try adding --configuration Debug after your shell command
",cqin5,2015-04-08 00:59:45
181,2015-04-03 01:26:36,"I tryed to add '--configuration DEBUG'.However no changed.

<S_CODE_TOKEN>

Carthage's version is below

<S_CODE_TOKEN>

Cartfile is below.

<S_CODE_TOKEN>

https://github.com/mokumoku-idv/swiftyjson_alamofire_example/blob/master/Cartfile

But My private mac got suceeded.However,I couldn't find difference between my private mac and company's mac.

What is this problem?
",shiratsu,2015-04-08 00:59:45
181,2015-04-06 21:42:28,"Can you please upload the full `xcodebuild` log?
",jspahrsummers,2015-04-08 00:59:45
181,2015-04-07 01:00:12,"Which is environmets,my company's mac or my private mac?
In my company's mac,
I don't build this project yet.Because I didn't get swiftyjson by carthage.
Or,can i already get xcodebuild log before building?If possible,where is the log file?
",shiratsu,2015-04-08 00:59:45
181,2015-04-07 05:56:57,"@shiratsu See the line of Carthage output that includes:

> **\* xcodebuild output can be found in …
",jspahrsummers,2015-04-08 00:59:45
181,2015-04-07 06:23:56,"Oh,I'm sorry.sure.

<S_CODE_TOKEN>
",shiratsu,2015-04-08 00:59:45
181,2015-04-07 21:04:27,"Having the same issue: code signing issues.
",benkraus,2015-04-08 00:59:45
181,2015-04-07 21:13:54,"Changing the ""release"" code signing identity to the developer setting did it for me.
",benkraus,2015-04-08 00:59:45
181,2015-04-08 00:59:45,"Special thanks!
I got to install it!!!!!

<S_CODE_TOKEN>
",shiratsu,2015-04-08 00:59:45
180,2015-03-19 21:54:20,"Hi,

Your podspec claims that iOS 8+ is required, but README.md claims iOS 7+.

Which one is it?

Thanks,
Jason
",cellularmitosis,2015-11-03 00:33:39
180,2015-03-24 18:57:48,"It's because of a cocoapods framework: https://github.com/SwiftyJSON/SwiftyJSON/issues/151
",skofgar,2015-11-03 00:33:39
180,2015-05-22 16:18:44,"I'm having trouble when following the guide for iOS 7. It says to just drop the xcodeproj into the project if I'm using workspaces.

Does that mean to drop it in underneath my project or into the workspace at the same level as my project and the cocoapods project?

Do I also then need to include an import statement?
",keab42,2015-11-03 00:33:39
180,2015-06-01 11:51:59,"You have to put it inside your projects folder (for example in supporting files group). Once this is done you don't have to import anything as it is in the same namespace.
",arm0nic,2015-11-03 00:33:39
180,2015-09-09 17:27:20,"Thanks! Adding the SwiftyJSON.swift file directly to the supporting files group solved the ios 7 issue for me! 
",ShahNewazKhan,2015-11-03 00:33:39
179,2015-03-19 13:38:21,"Hi,
I have made an extension to SwiftyJson that add a ""color"" and ""colorValue"" computed property (Just getter).
so 

<S_CODE_TOKEN>

returns an optional UIColor. It works with String and Number.

Is it useful or not?
If yes I will make a Pull Request.
Thanks and regards.
",lastMove,2015-11-03 03:10:30
179,2015-11-03 03:10:30,"IMHO
SwiftyJSON should only handle those json types.

Properties like `color` and `date`, they are not a part of json types, they are all just `strings`.

But please do post your work somewhere, gist or a different repo.

It might be valuable to other ppl.
",zhigang1992,2015-11-03 03:10:30
178,2015-03-19 00:10:25,,mono0926,2015-03-20 06:33:13
178,2015-03-20 06:40:58,"#172 
",tangplin,2015-03-20 06:33:13
177,2015-03-18 22:12:56,"Having difficulty getting SwiftyJSON to work using carthage (v0.6.3).
##### Cartfile

github ""Alamofire/Alamofire"" >= 1.1.4
github ""SwiftyJSON/SwiftyJSON"" >= 2.1.2
##### Output of carthage update

**\* Fetching Alamofire
**\* Fetching SwiftyJSON
fatal: Not a git repository (or any of the parent directories): .git

<hr/>

carthage seems to work fine when I remove the SwiftyJSON dependency
##### Cartfile

github ""Alamofire/Alamofire"" >= 1.1.4
# github ""SwiftyJSON/SwiftyJSON"" >= 2.1.2
##### Output of carthage update

**\* Fetching Alamofire
**\* Checking out Alamofire at ""1.1.4""
**\* xcodebuild output can be found in /var/folders/zq/7zcr7kc905739r9kjnzqvt11ywzxl0/T/carthage-xcodebuild.fXvtCc.log
**\* Building scheme ""Alamofire iOS"" in Alamofire.xcworkspace
**\* Building scheme ""Alamofire OSX"" in Alamofire.xcworkspace
",kevinmlong,2015-07-28 16:52:04
177,2015-03-18 23:00:15,"seems to be able to fetch the repo if I put the version in quotes, so:

github ""SwiftyJSON/SwiftyJSON"" ""xcode6.3""

however, now I'm getting build errors....

The following build commands failed:
    CompileSwift normal i386 /Users/XXXXX/Development/test/Carthage/Checkouts/SwiftyJSON/Tests/BaseTests.swift
    CompileSwiftSources normal i386 com.apple.xcode.tools.swift.compiler
(2 failures)

Xcode 6.3
Build version 6D543q
",kevinmlong,2015-07-28 16:52:04
177,2015-03-19 14:47:47,"I believe it has to do with this line in BaseTests.swift

Line 119:         XCTAssertEqual(id!,240558470661799936)

If I build in Xcode (Beta 6.3) with the destination as iOS Device, the build fails with the following:

![screen shot 2015-03-19 at 10 46 57 am](https://cloud.githubusercontent.com/assets/6371696/6732930/4f39b1dc-ce25-11e4-8e66-a9784b162762.png)
",kevinmlong,2015-07-28 16:52:04
177,2015-03-19 18:06:40,"So...if I comment out line 119 in BaseTests.swift and update the Team and Release Profile in SwiftyJSON iOS, Carthage correctly builds SwiftyJSON.

An alternative is to comment out line 119 and have Carthage build with the flag `--configuration Debug` as referenced here: https://github.com/Carthage/Carthage/issues/281#issuecomment-70126876

Another alternative is to comment out line 119, set the code signing for release and debug to iOS Developer.

Anyways...building seems to work once the error in BaseTests.swift is remedied (commented out in my case).
",kevinmlong,2015-07-28 16:52:04
177,2015-03-19 19:04:33,"I don't think it's necessary to fork and make a pull request for a single line change, but the following change makes it all workout

Line 114: `let id = json[0][""id""].int64`
",kevinmlong,2015-07-28 16:52:04
176,2015-03-17 10:41:00,"I first noticed this in the latest Xcode 6.3 beta 3. It would appear that trying to do a subscript of a `Dictionary` casted as an `AnyObject` does not return the correct value
",JosephDuffy,2015-04-13 05:54:31
176,2015-03-20 06:39:18,"@JosephDuffy thanks.
Could you please give an example cased this situation.
",tangplin,2015-04-13 05:54:31
176,2015-03-20 14:07:34,"Sorry, I thought I'd put an example in my message but obivously not. I'll note that I could reproduce this by creating a uni test within the SwiftyJSON project (which is why there's not one in my pull request). In a project of my own's unit tests I had:

<S_CODE_TOKEN>

This would fail, and `id` would be nil. I am downloading the latest version of Xcode on to my machine (I discovered this on another machine) to try and put together a better example.
",JosephDuffy,2015-04-13 05:54:31
176,2015-03-20 15:44:16,"Admittedly, I can't recreate this in my new project using the following code:

<S_CODE_TOKEN>

When I get another chance I'll see if I can find any project configuration changes that may have caused the issue in my other project. I do remember that the issue was around the subscript of any `AnyObject`, which I discovered by doing:

<S_CODE_TOKEN>
",JosephDuffy,2015-04-13 05:54:31
176,2015-04-10 23:13:02,"This seems to happen only if SpriteKit is imported somewhere in the project. See my comments on #200.
",chschu,2015-04-13 05:54:31
176,2015-04-11 20:34:27,"Seems like there are a few pull requests for this issue then. Do the others solve any other issues or should I keep this one open? When I first created the request it was the only one mentioning this issue, but now it seems silly to have so many open!
",JosephDuffy,2015-04-13 05:54:31
176,2015-04-13 05:54:31,"Done #203
",tangplin,2015-04-13 05:54:31
175,2015-03-16 19:35:37,"Hi !

I'm an happy user of SwiftyJSON !
I was reading this article : http://nshipster.com/swift-1.2/
When I saw this

<S_CODE_TOKEN>

Amazing, no ? What the impact on SwiftyJSON ?

Bisou
",thedamfr,2016-11-17 07:17:23
175,2015-03-19 16:05:39,"Good question
",jeeftor,2016-11-17 07:17:23
175,2015-03-20 11:23:15,"I've used SwiftyJSON for a while, and I thinks swift 1.2 is a big improvement.
To answer your question, yes it impact SwiftyJSON in term of more easier to use.
In term of ""Do I want SwiftyJSON in swift 1.2?"", the answer is still ""YES"" as example below.

<h3>Example 1</h3>

<S_CODE_TOKEN>

This example is quite similar for bot with and without SwiftyJSON.

<h3>Example 2: Use default value if some keys have no value</h3>

<S_CODE_TOKEN>

<h3>Example 3: Key chain (assume address is dictionary)</h3>

<S_CODE_TOKEN>

Just some example, you will see a lot benefits  when you dealing with more complex json data (bot get and set). 
",totiz,2016-11-17 07:17:23
175,2015-04-09 07:54:43,"That said, SwiftyJSON has to be updated for 1.2 — right now it doesn't compile.
",stuffmc,2016-11-17 07:17:23
175,2015-04-09 08:54:12,"Use XCode6.3 Branch.
",totiz,2016-11-17 07:17:23
175,2015-04-09 09:00:04,"@totiz → thanks, but this has as well tons of errors :( Mainly `Expected type after 'as'` errors...
",stuffmc,2016-11-17 07:17:23
175,2015-04-09 12:06:55,"Cloud you show me some lines of code that you have errors, That we can discuss in more detail.
",totiz,2016-11-17 07:17:23
175,2015-04-11 20:40:04,"Sorry! My error. Somehow I had a bunch of errors but I tried again today and all worked fine. Thanks!
",stuffmc,2016-11-17 07:17:23
175,2015-04-20 04:11:36,"@thedamfr can you explain what is so amazing about the example posted? I have only been learning swift for 1 week so I have never seen swift before 1.2, so this looks normal - what couldn't you do before?
",j-h-a,2016-11-17 07:17:23
175,2015-04-20 07:00:03,"@j-h-a you should give a read to NSHipster's post mentioned in the first post : http://nshipster.com/swift-1.2/

But to make it short 
1.2 introduced the coma syntax in the ""if let"" binding. 

<S_CODE_TOKEN>

The equivalent approach in swift <1.2 would have been an ugly if pyramid.

<S_CODE_TOKEN>
",thedamfr,2016-11-17 07:17:23
175,2015-04-20 07:12:59,"Just to complete @thedamfr (note for @j-h-a) in Swift 1.2 you can use only 1 `let` this way:

<S_CODE_TOKEN>
",stuffmc,2016-11-17 07:17:23
175,2015-04-20 07:29:09,"Thx @stuffmc fixed it.
",thedamfr,2016-11-17 07:17:23
175,2016-11-17 07:17:23,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:17:23
174,2015-03-15 21:43:35,"Make life a little easier for those don't have distribution certs set up, carthage will handle signing anyways

https://github.com/Carthage/Carthage/issues/281#issuecomment-70126876
",rromanchuk,2015-03-20 06:39:51
173,2015-03-13 12:19:15,"I don't get the error when running in the Simulator on 8.2, bu when I build on my iPhone 6 (also running iOS 8.2) I get the following error.

malloc: **\* error for object 0x170054100: Invalid pointer dequeued from free list
**\* set a breakpoint in malloc_error_break to debug

XCode is also pointing to the following method : 

//MARK: - Comparable
extension JSON: Comparable {}

public func ==(lhs: JSON, rhs: JSON) -> Bool {

<S_CODE_TOKEN>

}

and more precisely to line : 

case (.String, .String):
        return (lhs.object as String) == (rhs.object as String)
",benjaminhorner,2016-11-17 07:16:44
173,2016-05-07 00:44:17,"Ok
",S0215,2016-11-17 07:16:44
173,2016-11-17 07:16:44,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:16:44
172,2015-03-13 10:35:40,"Fixes a 32bit/64bit issue broke compilation.
",enhorn,2015-03-20 06:40:33
171,2015-03-12 11:16:40,"I've been struggling for hours, trying to do a simple comparison between a float, and a JSON (object), which is a valuetype that should be a float?

It's a really simple if statement, but I can't find any documentation on how to make the below possible.

<S_CODE_TOKEN>

I've also tried diferent variations of simply saving it to a float.

var test: FLoat = json[""LastPrice""] as? Float

What use is a JSON parser, if you can't use the data, I figure there has to be a way to save this data in a proper variable. But again there's no documentation on this. (I also tried double) and .double, with no results.
",MarkLyck,2015-03-12 19:59:52
170,2015-03-12 04:37:19,"The new Cocoapods 36 is ready.
",joelparkerhenderson,2015-03-12 06:28:56
169,2015-03-11 10:07:28,"Hi, as I can see, you are carefully fill tags and labels for issues in your repo.
I created a [github_changelog_generator](https://github.com/skywinder/Github-Changelog-Generator), that generate change log file based on tags, issues and merged pull requests (and split them to separate lists according labels) from GitHub issue tracker.
[This Change Log](https://github.com/skywinder/SwiftyJSON/blob/add-change-log-file/CHANGELOG.md) was automatically generated by this script.
It helps to easily found what and when was fixed and implemented.
You can easily update this file in future by running script: `github_changelog_generator` in your repo folder.
Hope you find this commit as useful.
",skywinder,2015-10-14 09:30:25
169,2015-04-28 08:31:06,"+1
",kimdv,2015-10-14 09:30:25
169,2015-05-04 06:14:08,"Update change log to `2.2.0`
",skywinder,2015-10-14 09:30:25
169,2015-10-14 12:10:48,":tada: don't forget to update changelog with 2.3.0 version! :wink: 
",skywinder,2015-10-14 09:30:25
168,2015-03-08 16:57:56,"This already happened two times for me with two different situations

Last week I had this issue (that I could solve)
This works in development (beeing item:JSON and event valid)
`switch item[""event""] { ... }`
But crashes if signed as Ad Hoc
I found that using 
       `switch item[""event""].stringValue { ... }`
Fixes it

And now I'm having an issue with the following

<S_CODE_TOKEN>

I need to change the data from a provider to map it to our login data.
The first line `json[0][""name""] = json[0][""nickname""]` 
The second one `json[0][""id""] = json[0][""providerUID""]` crashes in release...

It's very annoying that the code has two different behaviours depending if its a release or not. It must be some Swift bug or something.

Any ideas?
",freynolds,2015-07-31 14:33:09
168,2015-03-09 09:00:48,"I have the same behaviour, it works perfectly in debug mode but I have bugs in release mode. It mainly crashed here https://github.com/SwiftyJSON/SwiftyJSON/blob/master/Source/SwiftyJSON.swift#L99.

I can't find why, I suspect the Swift compiler but without certitude.
",yannickl,2015-07-31 14:33:09
168,2015-07-31 11:39:50,"Was hoping to find something, got the same problem as of now.
",msegers,2015-07-31 14:33:09
168,2015-07-31 14:33:09,"On Swift 1.2 with the last version of SwiftyJSON my app is working fine
",freynolds,2015-07-31 14:33:09
167,2015-03-04 14:38:25,"It gets nil instead of a crash
",ybeapps,2015-04-13 05:53:47
167,2015-04-10 23:18:36,"@ybeapps: Do you use SpriteKit in your project? If you do, that might be the same issue that others described in #200.
",chschu,2015-04-13 05:53:47
167,2015-04-12 04:07:46,"Yes I do use spritekit..
",ybeapps,2015-04-13 05:53:47
167,2015-04-13 05:53:47,"Done #203
",tangplin,2015-04-13 05:53:47
166,2015-03-02 20:21:24,"This is, perhaps, a duplicate...but the [original](https://github.com/SwiftyJSON/SwiftyJSON/issues/163) is pretty opaque.

TL;DR—String comparisons are sometimes causing a crash. Here's the SwiftyJSON code that's failing...

<S_CODE_TOKEN>

And here's a more complete writeup on StackOverflow: http://stackoverflow.com/questions/28790277/crash-in-swiftyjson-during-string-comparison-swift-unknownretain
",clozach,2016-11-17 07:16:22
166,2015-03-03 05:57:06,"I found the problem, and I think it's a bug in Swift 1.1, the Foundation framework, or the interaction between the two. Long story short, it's possible to pass a string to this method whose underlying type is _TtCSs19_NSContiguousString, and that type throws an exception when cast to String, _but only_ when run in Release mode.

As mentioned in the StackOverflow post, I've submitted a bug to Apple & published here: http://openradar.appspot.com/radar?id=5314531127459840

As mentioned in the Open Radar, I'm happy to share the demo that reproduces this problem & can be reached at chris.lozach@activehours.com.
",clozach,2016-11-17 07:16:22
166,2015-05-26 11:00:36,"Will this bug be fixed anytime soon? I have the same problem
",gGololicic,2016-11-17 07:16:22
166,2015-06-03 23:01:19,"@gGololicic per the update at the top of the open radar report, Apple says, ""There are no plans to address this."" Per my stackoverflow writeup, I'd recommend the workaround of using `.stringValue` when switching on/matching values that may be a String.
",clozach,2016-11-17 07:16:22
166,2016-11-17 07:16:22,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:16:22
165,2015-03-02 11:35:46,"Singleton object:

<S_CODE_TOKEN>

main controller:

<S_CODE_TOKEN>

Why can't i pass this data?

![screen shot 2015-03-02 at 12 27 48](https://cloud.githubusercontent.com/assets/1878794/6439863/9b8f9c1e-c0d7-11e4-8b90-a8eaf5ceb2fc.png)
![screen shot 2015-03-02 at 12 28 04](https://cloud.githubusercontent.com/assets/1878794/6439864/9b9222fe-c0d7-11e4-91f1-40d6a3644ec4.png)
",mirzadelic,2016-11-17 07:13:10
165,2016-11-17 07:13:10,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it. At first glanced, it seems like an old crash in the swift compiler, it should be fixed by now.
",ldiqual,2016-11-17 07:13:10
164,2015-02-25 20:10:53,"When I get a date as a string, the dividers are not parsed properly.

Input string from json: ""12/05/2015""
Output value as string: ""12\/05\/2015""
",ankitgogia,2016-11-17 07:12:05
164,2016-11-17 07:12:05,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:12:05
163,2015-02-25 11:13:54,"//MARK: - Comparable
extension JSON: Comparable {}

public func ==(lhs: JSON, rhs: JSON) -> Bool {

<S_CODE_TOKEN>

}

My english not very well,hope you know what's wrong...If you want to know this problem,U can send an email to me,my address is 744007601@qq.com  ...Thank you
",SptrsCA,2016-11-17 07:11:36
163,2016-11-17 07:11:36,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:11:36
162,2015-02-25 09:39:13,"In Xcode 6.3 beta 2, things like json[""name""] will return null. SubscriptTests.swift is therefore failing.
",mrroach9,2016-11-17 07:11:12
162,2015-04-17 16:21:04,"Could you please try again with the latest master? A similar issue has been fixed there.
",chschu,2016-11-17 07:11:12
162,2016-11-17 07:11:12,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:11:12
161,2015-02-24 11:08:29,"I'm trying to modify an existing JSON object but I get compile errors

<S_CODE_TOKEN>

What's the proper way of modifying a JSON object?
",chitza,2016-11-17 07:10:26
161,2015-04-01 12:01:26,"For me works: someJSON[""foo""] = JSON(""bar"")
",danielkiedrowski,2016-11-17 07:10:26
161,2016-11-17 07:10:26,"@chitza This issue has been inactive for a while so I'm gonna go ahead and close it. As first glance, it seems that you're trying to modify a `let` value (params are always let, if you need to modify them, just do `var param = param` then modify the param in question). Let me know if you want to reopen this.
",ldiqual,2016-11-17 07:10:26
161,2016-11-17 11:07:19,"Hi,

I haven't used this library in an while, so go ahead and close it.
",chitza,2016-11-17 07:10:26
160,2015-02-20 13:57:50,"How can i extend [JSON] data?
Can't do with `self.results += results`.
",mirzadelic,2015-02-20 16:56:59
159,2015-02-19 17:06:50,"I was wondering if it is possible to create a JSON object from a String read from SQLite DB? I take the JSON object and call json.description to store the JSON string into the DB, but when I read the string back out, I can't seem to access any of the JSON values. 
",mikewalkerjr,2015-02-23 22:14:03
159,2015-02-22 18:40:38,"Check out this discussion https://github.com/SwiftyJSON/SwiftyJSON/issues/9
",shawnmitchell,2015-02-23 22:14:03
159,2015-02-23 22:14:03,"Perfect. Thank you.
",mikewalkerjr,2015-02-23 22:14:03
158,2015-02-17 06:16:24,"Attempts to resolve #157
",Jasdev,2015-02-17 18:11:10
158,2015-02-17 14:40:57,"It's clearly not obvious, but Swift 1.2 support appears to already be available in the `xcode6.3` branch of the repo.
",mileswd,2015-02-17 18:11:10
158,2015-02-17 18:11:10,"@mileswd ah sorry, didn't catch that! Closing!
",Jasdev,2015-02-17 18:11:10
157,2015-02-16 22:28:59,"Have you tried to run Swifty under 6.3B?  Having no luck here. thanks
",ejpusa,2016-11-17 07:08:37
157,2015-02-17 01:45:54,"I'm gonna try to make a PR for this tonight :)
",Jasdev,2016-11-17 07:08:37
157,2015-03-03 13:39:59,"The Swift compiler produces around 40 error messages when trying to compile SwiftyJSON on 6.3

I was able to successfully build It just by doing some find & replace, Xcode's suggestions seemed to be spot on.
",insidegui,2016-11-17 07:08:37
157,2015-03-03 20:00:36,"@insidegui https://github.com/SwiftyJSON/SwiftyJSON/pull/158#issuecomment-74677249
",Jasdev,2016-11-17 07:08:37
156,2015-02-15 16:52:40,"This more or less re-creates the OS X tests target and scheme as there were some problems with the previous integration.

This PR resolves;
- The repo being dirtied by opening the project.
  - Caused by Xcode fixing an invalid reference to the OS X tests target each time the project was re-opened.
  - This also left a disabled reference to the non-existing target in the OS X framework scheme which couldn’t be removed from the UI.
- The tests not actually being built and ran for OS X.
- The OS X tests target being runnable.
  - The target didn’t link/copy the Swift library and as such crashed when ran.
- The OS X tests scheme having to be present in the list of schemes.

The PR also standardizes the names of files and targets.

Cheers :smile_cat: 

This PR supersedes #155 as that PR introduced some other issues (such as xcodebuild not being able to build the project anymore) :crying_cat_face:
",rastersize,2015-03-11 05:32:13
155,2015-02-15 16:14:32,"This more or less re-creates the OS X tests target and scheme as there were some problems with the previous integration.

This PR resolves;
- The repo being dirtied by opening the project.
  - Caused by Xcode fixing an invalid reference to the OS X tests target.
  - This also left a disabled reference to the non-existing target in the OS X framework scheme which couldn’t be removed from the UI.
- The tests not actually being built and ran.
- The OS X tests scheme having to be present in the list of schemes.

Cheers :smile_cat: 
",rastersize,2015-02-15 16:53:52
155,2015-02-15 16:53:52,"Superseded by #156 as this PR introduced some issues with building the project using `xcodebuild`. The new PR was created by first removing the old targets and then re-creating them. Instead of, like this PR, just fixing the existing ones.
",rastersize,2015-02-15 16:53:52
154,2015-02-15 15:46:55,"The current .gitignore file ignores this path so new additions to the folder should not be added to the repo.
",rastersize,2015-03-11 05:30:42
153,2015-02-15 15:34:15,"Disables building the iOS tests target when building the iOS framework target. Was causing external tools (e.g. Carthage) to fail to build the iOS framework target due to the Tests code having compile time bug (#152).
- CMD+U still works and so forth.
- Travis-CI should still work as it’s explicitly triggering the `test` action.

_Cartfile_

<S_CODE_TOKEN>

_Output_

<S_CODE_TOKEN>
",rastersize,2015-02-15 16:39:44
153,2015-02-15 16:09:37,"Travis-CI fails due to this branch requiring Xcode 6.3 :smile: :trollface: 
",rastersize,2015-02-15 16:39:44
152,2015-02-15 15:29:32,"Changes the type of the `id` constant in `BaseTests.testJSONDoesProduceValidWithCorrectKeyPath()` to be of the type `Int64` instead.

When compiling for 32-bit the unit tests fails (e.g. set target device to _“iPhone 5 (8.1)”_ or _“iPhone 5 (8.3)”_):

<S_CODE_TOKEN>

The failure is in [BaseTests.swift on line 119](https://github.com/SwiftyJSON/SwiftyJSON/blob/xcode6.3/Tests/BaseTests.swift#L119) and is due to `240558470661799936` being a lot larger than `Int.max` on 32-bit systems.

<S_CODE_TOKEN>

The maximum positive number supported is `2^31-1 = 2147483647`. So let’s change the type of `id` to be `Int64` instead so we always work with a 64-bit integer.
",rastersize,2015-03-20 07:16:51
152,2015-02-15 15:47:30,"Travis-CI fails due to this branch requiring Xcode 6.3 :smile: 
",rastersize,2015-03-20 07:16:51
152,2015-03-20 07:16:50,"Thanks!
",tangplin,2015-03-20 07:16:51
151,2015-02-12 21:42:31,"The requirements say you support iOS 7 but the pod only supports iOS 8.

Is this right? Does that mean to support iOS 7 I have to include the files manually?
",donshefer,2015-02-25 08:12:35
151,2015-02-18 20:12:43,"I am also wondering about this.
",brendanmartens,2015-02-25 08:12:35
151,2015-02-25 08:12:35,"Yes, you have to include the files manually.
",lingoer,2015-02-25 08:12:35
151,2015-02-25 15:05:30,"Is that because of how SwiftyJSON is bundled for cocoapods? I was reading up a bit and it sounds like there is a new framework type that only ios8+ can use... is SwiftyJSON using that?
",brendanmartens,2015-02-25 08:12:35
151,2015-03-02 08:29:37,"Yes, because the cocoapods is using that type.
",lingoer,2015-02-25 08:12:35
151,2015-06-11 02:50:47,"So... including SwiftyJson with a pod wont work with IOS 7 ? but if I include SwiftyJson without a pod, it will? 
",germanger,2015-02-25 08:12:35
151,2015-06-15 14:37:58,"That's correct, although the reasons are a bit nuanced (it has to do with how a swift project must be built in order to be managed by cocoapods, IIRC).
",brendanmartens,2015-02-25 08:12:35
150,2015-02-12 13:49:58,"I put a ""!"" at the end of all of SwiftyJSON's ""as"" downcasts and it seems to work under the new requirements of Swift 1.2.
",johngoren,2015-04-16 09:41:38
150,2015-02-16 09:57:38,"This issue has been addressed, look at issue #148 and branch `xcode6.3`
",Nelyus,2015-04-16 09:41:38
149,2015-02-09 21:48:50,"Minor syntax changes that makes SwiftyJSON compiles on Xcode 6.3 beta with Swift 1.2. Perhaps it should be separated from master branch for now.
",darrarski,2015-02-12 03:47:53
149,2015-02-12 03:47:53,"Merged fa057b8ddedff649fa5ae92f2d562ab67f401aa0
Thanks @darrarski
",tangplin,2015-02-12 03:47:53
149,2015-02-14 12:25:45,"Is it possible to install this version via Cocoapods, @darrarski ?

Edit:
Dont worry about it. Obviously it was just: 
pod 'SwiftyJSON', :git => ""git@github.com:SwiftyJSON/SwiftyJSON.git"", :branch => 'xcode6.3'
",andersklenke,2015-02-12 03:47:53
148,2015-02-09 20:55:06,"Xcode 6.3 and Swift 1.2 beta is out :)

Please make it compatible to it. I think most of the compile errors are due to this:
- as! for failable casts — Casts that can fail at runtime are now expressed with the new as! operator to make their potential for runtime failure clear to readers and maintainers of your code.
- The implicit conversions from bridged Objective-C classes (NSString/NSArray/NSDictionary) to their
  corresponding Swift value types (String/Array/Dictionary) have been removed, making the Swift type
  system simpler and more predictable. (18311362)
",Harper04,2015-02-12 04:00:55
148,2015-02-10 11:07:29,"We are experiencing the same issue. The fixes are fairly simple but it looks like it would break backwards compatibility with Swift <1.2
",mkoppanen,2015-02-12 04:00:55
148,2015-02-10 20:33:57,"Yeah, the Swift 1.2 converter provided by Xcode 6.3 got it about 95% of the way to building correctly for me. A few other issues I ran into were:
- The compiler now complains about an integer overflow in [this line within the base tests](https://github.com/SwiftyJSON/SwiftyJSON/blob/master/Tests/BaseTests.swift#L119). Not knowing the context for that assert, I just commented it out. The remaining test cases all passed.
- I'm ingesting SwiftyJSON via Carthage, and using the SwiftyJSON.framework compiled with Xcode 6.1 with Xcode 6.3 did not work for me: the linker complained about the framework being built by an older compiler. So I needed to compile the framework with 6.3, and if you are doing the same you need to make sure to change your Xcode commandline tools to point to Xcode 6.3 within Xcode's preferences. Also, after fixing up the SwiftyJSON source code, make sure to use ""carthage build"" instead of ""update"", as that will wipe out all your local changes before building, reverting all the instances of ""as!"" back to ""as"" and generating a ton of errors.

As for the backwards compatibility issue, can't you make the changes and tag it as a major version update, i.e. 3.0.0, and advise all non-beta users to stay on 2.x.x?
",leegoodrich,2015-02-12 04:00:55
148,2015-02-12 04:00:55,"Please check out branch `xcode6.3`. After the xcode 6.3 beta test , there will be a new tag like 3.0.
",tangplin,2015-02-12 04:00:55
148,2015-04-09 13:44:53,"Is there a way to get these fixes using Pods or do we have to wait for it to be merged in?
",pip8786,2015-02-12 04:00:55
148,2015-04-13 04:06:48,"Got an error after updating latest xcode.

![screen shot 2015-04-13 at 12 05 01 pm](https://cloud.githubusercontent.com/assets/338406/7109698/82f742a0-e1d5-11e4-8eb8-c60082edc415.png)
",amcuserguy,2015-02-12 04:00:55
148,2015-04-13 07:16:03,"@pip8786 you can check out the branch that supports Swift 1.2 just adding to your Podfile:

<S_CODE_TOKEN>
",dfreniche,2015-02-12 04:00:55
148,2015-05-15 19:13:00,"I only see a ""master"" branch... was that ""xcode6.3"" branch merged?
",germanger,2015-02-12 04:00:55
148,2015-05-18 09:02:09,"Yes, last version works with Swift 1.2 just using the pod name
",dfreniche,2015-02-12 04:00:55
147,2015-02-06 20:14:45,"doing

<S_CODE_TOKEN>

then breaking and typing `po json` into the console crashes xcode.
",jtremback,2016-11-17 07:08:11
147,2015-02-28 00:36:18,"I think this is an Xcode specific issue and not SwiftyJSON.  Just curious, are you bridging from Objective-C as well in this project?
",jeffalgera,2016-11-17 07:08:11
147,2015-02-28 00:46:21,"yes, I was bridging some ObjC. I'll see if this has gone away in the new xcode.
",jtremback,2016-11-17 07:08:11
147,2016-11-17 07:08:11,"This issue is kind of old and there hasn't been any update from @jtremback so I'll go ahead and close it. Let me know if you need to reopen it.
",ldiqual,2016-11-17 07:08:11
146,2015-02-04 01:18:56,"(array does not expose a setter...)
",lwu,2015-03-20 07:33:29
146,2015-02-04 01:19:25,"Addresses #143 
",lwu,2015-03-20 07:33:29
146,2015-03-20 07:33:30,"@lwu thanks
",tangplin,2015-03-20 07:33:29
145,2015-02-02 18:32:26,"So this is my code:

Alamofire.request(.GET, url, parameters: nil).responseJSON { (req, res, json, error) in
        self.showProfileInfo.text = JSON(json!).rawString()
        println(JSON(json!))
}

And in the println result on the console and in the UITextView I have this response:

{
""url"" : ""http:\/\/localhost:8000\/"",
}

As you can see the value of url is not ""http://localhost:8000/"", what I can do for fixing this? If I print the json variable that Alamofire gives me it's displayed properly.
",mdorta,2015-02-12 04:05:43
145,2015-02-12 04:05:43,"The `rawString` is the String with escape character.
Try this:

<S_CODE_TOKEN>
",tangplin,2015-02-12 04:05:43
144,2015-01-31 09:15:46,"I am not able to install SwiftyJSON with carthage
Here is what I get when running `carthage update`

<S_CODE_TOKEN>
",prrrnd,2015-01-31 09:16:32
144,2015-01-31 09:16:32,"Seems to be the same as #140 
",prrrnd,2015-01-31 09:16:32
143,2015-01-30 08:47:03,"Suppose arrJSON's type is [JSON].

Program like following can not work.

<S_CODE_TOKEN>

Does anybody have some idea to convert [JSON] to JSON?
",kilnyy,2015-02-06 04:57:22
143,2015-01-30 10:40:49,"I am trying to do the same thing. The SwiftyJSON library does not have a set for arrayValue and dictionaryValue. I asked it here: http://stackoverflow.com/questions/28233330/cannot-assign-json-array-or-json-object-to-a-json-using-swiftyjson-in-ios
But, no solution till now.
",rishimukherjee,2015-02-06 04:57:22
143,2015-01-30 10:48:09,"@rishimukherjee 
Currently I use following code to solve this, but I thing there should be some more clear solution.

<S_CODE_TOKEN>
",kilnyy,2015-02-06 04:57:22
143,2015-01-30 11:16:27,"@kilnyy 
Thank you :)
Is there a way to do this for a dictionary too?
",rishimukherjee,2015-02-06 04:57:22
143,2015-02-04 01:20:09,"Looks like this is a bug in the documentation, try json.arrayObject = rather than json.array = 
",lwu,2015-02-06 04:57:22
143,2015-02-04 04:33:00,"@lwu 
`json.arrObject = [""1"", ""2"", ""3""]` this works well, because type of `[""1"", ""2"", ""3""]` is `[String]`

`json.arrObject = arrJSON` this does not work when type of `arrJSON` is `[JSON]`. 
it has an compiler error `'JSON' is not identical to 'AnyObject'`.

I think the reason is in object setter of JSON struct

<S_CODE_TOKEN>

JSON here is an struct, but swift can not convert struct to AnyObject.

So I still not find any way to convert [JSON] to JSON clearly.
",kilnyy,2015-02-06 04:57:22
143,2015-02-05 13:48:07,"@kilnyy  what about that workaround, a bit less messy

<S_CODE_TOKEN>
",Nelyus,2015-02-06 04:57:22
143,2015-02-05 23:05:32,"This extension worked for me (same idea as @Nelyus):

<S_CODE_TOKEN>
",lwu,2015-02-06 04:57:22
143,2015-02-06 04:57:22,"It works, and really more clear than my solution, thank you!
",kilnyy,2015-02-06 04:57:22
142,2015-01-27 22:55:14,,zhxnlai,2015-01-29 08:56:11
141,2015-01-26 07:12:52,"Hi,
Using the --pre release version (0.36.0.beta.1) of cocoapods and a including this line in our Podfile
`pod 'SwiftyJSON', '2.1.3'` we are getting the following error when doing a _pod install_:
_[!] Unable to find a specification for `SwiftyJSON (= 2.1.3)`_

Anyone else getting this?
",crbaker,2015-01-27 09:15:22
141,2015-01-27 09:15:22,"Hi,

Adding this line
`source 'https://github.com/CocoaPods/Specs.git'`
to my Podfile resolved the issue.
",crbaker,2015-01-27 09:15:22
140,2015-01-24 04:01:46,"i can build Alamofire successfully, but build swiftyjson failed, error messages below:

> <S_CODE_TOKEN>
> 
> === BUILD TARGET SwiftyJSON OF PROJECT SwiftyJSON WITH CONFIGURATION Release ===
> 
> Check dependencies
> 
> Write auxiliary files
> write-file /Users/coolhand/Library/Developer/Xcode/DerivedData/SwiftyJSON-fremfbacgegukqfhjwfehvcuninn/Build/Intermediates/SwiftyJSON.build/all-product-headers.yaml
> 
> === BUILD TARGET SwiftyJSONTests OF PROJECT SwiftyJSON WITH CONFIGURATION Release ===
> 
> Check dependencies
> 
> *\* BUILD SUCCEEDED **
> 
> Build settings from command line:
>     SDKROOT = iphoneos8.1 
> 
> === BUILD TARGET SwiftyJSON OF PROJECT SwiftyJSON WITH CONFIGURATION Release ===
> 
> Check dependencies
> 
> Write auxiliary files
> write-file /Users/coolhand/Library/Developer/Xcode/DerivedData/SwiftyJSON-fremfbacgegukqfhjwfehvcuninn/Build/Intermediates/SwiftyJSON.build/all-product-headers.yaml
> 
> === BUILD TARGET SwiftyJSONTests OF PROJECT SwiftyJSON WITH CONFIGURATION Release ===
> 
> Check dependencies
> Code Sign error: No code signing identities found: No valid signing identities (i.e. certificate and private key pair) matching the team ID “(null)” were found.
> CodeSign error: code signing is required for product type 'Unit Test Bundle' in SDK 'iOS 8.1'
",haolong886,2015-07-28 16:52:04
140,2015-02-03 02:28:18,"Same issue here
",sman591,2015-07-28 16:52:04
140,2015-03-10 02:43:51,"Also having this problem.
",mmeyer724,2015-07-28 16:52:04
140,2015-03-11 17:22:14,"This is occurring because SwiftyJSON is building its Release configuration with a Distribution certificate. It can be [switched to Development](https://github.com/Carthage/Carthage/issues/370#issuecomment-77203572), or you can use `--configuration Debug` with Carthage to work around the issue.
",jspahrsummers,2015-07-28 16:52:04
139,2015-01-21 18:53:46,"Shouldn't the username type should be NSString?
",watsonbox,2015-01-26 03:38:35
138,2015-01-20 17:15:44,"The OSX Scheme is now built when importing SwiftyJSON via Carthage. Carthage build times for the iOS scheme have been reduced.
",haveahennessy,2015-01-31 05:03:12
138,2015-01-31 05:03:12,"I guess this duplicates #134. Closing.
",haveahennessy,2015-01-31 05:03:12
137,2015-01-20 13:28:22,"https://github.com/SwiftyJSON/SwiftyJSON/issues/102
I had have same probrem.
I examined the issue with Time Profiler Instruments, and found that casting to [String : AnyObject] is very slow.
On a trial basis , I changed to cast to NSDictionary, and it improved perfromance.
There was no probrem in unit testing.

By the way , this is my first pull request in my github life.Please forgive me if something wrong.And sorry for my poor English.
",clwkct,2015-01-26 03:47:35
137,2015-01-26 03:47:35,"In [JSON](http://json.org/). An object is an unordered set of name/value pairs, the name must be `String`.
",tangplin,2015-01-26 03:47:35
137,2015-02-27 14:45:09,"@clwkct I have the same issue:

https://www.dropbox.com/s/o8sfbjowd8mm3xw/Screenshot%202015-02-27%2015.44.54.png?dl=0
",seboslaw,2015-01-26 03:47:35
137,2015-03-03 11:14:38,"@seboslaw Thank you for commenting.
I'm wondering why this is so slow like this ... 
Currently, I'm not using SwiftyJSON in cases requiring performance.(This is not the probrem of SwiftyJSON,though.)
",clwkct,2015-01-26 03:47:35
137,2015-04-16 09:42:39,"#200 
",tangplin,2015-01-26 03:47:35
137,2017-02-05 13:55:04,@seboslaw  Why does your Xcode have those % indicators on the right side?,ThoseGuysInTown,2015-01-26 03:47:35
137,2017-02-06 12:15:56,"@ThoseGuysInTown That's actually the ""Time Profiler"" in Instruments",seboslaw,2015-01-26 03:47:35
136,2015-01-20 08:51:46,"Added a few more ""if""s to the readme
",esbenvb,2015-01-26 03:38:13
135,2015-01-20 08:44:24,"Inserted a missing ""if"" in the error handling example
",esbenvb,2015-01-26 03:37:54
134,2015-01-20 05:06:55,"It's look like SwiftyJSON for OS X is not building correctly when using Carthage. So I modify the scheme of the OS X a little bit. Now I can run carthage and build SwiftyJSON for OS X.

Cheers.
",remaerd,2015-01-26 03:49:31
133,2015-01-15 16:50:17,"<S_CODE_TOKEN>

Maybe even support it as part of the AnyObject initializer? Although maybe not possible.
",refried,2016-11-22 19:43:10
133,2016-11-17 07:07:06,"@refried I'm a bit confused, what would you expect `JSON(Alert.Loop)` to produce exactly? If you need to assign the raw value of an enum case to a JSON value, you can just do something like `json[""key""] = enumCase.rawValue`. But maybe you're thinking about something else, let me know.
",ldiqual,2016-11-22 19:43:10
133,2016-11-22 07:08:58,@refried Bump.,ldiqual,2016-11-22 19:43:10
133,2016-11-22 18:44:16,"I don’t know, I opened this ticket 2 years ago.  I suppose I would have expected it to produce json for the raw value underlying the enum.",refried,2016-11-22 19:43:10
133,2016-11-22 19:43:10,"@refried Oh wow, yes it's a super old issue, I thought it was from January of this year. Given that you can just use `Enum(rawValue: json[""foo""].stringValue)` and `json[""foo""].stringValue = enum.rawValue` I'm not sure I see the value of such a feature. I also don't see community support behind the proposal so I'm gonna go ahead and close this. Feel free to ping me if you'd like to reopen. Thanks!",ldiqual,2016-11-22 19:43:10
132,2015-01-15 16:48:36,"the example is really too simple as it uses a local file.

add something like getting and parsing a playlist from youtube.
",gaming-hacker,2016-11-17 07:27:55
132,2015-01-22 15:38:08,"Exactly
I'm having issues creating a new object from raw to post!
There is only one example and its not very clear how to do this
I would appreciate for more example
",freynolds,2016-11-17 07:27:55
132,2015-02-23 19:13:19,"I eventually figured it out through trial and error, however I would have appreciated a complete example of FileManager integration. My current application has to constantly save and read JSON files from the Documents directory of my application and the object deflation and re-inflation was a little convoluted.
",brendancboyle,2016-11-17 07:27:55
132,2015-11-19 06:23:38,"+1
",entotsu,2016-11-17 07:27:55
132,2016-11-17 07:04:46,"@gaming-hacker @freynolds @brendancboyle @entotsu Sorry guys for the delay on this. I'm not too sure which example you're referring to, are you talking about the playground code maybe? If not, then I would argue that reading a file, local or remote, is not the responsibility of SwiftyJSON as a parsing library and would not need a detailed example in the readme.
",ldiqual,2016-11-17 07:27:55
132,2016-11-17 07:26:19,"@Idiqual Wow I forgot I even commented on this. I checked out the current examples you have and they all look great. I use this package in a majority of my projects and I love it. You can probably close this issue as it is no longer relevant. Thanks!
",brendancboyle,2016-11-17 07:27:55
132,2016-11-17 07:27:54,"@brendancboyle Thanks for following up, glad to hear the library works for you! Closing this
",ldiqual,2016-11-17 07:27:55
131,2015-01-15 16:12:43,"Documentation specifies that required deployment target for iOS is 7.0 but the podspec file for CocoaPods declares the minimum deployment target to ""8.0"", avoiding installation on projects targeted for iOS 7.

Which one is correct and which one is wrong?
",redent,2015-01-15 19:59:32
131,2015-01-15 19:59:32,"Just realized that embedded frameworks (introduced in CocoaPods 0.36 for swift support) is only compatible with iOS 8+...
",redent,2015-01-15 19:59:32
130,2015-01-12 12:26:41,"In the last example ""//Array & Dictionary"", the 3 ""that"" should be ""this"" if the JSON given as example is correct (it has a ""this"" and no ""that"" to be seen).

Brgds.
",malaba,2015-10-29 06:39:40
130,2015-10-29 06:39:40,"I believe it was actually correct.

They were trying to demonstrate that literal conversion.

You can set it to a new value (Which in this case is `that`) 
",zhigang1992,2015-10-29 06:39:40
129,2015-01-09 07:09:41,"Swift Compiler Error 
Command failed due to signal: Segmentation fault: 11

error was cause by:

<S_CODE_TOKEN>

Bitcast requires both operands to be pointer or neither
  %817 = bitcast void 0  swift                    0x000000010cc13b68 llvm::sys::PrintStackTrace(__sFILE_) + 40
1  swift                    0x000000010cc14054 SignalHandler(int) + 452
2  libsystem_platform.dylib 0x00007fff90514f1a _sigtramp + 26
3  libsystem_platform.dylib 0x0000000000000001 _sigtramp + 1873719553
4  swift                    0x000000010ca74eb7 llvm::WriteAsOperandInternal(llvm::raw_ostream&, llvm::Value const_, llvm::TypePrinting_, llvm::SlotTracker_, llvm::Module const_) + 263
5  swift                    0x000000010ca7b5e6 llvm::AssemblyWriter::printInstruction(llvm::Instruction const&) + 6646
6  swift                    0x000000010ca7d6bf llvm::Value::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter_) const + 2415
7  swift                    0x000000010cb457a7 (anonymous namespace)::VerifierSupport::CheckFailed(llvm::Twine const&, llvm::Value const_, llvm::Value const_, llvm::Value const_, llvm::Value const_) + 167
8  swift                    0x000000010cb46365 (anonymous namespace)::Verifier::VerifyBitcastType(llvm::Value const_, llvm::Type_, llvm::Type_) + 309
9  swift                    0x000000010cb4827a llvm::InstVisitor<(anonymous namespace)::Verifier, void>::visit(llvm::Instruction&) + 3306
10 swift                    0x000000010cb42bf9 (anonymous namespace)::Verifier::verify(llvm::Function const&) + 1401
11 swift                    0x000000010cb45402 (anonymous namespace)::VerifierLegacyPass::runOnFunction(llvm::Function&) + 18
12 swift                    0x000000010cb26ced llvm::FPPassManager::runOnFunction(llvm::Function&) + 301
13 swift                    0x000000010cb2674f llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) + 191
14 swift                    0x000000010cb26656 llvm::legacy::FunctionPassManager::run(llvm::Function&) + 86
15 swift                    0x000000010c005127 performIRGeneration(swift::IRGenOptions&, swift::Module_, swift::SILModule_, llvm::StringRef, llvm::LLVMContext&, swift::SourceFile_, unsigned int) + 3623
16 swift                    0x000000010c005473 swift::performIRGeneration(swift::IRGenOptions&, swift::SourceFile&, swift::SILModule_, llvm::StringRef, llvm::LLVMContext&, unsigned int) + 51
17 swift                    0x000000010bf5a6f4 frontend_main(llvm::ArrayRef<char const_>, char const_, void_) + 5444
18 swift                    0x000000010bf57a6d main + 1677
19 libdyld.dylib            0x00007fff945765c9 start + 1
",ruandao,2016-11-17 07:00:44
129,2015-02-08 07:51:42,"I also see this with a simple declaration at the top of a view controller: `var data: JSON?`
",wfalkwallace,2016-11-17 07:00:44
129,2015-02-08 07:52:44,"This is a dupe of #125 
",wfalkwallace,2016-11-17 07:00:44
129,2016-11-17 07:00:44,"Closing as duplicate of #125 
",ldiqual,2016-11-17 07:00:44
128,2015-01-07 23:14:39,,johngoren,2015-01-09 04:22:33
128,2015-01-09 04:22:39,"Thanks
",lingoer,2015-01-09 04:22:33
127,2014-12-30 19:34:35,"Also I was going to update the methods from .string to .stringValue, because I am not sure there is a .string method anymore, but then I saw the note about how this might be used to distinguish optional and non-optional returns. So I'm not sure.
",johngoren,2015-01-04 05:41:21
126,2014-12-30 12:46:12,"CocoaPods [officially](http://blog.cocoapods.org/Pod-Authors-Guide-to-CocoaPods-Frameworks/) supports Swift libraries now. Even though its still in beta, it works fine and there's a few third party Swift libraries already supporting CococaPods.

Can you add SwiftyJSON to CocoaPods as well? 
",Isuru-Nanayakkara,2015-01-10 12:38:25
126,2015-01-04 14:51:07,"+1
",larssondaniel,2015-01-10 12:38:25
126,2015-01-05 11:29:58,"Support is already on but podspec is not yet published to cocoapods.org itself. You can point it manually:

<S_CODE_TOKEN>
",mente,2015-01-10 12:38:25
126,2015-01-10 07:15:01,"CocoaPods supports added.

<S_CODE_TOKEN>

Note that it requires your iOS deploy target >= 8.0
",lingoer,2015-01-10 12:38:25
126,2015-01-10 12:38:25,":+1: Tested. Works great. Thanks.
",Isuru-Nanayakkara,2015-01-10 12:38:25
125,2014-12-30 06:42:20,"I just create a simple function like this  `func foo(j:JSON) { }`

When Xcode 6.2 compiler throws out error 'command failed due to signal segmentation fault 11' . But if I remove it, it compiles properly.

Thanks
Jake
",JakeLin,2016-11-17 07:27:31
125,2015-01-11 21:23:21,"I've run into this same issue. Love to know if you found any solution.
",lucasderraugh,2016-11-17 07:27:31
125,2015-01-11 22:26:38,"No, I haven't.I wanted all the logic stay in my Framework target before.
But I have to move those logic from my Framework to the app. Here is my
repo.
https://github.com/JakeLin/SwiftWeather/blob/master/Swift%20Weather/ViewController.swift#L66

Please let me know if you find any.

Thanks
Jake

On 12 January 2015 at 08:23, Lucas Derraugh notifications@github.com
wrote:

> I've run into this same issue. Love to know if you found any solution.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/SwiftyJSON/SwiftyJSON/issues/125#issuecomment-69512164
> .
",JakeLin,2016-11-17 07:27:31
125,2015-01-30 23:27:26,"I’m also seeing this. Would be great to have fixed!
",christiansheehan,2016-11-17 07:27:31
125,2015-02-12 00:23:26,":+1:  same problem here :-(
",derrek,2016-11-17 07:27:31
125,2015-02-13 06:08:00,"same problem here with 6.1.1
",litan1106,2016-11-17 07:27:31
125,2015-02-13 17:47:27,"@litan1106 if you scan through the referenced issue https://github.com/SwiftyJSON/SwiftyJSON/issues/129 above you can find a work around.  This issue should probably get closed with a reference to that one since it's got more detail in it.   If you copy the [SwiftyJSON.swift](https://raw.githubusercontent.com/SwiftyJSON/SwiftyJSON/master/Source/SwiftyJSON.swift)  into your project, instead of using cocoapods and/or other methods where you need to include the module, it'll work.  Tests may still break though unless you do some further hackery also listed in the other write up.
",derrek,2016-11-17 07:27:31
125,2015-02-14 04:32:18,"yea, i was using git submodule... Thanks.
",litan1106,2016-11-17 07:27:31
125,2015-03-25 12:03:33,"Hi, I was having this issue and I was ready to throw myself of a cliff. I just found out what the problem was for me. Maybe this will help someone in the future. 

I'm using SwiftyJson through CocoaPods. 

Here's my code: 

<S_CODE_TOKEN>

If I never use the closure variable (responseData in success and error in failure) then I get the segmentation fault 11.

I wasn't calling them because I was just printing strings to see if the behaviour was working. I had another file with the same structure working and copy pasted the whole content and started removing code until I figured it out. So, if I don't want to care about the closure variable, I'll just use ""_"" instead to avoid this mess... 
",nunogoncalves,2016-11-17 07:27:31
125,2015-03-27 18:24:49,"@nunogoncalves +1 this saved me hours of blaming Xcode for crashing!
",michaldudek,2016-11-17 07:27:31
125,2015-03-27 18:33:22,"@michaldudek I'm glad I could help someone. :) 
Today was another fight with xcode for no reason was keeping indexing files indefinitely and I lost sintax highlighting. Had to uninstall and reinstall xcode to make it back to work. I guess we won't ever stop blaming xcode for something. 
",nunogoncalves,2016-11-17 07:27:31
125,2015-05-25 17:21:19,"Maybe it needn't such complex codes to make segmentation fault 11

<S_CODE_TOKEN>

I'm Xcode 6.3.2. In fact i don't know how Swift deals with & , but i guess it's just the confusing & makes compiler reports such a confused seg fault 11. LOL
",flybikeGx,2016-11-17 07:27:31
125,2015-09-24 16:21:17,"Same issue here.
",christianlanz,2016-11-17 07:27:31
125,2015-10-18 16:24:14,"@nunogoncalves oh man, thanks for saving my sanity here.. That was it for me: not using the closure variable.
",rteslaru,2016-11-17 07:27:31
125,2016-03-01 13:42:42,"When I import a map stock, the same problem happened. I haven't settle it.
`#ifndef MAMap_Bridging_Header_h
#define MAMap_Bridging_Header_h

#import <MAMapKit/MAMapKit.h>
#import <AMapSearchKit/AMapSearchKit.h>

#endif /\* MAMap_Bridging_Header_h */`
",wxjg,2016-11-17 07:27:31
125,2016-03-17 15:58:32,"@IBAction func Login(sender: AnyObject) {
        let parameters = [""username"" : InputUsername.text, ""pwd"" : InputPassword.text]
        let url = ""http://172.20.143.60:8080/yuqin/scheduleapp/ScheduleApp_login.action""
        Alamofire.request(.GET, url, parameters: parameters)
        .responseJSON { response in
                //处理结果
                switch (response.result) {
                case .Success(let value):
                    print(""BeginOrderResult: (value)"")
                    if value[""status""] == 1 {

<S_CODE_TOKEN>

}

same problem that  segmentation fault 11
",wxjg,2016-11-17 07:27:31
125,2016-11-17 07:27:31,"This issue has been inactive for a while so I'm gonna go ahead and consider it fixed. Please let us know if you want to reopen it.
",ldiqual,2016-11-17 07:27:31
124,2014-12-23 22:13:30,"In my project I found the extension of JSON type with Swift protocol ""SequenceType"", to conflict with a type using the same name in another library (named FlipView). This pull request just fix this and other potential type conflict prefixing the extension with the Swift module.
",ravero,2015-03-20 07:20:22
123,2014-12-23 19:51:36,"- Remove unnecessary `ImplicitlyUnwrappedOptional`s
- Remove unnecessary `self`s
- Remove unnecessary `get` in `var`s
",wiruzx,2015-03-20 07:17:03
122,2014-12-22 11:54:49,"Cartfile:

<S_CODE_TOKEN>

and `charthage update` results:

<S_CODE_TOKEN>
- carthage: 0.3.0
- Xcode:  6.1.1 (6A2008a)
",yasuoza,2014-12-23 09:46:34
122,2014-12-22 13:57:21,"I can build v2.1.0 via `carthage build --no-skip-current` command with switching SwiftyJSON scheme into shared scheme, but starting from v2.1.1 I cannot build.
",yasuoza,2014-12-23 09:46:34
122,2014-12-23 09:46:34,"This happens because I am not a member of Mac developer.
This is related to https://github.com/Carthage/Carthage/issues/235.
",yasuoza,2014-12-23 09:46:34
121,2014-12-22 11:40:08,"If you include SwiftyJSON as project, you won't be able to access to this property
",wiruzx,2014-12-23 02:04:48
120,2014-12-21 16:47:45,"Hi, im trying to use Swifty in my project and get this error message ""JSON cannot be constructed because it has no accessible initializers"" in this line:

<S_CODE_TOKEN>

how can i solve?

to use SwiftyJSON i drag the .xcodeproj to my project navigator, and link the binaries in build phases, an Embebed Frameworks

thanks.
",cadrogui,2015-10-14 08:04:45
120,2015-03-07 21:02:45,"Hello, I had this problem too, you can simply change 
`let Sphinx = JSON(responseSphinx)`
by
`var Sphinx = SwiftyJSON.JSON(responseSphinx!)`
",qdequele,2015-10-14 08:04:45
120,2016-05-10 11:52:25,"@cadrogui  If possible can you share how you achieve to work Sphinx search with swift on mobile, I just saw couple of you code and thought you have achieved it. I m a beginner IOS developer and would like to learn but couldnt find any example or demo. Or if possible can you share a demo example on github how to work with sphinx. 

Regards
",ozcan-durak,2015-10-14 08:04:45
119,2014-12-20 18:29:18,"Enabling the extension compatibility flag does not currently limit the library, but makes it possible to use in extensions.
",technomage,2014-12-23 02:04:26
118,2014-12-18 09:14:23,"I already code it using SwiftyJSON but nothing happened. Just blank response inside my xcode console.

`let json = JSON(jsonResult)
if let tasks = json[""tasks""].string{
          println(tasks)
}`

My response from server

`{
    ""tasks"": [{
        ""taskId"": ""27"",
        ""name"": ""testy"",
        ""description"": ""ggg"",
        ""dateCreated"": ""2014-12-03 17:01:00"",
        ""dateUpdated"": ""2014-12-03 17:01:00""
    }, {
        ""taskId"": ""28"",
        ""name"": ""asd"",
        ""description"": ""asda"",
        ""dateCreated"": ""2014-12-04 12:21:54"",
        ""dateUpdated"": ""2014-12-09 10:39:26""
    }, {
        ""taskId"": ""29"",
        ""name"": ""asd"",
        ""description"": ""asd"",
        ""dateCreated"": ""2014-12-04 12:21:58"",
        ""dateUpdated"": ""2014-12-09 10:39:47""
    }],
    ""success"": 1
}`
",datomnurdin,2015-04-14 02:19:05
117,2014-12-17 16:01:43,"Now 
you can use :

let value = json[""1/2/3/who""]

I'm new to github,fist time to send a pull request,LOL
",zhanghao111111111,2014-12-23 02:02:26
117,2014-12-23 02:02:26,"@zhanghao111111111 thanks, but `""1/2/3/who""` is not a appropriate syntax. Please try `json[""1"",""2"",""3"",""who""]`
",tangplin,2014-12-23 02:02:26
117,2014-12-23 02:22:34,"my pleasure ,hope to contribute

> 在 2014年12月23日，上午10:02，tangplin notifications@github.com 写道：
> 
> @zhanghao111111111 https://github.com/zhanghao111111111 thanks, but ""1/2/3/who"" is not a appropriate syntax.
> 
> —
> Reply to this email directly or view it on GitHub https://github.com/SwiftyJSON/SwiftyJSON/pull/117#issuecomment-67914623.
",zhanghao111111111,2014-12-23 02:02:26
117,2014-12-23 09:27:41,"Possibly outside the scope of this package, but JSONPath is relevant here.  [about](http://goessner.net/articles/JsonPath/)

There are implementations at least in Java and JavaScript.

For example, with [api.github/repos/../SwiftyJSON/issues](https://api.github.com/repos/SwiftyJSON/SwiftyJSON/issues) you could get an array of the comments url using `$.. comments_url` to get an array of comment urls, or `$..[?(@staus=open)]` to get comments where the status is open.  The benefit of this being the safety provided by SwiftyJSON.

Just an idea, it's probably outside the scope, and would be better suited to an extension library.
",brigand,2014-12-23 02:02:26
116,2014-12-17 04:25:14,"Anyone else having a problem with getting the swift optional examples working?  If the ""key"" doesn't exist in the JSON file, it throws an error instead of returning nil.

If I use an ""if let"" construct like in the examples it does not work nor does just setting a variable like:

`let test: Float? = item[""color"",""red""].float`

and if ""red"" does not exist in the JSON file, it throws an ""EXC_BAD_INSTRUCTION"" error at this line in the dictionary subscript getter in SwiftyJSON:

`if let object_: AnyObject = self.object[key] {`

Full getter below:

<S_CODE_TOKEN>

The JSON file works with (pulled from a larger JSON file that validates in a validator):

<S_CODE_TOKEN>

 but if you remove the ""red"" entry you get that error with the Optional.

<S_CODE_TOKEN>
",rebump,2015-04-16 09:49:19
116,2015-01-03 23:05:01,"I'm seeing this too.
",schurch,2015-04-16 09:49:19
116,2015-01-13 18:14:02,"I'm also getting this issue, running XCode 6.1.1. If you run this code on an actual device you'll get a slightly different exception. I think there's a safety check/assert that's failing, because the code is trying to access an object that's already been released. But there shouldn't be any object accessed, because this key is supposed to be missing, right?
",skaugust,2015-04-16 09:49:19
116,2015-01-14 22:53:07,"I'm not exactly sure what's happening with that optional value in self.object[key] yet but this seems to fix the issue.

<S_CODE_TOKEN>
",axelrivera,2015-04-16 09:49:19
116,2015-01-17 04:43:51,"+1
",dylan,2015-04-16 09:49:19
116,2015-02-02 07:13:20,"+1
",justinHowlett,2015-04-16 09:49:19
116,2015-03-09 18:56:57,"I found another possible patch for `private subscript(#key: String) -> JSON` explicity casting `self.object` as `[String : AnyObject]`:

<S_CODE_TOKEN>
",sbarex,2015-04-16 09:49:19
116,2015-04-16 09:49:19,"#200
",tangplin,2015-04-16 09:49:19
115,2014-12-14 20:34:20,"Looks like it should have been `list`, but was keyed in as `like`
",floydpink,2014-12-16 08:54:27
115,2014-12-16 08:54:42,"@floydpink thanks.
",tangplin,2014-12-16 08:54:27
114,2014-12-14 12:21:19,"I've faced with codesign errors while trying build with Carthage 0.3 like this:

<S_CODE_TOKEN>

So, this PR will solve them.
",max-potapov,2014-12-16 10:00:11
114,2014-12-16 10:00:19,"@max-potapov thanks.
",tangplin,2014-12-16 10:00:11
113,2014-12-12 15:54:27,,justinmakaila,2014-12-13 03:16:32
113,2014-12-13 03:16:43,"Thanks.
",tangplin,2014-12-13 03:16:32
112,2014-12-11 10:54:13,"How i can solve this error message?

`Use of unresolved identifier 'dataFromNetworking'`

my code

`let json = JSON(jsonResult: dataFromNetworking)`
",datomnurdin,2014-12-18 03:59:34
112,2014-12-16 05:35:32,"there is no json(jsonResult:) methnod.
",czzhengkw,2014-12-18 03:59:34
111,2014-12-10 15:34:50,"We don't need to convert NSArray to [AnyObject] and NSDictionary to [String : AnyObject] to get a type
",avorobjov,2014-12-11 06:20:26
111,2014-12-11 06:20:26,"`[AnyObject]` is not `NSArray`, `[String : AnyObject]` is not NSDictionary.
In the `JSON`,  the NSDictionary's key must be `String`.
",tangplin,2014-12-11 06:20:26
110,2014-12-10 11:58:33,"for example, delete one item, append one item. the setter can change the whole array or dictionary. but how can i just manipulate an array or dictionary?
",phu4ku,2015-04-16 09:49:37
110,2015-01-29 06:10:43,"Having the exact same issue. 
",ArtSabintsev,2015-04-16 09:49:37
110,2015-01-29 06:25:59,"Figured it out! On your returned JSON object, just call the optional vars `.array` or `.dictionary`. 

If your object is an array and you rightfully call `.array`, then you can use all the `Array` methods, like `append`. If it happens to not be an array, `nil` is returned, as it is an optional var.

**Array Example**

<S_CODE_TOKEN>

**Dictionary Example**

<S_CODE_TOKEN>
",ArtSabintsev,2015-04-16 09:49:37
110,2015-04-13 09:10:30,"@ArtSabintsev but array is immutable, you cannot append to it
",ArtworkAD,2015-04-16 09:49:37
110,2015-04-13 18:49:53,"Then you can make a new immutable array and populate it with the data in the immutable array.
",ArtSabintsev,2015-04-16 09:49:37
109,2014-12-10 02:02:33,"<S_CODE_TOKEN>
",yuyedaidao,2014-12-13 09:04:13
109,2014-12-10 02:47:49,"That's invalid JSON.  Keys must be quoted, e.g. `{""a"":2,""b"":3}`
",brigand,2014-12-13 09:04:13
109,2014-12-13 09:04:13,"@brigand Thanks.
",tangplin,2014-12-13 09:04:13
108,2014-12-09 22:09:04,"Hi Guys, i'm kind of new to Swift and iOS this is a very handy library and i think it would be good to add it to cocoapods.
",apaganobeleno,2014-12-13 08:45:01
108,2014-12-09 22:10:18,"sorry, seems to be integrated, my fault.
",apaganobeleno,2014-12-13 08:45:01
107,2014-12-09 08:20:52,"code is

<S_CODE_TOKEN>

error is:

>  swiftyjson 'JSON' is not convertible to '(String, JSON)'

in line `for (index:String,subJson:JSON) in arr`
",banxi1988,2014-12-13 09:18:29
107,2014-12-13 09:18:29,"Replace your cod to:

<S_CODE_TOKEN>

In your code the `arr` is `Array` not `JSON`
",tangplin,2014-12-13 09:18:29
106,2014-12-08 19:15:18,,briankracoff,2014-12-11 06:18:35
106,2014-12-08 19:19:17,":+1: good catch
",venables,2014-12-11 06:18:35
106,2014-12-11 06:18:38,"thanks!
",tangplin,2014-12-11 06:18:35
105,2014-12-08 17:06:09,"Adding `github ""lingoer/SwiftyJSON""` to my project's Cartfile and running `carthage update` produces the following error message:

`No available version for github ""lingoer/SwiftyJSON"" satisfies the requirement:`

Would it be possible to get support for Carthage?
",steffendsommer,2014-12-13 08:51:09
105,2014-12-13 08:51:09,"https://github.com/SwiftyJSON/SwiftyJSON/commit/58fbd6ddcfa79eacfbd140cff451284b600bf7c5
",tangplin,2014-12-13 08:51:09
104,2014-12-02 18:03:42,"This PR adds support for Carthage, including [shared schemes](https://github.com/Carthage/Carthage#share-your-xcode-schemes) and code signing fixes. This also bumps the deployment target to `8.0`, allowing this to be distributed in the app store.
",justinmakaila,2014-12-11 06:17:34
103,2014-12-02 01:22:40,"I agree with https://github.com/SwiftyJSON/SwiftyJSON/pull/87 and https://github.com/SwiftyJSON/SwiftyJSON/pull/85 that SwiftyJSON lacks of date support which nearly everyone using JSON APIs will need at some point and that SwiftyJSON should support dates somehow.

But I also understand @tangplin's answer that there are too many different formats for dates in JSON APIs. So what about the idea to not deeply integrate dates into SwiftyJSON but at least add a helper method that makes getting dates from JSON objects much easier.

I have added an example implementation of what this could look like for dates formatted in String type. The user of SwiftyJSON would still need to provide the correct date formatter for the API he/she is using which solves the problem with too many formats (at least for String formats, but one could of course add support for Number formats as well).
",Dschee,2014-12-11 06:16:43
103,2014-12-11 06:16:43,"try

<S_CODE_TOKEN>
",tangplin,2014-12-11 06:16:43
103,2017-01-04 03:08:44,"Given epoch time, why not get and set .date as a Double?

I'm using Date, but you could do the same thing with NSDate
https://gist.github.com/chrisiona/af2200bc8790a46d7c577f6e3680587b",chrisiona,2014-12-11 06:16:43
102,2014-11-30 19:11:25,"SwiftyJSON makes table scrolling super lag in UITableView. I've already tested and I am 100% sure that the problem is caused by SwiftyJSON. 

var profilePhoto = json[WebServiceReturnKey.PhotoUser.rawValue][WebServiceReturnKey.ProfileURL.rawValue].stringValue //line 1
self.setProfilePhoto(profilePhoto) //line 2
self.setProfilePhoto("""") // line 3

Line 3 is just for testing purpose. If I comment line 1 and line 2, it is working fine, but if I comment line 3 only or line 2 only, there is still a lot of lag. How can I solve this problem?

The method setProfilePhoto() is pretty simple, using SDWebImage to download and show the image,here it is:
func setProfilePhoto(photo : String?){
        if let photoURL = photo {
            if countElements(photoURL) > 0 {
                profileImageView.sd_setImageWithURL(NSURL(string: photoURL), placeholderImage: UIImage.defaultProfilePhoto())
            }
            else{
                profileImageView.image = UIImage.defaultProfilePhoto()
            }
        }
        else{
            profileImageView.image = UIImage.defaultProfilePhoto()
        }
    }

And in this line: var profilePhoto = json[WebServiceReturnKey.PhotoUser.rawValue], the value of profilePhoto is always an empty string, that's why calling self.setProfilePhoto(profilePhoto) equal to calling self.setProfilePhoto(""""), but the problem here is getting this value somehow takes a lot of sources.

Thank you
",tungvoduc,2015-10-14 08:04:09
102,2014-12-05 08:15:58,"1. Are you using `setProfilePhoto` method in `TableViewCell` ?
2. It seems `sd_setImageWithURL` loads image from cache in disk (or maybe i am wrong). Disk operations are always heavy for processor. Why are you not use `setImageWithURL` ?
",Elshad,2015-10-14 08:04:09
102,2014-12-06 16:36:42,"1. Yes, its a method of custom UITableViewCell
2. profilePhoto is always empty string so sd_setImageWithURL is not called. I don't think there should be any problem with that method.
",tungvoduc,2015-10-14 08:04:09
102,2014-12-06 16:38:59,"As I said earlier, even line 1 alone can cause the lag (line 2 and line 3 are both commented)
",tungvoduc,2015-10-14 08:04:09
102,2014-12-11 06:26:08,"Please test `WebServiceReturnKey.PhotoUser.rawValue`'s speed and cost.
",tangplin,2015-10-14 08:04:09
102,2014-12-14 15:39:11,"WebServiceReturnKey.PhotoUser.rawValue is just a enum value so it shouldn't be the problem. But I already tested it anyway. 
var profilePhoto = json[WebServiceReturnKey.PhotoUser.rawValue] and var profilePhoto = json[""PhotoUser""] have the same performance problem. I think it is a serious problem, you should fix it as soon as you can.
",tungvoduc,2015-10-14 08:04:09
102,2014-12-14 16:08:32,"I've checked with Instruments: JSON.subcript.getter is taking a lot of running time, the second most. I came up with a solution that is getting value in different thread and then update UI in main thread. It works.

<S_CODE_TOKEN>
",tungvoduc,2015-10-14 08:04:09
101,2014-11-25 08:38:19,"<S_CODE_TOKEN>

this does not work. Why?
",ArtworkAD,2014-12-11 06:22:48
101,2014-11-26 05:59:09,"try

<S_CODE_TOKEN>
",tangplin,2014-12-11 06:22:48
101,2014-12-06 17:25:04,"There is a problem after parsing rawString back to json object though:

let json = JSON([""user"":""name""])
println(json[""user""]) --> name
let jsonStr = json.rawString()!
let json2 = JSON(jsonStr)
println(json2[""user""]) --> null

What may I have done wrong? Thanks!!
",frankykl,2014-12-11 06:22:48
101,2014-12-09 15:00:50,"Same issue here.

<S_CODE_TOKEN>

It works
",darktiny,2014-12-11 06:22:48
101,2014-12-11 06:22:48,"Try

<S_CODE_TOKEN>
",tangplin,2014-12-11 06:22:48
101,2015-09-14 06:14:53,"I got the same issue with version 1.3.1
var obj = JSON(""..."")
var str = obj.rawString()
var anotherObj = JSON(str)
I cannot fetch any property of ""anotherObj"". Yes, rawData() can work here, but I really need store the string value, why it cannot unserialize the rawString
",yungfu,2014-12-11 06:22:48
101,2016-01-08 19:25:22,"I had the same issue. I got it working by using JSON.parse(myString) instead
",peterjuras,2014-12-11 06:22:48
101,2016-01-15 10:24:55,"How to remove white spaces and newlines with rawString()?
",korgx9,2014-12-11 06:22:48
101,2016-03-27 02:32:31,"I came across the same issue and wasted a lot of time here. The solution provided by @peterjuras finally solve my problem. This is definitely an awful bug. 
",zizhengwu,2014-12-11 06:22:48
101,2016-08-17 07:26:01,"I've had the same issue, have been doubting myself for days. Thank you @peterjuras, you're solution worked.
",tommc1985,2014-12-11 06:22:48
100,2014-11-24 11:17:29,"This is a podspec to be used with CocoaPods 0.36.0 (Currently in alpha)
Please see CocoaPods/CocoaPods#2835 for more info. It was validated using the linter check (pod spec lint).

Gemfile for testing CocoaPods 0.36.0.pre

<S_CODE_TOKEN>

Thanks @mblsha for the base podspec
",ValCapri,2014-11-24 11:56:45
100,2014-11-24 11:57:33,"@ValCapri thanks.
",tangplin,2014-11-24 11:56:45
100,2014-11-24 18:11:16,"Can you publish it on CocoaPods using pod trunk?
As that you'll be the owner of the library.
In the meantime, it is possible now to use this

<S_CODE_TOKEN>
",ValCapri,2014-11-24 11:56:45
99,2014-11-22 16:35:13,"I'm currently trying to migrate my project to CocoaPods using the basic framework described here: https://github.com/ashfurrow/Moya
",mblsha,2014-11-24 11:59:34
99,2014-11-23 16:58:27,"You should rebase your work on latest version of SwiftyJSON because your fork is ""This branch is 2 commits ahead, 102 commits behind SwiftyJSON:master"", maybe am I wrong. I am also trying CocoaPods 0.36.0.pre
",ValCapri,2014-11-24 11:59:34
99,2014-11-23 18:35:21,"Whoops, I'm making lots of silly mistakes when working late, sorry. Yep, writing podspecs for Swift libraries is surprisingly easy now with CocoaPods 0.36.0.pre.
",mblsha,2014-11-24 11:59:34
99,2014-11-23 18:43:00,"<S_CODE_TOKEN>

Your podspec should be more like this. I think you forgot to run pod spec lint against CocoaPods 0.36.0.pre (You forgot the authors, .git at end of url, it is linked to your own fork not SwiftyJSON).
",ValCapri,2014-11-24 11:59:34
99,2014-11-24 09:43:19,"@mblsha thanks. The `pr` is base on 1.0.0, but It is 2.1.1 now.
@ValCapri could you create a pull request?
",tangplin,2014-11-24 11:59:34
99,2014-11-24 11:53:07,"@tangplin : The PR is created. If you want, you could accept this PR and after mine. Like this every one would be ""credited"" for what they done.
",ValCapri,2014-11-24 11:59:34
99,2014-11-24 11:59:34,"Merged in  #100
",tangplin,2014-11-24 11:59:34
98,2014-11-20 15:21:28,"Maps Json Data Objects into Swift Data Objects easy as just passing the JsonValue Object and let the Method know the Class it Expects to shoot back at you.

It also includes a TestMapper.json file to test the mapper with, well... mapping with a XCTest File.

Please let me know if this is actually helpful to you. 
",Drogenix,2014-12-11 06:14:11
98,2014-11-24 09:25:29,"@Drogenix thanks. The `KVC` is not a good idea to map JSON to NSObject. [Mantle](https://github.com/Mantle/Mantle) for your reference
",tangplin,2014-12-11 06:14:11
98,2014-11-24 12:30:03,"aww man haha sorry didnt do full extent of my research. Thanks I will be reading Mantle to get more of the idea.

But mantle explains issues like Core Data and regular NSObject but not KVC(well it does but for NSCoder and NSDecoder part of his code I believe)  why do you think is going to be a bad idea down the road if Obj c is part of Swift Language as well.(Is just for curiosity)

PS: Ill see what other kind of contribution I might be able to do for the future :P
",Drogenix,2014-12-11 06:14:11
97,2014-11-19 18:53:36,"I got a class that is a JsonMapper that works in par with your Swifty Json JsonValue object. And is generic enough that can map any Json object into a Swift Object like DapperOrm of Stackoverflow guys with C#.

It has been tested on my new Swift app and was planning on uploading just my Code that does the mapping but since it works great with your JsonValue Object I thought contributing on this Project made more sense and hence make it more robust. 

Note: I apologize in advance if you already made this feature into your source code, I was just not good at finding it then. 
",Drogenix,2014-11-20 15:22:47
97,2014-11-20 15:22:47,"Created a Pull Request :) 
",Drogenix,2014-11-20 15:22:47
96,2014-11-14 11:45:49,"dyld: Library not loaded: @rpath/libswiftCore.dylib
  Referenced from: /Users/venkman/Library/Developer/Xcode/DerivedData/LearnSwiftInTerminal-csxlurlknvbeslafmxmldcyamkcg/Build/Products/Debug/SwiftyJSON.framework/Versions/A/SwiftyJSON
  Reason: image not found
Program ended with exit code: 9

help
",jonnywang,2014-12-11 06:26:40
96,2014-11-23 13:21:04,"the same error occurs when debug the programme in real ios device.  
dyld: Library not loaded: @rpath/SwiftyJSON.framework/SwiftyJSON
  Referenced from: /private/var/mobile/Containers/Bundle/Application/3B9AD547-27D4-4B68-A9EC-9B9F6A23B4BA/BabyCare.app/BabyCare
  Reason: image not found
",lubaogui,2014-12-11 06:26:40
96,2014-11-23 13:31:47,"i solved this problem just by removing the SwiftyJson.xcodeproj from  the project,  then drag swiftyjson.swift file into the project.  Maybe there's some problem in the swiftyjson.framework building.
",lubaogui,2014-12-11 06:26:40
96,2014-11-23 13:46:18,"i solved it the same way, by just adding to my project the two source code files SwiftyJson and something else I can't remember. But that way I didnt have to deal with 3rd libraries type issues. I've rarely seen easy ways to add 3rd libraries
",Drogenix,2014-12-11 06:26:40
96,2014-11-24 12:10:02,"@jonnywang
Maybe the #100 is a better way to solve the issue.
",tangplin,2014-12-11 06:26:40
95,2014-11-12 17:27:25,"+++++++++[{""name"":""0.5853143482679704helllo"",""age"":7574}]+++++++name=,age=0
+++++++++[{""name"":""0.03253490009648474helllo"",""age"":7575}]+++++++name=,age=0
+++++++++[{""name"":""0.6504947388394314helllo"",""age"":7576}]+++++++name=,age=0
+++++++++[{""name"":""0.942964777288159helllo"",""age"":7577}]+++++++name=,age=0
+++++++++[{""name"":""0.9885429636528199helllo"",""age"":7578}]+++++++name=,age=0
+++++++++[{""name"":""0.09247530698509399helllo"",""age"":7579}]+++++++name=,age=0
+++++++++[{""name"":""0.775714314534453helllo"",""age"":7580}]++++
",charlesluo2014,2014-11-13 05:35:19
94,2014-11-11 21:12:01,"By naming convention, this case is typically named ""Unknown"".
",franklsf95,2014-11-12 10:33:42
94,2014-11-12 10:33:59,"@franklsf95 thanks.
",tangplin,2014-11-12 10:33:42
93,2014-11-10 23:41:09,"I have a use case where I have an array of dictionaries and I need them as a json object:

<S_CODE_TOKEN>

The first print statement gives me

<S_CODE_TOKEN>

the second 

<S_CODE_TOKEN>

but I would expect it to return the first element in the json array. What I am doing wrong?
",ArtworkAD,2014-11-11 07:43:02
93,2014-11-11 07:43:02,"Solution is so simple:

<S_CODE_TOKEN>
",ArtworkAD,2014-11-11 07:43:02
92,2014-11-09 05:14:49,"Issues with recommending Alamofire-SwiftyJSON:
-  Not updated for Xcode 6.1.
-  No longer necessary as a shim to integrate Alamofire and SwiftyJSON.
- Adds another dependency that needs to be manually included and managed.

I feel that recommending a third, separate dependency is confusing and unnecessary to new users.  It's only one line to have SwiftyJSON wrap the JSON returned by Alamofire.
",JonathanPorta,2014-12-11 06:13:53
92,2014-11-12 10:37:35,"@JonathanPorta you're right! But the pr should handle the error from Alamofire. Can you please add some error handling description?
",tangplin,2014-12-11 06:13:53
92,2014-11-14 01:22:23,"@tangplin I added a simple example where the error object is checked first. I am not sure exactly if this is the best way to check the error. I am still new to Swift. :)
",JonathanPorta,2014-12-11 06:13:53
91,2014-11-06 21:15:47,"- Added OSX target.
- Removed redundant UIKit import from tests so they're OSX & iOS compatible.
- 100% tests passing on iOS device, emulator and OSX.
",carloslozano,2014-11-07 10:11:26
91,2014-11-07 10:11:31,"@carloslozano  thanks.
",tangplin,2014-11-07 10:11:26
90,2014-10-31 17:43:48,"This is some good stuff! For the life of me ... I cannot see where I can grab the length of an array??
",wellsayd,2014-11-24 12:05:55
90,2014-11-07 19:26:56,"Me neither
",crhuber,2014-11-24 12:05:55
90,2014-11-10 21:17:09,"@wellsayd @crhuber Same way you do it on Swift arrays.
",mattyohe,2014-11-24 12:05:55
90,2014-11-10 21:34:53,".count does not work ... or at least in what i tried to do ...
",wellsayd,2014-11-24 12:05:55
90,2014-11-11 02:15:37,"@wellsayd Have some code? .count() works.
",mattyohe,2014-11-24 12:05:55
90,2014-11-24 12:05:55,"Try

<S_CODE_TOKEN>
",tangplin,2014-11-24 12:05:55
89,2014-10-29 23:57:09,"I've a compilation error relative SwiftyJSON, I've post my question on [StackOverflow](http://stackoverflow.com/questions/26642560/swift-function-parameters). Please have a look, thanks
",xmkevinchen,2014-11-24 12:06:32
88,2014-10-29 13:34:55,"What I'm trying to do:

<S_CODE_TOKEN>

It gives me the following error on the second line: "" '@lvalue $T7' is not identical to 'JSON' ""

What am I doing wrong?
",dccarmo,2014-11-24 12:06:49
88,2014-10-30 02:21:11,"Please double check you code, replace `let` by `var`. If it's not work, please let me know.
",tangplin,2014-11-24 12:06:49
87,2014-10-28 19:38:58,,muukii,2014-10-29 01:28:46
87,2014-10-29 01:28:46,"@muukii0803 thanks.
Like https://github.com/SwiftyJSON/SwiftyJSON/pull/85  There are so many possibilities in Date format, `SwiftyJSON` can't solve all the possibilities. `Date format` should be implemented by themselves.
",tangplin,2014-10-29 01:28:46
86,2014-10-25 21:27:50,"Unfortunately my current project uses `AFHTTPSessionManager in AFNetworking2`, so I can't use Alamofire. Does SwiftyJSON still work with AFHTTPSessionManager? If so, how can I call JSON from `AFHTTPSessionManager`? I don't see `NSData` exposed in success block.

I have the following block of code, how do I convert `responseObject`, which can be downcasted to `NSDictionary`, to a JSON object as defined in `SwiftyJSON`? The code below doesn't work.

<S_CODE_TOKEN>
",netwire88,2014-11-24 12:00:45
86,2014-10-26 15:06:24,"If the `responseObject` is `NSDictionary` or `NSArray`

<S_CODE_TOKEN>

If the `responseObject` is `NSData`

<S_CODE_TOKEN>
",tangplin,2014-11-24 12:00:45
85,2014-10-25 06:59:24,"Add parse json date formatter string
",ShineWu,2014-10-26 15:16:34
85,2014-10-26 15:16:34,"@ShineWu thanks.
There are so many possibilities in Date format, `SwiftyJSON` can't solve all the possibilities. `Date format` should be implemented by themselves.
",tangplin,2014-10-26 15:16:34
84,2014-10-24 20:55:03,"Just a little more editing. Also, wondering about references to .string and whether they should read as .stringValue
",johngoren,2014-10-25 00:03:16
84,2014-10-25 00:03:47,"@johngoren thank you very much.
",tangplin,2014-10-25 00:03:16
83,2014-10-22 19:43:49,"I did an editorial polish on some of the language, since I love this library.
",johngoren,2014-10-23 01:33:13
83,2014-10-23 01:33:16,"@johngoren thank you very much.
",tangplin,2014-10-23 01:33:13
82,2014-10-22 12:54:40,"Hii,

Ik have a question :) what do i wrong here? i get the error:

""use of unresolved identifier dataFromNetworking"" 

This is my code

<S_CODE_TOKEN>

What am i doing wrong?
",NielsvanDijk,2014-10-22 13:53:33
82,2014-10-22 13:53:33,"Sorry @NielsvanDijk your wrong. The `JSON` in Alamofire as `AnyObject` not SwiftJSON's `JSON`.[Alamofire-SwiftyJSON](https://github.com/SwiftyJSON/Alamofire-SwiftyJSON) may help you.
",tangplin,2014-10-22 13:53:33
81,2014-10-22 12:43:21,"I think this could be related to other issues reported before, but this has been frustrating me since yesterday and it didn't solve, even after update to the latest version.

I don't understand why it is firing inside a specific point, and I have also other lines where I do the same and they are not firing anything.

<S_CODE_TOKEN>

![captura de pantalla 2014-10-22 a las 9 42 06](https://cloud.githubusercontent.com/assets/1884855/4736077/df1a1956-59e8-11e4-97fa-d4ed4a5577bd.png)
",kiwox,2014-10-22 13:56:10
81,2014-10-22 13:56:10,"Use 2.0.0 in XCode6.0, the 2.1.0 only support Xcode6.1
https://github.com/SwiftyJSON/SwiftyJSON/issues/76
https://github.com/SwiftyJSON/SwiftyJSON/issues/80
",tangplin,2014-10-22 13:56:10
81,2014-10-22 14:45:57,"I'm using Xcode 6.1 and updated to 2.1.0, but still getting the same error! 
Is something I missing? 
",kiwox,2014-10-22 13:56:10
81,2014-10-22 15:10:29,"This could be a Swift or Xcode error.

If I put the following code, it fires an error:
let newCoords = CLLocationCoordinate2DMake(data[""result""][""geometry""][""location""][""lat""].number,
                                                                    data[""result""][""geometry""][""location""][""lng""].number)

But, if I set values inside constants, it works fine:

<S_CODE_TOKEN>

It's drive my crazy!
",kiwox,2014-10-22 13:56:10
81,2014-10-22 15:18:24,"The Xcode's error is not friendly. The subscript in JSON return the JSON type which can not be used in `CLLocationCoordinate2DMake`.

Happy to know that you have solved your problem. :8ball: 
",tangplin,2014-10-22 13:56:10
81,2014-12-15 02:54:02,"I have a similar issue. 

> struct Item {
>     let id: Int?
> }
> 
> func jsonToItem(j: JSON) -> Item {
>     var i = Item(id: j[""id""].int)
>     return i
> }

If I assign it to a constant such as let x = j[""id""] or let x = j[""id""].int, there would be no error alert. Even though I know it can be resolved like above, I still want to learn why I can not just throw j[""id""].int directly as a parameter. Is there anything I missed?

Thanks a lot in advance.
",liweiz,2014-10-22 13:56:10
81,2015-02-05 18:16:05,"I'm seeing the same issue. 
I'm using Xcode 6.2 (latest beta) with SwiftyJSON 2.1.3 (I think - how do I tell? It was the latest as of a few days ago, anyway).

I would put it down to an Xcode beta problem if it wasn't for the above reports. Is this an ongoing issue?
",philsquared,2014-10-22 13:56:10
81,2015-03-27 11:09:49,"I found this issue. It's error in the json[""key""].string which call in the switch statement.

<S_CODE_TOKEN>

Not sure if it's the compiler bug.
Xcode 6.2
",pitiphong-p,2014-10-22 13:56:10
80,2014-10-22 02:01:58,"Just clone back. But it seems to not conform any literal convertible protocols?

![screen shot 2014-10-22 at 9 57 53 am](https://cloud.githubusercontent.com/assets/1115510/4729847/e9b71b8e-598e-11e4-96f6-9410147ca900.png)
",scottphc,2014-10-22 05:59:08
80,2014-10-22 05:59:08,"Use 2.0.0 in XCode6.0, the 2.1.0 only support Xcode6.1
https://github.com/SwiftyJSON/SwiftyJSON/issues/76
",tangplin,2014-10-22 05:59:08
79,2014-10-21 21:48:10,"Hey there,

I just updated Xcode for iOS 8.1 and this whole library just went BOOM. Just FYI.
",sean-hill,2014-10-22 05:59:36
79,2014-10-21 21:49:58,"Nevermind! I just pulled the latest code and magic happened :) Thanks for updating!
",sean-hill,2014-10-22 05:59:36
79,2014-10-22 05:59:36,"https://github.com/SwiftyJSON/SwiftyJSON/issues/76
",tangplin,2014-10-22 05:59:36
78,2014-10-21 20:08:47,,justinmakaila,2014-10-21 20:11:18
78,2014-10-21 20:11:18,"I realized my head was detached on my submodule. My fault. 
",justinmakaila,2014-10-21 20:11:18
77,2014-10-21 14:22:52,"This is a hugely valuable project you created!

One huge issue I had in my last job was JSON nulls being returned by the web service. For instance, if someone had forgotten to set inventory, I'd get a null instead of zero. So I hacked up a category on NSNull so that I didn't have to test every single value before referencing it. The idea was that in most code, a zero would be just as useful as a null.

You can see others agree by the number of upvotes this answer got on SO: http://stackoverflow.com/a/16610117/1633251

What I am requesting is that you support an option that would result in no nulls being returned, with empty dictionaries, empty arrays, zero length strings, etc being returned instead.

If you want, I'll do the code and submit a pull request, but just tell me exactly how you want the option to work (and the actual string name if you care).
",dhoerl,2015-10-14 08:03:42
77,2014-10-22 05:55:22,"@dhoerl thank you very much. The [NSNull  Category](http://stackoverflow.com/a/16610117/1633251) which you post on stackoverflow in Objective-C is a masterpiece solution.
There are few way in `SwiftyJSON` to get `NSNull` object are `var null: NSNull?` and `var object: AnyObject`(better not use), other methods and properties that return the swift type in `SwfityJSON` are safe and reliable. such as: 

<S_CODE_TOKEN>

It's seem like [NSNull  Category](http://stackoverflow.com/a/16610117/1633251).
If your have any idea, please let me know or submit a pull request. 
Thanks.
",tangplin,2015-10-14 08:03:42
77,2015-01-30 15:58:25,"Ideally if the value is null, the key should be removed.
in turn when you query the collection for this key it will return nil
",antoinerabanes,2015-10-14 08:03:42
77,2015-01-30 17:00:40,"I completely disagree on deleting the key. A 'null' JSON value is a valid return, and has meaning. I've experience with actual e-commerce JSON replies containing:

inventory : null // means it hasn't been entered yet
inventory: 50 // in stock at that level
inventory: -3 // yeah, got this! - the stupid e-commerce site sold 3 items before it realized it didn't have them in stock, so someone is on the phone now trying to calm a customer down (this really happened and crashed my app - I had coded inventory as a unsigned integer!)
",dhoerl,2015-10-14 08:03:42
77,2015-01-30 19:04:26,"Thats interesting insight and a good example of the complexity of integrating an API that returns null/NSNull. 
However I would expect an integer back from the API and zero is a valid value to represent the stock when null is not because it is a different type and does not represent a number..

Sent from my iPhone

> On 30 Jan 2015, at 17:00, David Hoerl notifications@github.com wrote:
> 
> I completely disagree on deleting the key. A 'null' JSON value is a valid return, and has meaning. I've experience with actual e-commerce JSON returns containing such:
> 
> inventory : null // means it hasn't been entered yet
> inventory: 50 // in stock at that level
> inventory: -3 // yeah, got this - the stupid e-commerce site sold 3 items before it realized it didn't have them in stock, so someone is on the phone now trying to calm a client down (yeah, this happened and crashed my app!)
> 
> —
> Reply to this email directly or view it on GitHub.
",antoinerabanes,2015-10-14 08:03:42
77,2015-01-30 19:40:32,"All I can say is my comment reflects Apple's current thinking. Swift Optionals either have a value or don't. The value can be 0 or not (if its say an Int). Each of these three states (as stated in my earlier example) means something different. A framework like this one cannot afford (IMHO) to gloss over this and assume all users want ""no value"" to be mapped into ""0"" (or similar).

That said, after fussing with nil for weeks, I threw in the towel and created the NSNull category above, which gives you exactly what you want - two cases. Even so, I prefer this framework to do the proper thing, and let the user decide to map 3 states to 2 if desired. 
",dhoerl,2015-10-14 08:03:42
77,2015-02-04 10:52:05,"@dhoerl You could something like this, without any change to JSON:

<S_CODE_TOKEN>

It'd be more explicit, which can be good.
",Nelyus,2015-10-14 08:03:42
76,2014-10-20 21:08:59,"Many protocols implementaation are missing since Xcode 6.1
",nicolas-besnard,2014-10-21 09:38:14
76,2014-10-21 04:01:48,"Never delete any protocol's  implementation since 2.0.0 to 2.1.0
@nicolas-besnard which protocol's  implementation is missing?
",tangplin,2014-10-21 09:38:14
76,2014-10-21 09:38:14,"Errors are gone this morning. Strange  ...
",nicolas-besnard,2014-10-21 09:38:14
75,2014-10-19 17:17:33,"Hi there,

I'm importing SwiftyJSON.swift into my project, but the compiler is flagging up 11 errors - mostly 'Type 'JSON' does not conform to protocol'' for the various LiteralConvertible protocols, and RawRepresentable.

I'm also getting a couple of errors on the line `public init?(rawValue: AnyObject) {` - 'Expected '(' for initializer parameters' and 'Expected declaration'.
",bennewell,2014-10-20 01:46:22
75,2014-10-19 17:22:42,"Do you use Xcode 6.1?
",sperochon,2014-10-20 01:46:22
75,2014-10-19 20:44:25,"Nope - Xcode 6.0.1
",bennewell,2014-10-20 01:46:22
75,2014-10-20 01:46:22,"Xcode 6.0.1 try 2.0.0, 2.1.0 only support Xcode 6.1
",tangplin,2014-10-20 01:46:22
75,2014-10-20 08:11:17,"Thanks!
",bennewell,2014-10-20 01:46:22
75,2016-10-05 13:17:55,"I am facing the same issue with xCode 7.3 and Installing SwiftyJSON (3.1.0). Below is the attached screenshot for the same. 
![screen shot 2016-10-05 at 6 27 01 pm](https://cloud.githubusercontent.com/assets/21188912/19114553/1e2fea50-8b2c-11e6-9887-d8efd1db5eb8.png)
",aadilimperoit,2014-10-20 01:46:22
75,2016-10-05 14:27:01,"@aadilimperoit Did you see in the read me that the requirement for 3.1 is for Xcode 8? If you still must use 7.3, you need an older version of SwiftyJSON.
",DavidLari,2014-10-20 01:46:22
75,2016-10-19 01:17:38,"@DavidLari Hi, I also have the same issue. Do you have any idea what version of SwiftyJSON would work with xcode 7.3?
",WilsonCP,2014-10-20 01:46:22
75,2016-10-19 14:55:56,"Looks like I have 2.3.3 in my 7.3 project.
",DavidLari,2014-10-20 01:46:22
75,2016-10-21 07:26:35,"You can use version `2.4.0` for support prior to Swift3.
",zhigang1992,2014-10-20 01:46:22
74,2014-10-17 04:58:28,"Added parsing of string to get optional number in JSON.number. This is to match the current non optional JSON.numberValue
",yonaskolb,2014-10-17 05:10:53
74,2014-10-17 05:10:53,"`.number` return the optional NSNumber, it should accurate return the NSNumber object not fake NSNumber object which converted from number String. If you like to ignore the difference between number String and NSNumber, just call `.numberValue`.
",tangplin,2014-10-17 05:10:53
73,2014-10-15 17:58:00,"Why were the constants marked with an exclamation point? public let variables should already be defined.
",MaddTheSane,2014-10-16 01:35:44
73,2014-10-16 01:36:02,"@MaddTheSane thanks
",tangplin,2014-10-16 01:35:44
72,2014-10-15 09:46:40,"Added a method for generation raw JSON. Did not found any method for that.
",lesmuc,2014-10-15 15:54:33
72,2014-10-15 15:54:32,"@lesmuc Thanks

But there are some bugs in the pr like: should not ignore the NSNull, should call the isBool...
The most important thing is it's too slow to loop all elements in the self.object. 
I think it should convert the self.object to NSData by using NSJSONSerialization.dataWithJSONObject then convert the data to string, It's faster and more simple.
",tangplin,2014-10-15 15:54:33
72,2014-10-15 16:33:55,"Add methods to get raw NSData and String. Fix #70 5ef814e43b0c4400ce603ba049fc3764baa97620
",tangplin,2014-10-15 15:54:33
71,2014-10-11 02:10:26,"Test failures on 32bit. When using the 4S simulator I get a could of test failures including this line:
        `XCTAssertEqual(JSON(2147483648).description,""2147483648"")`

Not sure that this can be resolved without forcing it to use Int64's but that will require annoying casts in other places.
",josephlord,2014-10-13 04:37:23
70,2014-10-10 19:56:43,"Hi,

I am trying to get the string representation of a JSON object.

Given this example

<S_CODE_TOKEN>

I expect the _println_ output to be `[""I"":""am"", ""a"":""json""]` but it is nil. I have tried with other input data as well, but with the same result every time. the .string method is the same story.

Is the .string and .stringValue method broken, or am I using them wrong?

This is on the xcode6.1 branch by the way.
",ChrisBuchholz,2014-10-15 08:34:06
70,2014-10-11 00:02:04,"You're using them wrong. What you want is `.description` and `.debugDescription`
",k06a,2014-10-15 08:34:06
70,2014-10-11 06:05:42,"I'll give their implementation a check later, but the reason I didn't use them initially is because their value, when printed, seems to be ""prettified"" and I need valid json.

But their might be a difference in their value and their printed value, so I'll give their implementation a check later when I'm at my computer!
",ChrisBuchholz,2014-10-15 08:34:06
70,2014-10-11 18:16:03,"@k06a: `.description` returns `[I: am, a: json]` and `.debugDescription` returns `[""I"": am, ""a"": json]`, neither of which is valid JSON as far as I know.
",ChrisBuchholz,2014-10-15 08:34:06
70,2014-10-11 18:47:03,"If you need to serialize json object to data it can be achieved like this: https://github.com/SwiftyJSON/SwiftyJSON/issues/62
",k06a,2014-10-15 08:34:06
70,2014-10-15 13:47:35,"Looks like https://github.com/SwiftyJSON/SwiftyJSON/pull/72 might take care of this?
",powerje,2014-10-15 08:34:06
70,2014-10-17 21:16:04,"@k06a: Indeed that is one way to reach the goal.

@powerje: Yes, that looks like a great way to handle this need. Hoping it gets merged into master at some point!
",ChrisBuchholz,2014-10-15 08:34:06
69,2014-10-09 21:44:30,"I have this this code: 

<S_CODE_TOKEN>

When I print both json these are null.
",felipevolpone,2014-10-10 17:35:36
69,2014-10-10 02:01:26,"The `answers` is a `.Null JSON`,  set a value like `Dictionary` to `.Null JSON` can not change it to `Dictionary JSON`.

Initialized the `JSON` with a empty `Dictionary` may solve your problem

<S_CODE_TOKEN>
",tangplin,2014-10-10 17:35:36
69,2014-10-10 17:35:34,"Thank you! 
",felipevolpone,2014-10-10 17:35:36
68,2014-10-09 19:54:40,"When using SwiftyJSON in an app i'm playing with, SourceKit was freaking out about self.object.count for some reason. Modifying the code to just use `self.arrayValue.count` and `self.dictionaryValue.count` instead seems to stop it freaking out. It's more lines of code but it makes SourceKit happy so it's worth it.
",Noobish1,2014-10-10 01:45:01
68,2014-10-10 02:47:02,"@Noobish1  Thanks
",tangplin,2014-10-10 01:45:01
67,2014-10-09 18:30:35,"If you add SwiftyJSON by dragging in the SwiftyJSON.xcodeproj then linking the framework and add a class like the following:

<S_CODE_TOKEN>

You'll get a segmentation fault
",Noobish1,2015-10-14 08:02:34
67,2014-10-13 01:10:07,"I'm seeing this as well. I have two models in two separate files that are referencing the `JSON` type. If I try to add a third model class in a third file, I run into this compiler crash.  But if I lump that third class into one of those first two files, everything's fine.
",drhr,2015-10-14 08:02:34
67,2014-10-13 04:09:33,"Now when I try this on a brand new project, any reference to `JSON` causes the seg fault (in 6.0.1 and 6.1 beta 1 and beta 2).
",drhr,2015-10-14 08:02:34
67,2014-10-13 04:12:32,"I'd suggest just importing SwiftyJSON.swift for now, that seemed work fine for me.
",Noobish1,2015-10-14 08:02:34
67,2014-10-13 04:41:16,"That works for now :beer: 
",drhr,2015-10-14 08:02:34
67,2014-10-13 04:46:46,"I think it's a Xcode's bug.
How about this:

<S_CODE_TOKEN>
",tangplin,2015-10-14 08:02:34
67,2014-10-24 12:17:26,"I think we experience the same or a similar problem, we have include the Xcode project as dependency. 

With Xcode Version 6.1 (6A1052d) the compilation fails with 
`Segmentation Fault: 11`
[snip]

<S_CODE_TOKEN>

We could track it down to the SwiftJSON init method at https://github.com/SwiftyJSON/SwiftyJSON/blob/master/Source/SwiftyJSON.swift#L67-73

When we comment out that part, the segmentation fault does not happen.
Including SwiftJSON directly as swift file also seems to solve the problem. I also think its likely a Xcode bug, and we have filed a bugreport to apple 
",broglep-koubachi,2015-10-14 08:02:34
67,2014-10-28 08:27:25,"I think i'm having similar issues 
",jeeftor,2015-10-14 08:02:34
67,2014-11-04 19:48:02,"I'm seeing this issue as well :(
",edwellbrook,2015-10-14 08:02:34
67,2014-11-05 16:54:08,"I'm experiencing this even when just importing the swift file

<S_CODE_TOKEN>

Any fixes about?
",mwaterfall,2015-10-14 08:02:34
67,2014-11-05 21:14:03,"I am also having this issue
",lhammond,2015-10-14 08:02:34
67,2014-11-08 17:49:56,"Now I have exactly the same issue, but as long as I use SwiftyJSON in file called Server.swift everything works fine. Even if I add another class in that file (doesn't matter if its pure Swift class or class that is subclass for NSObject) it still works. Did any file apple bug report (for my this is bug with compiler)?
",adamszeptycki,2015-10-14 08:02:34
67,2014-11-17 18:29:04,"Ahh, this is frustrating! Totally unusable, even on Xcode 6.1.1 GM.
",mwaterfall,2015-10-14 08:02:34
67,2014-11-21 18:56:50,"Same issue here. @broglep-koubachi 's suggestion is right on. 
",dave-kong,2015-10-14 08:02:34
67,2014-11-23 06:33:43,"+1 same issue. copying the source file over to my project worked.
",PandaSPUR,2015-10-14 08:02:34
67,2014-11-24 01:20:51,"+1 same issue, copying the source file over the project didn't work for me. Tried all the solutions given in this post, none of them seems to fix the bug. Accepting suggestions!
",kosicki123,2015-10-14 08:02:34
67,2014-11-24 01:24:19,"which files exactly are you adding to your project? because all I had to do was to add 2 files to my project go to Build Settings and make sure the Files are part of my project too. I remember I had to fix a small syntax issue which I really didn't understand why, I can't remember what exactly was but it was not complicated 15 mins top to fix it. 
",Drogenix,2015-10-14 08:02:34
67,2014-11-24 01:27:10,"I tried adding all files (SwiftJSON.swift, Alamofire.swift and Alamofire-SwiftJSON.swift) to my project, tried to add all the xcodeproj dependencies, tried both at the same time, tried only Alamofire-SwiftJSON and the other 2 physically inside the project...all possible combinations...(also adding to link bynary with libraries)
",kosicki123,2015-10-14 08:02:34
67,2014-11-24 01:29:41,"Try to get Alamofire working properly on its own first, the instructions given on their github page are good. That way we can eliminate that as an issue, since I'm also using Alamofire and did not have to copy the source files over to my own project.

Then for SwiftyJSON, I followed the same instructions from Alamofire to setup SwiftyJSON as a submodule. Parts of it worked, but I got segfaults, so thats when I copied SwiftJSON.swift into my project.
",PandaSPUR,2015-10-14 08:02:34
67,2014-11-24 01:30:10,"hmm thats wierd. I didnt have to add anything about the alamofire. And nothing about adding Link binary. I just added SwiftyJson and some other one like if both files were '.swift files' created by me. tomorrow that I get at the office and see my project Ill check and get back here. 
",Drogenix,2015-10-14 08:02:34
67,2014-11-24 01:31:35,"Also did this, first of all I got all running and tested with Alamofire, then the same with SwiftyJSON, then when I introduced the Alamofire-SwiftyJSON I made a callback like this, which gave me the error: 
func requestLogin(credential: Credential, callback: (retorno: JSON?) -> ())

If I change it to ""AnyObject?"" it works without the SwiftJSON feature...which is what I want...
",kosicki123,2015-10-14 08:02:34
67,2014-11-27 09:15:19,"+1 the same issue. the most weird thing is if i add a part of code like this before:

<S_CODE_TOKEN>

and the compiler works....
",yuhua-chen,2015-10-14 08:02:34
67,2014-12-02 01:32:33,"When I had this issue it helped to just place `println(""."")` at the end of the right method or closure and it worked fine. It really has to be a bug from Apple cause this is weird.
",Dschee,2015-10-14 08:02:34
67,2014-12-02 15:36:14,"+1 having this problem on Xcode Version 6.1.1 (6A2006). Manually importing SwiftyJSON and Alamofire-Swifty-JSON as a work-around.
",ratkins,2015-10-14 08:02:34
67,2014-12-05 10:08:53,"I'd suggest that everybody that has the problem opens a bug report at apple (we have done so), you can reference this github issue in the bug report. 
Then lets hope that multiple bug reports will increase the likelihood that this bug will be addressed soon.
",broglep-koubachi,2015-10-14 08:02:34
67,2014-12-13 10:53:12,"God, I'm eternally frustrated with Apple's developer tools. I'm getting this issue in Xcode 6.2 beta. Adding the .swift file resolved the issue. I'm going to file a bug report as well.
",Isuru-Nanayakkara,2015-10-14 08:02:34
67,2014-12-30 11:33:11,"+1 to File a Radar. 

I use Alamofire + SwiftJson. I've tried everything and nothing worked work for me
So the quick fix that help me is comment out this peace of code in `SwiftyJSON.swift` file.

<S_CODE_TOKEN>
",kostiakoval,2015-10-14 08:02:34
67,2015-01-09 03:23:45,"@konstantinkoval thanks,
Your hack did the trick. With unit tests where main app goes as target decency importing SwiftyJSON as a file in main app won't help
",danil-z,2015-10-14 08:02:34
67,2015-01-10 11:50:57,"Hi all,
I dug into this and have submitted a minimal repro case in [PR to /practicalswift/swift-compiler-crashes](https://github.com/practicalswift/swift-compiler-crashes/pull/47). It seems the compiler crashes when it hits the default arguments (opt: NSJSONReadingOptions = .AllowFragments) in the JSON initialiser. When a initialization like that is optimised out, the compiler segfaults. It's definitely a bug in swiftc.

It only happens when SwiftyJSON is imported as a module, so you can use the .swift file directly in the meantime.
Another workaround is to make sure the call isn't optimised out (e.g. the .cancel() and println(""."") workarounds above.

For SwiftyJSON library code, see if you can omit the default arguments for opt: and errorPointer: somehow. Sucks, but swiftc is still, um, a little wonky and this won't probably be fixed for some time.
",rustedivan,2015-10-14 08:02:34
67,2015-01-16 18:05:22,"Hi all,
just a small note to say I use SwiftyJSON.swift directly in a Framework, and it builds fine, but it crashes when I run unit tests (seg fault 11 too). I guess it's because doing that Swifty gets in a module (even if it's not his own) and it is the same bug in swiftc.
",raphaelmor,2015-10-14 08:02:34
67,2015-01-17 09:52:47,"I have a segfault 11 too when I just include SwiftyJSON.swift in my project. It occurred suddenly after a small refactoring. Before everything was finde. So I think it has nothing to do with the subproject but with some strange swift compiler behaviour.
",Blackjacx,2015-10-14 08:02:34
67,2015-01-18 04:37:51,"Same issue here. I'm having a new surprise at each attempt to compile this. 

When registering an Alamofire request callback, that's the compiler error I was receiving:

<S_CODE_TOKEN>

After tried what @yuhua-chen suggested, the problem changed, in a very surprising way:

<S_CODE_TOKEN>

After removing the Alamofire callback, the program do compile, which doesn't help.
",endel,2015-10-14 08:02:34
67,2015-01-18 09:18:34,"@endel: would you be able to share a gist of your crashing/non-crashing code? That sounds like a different segfault that I'd like to minimise and report against swiftc asap. Thanks.
",rustedivan,2015-10-14 08:02:34
67,2015-01-18 14:03:03,"@rustedivan sure, here it is: https://gist.github.com/endel/6e2f9ac7279a6ee42b90

I've written 3 examples to demonstrate what is happening for me:
1. [Runs fine](https://gist.github.com/endel/6e2f9ac7279a6ee42b90#file-example-1-swift)
2. [Segmentation fault](https://gist.github.com/endel/6e2f9ac7279a6ee42b90#file-example-2-swift)
3. [Linker error](https://gist.github.com/endel/6e2f9ac7279a6ee42b90#file-example-3-swift)

I'm using a custom [Request](https://gist.github.com/endel/6e2f9ac7279a6ee42b90#file-request-swift) class for this.
",endel,2015-10-14 08:02:34
67,2015-01-18 14:05:09,"Excellent, thanks for putting in the effort with the different cases. Swift compiler crashes are collecting over at practicalswift/swift-compiler-crashes so these reports are golden.
",rustedivan,2015-10-14 08:02:34
67,2015-01-19 13:31:23,"For me the following caused a segfault while `type` is an optional: 

<S_CODE_TOKEN>

and this solved it:

<S_CODE_TOKEN>
",Blackjacx,2015-10-14 08:02:34
67,2015-02-07 10:32:13,"@kostiakoval's workaround solved it for me. I pushed a copy of the changes to  https://github.com/sman591/SwiftyJSON/tree/compiler-segfault-workaround in case anyone else wants to try it.
",sman591,2015-10-14 08:02:34
67,2015-02-15 20:01:59,"Same here :-(
If you remove ""options"" parameter from init() and pass ""AllowFragments"" as default value to NSJSONSerialization (cannot be modified as removed as input parameter)... It works.

It's a shame that Apple had relased this faulty compiler (this is one of the many bugs it has)
",jzarzuel,2015-10-14 08:02:34
67,2015-02-20 08:50:23,"I just had this issue! It was hard to track down but essentially once I removed a function that included JSON object from SwiftyJSON class, it crashed my code with the segmentation fault. 

So basically if I removed code from the project it crashed. 

When I imported SwiftyJSON.swift into my project it started to work.

Here was the stack overflow I posted: http://stackoverflow.com/questions/28623405/why-can-i-not-remove-an-unused-function-from-my-swift-class
",sferoze,2015-10-14 08:02:34
67,2015-02-20 09:48:06,"We got feedback from apple, they request to test it with Xcode 6.3 and the news swift 1.2 compiler. We still have to migrate our project, so we can't yet test it, so if someone else that has the problem could try it with Xcode 6.3 that would be great
",broglep-koubachi,2015-10-14 08:02:34
67,2015-02-20 15:37:55,"@broglep-koubachi  I had the exact same pb combining Alamofire and SwiftyJSON doing something like this        

<S_CODE_TOKEN>

It wouldn't compile under Xcode 6.1.1 and swift 1.1 but it works with swift 1.2 and Xcode 6.3 after manually updating Alamofire and SwiftyJSON to Swift 1.2 of course 
",imanzarrabian,2015-10-14 08:02:34
67,2015-03-22 14:39:19,"+1 Removing the options parameter from init(data:options:error:) worked for me as well.
",danielkiedrowski,2015-10-14 08:02:34
67,2015-04-18 17:23:14,"This seems to be fixed in Xcode 6.3. 
",Isuru-Nanayakkara,2015-10-14 08:02:34
66,2014-10-08 19:01:50,"It will silence a warning that dylib's can only be used on deployment targets >= 8.0
",justinmakaila,2014-10-09 09:45:27
66,2014-10-09 09:28:38,"Reference  https://github.com/Alamofire/Alamofire/issues/112 , I think it is a Xcode's bug
",tangplin,2014-10-09 09:45:27
66,2014-10-09 09:45:27,"I did test in iOS7. It's work in  the example project.
",tangplin,2014-10-09 09:45:27
66,2014-11-12 18:36:25,"@charlesluo2014 This isn't the forum for bugs, please post your question on StackOverflow.
",justinmakaila,2014-10-09 09:45:27
65,2014-10-08 14:58:46,"This change is _not_ backwards compatible with Xcode 6.0.x, but I think there should be a `swift-1.1` branch because the `2.0.0` tag is not compatible with Xcode 6.1.
",rosskimes,2014-10-08 15:25:55
65,2014-10-08 15:25:55,"@rosskimes thanks 
merge in branch: xcode6.1 5c4773be8f4b8fe4d4c8bf129500b0e157deddd4
",tangplin,2014-10-08 15:25:55
64,2014-10-08 13:51:52,"I am following the example for looping through a JSON response. Creating the initial JSON object works and I am able to fetch properties. When I try to loop through the root Dictionary XCode complains that:    Type 'JSON' does not conform to protocol 'SequenceType'

I am using Alamofire to make the HTTP request. Here is my response handler:

request.responseJSON { (request, response, data, error) in
            let json = JSON(object: data!)
            for (key: String, subJson: JSON) in json {
                println(subJson)
            }
        }
",vvrinne,2014-10-11 15:02:40
64,2014-10-08 14:56:41,"@vvrinne try 2.0.0 not 1.1.0
The json which converted from NSData doing looping test at bc4a6fc80b83c8205a9761e7312d31e688972cf
",tangplin,2014-10-11 15:02:40
64,2014-10-09 07:16:40,"Yeah I am just using the master version. Isn't it a bit of a problem that the readme is not in sync with the code though?

I did eventually get looping to work in this fashion:

<S_CODE_TOKEN>
",vvrinne,2014-10-11 15:02:40
64,2014-10-09 08:25:44,"@vvrinne You code will loop twice, one time to get `arrayValue: [JSON]`, one time to loop the `arrayValue` to get each `entry`
In readme:

<S_CODE_TOKEN>

You should code like this:

<S_CODE_TOKEN>

OR：

<S_CODE_TOKEN>
",tangplin,2014-10-11 15:02:40
63,2014-10-08 10:44:26,"- Change enum JSON to struct JSON
- Add enum Type
- Add setter
- Add literal convertible
- Add unit test
- [Issue #60]
",tangplin,2014-10-08 10:45:13
62,2014-10-06 07:41:49,"Given that I have a JSON object, how do I get a NSData representation, which is suitable for sending over the network, with e.g. a POST request?
",magnusstubman,2014-10-06 07:55:02
62,2014-10-06 07:49:00,"This can be achieved with this code:

<S_CODE_TOKEN>
",k06a,2014-10-06 07:55:02
62,2014-10-06 08:01:03,"@k06a, Is there any argument for not adding a wrapper for that operation to SwiftyJSON?
",magnusstubman,2014-10-06 07:55:02
62,2014-10-06 11:51:36,"What wrapper do you mean?
",k06a,2014-10-06 07:55:02
62,2014-10-08 06:22:03,"e.g. `let data: NSData = someJson.toData()`or similare
",magnusstubman,2014-10-06 07:55:02
62,2014-10-08 07:10:02,"Use

<S_CODE_TOKEN>
",tangplin,2014-10-06 07:55:02
61,2014-10-02 14:42:21,"Just tried to achieve modification feature especially for https://github.com/SwiftyJSON/SwiftyJSON/issues/60
Maybe api should be refined, but now it works like this:

<S_CODE_TOKEN>

Output:

<S_CODE_TOKEN>

<S_CODE_TOKEN>
",k06a,2014-10-06 15:34:35
61,2014-10-02 15:05:03,"Full form of this code looks like this:

<S_CODE_TOKEN>

shortest version can be single lined:

<S_CODE_TOKEN>
",k06a,2014-10-06 15:34:35
61,2014-10-02 15:08:21,"`func update` is implemented near subscripts because my first try looks like this via `subscript` interface:

<S_CODE_TOKEN>

But Swift's `xxx[a, {...}]` can not be shortened to `xxx[a] {...}` :(
",k06a,2014-10-06 15:34:35
61,2014-10-02 15:13:33,"At least mark this PR as `discuss` to talk about nicing update syntax
",k06a,2014-10-06 15:34:35
61,2014-10-02 16:58:43,"@k06a
Impressive code！
",tangplin,2014-10-06 15:34:35
61,2014-10-03 09:45:26,"I wanna achieve this syntax:

<S_CODE_TOKEN>

or at least this:

<S_CODE_TOKEN>

tuple can be enumerated like this: http://stackoverflow.com/a/24831640/440168?stw=2
",k06a,2014-10-06 15:34:35
61,2014-10-03 11:21:46,"Oh just did this:

<S_CODE_TOKEN>

Tha main problem is class `subscript` can not be templated like this:

<S_CODE_TOKEN>

or like this:

<S_CODE_TOKEN>
",k06a,2014-10-06 15:34:35
61,2014-10-06 15:34:35,"@k06a thanks
After change to struct JSON. It's possible to set the new value through `subscript` in 
Done in 59996b25c38ed366209ad76d7a67eb08a7b2dff5 748ef28c3792c6e2f06ec57b1ea8c2fa9ef26b88 eb7cc54fec4597da11ffd52d3e8c23944ab47636 at develop branch.
like:

<S_CODE_TOKEN>
",tangplin,2014-10-06 15:34:35
60,2014-10-02 13:25:35,"Hi, is there a way to update a JSON object? e.g

<S_CODE_TOKEN>
",yelled3,2014-10-06 15:29:06
60,2014-10-02 13:28:48,"You need to fully rewrap your edited object in JSON enum or propose another genius solution for editing SwiftyJSON :)
",k06a,2014-10-06 15:29:06
60,2014-10-02 14:44:43,"Try this fork: [k06a/SwiftyJSON/tree/editing](https://github.com/k06a/SwiftyJSON/tree/editing) I think this functionality will be implemented in SwiftyJSON soon, method names and form of calls may be changed.
",k06a,2014-10-06 15:29:06
60,2014-10-02 15:50:37,"Following NSJSONSerialization.JSONObjectWithData there are mutable data in JSON, but the first thing is set the data safety. If I do not know the type of the data, I can't set the data to unknown type. If I do know the type, I can set the data like this:

<S_CODE_TOKEN>
",tangplin,2014-10-06 15:29:06
60,2014-10-02 15:53:21,"Hi @k06a, thanks for the reply :-)

I assume you're referencing:
https://github.com/k06a/SwiftyJSON/blob/editing/Source/SwiftyJSON.swift#L229-L263

I could find any other usage (tests or documentation)...
",yelled3,2014-10-06 15:29:06
60,2014-10-02 15:56:47,"@yelled3 you can see example of usage in my PR: https://github.com/SwiftyJSON/SwiftyJSON/pull/61
",k06a,2014-10-06 15:29:06
60,2014-10-03 11:23:00,"@yelled3 just added new syntax:

<S_CODE_TOKEN>

It is mush shorter and readable :)
",k06a,2014-10-06 15:29:06
60,2014-10-03 17:53:26,"@k06a  @yelled3
I will release the 2.0.0 version of SwiftJSON in a few days, like this:

<S_CODE_TOKEN>

<S_CODE_TOKEN>

It's very cool!
",tangplin,2014-10-06 15:29:06
60,2014-10-04 09:11:55,"Looks most native way to update a nested JSON. Are you using mutable collections inside JSON enum?
",k06a,2014-10-06 15:29:06
60,2014-10-06 15:29:06,"Done in 59996b25c38ed366209ad76d7a67eb08a7b2dff5 748ef28c3792c6e2f06ec57b1ea8c2fa9ef26b88 eb7cc54fec4597da11ffd52d3e8c23944ab47636 at develop branch.
It's need more test before merge into the master branch.
",tangplin,2014-10-06 15:29:06
59,2014-10-02 06:54:00,"Add iOS Example
Fix #57 
",tangplin,2014-10-02 06:54:55
58,2014-09-30 21:36:22,"Right now JSON(object: xxx) takes O(1) time. It wraps objects into `enum JSON` lazily while accessing members and the only accessed members are wrapped. I added new `case .PrivateRaw` and `private var rawObject` - this entities are really private and will never be visible by any source code out of `enum JSON`. Some comparison functions can see it - it is just optimization to prevent rewrapping arrays and dictionaries recursively.

I really fond of your great library and hope you like laziness :)
",k06a,2014-10-01 02:22:37
58,2014-10-01 02:22:36,"@k06a  Thanks!
The [JSON](http://www.json.org) enum have few of structures not include the raw object.
The enums may not contain stored properties, but it is simple to store a lazy JSON property in oneself's code.

<S_CODE_TOKEN>

<S_CODE_TOKEN>
",tangplin,2014-10-01 02:22:37
58,2014-10-01 06:34:03,"This lazy keyword just evaluates your recursive construntor on first property access. It is not the same. I'll give you an example of laziness working.
",k06a,2014-10-01 02:22:37
58,2014-10-01 09:07:58,"@tangplin, this example of `let json = JSON(object: raw)` where `raw` is parsed object:

<S_CODE_TOKEN>

your version of library parses whole hierarchy recursively to this:

<S_CODE_TOKEN>

but my lazy implementation for `let json = JSON(object: raw)` just did this:

<S_CODE_TOKEN>

when anybody access `json[0]` it returns:

<S_CODE_TOKEN>

and then accessing `json[0][""user""]` it returns:

<S_CODE_TOKEN>

and then `json[0][""user""][""name""]` it returns:

<S_CODE_TOKEN>

So it means only 10 enum wrappings instead of 17 wrappings.
And only 3 calls of `object as ClassName` instead of 17 calls!

My lazy solution wraps objects to JSON enum only if necessary. It removes recursion in `init(object:)` method and in property `var object`. So this operations works faster.
",k06a,2014-10-01 02:22:37
57,2014-09-30 20:33:07,"In the latest updates of SwiftyJSON I have notice a decrease of speed, I tried to track what could it be, but found nothing, I tested the NSJSONSerialization alone and noticed that the problem is not there, what could it be? 
Here is the JSON i'm using http://lvbp.meridiano.com.ve/ws/stats_json.aspx?metodo=Calendar&seasonId=29
",ArifADS,2014-10-02 06:54:55
57,2014-09-30 21:42:10,"Please try my fork, it may speedup you (pushed it several minutes ago): https://github.com/k06a/SwiftyJSON/tree/laziness
It should really speedup your code because of wrapping lazily only data which you is really using.
",k06a,2014-10-02 06:54:55
57,2014-10-01 03:18:43,"Yep, it loads super faster now, but after loading I do something like this 
if let jsonArray = json.array
and all the time saved on init it's now wasted there, but if someone doesn't do that then will have better results
",ArifADS,2014-10-02 06:54:55
57,2014-10-01 03:28:33,"Use below code temporarily. I will rewrite the init(object:)

<S_CODE_TOKEN>

<S_CODE_TOKEN>
",tangplin,2014-10-02 06:54:55
57,2014-10-01 14:47:05,"@ArifADS don't check 

<S_CODE_TOKEN>

Just use this:

<S_CODE_TOKEN>
",k06a,2014-10-02 06:54:55
57,2014-10-02 07:00:38,"@k06a Thanks!
@ArifADS It's very very fast now. 
You can use this:

<S_CODE_TOKEN>
",tangplin,2014-10-02 06:54:55
56,2014-09-24 06:28:13,"Reverts SwiftyJSON/SwiftyJSON#45
Now use object method
",tangplin,2014-09-24 06:28:21
56,2014-09-27 20:51:31,"Right now I can't see any `var object` in SwiftyJSON
",k06a,2014-09-24 06:28:21
56,2014-09-27 21:06:55,"I need this piece of code:

<S_CODE_TOKEN>
",k06a,2014-09-24 06:28:21
56,2014-09-28 01:32:44,"@k06a You can fin it at line 128
",tangplin,2014-09-24 06:28:21
56,2014-09-28 09:22:28,"@tangplin I looked in fork lingoer/SwiftyJSON, just pulled SwiftyJSON/SwiftyJSON, it is ok!
",k06a,2014-09-24 06:28:21
55,2014-09-23 04:34:28,,tangplin,2014-09-23 04:38:23
54,2014-09-23 03:36:58,,lingoer,2014-09-23 03:37:06
53,2014-09-23 03:23:15,,lingoer,2014-09-23 03:23:23
52,2014-09-22 19:27:43,"Note: This is a specific problem when receiving HttpRequest Json data that is being formatted/Sent By .Net Web App into our iOS Apps.
- I was able to fix this locally,  But at least it might be something that can be fixed in source code and it won't affect the result if the original json data is already in correct format. 

So the problem is the format of .Net Json Formatter won't be the same when being read by the SwftyJson library since .Net has this special characters that .Net reads fine through them because IT knows them but Swift or Xcode don't recognize so it considers them as wrong data. 

The characters in question are the following: 
- the "" \ "" (Backslash)
- the "" "" (whitespace)
- the "" "" "" (double quotes) Opening and Closing one only.

See in .Net, if you don't know already, requires the ' \"" ' to be able to create the correct JSon format. However when written in .Net and trying to parse it on Xcode is a problem because it sends NOT ONLY the double quotes but it sends the complete statement as "" \"" ""  Which becomes a problem and crashes the SwiftyJson and well any other json in Xcode because the backslash becomes part of the unacceptable format.

Also .Net is so friendly with the whitespaces and leaves them there making in very few cases errors. 

So I fixed it by Reading the NSData from the Httprequest like so: 

<S_CODE_TOKEN>

next did my string replacement with the following Framework Method: 

<S_CODE_TOKEN>

//Do the same for the white spaces.

and last recreate the NSData from the JsonString already parsed and patched:

<S_CODE_TOKEN>

You are done. Now use JsonValue like you normally would and it will all be perfect. 
",Drogenix,2014-10-07 10:11:03
52,2014-09-22 19:42:47,"This solution would actually break completely valid JSON.  The following would be an example:

<S_CODE_TOKEN>

Do you have an example of JSON you are using that cannot be parsed by SwiftyJSON?
",pvwoods,2014-10-07 10:11:03
52,2014-09-23 00:39:45,"perhaps you are right @pvwoods however that scenario is very specific and unlikely.

I humbly propose to revise my scenario: 

TL;DR: just look at both Json Formats first is the correct one, the second is the invalid one.

This is a the good Json Format. 
    {""VehicleResults"": [{""Id"":""99494"",""StyleId"":""2123411"",""XrefId"":""1234"",""UseOptions"":""Y"",""StockNumber"":""5534343 "",""VehicleCondition"":""NEW"",""LocationCode"":""FLP"" } ] }

this is a correct JSON format generated by the HttpRequest from the .Net web Api. 

It seems okay when being glanced on the Browser like any debugging test you would do. 

However when this same HttpRequest is done over with Xcode, and in my case specifically with Swift. 
The string built with the Json format was this

<S_CODE_TOKEN>

this is the main issue. The backslashes infest the string in the string fetched by our iOS App HttpRequest.  The reason: .Net actually sends the string in that format, but is parsed when the browser displays it to the user. But only by the Decoder the Backslashes are literally still there but interpreted.

Now the first two double quotes you wonder why they are there, maybe. The thing is since its a string coming from the web apparently it add those quotes by itself on Xcode without the backslash. However they still pose a problem to the ""Invalid Json Format"" error that Xcode will haunt you about.

So yeah maybe in your situation is wouldn't work. Buy your scenario is very specific. Mine it can be common if you are trying to fetch data from a Microsoft Sql Database to display it on your iOS app.
",Drogenix,2014-10-07 10:11:03
52,2014-09-23 00:43:32,"Your second example is not a valid JSON string; It has been escaped. You need to un-escape it before passing it into SwiftyJSON.  IMO, there is no reason to make a change to the SwiftyJSON code base, as this is out of the scope of what SwiftyJSON does.
",pvwoods,2014-10-07 10:11:03
52,2014-09-23 00:54:28,"the second example is on purpose escaped. 
it is an invalid Json Format, it is how the HttpRequest NSdData gets the json in Xcode. 

I believe you are right about the scope. I was thinking of a possible fix addition to the SourceCode because is a code that seems not to hurt and possible solution for a spectrum of Developers that are having hard time using SwiftyJson is a good library addition I must say.

But anyways if the Coder Owner wants to leave this few lines of code to aid others with the same issue.
",Drogenix,2014-10-07 10:11:03
52,2014-09-23 03:29:36,"@Drogenix 
Any help would be welcomed
",lingoer,2014-10-07 10:11:03
52,2014-09-23 04:11:12,"Sure. 
I'll do a pull to suggest a solution and test it well myself before submitting it. If you see it will be helpful then you decide to merge it.
",Drogenix,2014-10-07 10:11:03
51,2014-09-22 07:02:33,"1. Change JSONValue to JSON
2. Delete the part  of error
3. Change enum' type to ScalarNumber, ScalarString, Sequence, Mapping
4. implement Comparable
5. update test
",tangplin,2014-09-22 07:17:46
50,2014-09-20 14:50:08,,fixe,2014-09-20 14:50:43
50,2014-09-20 14:50:43,"Duplicated (#36)
",fixe,2014-09-20 14:50:43
49,2014-09-20 01:52:26,"I'm not sure what is going. Open a new project, drop SwiftyJSON on project tree. Select Copy.
Xcode 6.0.1

Compile and I get ""No such Module SwiftyJSON""
Attached screen shot.

![screen shot 2014-09-19 at 9 51 18 pm](https://cloud.githubusercontent.com/assets/1279819/4343914/b3ee471e-4068-11e4-8fd0-7f5409ca4d2e.png)
",ejpusa,2014-09-23 16:36:56
49,2014-09-20 11:15:58,"Did You try to clean then build again?
",duzun,2014-09-23 16:36:56
49,2014-09-20 13:10:53,"Yes. It's so strange, I'm wondering if it's an Xcode, ancient Mac issue and iOS6.

Don't think it has anything to do with Swifty.

Thanks for reply. ;-) ed

Envoyé de mon iPhone

> On Sep 20, 2014, at 7:16 AM, Dumitru Uzun notifications@github.com wrote:
> 
> Did You try to clean then build again?
> 
> —
> Reply to this email directly or view it on GitHub.
",ejpusa,2014-09-23 16:36:56
49,2014-09-21 00:53:57,"Just remove import row and use the functions, Swift does not need to import other classes in the same project :)

PS: Yes, Swift is amazing!
",hevertonrodrigues,2014-09-23 16:36:56
49,2014-09-21 02:35:43,"Yes, that's what I did. Works fine. Funny bug, something with an ancient Mac and Xcode 6 is my guess.  

thanks for reply. ;)

Envoyé de mon iPhone

> On Sep 20, 2014, at 8:54 PM, Heverton Rodrigues notifications@github.com wrote:
> 
> Just remove import row and use the functions, Swift does not need to import other classes in the same project :)
> 
> PS: Yes, Swift is amazing!
> 
> —
> Reply to this email directly or view it on GitHub.
",ejpusa,2014-09-23 16:36:56
49,2014-09-23 16:36:56,"fix it now
",tangplin,2014-09-23 16:36:56
48,2014-09-17 09:27:45,"how to transfer JSONValue object to Dictionary object? 
",lee0111,2014-09-23 16:36:21
48,2014-09-23 16:36:21,"try

<S_CODE_TOKEN>
",tangplin,2014-09-23 16:36:21
47,2014-09-11 12:12:20,"When invocating a Swift protocol as Objective-C it fails due to the parameter type JSONValue cannot be represented in Objective-C

<S_CODE_TOKEN>

Is it possible to declare SwiftyJSON type inside @objc?

Thanks in advance
",pabliqe,2014-09-23 16:34:23
47,2014-09-12 13:51:32,"I don't think this is possible since Swift enums cannot be represented in Objective-C.
",wvteijlingen,2014-09-23 16:34:23
47,2014-09-23 16:34:23,"thx @wvteijlingen
",tangplin,2014-09-23 16:34:23
46,2014-08-31 11:15:12,"I have received an error message in SwiftyJSON.swift:331:22: **Use of undeclared type 'BooleanType'**

<S_CODE_TOKEN>
",appagentur,2014-09-23 16:33:36
46,2014-09-06 15:18:20,"You're on an outdated version of XCode beta and Swift.
",ProjectDent,2014-09-23 16:33:36
46,2014-09-23 16:33:36,"Now implementation BooleanType correctly.
",tangplin,2014-09-23 16:33:36
45,2014-08-30 12:58:57,"This pull request is related to this issue: https://github.com/lingoer/SwiftyJSON/issues/44
",k06a,2014-09-24 06:22:38
45,2014-08-30 15:01:32,"I think this:

<S_CODE_TOKEN>

need to be replaced by this:

<S_CODE_TOKEN>
",k06a,2014-09-24 06:22:38
45,2014-09-12 13:49:08,":+1: Looks like a good addition to me. Maybe naming it `any` would be more inline with the other methods since it implies that it returns an `AnyObject`?
",wvteijlingen,2014-09-24 06:22:38
45,2014-09-12 17:18:23,"Ok, `any` is a good name I think.
",k06a,2014-09-24 06:22:38
44,2014-08-30 09:39:48,"I am trying to achieve this:

<S_CODE_TOKEN>

I am getting error:

<S_CODE_TOKEN>
",k06a,2014-09-12 17:22:56
44,2014-08-30 10:46:25,"This looks like common problem converting `enum` to `AnyObject`
",k06a,2014-09-12 17:22:56
44,2014-09-12 13:54:20,"I don't think this is an issue with SwiftyJSON. AnyObject can only be used for instances of a class types. The referenced pull request would be a workaround for this 'problem', but it's not a problem with the library per se.
",wvteijlingen,2014-09-12 17:22:56
44,2014-09-12 17:22:56,"Ok, this problem helps me to found smth I can contribute to this awesome library :)
",k06a,2014-09-12 17:22:56
43,2014-08-27 13:09:25,"This solves issue https://github.com/lingoer/SwiftyJSON/issues/42 without making the whole class functionality public but just by making JSONValue and the corresponding required other protocol methods public.
",Dschee,2014-08-28 10:25:39
43,2014-08-28 10:25:39,"This solution is not working, see https://github.com/lingoer/SwiftyJSON/issues/42#issuecomment-53590344. Check out @jansabbe's pull request instead: https://github.com/lingoer/SwiftyJSON/pull/41.
",Dschee,2014-08-28 10:25:39
42,2014-08-27 13:05:25,"I've got a framework where I have methods that take a JSONValue object like so:

<S_CODE_TOKEN>

I need the class that contains this initializer to be within a framework in order to be able to use Live View functionality introduced with XCode 6. But as everything in SwiftyJSON is implicitly set to `internal` access control level I receive the following error:
`Initializer cannot be declared public because its parameter uses an internal type`
",Dschee,2014-09-23 16:31:39
42,2014-08-27 13:14:11,"I've made JSONValue public and created a pull request for it (https://github.com/lingoer/SwiftyJSON/pull/43). Hope this solves it for everyone who's also interested in using SwiftyJSON as part of public framework APIs.
",Dschee,2014-09-23 16:31:39
42,2014-08-27 15:32:16,"OK, my solution might not be the right one as I receive `'JSONValue' is not convertible to 'JSONValue'` when trying to use the method with JSONValue parameter. Anyone know if this issue derives from a different source?
",Dschee,2014-09-23 16:31:39
42,2014-09-23 16:31:39,"please try

<S_CODE_TOKEN>
",tangplin,2014-09-23 16:31:39
41,2014-08-25 07:58:30,"If I try to use SwiftyJSON as a framework by adding the project file to a workspace, I couldn't access any methods. I added public modifiers to all the methods (except the ones that start with underscore).

There was also a test that didn't compile, because one of the Cocoa APIs now return an optional instead of an implicit optional.
",jansabbe,2014-09-24 06:33:39
41,2014-08-27 13:12:51,"Hi @jansabbe, I just had the same problem and opened an issue for that (https://github.com/lingoer/SwiftyJSON/issues/42).

But I like the approach more to connect SwiftyJSON to all targets where it is going to be used and only to make the `JSONValue` object public to be able to use `JSONValue` objects as part of public method APIs in frameworks. I've created an own pull request (https://github.com/lingoer/SwiftyJSON/pull/43) with the corresponding implementation. What do you think? Does that work for you as well?
",Dschee,2014-09-24 06:33:39
41,2014-08-27 18:01:07,"Hey @Dschee 

I could add the `swiftyjson.swift` file to my target instead of importing it as a framework, but I don't really like it. That breaks implicit namespacing of Swift IMO. `JSONValue` would get added to my namespace, instead of staying in the SwiftyJSON namespace.

I also prefer adding Swift libraries as a project to my xcworkspace without changing the configuration/code. If I can do that, I can just add a library by using git submodules. Any updates I can just pull without worrying about conflicts.
",jansabbe,2014-09-24 06:33:39
41,2014-08-28 10:15:01,"Okay, I see that and agree with your perspective. Adding as a framework and git submodule seems to be the most useful and clean usage pattern. I hope this will become the standard for Swift iOS frameworks. ;)
",Dschee,2014-09-24 06:33:39
41,2014-08-28 10:42:59,"I just tried to use your `framework` branch and added it as a git submodule + added the whole XCode Project to my Project file (like I already did with Alamofire) but I get the `Could not build Objective-C module 'SwiftyJSON'` error when I try to `import SwiftyJSON`. What am I doing wrong?
",Dschee,2014-09-24 06:33:39
41,2014-08-29 05:01:32,"There might be some extra information in the compile-logs. Xcode is sometimes a bit wonky, I needed to clean and clean build folder before it worked. In my case I have my project setup as a workspace with my project and swiftyjson added to it. Then you need to embed and link the framework in your project settings.
",jansabbe,2014-09-24 06:33:39
41,2014-09-12 13:44:32,"Can we move forward on this pull request? :) SwiftyJSON is just unusable as a module now.
",wvteijlingen,2014-09-24 06:33:39
41,2014-09-24 06:33:39,"thanks @jansabbe . it have been fixed already
",tangplin,2014-09-24 06:33:39
40,2014-08-24 09:54:28,"<S_CODE_TOKEN>

how to add new JSONValue into exist JSONValue ?
",kingwrcy,2014-09-23 16:29:44
40,2014-08-30 15:22:06,"Your source code have problem with Swift Array concatenation.
But if you'll replace `append` method with `+`:

<S_CODE_TOKEN>
",k06a,2014-09-23 16:29:44
39,2014-08-18 19:21:29,"if i get a NSData (ex: load data from a file) when i pass it to JSONValue(var)
it always says that it's an invalid json object, which is not the case.
",mgiroux,2014-09-23 16:28:46
39,2014-08-18 23:09:42,"I found out that if i decode the json data myself and then pass the AnyObject to JSONValue, then it works, but the NSData initializer does not work.

~~But note that it works with json loaded from the internet~~ but from a file within the application bundle does not.
",mgiroux,2014-09-23 16:28:46
39,2014-08-19 00:42:00,"Wait to make it work in BETA 6:
in this exampe data is an instance of NSData

<S_CODE_TOKEN>
",mgiroux,2014-09-23 16:28:46
39,2014-08-19 23:43:51,"Same problem. beta 5 was working as NSData into JSONValue, but I was having invalid data errors running on a 7.1.2 device. 

On beta 6e with the above AnyObject casting it is working again, both in simulator and device.
",tehfailsafe,2014-09-23 16:28:46
39,2014-08-21 12:53:06,":+1:  Having the same issue. A fix within SwiftyJSON would be great. Thanks!
",Dschee,2014-09-23 16:28:46
39,2014-08-21 13:13:08,"I've managed to fix the issue in my case by using the following line where object is of type `AnyObject?`:

`let jsonResponse = JSONValue(object as NSData!)`

Especially make sure you don't forget the `!` after `NSData`, this is what I forgot before.
",Dschee,2014-09-23 16:28:46
39,2014-08-21 13:15:59,"Same problem here. JSON was working fine in beta 5, upgrading and the same JSON string now get INVALID_JSON_VALUE when I look at the raw value. Array is nil, which used to return a valid array.

P.S. Thanks for working on the library. It has helped a lot.
",clayn123,2014-09-23 16:28:46
39,2014-08-21 13:17:24,"Thanks Dschee!!! That worked for me...
",clayn123,2014-09-23 16:28:46
39,2014-09-08 18:45:51,"Thanks @Dschee , that worked for me too, but anyhow this issue should be covered.
",kexoth,2014-09-23 16:28:46
39,2014-09-23 16:28:46,"fix
",tangplin,2014-09-23 16:28:46
38,2014-08-17 12:01:20,"This is my json:
{""error"":{""title"":""Cannot login"",""message"":""Username is required""}}

This is my code, the last println is never executed:
        let json = JSONValue(response)
        println(response)
        if let userName = json[""error""][""title""].string{
            println(userName)
        }
",douma,2014-08-17 12:26:23
38,2014-08-17 12:05:33,"When running the code below:

<S_CODE_TOKEN>

I receive this error:

{""error"":{""title"":""Cannot login"",""message"":""Username is required""}}
JSON Keypath Error: Incorrect Keypath ""/error/title""
",douma,2014-08-17 12:26:23
38,2014-08-17 12:26:23,"Ok solved it with:

//make sure var response = json string with type NSData and parse this below

<S_CODE_TOKEN>
",douma,2014-08-17 12:26:23
37,2014-08-12 06:06:11,"I'm having challenges with JSONSerialization in swift, so downloaded this to try. It says source kit terminated famous XCode 6 message if I try to compile and run.
",madhusv,2014-09-23 16:29:02
37,2014-09-23 16:29:02,"fix
",tangplin,2014-09-23 16:29:02
36,2014-08-06 18:09:37,"Fixed a typo in the filename. Thanks for the great lib!
",kriswallsmith,2014-09-23 02:09:58
35,2014-08-06 04:43:38,"<S_CODE_TOKEN>
",ckken,2014-09-23 16:24:25
35,2014-08-06 05:38:54,"I believe that JArray works in the way most standard arrays do.  Specifically, I don't believe under this case you are guaranteed that at least one element exists and you would still need to check that the length of the JArray is greater than 0.

Take this specific case:

<S_CODE_TOKEN>
",pvwoods,2014-09-23 16:24:25
35,2014-09-23 16:24:25,"<S_CODE_TOKEN>
",tangplin,2014-09-23 16:24:25
34,2014-08-05 01:50:41,,FahimF,2014-09-24 06:30:44
34,2014-08-05 21:44:23,"This looks like its already been added
",ezfe,2014-09-24 06:30:44
34,2014-09-24 06:30:44,"thanks @FahimF , it have been fixed already
",tangplin,2014-09-24 06:30:44
33,2014-08-04 20:29:01,"This is an update for Beta 5.  `LogicValue` has been renamed `BooleanType` and the protocol changed to be a `boolValue` property rather than the `getLogicValue` method.

Also updated the tests per the Beta 5 [release notes](https://developer.apple.com/library/prerelease/ios/documentation/swift/conceptual/swift_programming_language/RevisionHistory.html):

> Optionals no longer conform to the BooleanType (formerly LogicValue) protocol, so they 
> may no longer be used in place of boolean expressions (they must be explicitly compared with 
> v != nil). This resolves confusion around Bool? and related types, makes code more 
> explicit about what test is expected, and is more consistent with the rest of the language. 
",venables,2014-08-05 03:02:35
32,2014-08-01 09:16:16,"I get a JSON response from a web service which looks like this.

<S_CODE_TOKEN>

As you can see it's a list of rooms. Each room has a number and a name. I have created a model class called **Room** with two properties for _ID_ and _Name_.

Here is the method I call the web service to get the response.

<S_CODE_TOKEN>

I want to return an array of Room class objects. I get the JSON response to the _json_ constant properly. How can I iterate through it and collect the objects into an array? I tried to do a for in loop on it but apparently its not possible.

Can someone please help me out?

Thank you.
",Isuru-Nanayakkara,2014-08-02 11:02:22
32,2014-08-01 11:29:01,"Assuming that _json_ contains the _JSONValue_ resulting from your JSON, you can use the _object_ method to turn it into a dictionary that can be iterated:

<S_CODE_TOKEN>

You can then turn this into an array in any way you choose (or just keep it as a dictionary).
",bsvingen,2014-08-02 11:02:22
32,2014-08-02 11:02:22,"I got it working like this.

<S_CODE_TOKEN>

but your way is much cleaner and clearer. Thanks. :+1: 
",Isuru-Nanayakkara,2014-08-02 11:02:22
31,2014-07-28 02:20:39,"A JSONValue object can now be created directly from a JSON string,
without having to go through an NSData object.

This is done by providing the external parameter name jsonString to the
initializer - consistency could be improved by having named parameters
for the NSData initializer,  as well, but that would be a breaking change.
",bsvingen,2014-09-24 07:05:57
31,2014-09-24 07:05:56,"<S_CODE_TOKEN>

I think this way is more simple to the user, I will and a simple to the README 
",tangplin,2014-09-24 07:05:57
30,2014-07-24 12:52:39,"A few changes to make messages writable so you can construct JSON requests in code.
",johnno1962,2014-09-24 07:09:52
30,2014-09-24 07:09:52,"String, Int, Double, Bool can use init(objet: AnyObject) like this:

<S_CODE_TOKEN>
",tangplin,2014-09-24 07:09:52
29,2014-07-24 08:49:32,"The framework now exposes a public API through the new access modifiers.
",Baltoli,2014-09-24 06:34:57
29,2014-07-24 16:34:45,"I already did this in https://github.com/lingoer/SwiftyJSON/pull/26
",NachoSoto,2014-09-24 06:34:57
29,2014-09-24 06:34:57,"thanks @Baltoli. It have been fix.
",tangplin,2014-09-24 06:34:57
28,2014-07-22 11:49:51,"When the JSONValue is an Array of Objects, the user can just iterate over the objects, without having to iterate over jsonvalueinstance.array. 
",NatashaTheRobot,2014-09-24 07:24:08
28,2014-09-24 07:24:08,"try this way

<S_CODE_TOKEN>
",tangplin,2014-09-24 07:24:08
27,2014-07-22 11:19:24,,NatashaTheRobot,2014-09-24 07:19:49
27,2014-09-24 07:19:49,"compare 

<S_CODE_TOKEN>

to

<S_CODE_TOKEN>

<S_CODE_TOKEN>
",tangplin,2014-09-24 07:19:49
26,2014-07-21 18:07:46,,NachoSoto,2014-09-24 06:42:23
26,2014-07-28 00:25:14,":+1: 
",neoneye,2014-09-24 06:42:23
26,2014-09-24 06:42:23,"thanks @NachoSoto, It has been fixed.
",tangplin,2014-09-24 06:42:23
25,2014-07-21 17:51:14,"In ""init (_ rawObject: AnyObject)"" the ""case let value as NSArray:"" try to parse the array value in this line : 
let jsonValue = JSONValue(possibleJsonValue)
                if  jsonValue {
                    jsonValues.append(jsonValue)
                }
but when you have a null in the array no item is added. You have to do a code like that (with a else):
for possibleJsonValue : AnyObject in value {
                let jsonValue = JSONValue(possibleJsonValue)
                if  jsonValue {
                    jsonValues.append(jsonValue)
                } else {
                    jsonValues.append(JNull)
                }
            }
",lbellego,2014-09-23 16:21:05
25,2014-09-23 16:21:05,"JSON must not be nil
",tangplin,2014-09-23 16:21:05
24,2014-07-17 23:48:46,"What is the procedure to add a key value pair to a dictionary that is implemented using JSONValue?
",krishpop,2014-09-23 16:17:48
24,2014-07-21 19:28:19,"You have to modify the code, by default the dictionary is read only.
This a part of my changes....
in subscript(key: String) -> JSONValue {
add these lines after the get:
         set {
            switch self {
            case .JObject(var jsonDictionary):
                jsonDictionary[key] = newValue
            default:
                assert(false, ""Variable is not a JObject"")
            }
        }

You can do the same thing with the other subscript for the array.
",lbellego,2014-09-23 16:17:48
24,2014-08-21 14:58:11,"For this to work for me, I had to assign self to the updated value. For my index subscript:
 switch self {
                case .JArray(var jsonArray) where jsonArray.count > index:
                    jsonArray[index] = newValue
                    self = .JArray(jsonArray)
                default:
                assert(false, ""Variable is not a JObject"")
            }
And for the string subset I added:
set {
            switch self {
            case .JObject(var jsonDictionary):
                jsonDictionary[key] = newValue
                self = .JObject(jsonDictionary)
            default:
                assert(false, ""Variable is not a JObject"")
            }
        }
Then I used accordingly:

jsonObject[""Table""][0][key] = JSONValue(newValue as NSString)

I am using Xcode 6 beta 6. Hope this helps!
",hobbesthetige,2014-09-23 16:17:48
23,2014-07-16 13:03:02,"I raised a issue in your code here

https://github.com/lingoer/SwiftyJSON/issues/22

This issue was caused by declaring the array name inside the square bracket( var jsonValues = [JSONValue]() ). Instead it should be given like ( var jsonValues = JSONValue[]() )
",ipraba,2014-07-17 01:47:00
23,2014-07-17 01:07:14,"In Xcode6 `Beta2`, It should be written as `JSONValue[]()`, But in Xcode6 `Beta3`,  
It should be `[JSONValue]()`.  
For detailed information, please see https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/RevisionHistory.html#//apple_ref/doc/uid/TP40014097-CH40-XID_1504
",haifenghuang,2014-07-17 01:47:00
23,2014-07-17 01:46:53,"Please update your XCode to Beta3, Syntax changed
",lingoer,2014-07-17 01:47:00
22,2014-07-16 09:25:11,"I just forked your project. I used your code in my project

When i open my project with your file(SwiftyJSON.swift) in my Xcode6 Beta it gives me a error ""Source Kit Service Terminated Editor functionality temporarily limited""

This causes my whole project syntax highlighting and code completion gone

Anyhow i will also try to solve this. But wanted to raise this as a issue.
",ipraba,2014-07-17 01:52:18
22,2014-07-17 01:52:18,"Swift Syntax changed in XCode Beta3, Please update your XCode
",lingoer,2014-07-17 01:52:18
21,2014-07-13 23:40:08,,romanroibu,2014-09-24 06:58:31
21,2014-09-24 06:58:31,"merge with 63c2490252bb6c15890e93269e8ebbf7909f7732
",tangplin,2014-09-24 06:58:31
20,2014-07-10 02:09:20,"JSON objects use curly braces instead of square brackets (unlike Swift dictionaries)
",bkase,2014-07-10 02:15:26
19,2014-07-10 02:07:49,"I'm not 100% sure my test works, since Swift is acting up and is failing tests in weird ways.
",bkase,2014-09-24 07:01:01
19,2014-09-24 07:01:01,"the JSON enum which init with the NSData and AnyObject may be enough.
",tangplin,2014-09-24 07:01:01
18,2014-07-07 22:42:54,"Changed array syntax to include type in square brackets.
Cast as NSString to work around Swift bug that currently does not
recognize String as a type in (NSObject, AnyObject).
",krishpop,2014-07-08 01:12:11
17,2014-07-07 17:50:02,"The following line is returning an error:
if let breadcrumb = userInfo[""JSONErrorBreadCrumbKey""] as? String{

Error:
'String' is not a subtype of '(NSObject, AnyObject)'
",fabriciomrtnz,2014-09-23 16:17:16
17,2014-07-07 18:43:15,"Interesting, the error goes away if I conditionally cast it to NSString.

<S_CODE_TOKEN>
",eklipse2k8,2014-09-23 16:17:16
17,2014-07-07 18:45:42,"Thats the first thing I tried BUT I got the following error:
'NSString' is not convertible to 'UInt8'

By the way I just copied the swift code into a swift file in one of my projects to play around...
",fabriciomrtnz,2014-09-23 16:17:16
17,2014-07-07 18:47:44,"@fabriciomrtnz make sure to recast breadcrumb as String to get the + operator support.
",eklipse2k8,2014-09-23 16:17:16
17,2014-07-07 18:50:45,"Yep that did the trick. Its compiling, let see if it works.

-Thanks Matt
",fabriciomrtnz,2014-09-23 16:17:16
17,2014-07-14 05:13:29,"I had the same problem. Changing `String` to `NSString`solved the issue. Thanks :)
",ElHacker,2014-09-23 16:17:16
17,2014-07-17 01:48:21,"worked for me as well in Xcode 6 Beta 3
",ghost,2014-09-23 16:17:16
16,2014-07-07 12:02:47,,tangplin,2014-07-07 12:39:09
15,2014-07-04 18:50:21,"I added a convenient property ""url"" as NSURL to the JSONValue.
",kyoh,2014-07-08 01:11:33
15,2014-07-06 12:47:34,"The idea is good. 
But maybe the use case is too limited?
",lingoer,2014-07-08 01:11:33
15,2014-07-06 12:49:09,"Maybe we can make it an extension?
",lingoer,2014-07-08 01:11:33
15,2014-07-07 06:15:07,"I agree it would make a nice extension. People may have other types of their own to add, like coordinates, point, size, etc.  

I'm thinking about how I can use this library to create instances of my model classes from JSON..  still learning swift
",jpmcglone,2014-07-08 01:11:33
14,2014-07-01 18:13:50,"Hi, 
I'm using SwiftyJSON in a project where I'm using 

<S_CODE_TOKEN>

to return the following JSON

<S_CODE_TOKEN>

I can dive down the tree using  something like 

<S_CODE_TOKEN>

But if I wanted to iterate over all the names in my JSON how would I get the count of objects in the array?
",pketh,2014-07-02 12:48:30
14,2014-07-02 04:36:40,"You can use the .array property to cast a JSONValue in to an Array<JSONValue>.
And the .string property can cast a JSONValue in to String

<S_CODE_TOKEN>

Hope this help.
",lingoer,2014-07-02 12:48:30
14,2014-07-02 12:48:28,"Thanks 
",pketh,2014-07-02 12:48:30
14,2014-07-07 06:18:57,"Is there a way to have it support Array(obj) for conversion?
",jpmcglone,2014-07-02 12:48:30
13,2014-06-30 20:55:30,"Just quickly went through the README and decided to clean up some of the typos to make it easier to understand.
",gregbarbosa,2014-07-01 01:38:58
13,2014-07-01 01:39:03,"Thanks!
",lingoer,2014-07-01 01:38:58
12,2014-06-29 13:35:32,"Please add it to Cocoapods.
",voronianski,2014-06-29 15:35:35
12,2014-06-29 15:35:35,"I think it's duplicated with #4 
We will add to CocoaPods, but we are still waiting for the Swift Support in CocoaPods
",lingoer,2014-06-29 15:35:35
11,2014-06-27 10:03:45,"I think  that returning errors forms these methods is absolutely unnecessary
",garnett,2014-10-07 10:11:03
11,2014-06-27 10:35:27,"Well, I don't think so.
In my opinion, retrieving value with subscript is still in the context of JSON,when and only when the time you try to cast the real value out from JSON should then be an Optional.
Additionally it also makes it possible to trace the breaking point of the subscript chain.
",lingoer,2014-10-07 10:11:03
11,2014-08-06 05:55:15,"Whenever a subscript object can not be guaranteed to exist, it would seem logical to cast it as an optional in order to avoid people assuming that it should exist.  This is an issue that JSON is specifically susceptible to since people will often treat elements of a JSON object as being required, when in reality, it can only be assumed that it will _usually_ exist, though it is _not_ guaranteed.
",pvwoods,2014-10-07 10:11:03
11,2014-09-24 07:01:15,"I think that if the value exists, the code returns the value, if not, the code returns something about which subscript is nil. This may be very helpful when my json data has many levels. For example:`{foo:{bar:{x:{y:""value""}}}}`. When I type some code like: json['foo']['bar']['z']['y'].string, I want to know that the subscript ""z"" isn't exist, not only return nil.
",FlappyHeart,2014-10-07 10:11:03
11,2014-09-24 07:13:43,"@liuchunyao90 try this

<S_CODE_TOKEN>

or

<S_CODE_TOKEN>
",tangplin,2014-10-07 10:11:03
11,2014-09-30 21:47:28,"Maybe it will be nice to use library like this?

<S_CODE_TOKEN>

this method should be like this:

<S_CODE_TOKEN>

where `OptionalError` should be like this:

<S_CODE_TOKEN>
",k06a,2014-10-07 10:11:03
11,2014-09-30 21:58:42,"@FlappyHeart you really need to know this in run time? Structure format should be selected in compile time mostly.
",k06a,2014-10-07 10:11:03
10,2014-06-27 09:56:59,"Would it be possible to add a paragraph in the README in regards to this?
",bsarrazin,2014-10-07 10:11:03
10,2014-06-27 10:00:11,"Agree, this information is really necessary since Cocoapods are not yet supported.

The answer to your question is pretty simple:
1. if you have swift project - drag-n-drop SwiftyJSON.swift to the project tree
2. if you have mixed project it's probably better to include whole SwiftyJSON.xcodeproj as subproject
",garnett,2014-10-07 10:11:03
10,2014-06-27 10:04:06,"Ok, that makes sense but I was wondering if there is ""dependency management"" way of doing it.
It's probably too early for Swift... SwiftPods? ;)
Thank you
",bsarrazin,2014-10-07 10:11:03
10,2014-06-27 10:04:25,"Good, I'll add that later today. 
Thanks
",lingoer,2014-10-07 10:11:03
10,2014-06-27 10:05:58,"@bensarz I hope that Cocapods will support swift later (work in progress as I know)
You can add this repo as submodule and perform the steps I've described
",garnett,2014-10-07 10:11:03
10,2014-06-27 10:06:03,"SwiftPods Not Yet.
I think CocoaPods would support swift when the ""Beta"" gone
",lingoer,2014-10-07 10:11:03
10,2014-07-03 01:31:08,"Is there a way in a pure Swift project I would still be able to use SwiftlyJSON.xcodeproj as a subproject? Can the steps to set that up be enumerated in say, the Readme?
",kdbertel,2014-10-07 10:11:03
10,2014-07-03 11:42:33,"I should share how I ended up using SwiftyJSON...
Given that I'm not developing the library, I opted for git submodules.
The directory structure looks like this:

`/main_repo/project_directory/myproject.xcodeproj` (and other related files and directories)
`/main_repo/SwiftyJSON` (as git submodule)

I added the SwiftyJSON files in my xcodeproj but unchecked the box asking me to copy the files to the project.
",bsarrazin,2014-10-07 10:11:03
10,2014-07-07 06:16:32,"Can we not build SwiftyJSON as a module and just import the module?  
",jpmcglone,2014-10-07 10:11:03
10,2014-07-07 10:15:52,"@jpmcglone  yes, and it's an easy job to do.
I'll write a simple tut soon.
",andelf,2014-10-07 10:11:03
10,2014-07-07 12:41:41,"@andelf 帮忙补充一下ReadMe呗~~~么么哒~~
",lingoer,2014-10-07 10:11:03
9,2014-06-26 08:07:41,"Cool library!

Having trouble getting the right output from string input:

<S_CODE_TOKEN>
",alexmarchant,2014-09-23 04:39:56
9,2014-06-26 08:09:29,"Interesting use case! Why do you expect to achieve from this input, a dictionary, right?
Why don't you specify `[a: b]` (a dictionary) as an input?
",garnett,2014-09-23 04:39:56
9,2014-06-26 08:13:36,"Interesting
@garnett Shall we introduce some LiteralConvertible Protocol or some other init method?
",lingoer,2014-09-23 04:39:56
9,2014-06-26 08:15:41,"I was just using it to play around with in a Playground to see how JSONValue's worked. From the source it looked like JSONValue() took String input so I tried it out. Haha, now after reading your reply I get that JSONValue's hold individual element data and that it wasn't meant to parse string input.

Ya, that was confusing to me, i'd recommend making a separate init that only takes NSData or allowing String input as well.
",alexmarchant,2014-09-23 04:39:56
9,2014-06-26 08:16:58,"I've thought about implementing literalConvertibles, but It's not the case where it will help. If we implement convertible, the call will look like:
`let value : JSONValue = [1, :""Foo""]`
By manually specifying the type, we allow to assign the value omitting the constructor (now it looks like `let value = JSONValue([1, :""Foo""])`
",garnett,2014-09-23 04:39:56
9,2014-06-26 08:22:23,"`Ya, that was confusing to me, i'd recommend making a separate init that only takes NSData or allowing String input as well.`
Good point! @lingoer we should rethink public API and use cases of the library. Accepting both primitive types and `NSData` as well really looks confusing.

Maybe, it will be better to make the following public api:
- `fromObject` - converts json from NSJSONSerialization result
- `fromData` - which internally uses NSJSONSerialization to get object representation.

This will allow us to keep these two use cases separated
",garnett,2014-09-23 04:39:56
9,2014-06-26 08:26:37,"Agreed! :) 
Yesterday, I've replied a similar question in a Chinese forum with a similar answer to you.
I think a `class func parseFromString()` is also needed
",lingoer,2014-09-23 04:39:56
9,2014-06-26 08:26:59,"As addition to previous comment: I personally do not like .JInvalid as return value.
`let value = JSONValue(...)
if value != .JInvalid {
... some logic here
}`

For me, it looks more natural to return here something like fancy optional wrapper: http://swiftlytyping.tumblr.com/post/88210131086/error-handling
It can return both Error and JSONValue
",garnett,2014-09-23 04:39:56
9,2014-06-26 08:28:34,"@lingoer it will be really pain to implement, regexp all the things? I still do not see any real-world usage for this
",garnett,2014-09-23 04:39:56
9,2014-06-26 08:32:34,"An ugly implementation would be String => NSData => NSJSONSerialization, ugly, but worked?
As for JInvalid :

<S_CODE_TOKEN>
",lingoer,2014-09-23 04:39:56
9,2014-06-26 08:33:45,"I like `JInvalid(NSError)`, let's keep this
",garnett,2014-09-23 04:39:56
9,2014-06-26 08:40:57,"Ok, I'll commit the JInvalid thing later and think awhile for the init method. I want to keep NSData as the default init ,while provide some other init method for other types
",lingoer,2014-09-23 04:39:56
9,2014-11-17 10:44:08,"Could someone give a example how to parse these JSON strings ?

Received_JSON_string: {""a"":""actionvalue""}

let json = JSON(Received_JSON_string)
let action = json[""a""].stringValue
println(""Received a: (action)"") // must give me the actionvalue
",gcmartijn,2014-09-23 04:39:56
9,2014-11-17 10:48:57,"<S_CODE_TOKEN>
",lobodart,2014-09-23 04:39:56
9,2014-11-17 10:53:53,"@lobodart Works !
",gcmartijn,2014-09-23 04:39:56
8,2014-06-24 11:29:58,"From my point of view, it's really annoying that all values are encoded and decoded as `double`, in some cases this behaviour might be even buggy.
I propose to let caller side decide how to `unwrap` returned Number - as Double, Int, whatever
",garnett,2014-06-25 04:36:41
8,2014-06-24 15:22:12,"Nice idea.
It did bothered me, too. 
In one of the first commits it was a NSNumber, But, I Changed that later.
Because I don't want any NSThings come out from the value ------ The Cocoa things always comes with implicitly-unwrapped-optionals. Which I think , is not following the fundamental ideas of Swift language.
If there has a way simple and explicit as basic types yet functional as NSNumber, I'd be very happy to use that.
I need a few time to think about it.
",lingoer,2014-06-25 04:36:41
8,2014-06-25 04:36:41,"I give up.
Chosen NSNumber finally.
Addition two methods provided
",lingoer,2014-06-25 04:36:41
7,2014-06-24 07:39:06,"<S_CODE_TOKEN>
<S_CODE_TOKEN>
<S_CODE_TOKEN>

Now we have all the enum values prefixed with `J`. It's unnecessary since collisions are impossible with swift enums. 
",garnett,2014-06-24 08:09:47
7,2014-06-24 08:05:06,"Well, in my opinion, it's better not...
It's true that collisions are not impossible, but using the same syntax with Swift may cause ambiguity, which is not good.
After all , It's just a little one more character prefixed
",lingoer,2014-06-24 08:09:47
7,2014-06-24 08:09:47,"I see your point here. Closing this one
",garnett,2014-06-24 08:09:47
6,2014-06-23 18:00:16,"Adresses https://github.com/lingoer/SwiftyJSON/issues/5
",garnett,2014-06-24 02:28:26
5,2014-06-23 17:46:30,"@lingoer thanks for the push access!
I've added more tests and cleaned the code a little. I'll submit new issues and if they are minor enchacements/ bugs - fix the in place, otherwise discuss with you.

I think it's cool idea to have each protocol to be implemented in it's own extension - the code becomes more readable.
",garnett,2014-06-24 02:56:45
5,2014-06-24 02:28:52,"That's a very nice idea!!!!
Thank you!!!
",lingoer,2014-06-24 02:56:45
4,2014-06-23 14:10:13,"Do you have any plans on making it available as a cocoapod ?
",pawurb,2014-06-23 20:47:04
4,2014-06-23 16:11:53,"Yes I do. But I'm still tracking the swift issue of pods here, waiting for a stable solution
 https://github.com/CocoaPods/CocoaPods/issues/2218
",lingoer,2014-06-23 20:47:04
4,2014-06-23 20:47:04,"Thanks for your answer. I am closing then.
",pawurb,2014-06-23 20:47:04
3,2014-06-22 18:54:08,"Hi! I've deleted unnecessary UIKit example app and created Framework targets for bot iOS and OS X. You can now run tests for both platforms.
",garnett,2014-06-23 03:42:48
3,2014-06-22 18:57:00,"Please merge so I can continue adding tests
",garnett,2014-06-23 03:42:48
2,2014-06-20 14:13:42,"I've cloned the source, run Example project and apparently it's empty - no unit tests, no demo :zzz: 
",garnett,2014-06-23 06:54:29
2,2014-06-20 15:49:26,"Thank you so much!!!
I'm still preparing the demo, I just don't know how to demonstrate it. 
Any suggestion?
",lingoer,2014-06-23 06:54:29
2,2014-06-20 16:21:05,"Unit tests will be just fine.

Denis
Sent from my iPhone

> On 20.6.2014, at 18.49, Ruoyu Fu notifications@github.com wrote:
> 
> Thank you so much!!!
> I'm still preparing the demo, I just don't know how to demonstrate it. 
> Any suggestion?
> 
> —
> Reply to this email directly or view it on GitHub.
",garnett,2014-06-23 06:54:29
2,2014-06-21 05:37:52,"add unit tests, yet not fully covered
",lingoer,2014-06-23 06:54:29
1,2014-06-20 14:10:04,"<S_CODE_TOKEN>
",garnett,2014-06-20 15:49:45
1,2014-06-20 15:45:32,"Thanks!!!
I just fixed it in the latest review.
",lingoer,2014-06-20 15:49:45
