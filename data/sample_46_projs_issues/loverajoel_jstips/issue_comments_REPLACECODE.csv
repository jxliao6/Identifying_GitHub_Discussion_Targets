issue_num,datetime,body,login,close_date
401,2017-03-21 10:13:25,typo:  cancelTimeout  => clearTimeout,patsoncy,2017-03-21 14:06:16
401,2017-03-21 14:06:20,Thanks,zenopopovici,2017-03-21 14:06:16
400,2017-03-18 16:03:25,,neighborhood999,2017-03-18 16:03:35
399,2017-03-14 17:57:03,"- Storing the key with JSON.stringify() allow to serialize objects sent as arguments.
- Added external links for memoization.
- Improved code formatting.

## Improved Tip-29: the 'key' of the memoized function is saved as JSON
## TL;DR;
[Memoization](https://www.sitepoint.com/implementing-memoization-in-javascript/) is an optimization technique used primarily to speed up functions by storing the results of expensive function calls and returning the cached result when the same inputs occur again.
## Username
[github:jherax](https://github.com/jherax/)
## Extra
https://jherax.wordpress.com/",jherax,
398,2017-03-14 17:47:54,Fix typo,helfi92,2017-03-14 17:48:26
398,2017-03-14 17:48:31,Thanks!,zenopopovici,2017-03-14 17:48:26
397,2017-03-14 00:20:25,Fix typo in 3 Array Hacks and change my tip-username,helfi92,2017-03-14 13:02:02
397,2017-03-14 13:02:10,Thanks!,zenopopovici,2017-03-14 13:02:02
396,2017-03-13 02:50:53,"## 3 Array Hacks
## TL;DR;
Arrays are everywhere in JavaScript and with the new [spread operators](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator) introduced in ECMAScript 6, you can do awesome things with them. In this post I will show you 3 useful tricks you can use when programming.
## Username
[@hassanhelfi](https://twitter.com/hassanhelfi)",helfi92,2017-03-13 15:51:13
396,2017-03-13 06:02:35,Cool! :shipit: ,kurtextrem,2017-03-13 15:51:13
396,2017-03-13 10:19:06,@helfi92 I recommend to use `const` or `let` instead of `var`. üòÑ ,neighborhood999,2017-03-13 15:51:13
396,2017-03-13 12:14:13,"Nice :shipit:, but yea, use `const` or `let`",zenopopovici,2017-03-13 15:51:13
396,2017-03-13 12:50:53,@zenopopovici @neighborhood999 Good catch. Pushed my changes.,helfi92,2017-03-13 15:51:13
396,2017-03-13 15:51:09,@helfi92 wonderful tip! Thanks! üôå,loverajoel,2017-03-13 15:51:13
395,2017-03-09 07:52:52,fix tip number,hingsir,2017-03-09 07:59:12
395,2017-03-09 07:59:06,@hingsir ThanksÔºÅ,neighborhood999,2017-03-09 07:59:12
394,2017-03-06 13:06:39,,loverajoel,2017-03-06 13:06:47
393,2017-02-28 13:12:43,,neighborhood999,2017-02-28 13:12:55
393,2017-02-28 14:15:59,"Hi @neighborhood999, please don't merge against `gh-pages`, you should modify posts on `master` then automatically they will be pushed to `gh-pages`. Thanks üòÑ ",loverajoel,2017-02-28 13:12:55
393,2017-02-28 14:18:48,@loverajoel I'm sorry about it. Thanks for your reminder.,neighborhood999,2017-02-28 13:12:55
392,2017-01-31 20:40:42,"Fixed annoying Liquid warning in all translates:
Liquid Warning: Liquid syntax error (line 25): Expected end_of_string but found open_round in ""{{Math.random()}}""",Krekotun,2017-01-31 21:18:36
392,2017-01-31 20:41:35,"Ups, It added my translates too =/",Krekotun,2017-01-31 21:18:36
392,2017-01-31 20:44:02,"Ok, it'll be fixed with release of russian translation
Or you can fix it by yourself",Krekotun,2017-01-31 21:18:36
392,2017-01-31 20:52:53,"The poins is to wrap code in `{% raw %} {% endraw %}`

`<div key={% raw %}{{item.key}}{% endraw %}>{% raw %}{{item.name}}{% endraw %}</div>`

`<MyComponent key={% raw %}{{item.key}}{% endraw %}/>`

`<MyComponent key={% raw %}{{Math.random()}}{% endraw %}/>`",Krekotun,2017-01-31 21:18:36
392,2017-01-31 21:18:36,"@Krekotun ok, good catch, I will take a look! thanks",loverajoel,2017-01-31 21:18:36
391,2017-01-31 08:26:08,Fixed code style and some comments,VovanR,2017-01-31 09:45:20
391,2017-01-31 09:45:31,Thank you @VovanR ,zenopopovici,2017-01-31 09:45:20
390,2017-01-30 20:29:46,"Bug with snippet's indentation
http://d.pr/i/GMYN",Krekotun,2017-01-30 23:11:10
390,2017-01-30 23:11:07,Thanks @Krekotun ,zenopopovici,2017-01-30 23:11:10
389,2017-01-19 20:19:18,"Hi, I'm working on Russian translation and have finished 2 articles so far :)

What is better: translate all tips and then merge or translate and merge one by one?

Also there was a problem with Arvo font. It doesn't have cyrillic symbols, so I decided to change it to Roboto Slab. It looks almost the same, but let me know if there is a better alternative.

**Progress:**
- [x] Insert item inside an Array
- [x] AngularJs - $digest vs $apply
- [x] Keys in children components are important
- [x] Improve Nested Conditionals
- [x] Sorting strings with accented characters
- [x] Differences between undefined and null
- [x] Writing a single method for arrays and a single element
- [x] use strict and get lazy
- [x] Converting a Node List to an Array
- [x] Template Strings
- [x] Check if a property is in a Object
- [x] Hoisting
- [x] Pseudomandatory parameters in ES6 functions
- [x] Tip to measure performance of a javascript block
- [ ] Fat Arrow Functions
- [ ] Even simpler way of using indexOf as a contains clause
- [ ] Passing arguments to callback functions
- [ ] Node.js - Run a module if it is not required
- [ ] Truncating the fast (but risky) way
- [ ] Safe string concatenation
- [ ] Return objects to enable chaining of functions
- [ ] Shuffle an Array
- [ ] Two ways to empty an array
- [ ] Converting to number fast way
- [ ] Use === instead of ==
- [ ] Using immediately invoked function expression
- [ ] Filtering and Sorting a List of Strings
- [ ] Short circuit evaluation in JS.
- [ ] Currying vs partial application
- [ ] Speed up recursive functions with memoization
- [ ] Converting truthy/falsy values to boolean
- [ ] Avoid modifying or passing arguments into other functions ‚Äî it kills optimization
- [ ] Map() to the rescue; adding order to Object properties
- [ ] Create array sequence [0, 1, ..., N-1] in one line
- [ ] Implementing asynchronous loop
- [ ] Assignment Operators
- [ ] Observe DOM changes in extensions
- [ ] Deduplicate an Array
- [ ] Flattening multidimensional Arrays in JavaScript
- [ ] Advanced Javascript Properties
- [ ] Using JSON.Stringify
- [ ] Array average and median
- [ ] Preventing Unapply Attacks
- [ ] Use destructuring in function parameters
- [ ] Know the passing mechanism
- [ ] Calculate the Max/Min value from an array
- [ ] Detect document ready in pure JS
- [ ] Basics declarations
- [ ] How to reduce() arrays
- [ ] Easiest way to extract unix timestamp in JS
- [ ] Helpful Console Logging Tricks
- [ ] DOM event listening made easy
- [ ] Return Values with the ‚Äònew‚Äô Operator
- [ ] Get File Extension
- [ ] How to use optional arguments in functions (with optional callback)
- [ ] Create an easy loop using an array
- [ ] Copy to Clipboard
- [ ] Comma operator in JS
- [ ] Breaking or continuing loop in functional programming
- [ ] ES6, var vs let
- [ ] Three useful hacks
- [ ] Binding objects to functions


",Krekotun,
389,2017-01-19 20:25:18,"Awesome!!! üòé
Translate all tips is better. I will take a look to the new font!",loverajoel,
389,2017-01-19 20:36:04,Thanks :),Krekotun,
389,2017-01-30 08:10:53,Nice work :),zenopopovici,
389,2017-01-30 12:23:02,"@zenopopovici thanks, it will be a very long road :)

@loverajoel I've an idea. It's a bit sad to work without a visual progress and validation from russian community, so I decided to publish translated parts to my blog (of course, I'll give a link to the original resource). 

Can I do this?",Krekotun,
389,2017-01-30 16:46:39,"@Krekotun The project is GPL. https://github.com/loverajoel/jstips/blob/gh-pages/LICENSE.md

It think it should be OK.",zenopopovici,
389,2017-01-30 17:42:33,@zenopopovici cool :),Krekotun,
388,2017-01-19 19:43:27,,xat,2017-01-19 19:47:32
388,2017-01-19 19:47:40,Thanks!,loverajoel,2017-01-19 19:47:32
387,2016-11-24 08:22:15,"As title says, I want to know the difference. Hope someone can write a post.",LiuMengzhou,
387,2017-01-31 00:47:37,"@LiuMengzhou, I'd write this but I've just realized there's already a [_hoisting topic_](https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-01-11-hoisting.md) covering this subject.

Check it out the end of the example after the comment
<S_CODE_TOKEN>",lnfnunes,
386,2016-11-20 16:04:36,"@loverajoel 
Done:
 
* Pull request for the translation of tip 60
",cynosures,2016-11-24 12:03:33
386,2016-11-24 12:04:27,Thanks :+1:,sjfkai,2016-11-24 12:03:33
385,2016-11-20 16:00:32,"* Pull request for the translation of tip 60
",cynosures,2016-11-20 16:02:32
384,2016-11-19 10:17:36,"
",neighborhood999,2016-11-19 10:17:43
383,2016-11-15 02:57:34,"Hi I'm  a blog editor,  the js gif you're using is great, is it possible we can use with credit to your jstips page? Thank You!",evelyn330,
382,2016-10-13 13:54:21,"## Vuejs makes a copy-upate-replace inside the data binding
## TL;DR;

In this tip, I will introduce an example to show you how it might conflict with other software.
## pansila

[@pansila](https://github.com/pansila)
## Extra

I'm not a native English speaker, so any grammar correction is welcome too.
",pansila,
381,2016-10-12 21:49:12,"## Three useful hacks
## TL;DR;

Three very useful and syntax sugar hacks to speed up your development.
## Username

[@leandrosimoes](https://github.com/leandrosimoes)
## Extra
",leandrosimoes,2016-10-28 17:10:04
380,2016-09-23 08:16:37,"## Another solution to creating range with Array
## TL;DR;

use `{ length: N }`
## Username

[yjcxy12](https://github.com/yjcxy12)
## Extra

Had a quick test on Chrome dev tool. Solution 4 is much quicker(12 ms on 100,000 elements) than Solution 2 and 3 (both 27ms)
",yjcxy12,
380,2016-09-26 02:13:32,"What we want was an array like `[0, 1, ..., N-1]`. But `Array.from({ length: N })` just create a empty array with length `N`.
",sjfkai,
380,2016-09-26 08:37:52,"@sjfkai That is exactly the same with Solution 2 and 3. 

You do something like 

<S_CODE_TOKEN>
",yjcxy12,
380,2016-09-27 08:05:54,"@yjcxy12 I feel `Array.from({ length: N }, (_, i) => i);` should be updated in the file instead of just this `Array.from({ length: N })` 
",cjkumaresh,
380,2016-09-27 12:39:43,"If we read the whole document, Solution 3 is just a variation of Solution 2, thus in the `One More Thing` session, the creating range function is not included for Solution 3. I see Solution 4 as very similar to Solution 3 in that sense: just a variation of Solution 2, but quicker.

I am willing to add `Array.from({ length: N }, (_, index) => index + 1);`, but should I add it for Solution 3 as well?
",yjcxy12,
380,2016-09-28 03:36:10,"The result of `Solution 3` was difference from `Solution 4`.

<S_CODE_TOKEN>
",sjfkai,
380,2016-10-04 09:17:46,"Oh I missed that. Will change.
",yjcxy12,
379,2016-09-12 14:04:05,"We set up a `DevNews` slack channel at my work and added several RSS feeds to it which seemed to work fine for a while. I was noticing that we weren't getting any new tips from JSTips recently so I went to the RSS feed and it seems empty:

![google chrome - - screen shot sep 12 2016 10 02 42 am](https://cloud.githubusercontent.com/assets/270193/18438601/1a4fa290-78d0-11e6-9ab6-4cc9c5b369ed.png)

If this gets remedied, RSS is a viable solution for #375 also
",benjamincharity,
379,2017-01-30 08:15:18,@loverajoel can we do something about this?,zenopopovici,
378,2016-08-31 06:46:34,"![](http://i.imgur.com/uNIHpqd.png)

Other translation can't not display.
",neighborhood999,2016-09-02 20:29:43
378,2016-08-31 23:52:54,"yes, there is a new version of `jekyll`.
I can't resolve the bug
",loverajoel,2016-09-02 20:29:43
378,2016-09-02 20:29:41,"I resolved it, thanks for reporting it!
",loverajoel,2016-09-02 20:29:43
378,2016-09-03 07:25:06,"üëç 
",sjfkai,2016-09-02 20:29:43
377,2016-08-31 00:04:20,,neighborhood999,2016-08-31 00:04:29
377,2016-08-31 00:08:03,"ü§ò
",loverajoel,2016-08-31 00:04:29
376,2016-08-24 08:13:57,"## Tilde(~) operator in JS.
## TL;DR;

Tilde(~) is a unary operator that takes an expression( say N ) on its right and converts it to -(N+1).
## Username

 [@bhaskarmelkani](https://www.twitter.com/bhaskarmelkani)
## Extra
",bhaskarmelkani,2016-10-27 18:46:00
376,2016-08-26 08:32:55,"This tip is very similar to: https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-01-15-even-simpler-way-of-using-indexof-as-a-contains-clause.md
",kurtextrem,2016-10-27 18:46:00
376,2016-10-27 18:46:00,"closed by duplicated tip üòì
",loverajoel,2016-10-27 18:46:00
375,2016-08-23 07:33:01,"Just a thought. Providing these superb tips on Slack channel. Any views?
",rahuldhawani,
375,2016-08-23 11:41:42,"You mean here: https://jstipscommunity.slack.com/ ?

We already have it, didn't have the time to create a registration form and link it to the API for new users to be created automatically. (Like here: https://levels.io/slack-typeform-auto-invite-sign-ups/)

If you want to help... any PR to do this would be greatly appreciated.
",zenopopovici,
375,2016-11-30 21:25:48,@rahuldhawani if someone fixes the RSS feed (#379) you could just set up slack to send the RSS feed to a specific slack channel. I've done this at work for `dev_news` (posts anytime the feed gets a new item) and for `dev_releases` where we've subscribed to the releases feed for various open source projects we use.,benjamincharity,
374,2016-08-22 00:07:06,,neighborhood999,2016-08-22 00:07:11
373,2016-08-21 13:30:58,,neighborhood999,2016-08-21 13:31:02
372,2016-08-21 11:34:38,"## Add JSBin to Tips
## Add jsbin.com functional playgrounds to all tips.

[content here]
## zenopopovici

http://twitter.com/zenopopovici
## Extra

N/A
",zenopopovici,
371,2016-08-20 03:57:06,"Reverts loverajoel/jstips#370
",loverajoel,2016-08-20 03:57:10
370,2016-08-19 06:50:16,"## [Title here]
## TL;DR;

[content here]
## Username

[twitter account link or github account link ej: [@tips-js](https://twitter.com/tips_js)]
## Extra

[content here]
",tryer3000,2016-08-19 14:09:44
370,2016-08-19 14:09:49,"thanks
",loverajoel,2016-08-19 14:09:44
370,2016-08-20 03:54:36,"why?

Isn't it means `typeof null === 'object'` ?
",sjfkai,2016-08-19 14:09:44
370,2016-08-20 03:56:27,"`typeof null === 'object'` is `true`
you are right
",loverajoel,2016-08-19 14:09:44
369,2016-08-12 23:53:50,,neighborhood999,2016-08-12 23:53:55
368,2016-08-10 19:29:10,"1. Maybe we should add JSBin retroactively to all tips under a JSBin account?
2. Should we implement labels too?
",zenopopovici,
368,2016-08-10 19:31:37,"I/m not sure it's a hard work, a lot of languages and a lot of tips. what do you think?
",loverajoel,
368,2016-08-10 19:34:20,"I think I can do some / all of the work. Should we create an account?
",zenopopovici,
368,2016-08-10 19:35:26,"ok I can help. Let me know how we can divide that. You can do it with your account.
",loverajoel,
368,2016-08-10 19:35:56,"Let me start the first PR. I think I can do it in the weekend.
",zenopopovici,
368,2016-08-10 19:44:02,"@loverajoel Should we implement labels too? See #287 
",zenopopovici,
368,2016-08-15 17:58:51,"@loverajoel Sorry will have to push back to next weekend. I'm swamped.
",zenopopovici,
368,2016-08-21 12:22:47,"@loverajoel I've started this, but it's not as easy as it seems. Most tips must be changed in order to be run properly and display meaningful messages in the console.

#372 
",zenopopovici,
368,2016-08-21 12:33:40,"@loverajoel Have a look and tell me if I'm doing something wrong...
",zenopopovici,
367,2016-08-10 17:56:23,"Add first files to allow future translation to portuguese language
",raphaelconstantino,2016-08-10 17:58:33
367,2016-08-10 18:40:22,"awesome!
",loverajoel,2016-08-10 17:58:33
366,2016-08-09 00:15:12,,neighborhood999,2016-08-09 00:15:18
365,2016-08-03 12:53:19,"## [Title here]
## TL;DR;

[content here]
## Username

[twitter account link or github account link ej: [@tips-js](https://twitter.com/tips_js)]
## Extra

[content here]
",hingsir,2016-08-04 06:22:21
365,2016-08-03 15:06:45,"@sjfkai Can you take a look?
",zenopopovici,2016-08-04 06:22:21
365,2016-08-04 06:22:15,"@hingsir  Thanks
",sjfkai,2016-08-04 06:22:21
364,2016-08-01 12:38:40,"Looking for a specific tip number in source has an extra step since the source is referenced by date. Maybe add tip numbers to md file names so that it's easiest to find.
",philn5d,2016-08-10 19:36:30
364,2016-08-09 17:30:46,"@philn5d Had that same issue. Thing is we can't change URLs but we could add the tip number. PRs are welcome. /cc @loverajoel 
",zenopopovici,2016-08-10 19:36:30
364,2016-08-10 19:36:30,"Moved to: https://github.com/loverajoel/jstips/issues/368
Makes sense, since we're editing all tips.
",zenopopovici,2016-08-10 19:36:30
363,2016-08-01 02:35:10,"## Copy to Clipboard
## TL;DR;

This week I had to create a common ""Copy to Clipboard"" button, I've never created one before and I want to share with I made it.
## Username

@loverajoel
## Extra

np
",loverajoel,2016-08-02 16:40:59
363,2016-08-01 08:46:34,"Can you add a caniuse.com link? 
",kurtextrem,2016-08-02 16:40:59
363,2016-08-01 14:33:21,"@kurtextrem done
",loverajoel,2016-08-02 16:40:59
363,2016-08-01 18:09:27,"@kurtextrem done! Thanks for your grammar corrections!
",loverajoel,2016-08-02 16:40:59
363,2016-08-02 06:55:17,"Ë∞¢Ë∞¢ÂàÜ‰∫´
",fanboke,2016-08-02 16:40:59
363,2016-08-02 09:36:33,"don't work on iOS
",hingsir,2016-08-02 16:40:59
363,2016-08-02 10:24:32,":shipit: 
",kurtextrem,2016-08-02 16:40:59
363,2016-08-02 11:45:48,":shipit: 
",zenopopovici,2016-08-02 16:40:59
363,2016-08-02 11:46:43,"Maybe we should just :shipit: stuff and correct later. We have lots of backlog items.

@hingsir It does. Check caniuse.
",zenopopovici,2016-08-02 16:40:59
363,2016-08-02 16:40:57,"Thanks!!!
",loverajoel,2016-08-02 16:40:59
363,2016-08-03 02:28:12,"@loverajoel @zenopopovici I think safari on iOS supports `execCommand` but not `copy/cut` . Check [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand) and test that on your devices.
",hingsir,2016-08-02 16:40:59
363,2016-08-03 15:06:05,"@hingsir Yep, it seems the clipboard cannot be read/written programatically. Feel free to submit a PR to amend the tip. 
",zenopopovici,2016-08-02 16:40:59
362,2016-07-24 08:21:49,"## [Title here]
## TL;DR;

[content here]
## Username

[twitter account link or github account link ej: [@tips-js](https://twitter.com/tips_js)]
## Extra

[content here]
Provides alternative way on converting a Node list to an Array
using Array.prototype.slice combined with Function.prototype.call/apply
",tkalfigo,2016-07-25 13:59:06
362,2016-07-25 13:59:08,"Thank you!
",zenopopovici,2016-07-25 13:59:06
361,2016-07-20 01:38:43,"## [Title here]
## TL;DR;

[content here]
## Username

[twitter account link or github account link ej: [@tips-js](https://twitter.com/tips_js)]
## Extra

[content here]
",dosin,2016-07-20 02:25:59
361,2016-07-20 02:26:06,"Thanks
",sjfkai,2016-07-20 02:25:59
360,2016-07-17 21:45:04,"## [Title here]
## TL;DR;

[content here]
## Username

[twitter account link or github account link ej: [@tips-js](https://twitter.com/tips_js)]
## Extra

[content here]
",dosin,2016-07-18 09:01:53
360,2016-07-18 09:01:47,"Thanks
",sjfkai,2016-07-18 09:01:53
359,2016-06-24 10:36:22,"## Comma Operator in JS
## TL;DR;

When placed in an expression, it evaluates every expression from left to right and returns the right most.
## Username

 [@bhaskarmelkani](https://www.twitter.com/bhaskarmelkani)
## Extra
",bhaskarmelkani,2016-08-10 17:39:56
359,2016-08-02 10:50:03,"Done :)
",bhaskarmelkani,2016-08-10 17:39:56
359,2016-08-03 07:22:29,"Sorry my bad. 
Corrected.
Thanks :)
",bhaskarmelkani,2016-08-10 17:39:56
359,2016-08-04 10:21:38,"Done, thanks for the cooperation. 
",bhaskarmelkani,2016-08-10 17:39:56
359,2016-08-08 15:27:57,"- Rename the file to `2016-08-09-comma-operaton-in-js.md`
",loverajoel,2016-08-10 17:39:56
359,2016-08-09 06:36:53,"Done :)
",bhaskarmelkani,2016-08-10 17:39:56
359,2016-08-09 16:56:48,"@bhaskarmelkani Hey, now we can embed jsbin playground, can you create some snippet like this for this tip? http://www.jstips.co/en/copy-to-clipboard/
",loverajoel,2016-08-10 17:39:56
359,2016-08-09 17:13:02,"@bhaskarmelkani what do you think? https://jsbin.com/vimogap/3/edit?js,console
",loverajoel,2016-08-10 17:39:56
359,2016-08-10 06:06:44,"Looks good to me üëç 
",bhaskarmelkani,2016-08-10 17:39:56
359,2016-08-10 06:14:48,"Should I embed https://jsbin.com/vimogap/3/edit?js,console ?
",bhaskarmelkani,2016-08-10 17:39:56
359,2016-08-10 11:31:13,"@loverajoel 
",bhaskarmelkani,2016-08-10 17:39:56
359,2016-08-10 15:14:40,"@bhaskarmelkani you should!

### Now you can be rewarded for your tips

[Support the cominity](https://github.com/loverajoel/jstips#support-the-community)
[How to do that?](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md#requirements)
",loverajoel,2016-08-10 17:39:56
359,2016-08-10 17:35:54,"@loverajoel check if it looks good to you, or it needs any correction 
",bhaskarmelkani,2016-08-10 17:39:56
359,2016-08-10 17:42:54,"Thanks!
",loverajoel,2016-08-10 17:39:56
358,2016-06-12 03:42:35,"New range solution
",asvny,2016-07-28 12:04:41
358,2016-07-25 14:01:00,"@annamalai-saro Please add: https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/from
",zenopopovici,2016-07-28 12:04:41
358,2016-07-25 14:01:11,"Sorry for the long delay.
",zenopopovici,2016-07-28 12:04:41
358,2016-07-28 04:08:45,"@zenopopovici  üëç 
",asvny,2016-07-28 12:04:41
358,2016-07-28 12:04:46,"Thank you!
",zenopopovici,2016-07-28 12:04:41
357,2016-06-10 01:43:24,"## [Title here]
## TL;DR;

[content here]
## Username

[twitter account link or github account link ej: [@tips-js](https://twitter.com/tips_js)]
## Extra

[content here]

Do you want to port some of the tutorials to es6 ?
",ghost,
357,2016-06-10 02:21:51,"It would be great if someone joins and write sass **mixins**.
",ghost,
357,2016-07-25 14:02:59,"@loverajoel This should be considered. Can you test to see if everything works?
",zenopopovici,
357,2016-08-01 02:46:27,"@zenopopovici @wifiextender sorry, I was out, I will test this
",loverajoel,
357,2016-08-10 19:51:52,"@wifiextender Could you please rebase?
",zenopopovici,
356,2016-06-09 14:38:30,"First, awesome repository; I love it!

Now my suggestion for another tip: In my opinion, one of the best things about JS is the lax and kind of lazy way in which the logical operators `||` (logical OR, ""default operator"") and `&&` (logical AND, ""guard operator"") work. Basically: OR will yield the left value if truthy, otherwise the right value; AND will yield the right value if both are truthy, otherwise the falsy is yielded. So to say: the value that matters, that makes or breaks the comparison, is yielded. They don't convert to boolean, because of JS's inherent way of handling truthy/falsy values. You can use them in some very fantastic ways. This would make for a very interesting article.

<S_CODE_TOKEN>
",cerlestes,2016-08-10 19:39:22
356,2016-06-10 07:47:07,"@cerlestes Can you create a PR for it?
",zenopopovici,2016-08-10 19:39:22
356,2016-06-10 08:12:34,"I'll see if I can come up with an interesting text. No promises though :)
",cerlestes,2016-08-10 19:39:22
356,2016-06-10 14:13:11,"Maybe we could improve this very good tip and add that it can be useful mostly to make sure your code is by any means impossible to read.

Jokes aside, there are cases where this might be useful though, let's say you are maintaining a library and you [want the code to be better gzipped by suppressing unnecessary indexed substring such as `:` and `?` for ternary operators that are not being used anywhere else](https://github.com/js-cookie/js-cookie/pull/14/files#diff-b686f7b30e7b0c4f5ed6cd2e87241704R103).

Other than that, there is no real value for this in most real world applications, the only use is if the developer wants to feel smart or turn the code impossible to read.
",FagnerMartinsBrack,2016-08-10 19:39:22
356,2016-06-10 14:22:54,"@FagnerMartinsBrack I disagree. It's not widely used apart from the following case, but there it makes a lot of sense to use the operators in that way and even increases readability dramatically:

<S_CODE_TOKEN>

I agree that it can be used in wrong ways, but the tip should of course also explain that. The wrong way to use this is to execute code, just like with the ternary operator:

<S_CODE_TOKEN>

Please note that I didn't want to include my examples from the original post in the tip, as they're purely for demonstrating how it works. Of course no actualy production code should look like them.
",cerlestes,2016-08-10 19:39:22
356,2016-06-10 14:30:19,">  It's not widely used apart from the following case, but there it makes a lot of sense to use the operators in that way and even increases readability dramatically:

You got me with the logical OR. This one is widely used for default values in ES5:

<S_CODE_TOKEN>

Although in ES6 with default parameters the idea is that it starts to be used less often.

Your second example clearly explain what I mean, using logical operators for cases where a regular imperative `if` would make much more sense.
",FagnerMartinsBrack,2016-08-10 19:39:22
356,2016-06-16 15:45:50," @cerlestes       = D Thanks for the interesting post 

Although I don't have much knowledge of gzipping and bad use of ternary operator mentioned in previous comments, I have a use case of ternary operator. Please bear with me if it turns out to be bad practice : )

Some really simple if statement could be saved by using ternary operator

We could have 

`var count = i  %  2   ?  6 :  7;`

instead of 

<S_CODE_TOKEN>

In this case, I was rendering a ""hive"" with several lines of hexagons. The odd number of line has 6 hexagons each line, and the even one has 7. 

Similarly, another example:

<S_CODE_TOKEN>

If Free is true, .free class will be added to the element.

Personally, logical operators are readable unless they are overly used. Furthermore, considering about the spacing issue of squeezing several really simple if statements into for loops, logical operator might be a better approach in my opinion. 

Hope this helps! Thanks for your patience. ^ ^
",hnaoto,2016-08-10 19:39:22
356,2016-06-20 23:25:32,"> Personally, logical operators are readable unless they are overly used. Furthermore, considering about the spacing issue of squeezing several really simple if statements into for loops, logical operator might be a better approach in my opinion.

<S_CODE_TOKEN>

<S_CODE_TOKEN>

<S_CODE_TOKEN>
",ghost,2016-08-10 19:39:22
356,2016-06-20 23:35:30,"@wifiextender Is that unmaintainable code you posted supposed to prove something?
",FagnerMartinsBrack,2016-08-10 19:39:22
356,2016-06-21 05:45:59,"I can perfectly understand what's going on.
Comments would be nice though (but not sure where to integrate them)
",kurtextrem,2016-08-10 19:39:22
356,2016-06-21 05:51:53,"> Comments would be nice though

There is also the alternative of trying to write legible code instead of writing comments to workaround it.
",FagnerMartinsBrack,2016-08-10 19:39:22
356,2016-06-21 06:08:01,"What exactly isn't understandable?
Even through my gmail app I could read the code, with syntax highlighting it's even easier.
",kurtextrem,2016-08-10 19:39:22
356,2016-06-21 07:09:46,"> What exactly isn't understandable? Even through my gmail app I could read the code, with syntax highlighting it's even easier.

Code should be self documented. If the developer judges that a code need comments (as you proposed), then that is a strong indication that the code is not legible enough. If it was legible enough, then the need for comments explaining what the code is doing would be unnecessary.
",FagnerMartinsBrack,2016-08-10 19:39:22
356,2016-06-21 12:42:24,"@FagnerMartinsBrack Your <= ES5 and **readable** alternative without using templating engine is ?

<S_CODE_TOKEN>

@kurtextrem Thanks for the support.
",ghost,2016-08-10 19:39:22
356,2016-06-21 13:35:52,"@wifiextender

> @FagnerMartinsBrack Your <= ES5 and readable alternative without using templating engine is ?

Using a proper view framework like React without trying to reinvent the wheel with plain JavaScript.

I am not saying that isn't a smart approach for templating, it is, but there are two kinds of smart solutions: The one that want to focus in being smart and focus in irrelevant performance at the cost of legibility, and the one that focus in solving problems with proper legibility at the cost of irrelevant performance.

Nobody can provide an alternative for that code because it is impossible to know what it is trying to achieve, and the code itself cannot express clearly what it is trying to do. Architecture starts from the problem and goes up to the implementation, without knowing the problem it is impossible to suggest a different implementation, infering the problem from a snippet of code is dangerous, for that we might be missing important context. I can bet though that the problem could be fixed without having to create tons of `arr[1][0]`, `[arr[0] - 1]`, `: '' }` and `[6][3].toLowerCase().split(',')` tokens that mean nothing to the reader.

JavaScript is not there yet, unfortunately.
",FagnerMartinsBrack,2016-08-10 19:39:22
356,2016-06-21 15:55:49,"> Nobody can provide an alternative for that code because it is impossible to know what it is trying to achieve, and the code itself cannot express clearly what it is trying to do.

Same could be said for your statement:

> Using a proper view framework like React without trying to reinvent the wheel with plain JavaScript.

When you complete porting my last and short example to ES5, you'll build the confidence that you can solve my first example. Upon trying it, you'll start losing track what's going on, the code will become more unreadable and you'll end up frustrated yelling at your screen. Then you'll realize what's the big deal of templating ~~languages~~ engines and frameworks such as React you mentioned earlier in the <= ES5 era.

---

I'll butt out of this conversation for now, until some close-minded and moaning people are gone as they brought here only negativism without contributing back something useful.
",ghost,2016-08-10 19:39:22
356,2016-06-22 14:28:52,"> When you complete porting my last and short example to ES5, you'll build the confidence that you can solve my first example.

I never said anything about ES5, you did.

> Upon trying it, you'll start losing track what's going on, the code will become more unreadable and you'll end up frustrated yelling at your screen.

Lots of assumptions and argument against a straw man that you created about this ES5 thing that I never mentioned.

> Then you'll realize what's the big deal of templating languages engines and frameworks such as React you mentioned earlier in the <= ES5 era.

I never mentioned it is better to use React in <= ES5 era, I mentioned it is better using React, it doesn't matter which ES version. My arguments were against the way variables in the template were structured using plain JS, not about using the concept of templates or ES5/ES6/etc.. The code is just reinventing React and all implicit scope features (that cannot be seen in the code) unnecessarily, doing such thing take time and resources of any project.

TL;DR:
1. [This comment](https://github.com/loverajoel/jstips/issues/356#issuecomment-227299429) have shown a piece of code without any explanation on what it has to do with this post.
2. [This comment](https://github.com/loverajoel/jstips/issues/356#issuecomment-227349008) thinks that understanding what a trivial piece of code **does** is enough to conclude that it has an efficient architecture.
3. [This comment](https://github.com/loverajoel/jstips/issues/356#issuecomment-227441345) started a parallel off-topic conversation with a few statements of fact.
4. [This comment](https://github.com/loverajoel/jstips/issues/356#issuecomment-227485504) started a discussion against itself totally ignoring or not understanding the previous comment.
",FagnerMartinsBrack,2016-08-10 19:39:22
356,2016-08-10 19:39:22,"Please come back with a PR. We can debate when we review it.
",zenopopovici,2016-08-10 19:39:22
355,2016-06-05 10:24:36,"## code section display problem on topic 12
## TL;DR;

![screen shot 2016-06-05 at 6 22 22 pm](https://cloud.githubusercontent.com/assets/559351/15804875/8889e2e4-2b4a-11e6-962a-107776006671.png)
## Username

[@amo_wu](https://twitter.com/amo_wu)
",amowu,2016-06-05 10:50:53
355,2016-06-05 10:50:49,"@amowu thanksÔºÅ
",neighborhood999,2016-06-05 10:50:53
354,2016-06-02 12:01:18,"Hey,

consider using localeCompare method in the sort callback. More info: https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare
",fi0dor,2016-07-25 14:00:08
354,2016-06-02 14:20:28,"Hey @fi0dor,

There is no full support for Safari or IE10 for localeCompare. I suggest we leave it as it is.
",zenopopovici,2016-07-25 14:00:08
354,2016-07-25 14:00:18,"Closing due to no response.
",zenopopovici,2016-07-25 14:00:08
353,2016-05-24 14:38:20,"## [Title here]
## TL;DR;

[content here]
## Username

[twitter account link or github account link ej: [@tips-js](https://twitter.com/tips_js)]
## Extra

[content here]
",panalbish,2016-06-02 14:18:27
353,2016-06-02 14:18:32,"Thanks!
",zenopopovici,2016-06-02 14:18:27
352,2016-05-17 00:09:26,"## New post in spanish
## Username

[@ppollo07](https://twitter.com/ppollo07)
",ppollo07,2016-05-17 18:05:20
351,2016-05-14 00:31:10,,neighborhood999,2016-05-14 00:31:15
350,2016-05-12 07:10:15,"Hey guys, I have this issue for about **5 months** or so. 

First of all, really great tool, but very **buggy** on my **Android** device. Having the app installed and most of the time it runs well. I can see all the tips and so on. But sometimes (maybe when I not shutdown the app and I let it in the background for some days) when I want to access the App after some days again (**WITHOUT internet**). I just have a white screen. So basically the tips are not shown. There is no error or so. 

Then I need to clear the cache of the app to run again. Or let's say to get a fresh list again. Uncool because I often want to use the app when having no internet at the train station.

Is there a way to fix it. Can someone please test the app without internet and wait a specific time because accessing it again. Thanks.

Maybe similar issue: https://github.com/loverajoel/jstips/issues/332
",kwoxer,2016-08-10 19:46:34
350,2016-05-12 09:30:09,"@Satya5614 ping
",sjfkai,2016-08-10 19:46:34
350,2016-05-24 18:19:01,"Okay, so I still get it. And here is how to reproduce it and how to ""fix"" it. Maybe you get an idea how to fix it by coding.

So you just start jstips fresh. So the best is to restart Android. Now make sure you are not connected to internet as if you have no connection while traveling. And now you see the white page.

So why do you try to load or refresh the list if there is no connection? Absoluty makes no sense to me. And you actually see there is then no way to see any tip!

To fix it you just need a internet connection. And then start jstips again and you get the list. Okay. So there is no need to reinstall at least!

So I would say, the best would be to not check for updates on start when there is no internet connection. And this issue here is solved. :)
",kwoxer,2016-08-10 19:46:34
350,2016-06-12 14:25:16,"Slightly modified **manifest.json**

<S_CODE_TOKEN>

**index.html**

<S_CODE_TOKEN>

The service worker which will intercept the resource requests and serve the cached one  **js/sw.js**

<S_CODE_TOKEN>

Now both, the web page and the chrome app will work offline. The more **filesToCache** you add, the more will be accessible offline.

---

18 hours later, edited sw.js:

**js/sw.js**

<S_CODE_TOKEN>

---

[Ouch](https://github.com/loverajoel/jstips/blob/gh-pages/_layouts/default.html#L8) [\* 2](http://www.i18nguy.com/markup/metatags.html)

<S_CODE_TOKEN>
",ghost,2016-08-10 19:46:34
350,2016-06-12 16:22:51,"When will the new Version be out so that I can test :)
",kwoxer,2016-08-10 19:46:34
350,2016-06-13 06:37:38,"Until the service worker caching is added to JS Tips, visit my blog to see the offline capability in action:
- Visit my blog so the resources to be cached
- Close the browser
- Pull out your internet cable
- Open up your browser
- Visit my blog page

The service worker will intercept the resource requests and serve the cached one (while u r offline) until you reboot your device.

The chrome app and the web page are running in two different sandbox environments, so none of them shares any cached resources. If you opened the app the cache will be assigned to the app and vice versa.
",ghost,2016-08-10 19:46:34
350,2016-06-13 14:56:35,"It turns out that the service worker has life cycle, so my tablet was sleeping for roughly 2 hours and the first time I tried to load my blog didn't went well as the service worker was terminated while the droid was sleeping. On the second and every next time the blog was loaded from the cache while being offline ofc.

![](https://wifiextender.github.io/img/file/blog-web-app/1.jpg)

![](https://wifiextender.github.io/img/file/blog-web-app/2.jpg)

Going offline. Choosing Airplane mode to terminate even more services that may serve cached resources.

![](https://wifiextender.github.io/img/file/blog-web-app/3.jpg)

![](https://wifiextender.github.io/img/file/blog-web-app/4.jpg)

![](https://wifiextender.github.io/img/file/blog-web-app/5.jpg)

![](https://wifiextender.github.io/img/file/blog-web-app/6.jpg)

![](https://wifiextender.github.io/img/file/blog-web-app/7.jpg)

2 hours later

![](https://wifiextender.github.io/img/file/blog-web-app/8.jpg)

Closed the browser and re-opened it.

![](https://wifiextender.github.io/img/file/blog-web-app/9.jpg)

![](https://wifiextender.github.io/img/file/blog-web-app/10.jpg)
",ghost,2016-08-10 19:46:34
350,2016-08-10 19:46:34,"This is the best we can do right now. Thanks @wifiextender .
",zenopopovici,2016-08-10 19:46:34
349,2016-05-10 12:15:41,"## typo fix
## TL;DR;

[content here]
## Username

[hingsir](https://github.com/hingsir)
## Extra

[content here]
",hingsir,2016-05-10 12:59:23
349,2016-05-11 02:15:36,"@hingsir thanks
",sjfkai,2016-05-10 12:59:23
348,2016-05-10 00:16:29,,neighborhood999,2016-05-10 00:16:34
347,2016-05-09 22:39:58,"## [Translate last 3 post es_ES]
## @ppollo07
",ppollo07,2016-05-10 01:17:06
346,2016-04-27 07:50:42,,neighborhood999,2016-04-27 07:51:23
345,2016-04-22 07:03:19,"## The difference between var and let
## TL;DR;

In this tip, here are we talked about
-  The difference between `var` and `let`
-  Should we replace `let` with `var`?
-  use `let` safely.
## Username

 [@richzw](https://github.com/richzw)
## Extra

[content here]
",richzw,2016-08-25 18:53:15
345,2016-08-23 21:12:45,"@richzw  can you add a playground like this https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-08-10-comma-operaton-in-js.md ?
",loverajoel,2016-08-25 18:53:15
345,2016-08-25 18:55:15,"@richzw thanks!
",loverajoel,2016-08-25 18:53:15
344,2016-04-22 02:56:58,"## fix typo in the 44th tip
## TL;DR;

<S_CODE_TOKEN>
## Username

[@richzw](https://github.com/richzw)
## Extra
",richzw,2016-04-22 02:59:03
343,2016-04-12 11:52:49,"update tips and translate tip 52.
",neighborhood999,2016-04-12 11:53:03
342,2016-04-12 00:54:53,"## Get file extension
## TL;DR;

Several solutions are posted here to get the more efficient way to get the file extension.
## 

 [@richzw](https://github.com/richzw)
## Extra
",richzw,2016-04-21 17:42:28
342,2016-04-12 07:42:03,"Great tip.

:shipit: 
",kurtextrem,2016-04-21 17:42:28
342,2016-04-12 21:09:06,"nice :shipit: 
",loverajoel,2016-04-21 17:42:28
342,2016-04-13 05:38:43,":shipit:
",sjfkai,2016-04-21 17:42:28
342,2016-04-13 09:02:00,":shipit: 
",neighborhood999,2016-04-21 17:42:28
342,2016-04-13 11:13:31,":shipit: . Nice work!
",zenopopovici,2016-04-21 17:42:28
342,2016-04-13 14:36:09,"A couple of issues:

Your _How does it _work?_ section is a _word-for-word copy_ of the linked StackOverflow answer. You should probably rewrite it in your own words to avoid accusations of plagiarism. (The other reason to do so is that the original explanation actually leaves out a couple of details.)

You should also make a note that `getFileExtension3()` is the only _correct_ implementation of the three. I suggest making a table of the results of all three functions called over all your test strings, so that the differences become obvious.
",gromgit,2016-04-21 17:42:28
342,2016-04-14 04:04:38,"@gromgit, thank you for your comments, I have updated this tip per your suggestion. 
",richzw,2016-04-21 17:42:28
342,2016-04-21 17:57:43,"@richzw thanks for your tip! really good tip!
",loverajoel,2016-04-21 17:42:28
341,2016-04-08 12:36:54,"## How to use optional arguments in functions (with optional callback)
## TL;DR;

You can make function arguments and callback optional
## alphashuro

[@alphashuro](https://twitter.com/alphashuro)
[alphashuro](https://github.com/alphashuro)
",alphashuro,2016-05-06 15:05:06
341,2016-05-03 21:42:29,"ok, I like this :shipit: 
",loverajoel,2016-05-06 15:05:06
341,2016-05-03 21:46:49,"Nais :shipit: 
",zenopopovici,2016-05-06 15:05:06
341,2016-05-04 12:11:20,"Please don't leak arguments: https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#3-managing-arguments
",kurtextrem,2016-05-06 15:05:06
341,2016-05-04 13:14:39,"Thank you @kurtextrem , good catch, I did not know there were rules about leaking arguments. I will fix that tonight and update the PR
",alphashuro,2016-05-06 15:05:06
341,2016-05-04 19:50:03,"I've updated the code, any thoughts?
",alphashuro,2016-05-06 15:05:06
341,2016-05-06 10:12:02,":shipit: :+1: 
",kurtextrem,2016-05-06 15:05:06
341,2016-05-06 14:25:58,":shipit:  üëç 
",sjfkai,2016-05-06 15:05:06
341,2016-05-06 14:53:08,":shipit: 
",zenopopovici,2016-05-06 15:05:06
340,2016-04-08 10:25:16,"## Add one solution in ES6 for 2016-02-07 tips
## TL;DR;

Using spread operator in ES6

<S_CODE_TOKEN>
## Username

[@zangw](https://github.com/richzw)
## Extra

To recursively flattens array, one good method [`flattenDeep`](https://lodash.com/docs#flattenDeep) could do that. However, the [`flatten`](http://underscorejs.org/#flatten) in underscore only be flattened a single level.
",richzw,2016-04-11 21:13:58
340,2016-04-11 21:14:02,"thanks!!
",loverajoel,2016-04-11 21:13:58
339,2016-04-07 20:47:46,"Maybe an easier and faster way?

<S_CODE_TOKEN>

Does anyone know if this would have any problems?
",thelambdaparty,2016-08-10 19:40:48
339,2016-04-07 23:39:11,"Is `timestamp = (+new Date / 1000) | 0` intended to be the same as `timestamp = ~~(+new Date / 1000)` which is intended to be the same as `Math.floor(+new Date / 1000)`? If yes, then it is worth pointing out the benefits of each one so that one can decide the tradeoffs.
",FagnerMartinsBrack,2016-08-10 19:40:48
339,2016-04-08 03:21:03,"I've no cons about neither of the options, just the sintaxe verbosity...
In terms of performance, _Date.now()_ looks faster than _new Date_ in my tests.
",lnfnunes,2016-08-10 19:40:48
339,2016-08-10 19:40:48,"Leaving as it is right now. If you have a suggestion, please make a PR with addendum to the tip. 
",zenopopovici,2016-08-10 19:40:48
338,2016-04-07 16:52:16,"## [Breaking or continuing loop in functional programming]
## TL;DR;

[content attached..]
## vamshisuram

[twitter account link or github account link ej: [@vamshisuram](https://twitter.com/vamshisuram)]
",vamshisuram,2016-08-17 16:53:43
338,2016-04-11 21:21:11,"@vamshisuram I link this one, can you add more explanation about `some()`? maybe an oficial link and jsbin demo can help!
",loverajoel,2016-08-17 16:53:43
338,2016-04-13 09:12:48,"@loverajoel Added MDN links and quoted their description on **some** method.
",vamshisuram,2016-08-17 16:53:43
338,2016-05-03 21:41:23,"the format of the file should be .md
",loverajoel,2016-08-17 16:53:43
338,2016-08-09 17:37:58,"This is nice. :shipit: 
",zenopopovici,2016-08-17 16:53:43
338,2016-08-15 16:26:40,"@vamshisuram can you add a playground like this https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-08-10-comma-operaton-in-js.md ?
",loverajoel,2016-08-17 16:53:43
338,2016-08-17 16:55:58,"Thanks!
",loverajoel,2016-08-17 16:53:43
337,2016-04-07 02:49:49,"## Add performance compare between `Array.prototype.slice.call(arguments)` and `[].slice.call(arguments);`
## TL;DR;

Add performance compare between `Array.prototype.slice.call(arguments)` and `[].slice.call(arguments);`
## Username

[@zangw](https://github.com/richzw)
## Extra

None
",richzw,2016-04-07 11:01:35
337,2016-04-07 05:42:23,"That applies only to Chrome. On a recent Firefox, it's actually a wash:
![arguments_firefox_perf](https://cloud.githubusercontent.com/assets/215702/14341566/63cf2b2a-fcc5-11e5-8515-282776fb4861.png)
Also, I'd drop the ""performance optimization"" claim in the last statement; manual reconstruction of `arguments` turns out to [only be definitively faster in Firefox](https://jsperf.com/arguments-leaking/3).
In general, I'd avoid make definitive statements about performance that are implemention-dependent by their very nature.
",gromgit,2016-04-07 11:01:35
337,2016-04-07 07:26:26,"The performance is irrelevant here, but the non-minifiable bytes that composes `Array.prototype.slice.call` and should be downloaded are not.
",FagnerMartinsBrack,2016-04-07 11:01:35
336,2016-04-05 18:22:31,"that return --> that returns
",da-vaibhav,2016-04-05 18:45:19
336,2016-04-05 18:45:16,"thanks
",loverajoel,2016-04-05 18:45:19
335,2016-03-28 08:16:27,"There were several semicolons missing. Now, they're not. Yay.
",tfrommen,2016-03-28 11:44:43
335,2016-03-28 11:44:49,"Thanks!
",zenopopovici,2016-03-28 11:44:43
334,2016-03-18 12:34:47,,neighborhood999,2016-03-18 12:34:52
333,2016-03-17 05:47:25,"as title
",neighborhood999,2016-03-17 05:47:30
332,2016-03-15 22:17:19,"On iPhone 6. V 9.2.1. None of the tips show up on the app. I check for updates and nothing happens. What else can I provide to help with this issue? Redownload the app?
",tazcarper,2016-08-10 19:47:02
332,2016-03-18 13:46:49,"@tazcarper Can you try to reinstall the app? 
",zenopopovici,2016-08-10 19:47:02
332,2016-03-18 13:57:13,"@tazcarper we didn't make the iOs app, somebody with the RSS feed made that, and yes it's failing :(
",loverajoel,2016-08-10 19:47:02
332,2016-03-20 02:45:34,"@tazcarper there is  a bug which clears all tips. Reinstalling the app can help you for now. @loverajoel I promise I will release the next version of the app this week with bugs fixed. And as you suggested I am developing it in React-Native.
",Satya5614,2016-08-10 19:47:02
332,2016-08-10 19:47:02,"This should be fixed at least partially by #350.
",zenopopovici,2016-08-10 19:47:02
331,2016-03-15 03:20:13,"## [Fix tldr]
## TL;DR;

`tldr` of tip16 was same with tip1.
",sjfkai,2016-03-15 14:09:08
331,2016-03-15 05:36:51,":shipit: 
",loverajoel,2016-03-15 14:09:08
331,2016-03-15 14:09:22,"Thanks @sjfkai 
",zenopopovici,2016-03-15 14:09:08
330,2016-03-14 14:23:52,"Fixing tip tldr. It was the same of this [tip](https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-01-01-angularjs-digest-vs-apply.md)
",hevertoncastro,2016-03-14 14:56:48
330,2016-03-14 14:57:02,"Thanks. Merged.
",zenopopovici,2016-03-14 14:56:48
329,2016-03-12 07:00:54,"## Changes in tip 13
## TL;DR;

Added Note at last
## Username

[SarjuHansaliya](https://github.com/SarjuHansaliya)
",SarjuHansaliya,2016-03-12 16:28:32
329,2016-03-12 07:01:44,"As we discussed in #323.
",SarjuHansaliya,2016-03-12 16:28:32
329,2016-03-12 16:28:31,":+1: 
",loverajoel,2016-03-12 16:28:32
328,2016-03-11 13:07:08,,neighborhood999,2016-03-11 13:07:19
327,2016-03-11 12:04:43,"## Make easy loop on array
## TL;DR;

 Make a elegant loop on array 
## Username

Julien jamet: [github](https://github.com/jamet-julien)
",jamet-julien,2016-05-12 17:29:00
327,2016-03-11 13:52:59,"@jamet-julien: Please use english.
",zenopopovici,2016-05-12 17:29:00
327,2016-03-11 14:03:35,"Is it better ?
",jamet-julien,2016-05-12 17:29:00
327,2016-03-11 14:26:06,"@jamet-julien There is a bit of work to do maybe the others can chime in ...
",zenopopovici,2016-05-12 17:29:00
327,2016-03-11 14:39:26,"@zenopopovici Thanks.
Is it good now?
",jamet-julien,2016-05-12 17:29:00
327,2016-03-11 14:43:31,"@jamet-julien Thanks Julien, we will be adding this under review soon. We still have some backlog of tips proposals. When it is under review, more people will chime in and suggest changes. We'll ping you when that happens.
",zenopopovici,2016-05-12 17:29:00
327,2016-03-11 14:47:16,"@zenopopovici Thanks.
",jamet-julien,2016-05-12 17:29:00
327,2016-03-12 07:07:23,"@jamet-julien A few general comments:
- What does ""the condition list would be huge"" in your first sentence mean?
- Since `index` is part of the looping state of `aList`, it really should be a _property_ of `aList` (i.e. `aList.index`) rather than a separate variable.
- There's a bug in your example. Your `change()` function does a _pre-increment_, so the first `change()` call actually returns `aList[1]`, i.e. `B`.
- I think a more level-appropriate tip for JSTips would be a _loop generator_ function that takes an array as input and ""enhances"" it with self-looping capability:

<S_CODE_TOKEN>
- [Optional, for extra JSTips :+1:] You've looped to `E` in the above example, then someone calls `aList.pop()` twice, so `aList == ['A','B','C']`. How do you properly handle the next `aList.next()` or `aList.prev()`? (Your original `change()` function doesn't handle this correctly either.)
",gromgit,2016-05-12 17:29:00
327,2016-03-12 16:28:04,"@gromgit really nice feedback
",loverajoel,2016-05-12 17:29:00
327,2016-03-14 09:01:27,"@gromgit thank. I look this and update the code.
",jamet-julien,2016-05-12 17:29:00
327,2016-03-14 10:28:44,"@jamet-julien Much better now, although the first sentence is still rather vague. I suggest something like this instead:

> Sometimes, we need to loop endlessly over an array of items, like a carousel of images or an audio playlist. Here's how to take an array and give it ""looping powers"":
",gromgit,2016-05-12 17:29:00
327,2016-03-14 13:38:20,"@gromgit better, isn't it ?
",jamet-julien,2016-05-12 17:29:00
327,2016-03-14 14:48:23,"@jamet-julien :+1:
",gromgit,2016-05-12 17:29:00
327,2016-03-16 09:51:12,"@loverajoel thanks, is it Ok ?
",jamet-julien,2016-05-12 17:29:00
327,2016-03-22 17:14:12,"@jamet-julien you have my :shipit: 
",loverajoel,2016-05-12 17:29:00
327,2016-03-22 17:21:52,"Mine too :shipit: 
",zenopopovici,2016-05-12 17:29:00
327,2016-04-29 12:01:01,"@loverajoel  Can you tell me what is the next step please. Could I do modification ?
thank.
",jamet-julien,2016-05-12 17:29:00
327,2016-05-02 01:23:47,"@JakeRawr we need 5 shipits to merge this, I'll try merge this week
",loverajoel,2016-05-12 17:29:00
327,2016-05-06 13:50:17,":shipit: üêî 
",ppollo07,2016-05-12 17:29:00
327,2016-05-06 14:03:45,":shipit: üé± 
",aschelstraete,2016-05-12 17:29:00
327,2016-05-06 14:24:31,":shipit: üëç 
",sjfkai,2016-05-12 17:29:00
327,2016-05-11 19:54:36,":shipit:
",cjkumaresh,2016-05-12 17:29:00
327,2016-05-12 01:01:51,":shipit: 
",pklinger,2016-05-12 17:29:00
326,2016-03-11 10:07:12,"## Removes redundant JS mention
## TL;DR;

Redundant JS mention
## Username

@ryanoasis 
## Extra
- removes redundant mention of 'JS' (all of these are ""in JS"")
- makes tip description consistent with the others
- tip 46 I think is an exception to this because it helps clarify that it is not referring to the more common jQuery implementation
",ryanoasis,2016-03-11 13:53:28
326,2016-03-11 13:53:36,"Right! Thanks!
",zenopopovici,2016-03-11 13:53:28
325,2016-03-09 16:27:48,"The original tip mentions options objects, for which it's almost always
necessary to handle missing properties with default values. I show
how this can be done in a very neat way.

Also added examples to show what happens when incorrect, incomplete
or missing arguments are passed with/without default parameters.

@dislick
",gromgit,2016-03-10 17:53:42
325,2016-03-10 10:20:08,"That's really cool, great addition! I would love to see this being merged.
",dislick,2016-03-10 17:53:42
325,2016-03-10 16:16:29,"Hello @gromgit ! 

Just one typo mistake : 

<S_CODE_TOKEN>

Also, I'm not sure why you choose `{ name = ""Anony"", surname = ""Moose"" } = {}` instead of simply `{ name = ""Anony"", surname = ""Moose"" }` for the first argument in the `sayHelloTimes2` definition?

It doesn't seems to change anything so I was wondering if there was a reason ?

Also, :shipit: 
",adaniloff,2016-03-10 17:53:42
325,2016-03-10 16:40:56,"Yes .. I too wondering about that .. First argument.. What that extra ={} will do.. ? First of all.. Is that right? If right .. What it will do.. Can you please explain?
",shivarajnaidu,2016-03-10 17:53:42
325,2016-03-10 16:51:39,"@adaniloff Ouch, thanks for the typo catch!

@shivarajnaidu As explained in the text, `= {}` denotes the default value for the entire parameter object. It seems confusing because I forgot to include one set of examples, where the expected object parameter is completely missing. As you can see from my latest update, the results with and without `= {}` are very different, in one case potentially **fatal** to your code.
",gromgit,2016-03-10 17:53:42
325,2016-03-10 17:53:56,"Thanks @gromgit  ;). Merged.
",zenopopovici,2016-03-10 17:53:42
324,2016-03-09 11:37:22,,neighborhood999,2016-03-09 11:37:26
323,2016-03-09 07:43:19,"## Measure Operation time using `console` object
## TL;DR;

Measure Operation time using `console` object
## Username

[SarjuHansaliya](https://github.com/SarjuHansaliya)
",SarjuHansaliya,2016-03-12 06:41:24
323,2016-03-09 08:16:06,"@kurtextrem Thanks.
Is it good now? 
",SarjuHansaliya,2016-03-12 06:41:24
323,2016-03-09 08:26:23,"@kurtextrem  thanks :+1: 
",SarjuHansaliya,2016-03-12 06:41:24
323,2016-03-09 13:35:53,"@SarjuHansaliya There is one tip equal than yours, take a look [here](http://www.jstips.co/en/tip-to-measure-performance-of-a-javascript-block/).
What about merge both?
",loverajoel,2016-03-12 06:41:24
323,2016-03-09 16:03:29,"Ohh
Sure , We should merge both.
Sorry I haven't seen that post earlier
",SarjuHansaliya,2016-03-12 06:41:24
323,2016-03-11 17:55:05,"@SarjuHansaliya Just make changes on that one and submit a new PR.
",zenopopovici,2016-03-12 06:41:24
323,2016-03-12 04:37:35,"Can you help me ?
I don't see any ""Create Pull Request"" Button.
![screen shot 2016-03-12 at 10 06 35 am](https://cloud.githubusercontent.com/assets/6604146/13720853/2b59fe68-e83a-11e5-92c7-7f7fd837416c.png)

Do I have to close this PR ?
",SarjuHansaliya,2016-03-12 06:41:24
323,2016-03-12 05:51:46,"@SarjuHansaliya I suggest you leave this PR alone for now, just start a new one on the other tip. Then when you're done submitting that PR, come back here and close this one.
",gromgit,2016-03-12 06:41:24
323,2016-03-12 06:02:52,"@gromgit 
I am new to git , so I am little bit confused.
I have made changes to tip 13 in my local , then I push it to my forked repo on github.
Now those commits are listed here , why so ? 

Even I can't see new PR button ?

Can you guide me?
",SarjuHansaliya,2016-03-12 06:41:24
323,2016-03-12 06:23:08,"@SarjuHansaliya Ah, I didn't notice the problem earlier. GitHub tracks PR content by **branch**; since all your changes were on the main `gh-pages` branch, what you ended up doing was combine all your changes (even for other tips) into this PR instead.

The cleanest and most reliable way to resolve this is to close this PR and reset your own state:
1. Copy out any changed files from your old fork to another directory.
2. [Delete your old fork on GitHub](https://help.github.com/articles/deleting-a-repository/).
3. Delete the local copy of your own fork.
4. Re-fork JSTips.
5. Copy in all the changed files you saved from [1].

Going forward, you really should create a separate branch for each PR. Here's what I do:
1. [Update local fork from the main repo](https://help.github.com/articles/syncing-a-fork/).
2. Create and checkout a new branch: `git checkout -b tipXX-update gh-pages`
3. Make and commit edits.
4. Push this branch to your fork: `git push upstream tipXX-update`
5. Go to your forked repo page. There should be a Compare and Pull Request button next to your new branch. Click it and follow the instructions.
",gromgit,2016-03-12 06:41:24
323,2016-03-12 06:41:24,"@gromgit Oh thanks man.
Now I got the problem , It makes me clear now.

So I am closing this PR.
Will submit new.
",SarjuHansaliya,2016-03-12 06:41:24
322,2016-03-08 11:13:47,,rccoder,2016-03-09 02:58:56
322,2016-03-09 02:58:31,"@rccoder  Thanks!
",sjfkai,2016-03-09 02:58:56
321,2016-03-08 10:02:03,,neighborhood999,2016-03-08 10:02:45
320,2016-03-07 06:50:51,"## [Fix  some errors of tip 33]
## TL;DR;

[content here]
## Username

[@sjfkai](https://github.com/sjfkai)
## Extra

[content here]
",sjfkai,2016-03-07 09:53:22
320,2016-03-07 09:53:39,"Thanks @sjfkai ;)
",zenopopovici,2016-03-07 09:53:22
320,2016-03-08 02:08:38,"@gromgit  @loverajoel  You are right. I will update this directly.
",sjfkai,2016-03-07 09:53:22
319,2016-03-06 11:16:49,,neighborhood999,2016-03-06 11:16:53
318,2016-03-05 09:25:20,"## Update Tip #03 Improve Nested Conditionals with a refactoring example
## TL;DR;

Fixes #66 with an example
## Username

https://github.com/petetnt
",petetnt,2016-03-05 13:37:09
318,2016-03-05 13:37:20,"Cool @petetnt :) Thanks!
",zenopopovici,2016-03-05 13:37:09
318,2016-03-05 13:54:44,":+1: 
",petetnt,2016-03-05 13:37:09
317,2016-03-05 05:46:45,"## 2016-03-03-helpful-console-log-hacks.md
## TL;DR;

Added Safari Debugger Link
## Username

[SarjuHansaliya](https://twitter.com/SarjuHansaliya)
",SarjuHansaliya,2016-03-05 13:36:10
317,2016-03-05 13:36:12,"Nice. Thanks!
",zenopopovici,2016-03-05 13:36:10
316,2016-03-05 05:13:06,"as title
",neighborhood999,2016-03-05 05:13:12
315,2016-03-04 01:18:17,"## Fix contributing
## TL;DR;

as title
## Username

[neighborhood999](https://github.com/neighborhood999)
",neighborhood999,2016-03-04 14:13:14
315,2016-03-04 14:13:19,"Thanks :)
",zenopopovici,2016-03-04 14:13:14
314,2016-03-03 17:41:16,"Per @neighborhood999 's observation that the `tip-tldr` field is also affected by the _no starting backtick_ rule, I've updated it to be as clear as possible.
",gromgit,2016-03-03 20:27:32
314,2016-03-03 20:27:38,"Thanks, merged!
",zenopopovici,2016-03-03 20:27:32
314,2016-03-04 23:06:02,":+1: 
",loverajoel,2016-03-03 20:27:32
313,2016-03-03 16:06:11,"## Create array sequence `[0, 1, ..., N-1]` in one line
## TL;DR;

Compact one-liners that generate ordinal sequence arrays
## Username

[gromgit](https://github.com/gromgit)
## Extra
- Shorter explanation that should be sufficient for intermediate-level JS developers
- Original exposition now in my own repo, link in text
",gromgit,2016-03-05 05:18:06
313,2016-03-03 16:10:41,"Related to this, I've started the [jstips-xe](https://github.com/gromgit/jstips-xe) repo to collect any explanations I may write which are too long to fit in 2 minutes.

@SarjuHansaliya , please let us know which revamp you refer, or if you have some other ideas. Thanks.
",gromgit,2016-03-05 05:18:06
313,2016-03-03 18:18:04,"@gromgit @loverajoel  I like the way it is with this new repo.

I think it could be interesting to include those directly in the jstip repo, with two distinct ""room"" (one accessible from the readme, the other one only accessible from each tip when an explanation is desired).

What do you think guys ? 
",adaniloff,2016-03-05 05:18:06
313,2016-03-03 20:28:09,"I prefer this too.
",zenopopovici,2016-03-05 05:18:06
313,2016-03-04 06:02:18,"@gromgit  @loverajoel 
This idea looks good.
If someone doesn't know some basic then one can relate it.
",SarjuHansaliya,2016-03-05 05:18:06
313,2016-03-05 05:29:28,"@loverajoel  We can close this now ?
",SarjuHansaliya,2016-03-05 05:18:06
313,2016-03-05 05:33:12,"@SarjuHansaliya sorry? I merged this based in your comment 
![image](https://cloud.githubusercontent.com/assets/1700100/13545915/99d93ca2-e27a-11e5-970d-559a1367314c.png)
",loverajoel,2016-03-05 05:18:06
313,2016-03-05 05:34:32,"yes I also mean to merge #313 only
",SarjuHansaliya,2016-03-05 05:18:06
312,2016-03-03 12:52:25,"#295

![](http://imgur.com/4WAwR6t.png)

if **tip-tldr** start with (`), make build failure.

after fix:
![](http://imgur.com/Hx5u2WE.png)

so we need add this information to **CONTRIBUTING** for user.
",neighborhood999,2016-03-03 16:52:41
312,2016-03-03 16:52:40,"@neighborhood999 https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md
It's already added... We as contributors must be vigilant before performing merges also.
",zenopopovici,2016-03-03 16:52:41
312,2016-03-03 19:31:47,"for some reason, the build is broken and don't are sending the alert email.
I merged a new tip and sent another fix and the page didn't rebuild.
Any ideas?
",loverajoel,2016-03-03 16:52:41
312,2016-03-03 19:33:09,"In local everything works as expected
",loverajoel,2016-03-03 16:52:41
312,2016-03-03 19:43:32,"done :p
",loverajoel,2016-03-03 16:52:41
312,2016-03-03 20:31:20,"What was the issue?
",zenopopovici,2016-03-03 16:52:41
312,2016-03-04 00:53:35,"@zenopopovici I megred before I have check, but I don't know tip-tldr let page build broken...

![](http://i.imgur.com/64mC33c.png)
yesterday, I wording contributors_zh_TW but in **Use backticks..** display is not normal...
I have fix and send PR #315
I know I am collaborator but I think this need @loverajoel @zenopopovici review and check, thanks :smile:
",neighborhood999,2016-03-03 16:52:41
312,2016-03-04 14:16:17,"@neighborhood999 Thanks ... I merged the change ... it looked fine in code, I'll be more careful. 

Also please feel free to fix things if you see a problem. I think it's better for a problem to be fixes as soon as possible than to wait for someone to approve an obvious fix. 

We can easily revert stuff if we do mistakes.
",zenopopovici,2016-03-03 16:52:41
312,2016-03-04 14:59:49,"I think that my problem was Github lag, now everything are working as expected!
",loverajoel,2016-03-03 16:52:41
311,2016-03-03 12:28:23,,neighborhood999,2016-03-03 12:28:34
310,2016-03-03 10:43:21,"First of all, I like the idea of this repo :+1: just a nice read now and then.

However i was wondering.. perhaps we should do this for other (programming) languages too, i.e. gather any tip in any language. Allowing us to filter on language, or perhaps a tailored page per language (PHPTips, JSTips, etc.)

What do you think?
",ro0NL,2016-08-10 19:45:12
310,2016-03-03 11:09:04,"Right now we would have to change a lot to implement this or start separate side-projects. I don't know the availablility of @loverajoel to do that. Or maybe you could start your own project :)
",zenopopovici,2016-08-10 19:45:12
310,2016-03-03 11:21:46,"I understand. I'm not sure @loverajoel only fancies JS a lot or is willing to support multiple programming languages at all. If so I would like to help and think a uniform app with tips would be a huge +1 from my POV.

So we have a few choices here;
- Integrate multiple languages in the current app (JSTips becomes GenericTips basicly or just Tips ;-))
- A side project per language in a uniform way (JSTips, PHPTips), i.e. sharing the codebase of ""the"" app and 1 central github organization with tip repo's
- Every man for himself :)
",ro0NL,2016-08-10 19:45:12
310,2016-03-03 12:03:09,"A ""Tips"" orga and for every repo one main maintainer (plus helpers) would
be ideal I'd say :D
Am 03.03.2016 12:21 schrieb ""Roland Franssen"" notifications@github.com:

> I understand. I'm not sure @loverajoel https://github.com/loverajoel
> only fancies JS a lot or is willing to support multiple programming
> languages at all. If so I would like to help and think a uniform app with
> tips would be a huge +1 from my POV.
> 
> So we have a few choices here;
> - Integrate multiple languages in the current app (JSTips becomes
>   GenericTips basicly or just Tips ;-))
> - A side project per language in a uniform way (JSTips, PHPTips), i.e.
>   sharing the codebase of ""the"" app and 1 central github organization with
>   tip repo's
> - Every man for himself :)
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/loverajoel/jstips/issues/310#issuecomment-191713941.
",kurtextrem,2016-08-10 19:45:12
310,2016-03-05 05:05:46,"Yep, it's a good idea, but take a lot of time maintain one single repo (js tips) I can't imagine how many time will take administrate more tips projects.

I think that we have to find people from others languages (python, php, c, ...) and try it.
",loverajoel,2016-08-10 19:45:12
310,2016-08-10 19:45:12,"JS Tips for now. Is there are peple who want to fork this and become maintainers, let us know.
",zenopopovici,2016-08-10 19:45:12
309,2016-03-02 07:18:48,"## update CONTRIBUTING_zh_TW and fix tip title
## TL;DR;

as title
## Username

[neighborhood999](https://github.com/neighborhood999)
",neighborhood999,2016-03-02 07:19:03
308,2016-03-02 01:43:51,"## How to `reduce()` arrays
## TL;DR;

Some reminders about using `reduce()`
## Username

[gromgit](https://github.com/gromgit)
## Extra
- Slight adjustment to TL;DR too
",gromgit,2016-03-02 13:37:03
308,2016-03-02 02:04:53,":+1: 
",loverajoel,2016-03-02 13:37:03
308,2016-03-02 13:37:14,"Thanks
",loverajoel,2016-03-02 13:37:03
307,2016-03-01 21:00:31,"## Create array sequence [0, 1, ..., N-1] in one line
## TL;DR;

Compact one-liners that generate ordinal sequence arrays
## Username

[gromgit](https://github.com/gromgit)
## Extra
- Substituted a proper (though long) explanation
",gromgit,2016-03-05 05:18:21
307,2016-03-01 21:29:21,"@SarjuHansaliya please take a look here!
",loverajoel,2016-03-05 05:18:21
307,2016-03-03 09:39:14,"I find this interesting, but isn't jstips about short explanation ? 

<S_CODE_TOKEN>

Could it be added with a link that explain all that, and keep here necessary stuff only?
",adaniloff,2016-03-05 05:18:21
307,2016-03-03 16:08:09,"@adaniloff Fair enough. I've created #313 to address this, though I won't close this just yet.
",gromgit,2016-03-05 05:18:21
307,2016-03-04 06:02:53,"@gromgit  Thanks for nice write up.
",SarjuHansaliya,2016-03-05 05:18:21
307,2016-03-04 14:20:38,"@SarjuHansaliya Can we agree to merge #313 or #307? (It's really your decision).
",zenopopovici,2016-03-05 05:18:21
307,2016-03-05 05:09:33,"@zenopopovici I think it would be better if we merge #313.
",SarjuHansaliya,2016-03-05 05:18:21
307,2016-03-05 05:18:21,"closed, we merge https://github.com/loverajoel/jstips/pull/313

Thanks
",loverajoel,2016-03-05 05:18:21
306,2016-03-01 11:34:20,"## DOM event listening made easy
## TL;DR;

An elegant and easy way to handle DOM events
## Username

[@octopitus](https://github.com/octopitus)
",octopitus,2016-03-16 14:53:39
306,2016-03-01 11:57:40,"‚ÄãCurrently this is not a tip, but rather a code snippet. Please add
explanations. ‚Äã
",kurtextrem,2016-03-16 14:53:39
306,2016-03-01 12:12:18,"@octopitus Yes, @kurtextrem is right please comment your code.
",zenopopovici,2016-03-16 14:53:39
306,2016-03-01 17:30:42,"Added explanations. Changed structure.
",octopitus,2016-03-16 14:53:39
306,2016-03-05 13:51:38,"I think it's just fine now, it's easily understandable. :shipit: 
",zenopopovici,2016-03-16 14:53:39
306,2016-03-07 05:21:31,":shipit: 
",SarjuHansaliya,2016-03-16 14:53:39
306,2016-03-07 15:50:39,"@octopitus I suggest removing the paragraph about closures entirely, as I don't think it adds anything useful to the point of your tip.

Ironically, your ""better approach"" is also the only one of the three chunks that commits the ""sin"" you explicitly warned against: `handler` closes over the same `element` that `handleEvent` binds it to, thereby creating a circular ref even if `handler` doesn't actually use `element`!

You can see it for yourself by setting a breakpoint inside `handler`, then triggering the event it's bound to and inspecting `handler`'s scope your browser's debugger. In Chrome DevTools, for example, it's listed as part of the Block scope. Doing `console.log(element)` inside `handler` is, of course, another way.
",gromgit,2016-03-16 14:53:39
306,2016-03-08 11:08:59,"@gromgit Thank you for your feedback.

> `handler` closes over the same `element` that `handleEvent` binds it to, thereby creating a circular ref even if `handler` doesn't actually use `element`!

Exactly. But it's not a problem because neither `element` nor `handler` is referenced by any other object. Also, when you call `destroy` to remove event listener, the circular reference got broken. Here is the [bin](http://jsbin.com/vikojo/edit?js,console). You can use `debugger` statement inside `handle`, turn on Chrome DevTools, click `run` and look for the `handler`'s scope.

Of course you can use the Chrome DevTools Heap profiler in the Profiles panel or the Timeline tool to determine if there is a memory leak.
",octopitus,2016-03-16 14:53:39
306,2016-03-08 15:25:49,"@octopitus You're right that the closure pattern you present doesn't create any problems as used, but that further weakens the case for your closure paragraph. It's now just a distraction from the central point of your tip (an elegant way to manage lifetimes of event listeners) and breeds confusion amongst people like me who tend to read stuff fairly carefully; I won't be the only person to go ""hang on, you just did what you said was a Bad Thing!""

Moreover, removing that paragraph actually makes your text flow better. Your tip then starts by pointing out the way many folks do event handlers nowadays, along with the three one-liners, then the next paragraph (with a slight adjustment in its wording) points out that all these create new anonymous function objects, and therefore cannot be removed when they're no longer needed.
",gromgit,2016-03-16 14:53:39
306,2016-03-08 16:05:18,"Thank you @gromgit. You're right. I will remove it.
",octopitus,2016-03-16 14:53:39
306,2016-03-14 19:14:18,":shipit: :clap: 
",loverajoel,2016-03-16 14:53:39
306,2016-03-15 01:42:12,":shipit: 
",gromgit,2016-03-16 14:53:39
306,2016-03-15 01:53:00,"<S_CODE_TOKEN>
",tracker1,2016-03-16 14:53:39
306,2016-03-15 14:12:00,"I would also integrate @tracker1 alternative. It's very elegant.
",zenopopovici,2016-03-16 14:53:39
306,2016-03-15 15:53:33,"I'm in two minds about @tracker1 's suggestion. Yes, it's elegant, but it also monkeypatches a ""quasi-root"" in the DOM hierarchy (i.e. an object whose interface is inherited by almost the entire DOM) with a function name that's short, sharp and subject to multiple interpretations. Since it's not part of the official DOM spec, there's a non-zero probability that a third-party UI library comes along and overrides your `HTMLElement.prototype.on()` (or worse, something further up the hierarchy like `HTMLButtonElement.prototype.on()`) with a conflicting and _hidden_ (read: undocumented internals) implementation. That makes for fun **WTF** debugging sessions, especially six months down the line when you upgrade a library and suddenly it or some/all of your event handlers (or both) stop working.

One simple but inelegant way to avoid this conflict is to take a page from the Java package naming convention and implement, say, `HTMLElement.prototype.co_jstips_on()`. It's not completely foolproof, but it's much less likely to cause weird problems.

The other is, of course, not to monkeypatch at all.
",gromgit,2016-03-16 14:53:39
306,2016-03-15 16:16:26,":shipit: 
",zenopopovici,2016-03-16 14:53:39
306,2016-03-16 08:30:15,"I've written a longer exposition on the monkeypatching issues above and [posted it](https://github.com/gromgit/jstips-xe/blob/gh-pages/tips/xx.md) on my tip supplement repo. I think it's too long and dense to be a tip in itself, so I'll (as usual) make it reference this tip when it's published. If anyone feels it should appear here instead, I will consider submitting it.
",gromgit,2016-03-16 14:53:39
306,2016-03-16 09:15:47,"@gromgit This should be in our repo too!!!
",zenopopovici,2016-03-16 14:53:39
306,2016-03-16 14:49:53,":shipit: 
",ppollo07,2016-03-16 14:53:39
306,2016-03-16 14:53:19,"![](http://i.giphy.com/axu6dFuca4HKM.gif)
",loverajoel,2016-03-16 14:53:39
305,2016-03-01 10:06:20,"## Truncating the fast way
## TL;DR;

`~~X == Math.trunc(X)`...in certain cases
## Username

[gromgit](https://github.com/gromgit)
## Extra
- Changed ""round"" to ""trunc"" (the former is quite different)
- Restructed the tip into appropriate sections
- Greatly expanded on the pros and cons

NOTE: I've changed the tip name and TL;DR for accuracy, but I did **not** rename the file itself.
",gromgit,2016-03-01 17:09:20
305,2016-03-01 10:44:33,"‚ÄãPerfect, :shipit:!‚Äã
",kurtextrem,2016-03-01 17:09:20
305,2016-03-01 12:13:08,"Nice! We'll review it.
",zenopopovici,2016-03-01 17:09:20
305,2016-03-01 14:00:03,"@pklinger ping here!
",loverajoel,2016-03-01 17:09:20
305,2016-03-01 16:26:41,"Thanks for the feedback, @pklinger . I've made further adjustments that hopefully improve the tip.
",gromgit,2016-03-01 17:09:20
305,2016-03-01 16:56:42,"Thanks, I appreciate your contributions :shipit: 
",pklinger,2016-03-01 17:09:20
305,2016-03-01 17:08:55,"awesome guys :clap: @pklinger @gromgit 
",loverajoel,2016-03-01 17:09:20
304,2016-03-01 04:12:44,"## Antipattern: ~~
## TL;DR;

Don't say `~~` when you mean `Math.floor()`
## Username

https://github.com/gromgit
## Extra

Inspired by a recent update PR to Tip 49
",gromgit,2016-03-01 07:01:48
304,2016-03-01 05:48:15,"Heads up, we have a tip about them. 
Options:
1. Remove the tip? 
2. Ask the Express team why they use this
3. Stick with using only when (?) (you want to save bytes?) 
",kurtextrem,2016-03-01 07:01:48
304,2016-03-01 06:15:21,"@kurtextrem Whoops, missed Tip 18 somehow. :grimacing: 

I dunno, it seems that tip doesn't go far enough in pointing out the really serious problems with using `~~`, even if you Know What You're Doing (and to be honest, I'm also pulling some of my own punches). Unlike `!!`, the behavior of `~~` is not obvious in so many cases that even the most experienced developers are likely to get bit sooner or later.

Would you guys accept:
4. Enhance this PR with further examples of where `~~` could cause developers to tear their hair out, and position it as a counter to Tip 18 (so ""Tip 18a""?)
",gromgit,2016-03-01 07:01:48
304,2016-03-01 06:17:56,"Or:
5. Issue an update PR on Tip 18 with a whole bunch of _d'oh_ examples, possibly doubling or tripling its length?
",gromgit,2016-03-01 07:01:48
304,2016-03-01 06:45:27,"Revisiting seems good, but we should mark the ""update"" as new tip so that
people read it (practically: add the d'ohs to tip 18 and send out the new
part as 18a (which is not there in reality but in 18 included?))
",kurtextrem,2016-03-01 07:01:48
304,2016-03-01 07:01:42,"OK, I'll work on an update PR to Tip 18 then.
",gromgit,2016-03-01 07:01:48
304,2016-03-01 07:26:46,":+1:  Thanks for your work. 
",sjfkai,2016-03-01 07:01:48
304,2016-03-01 13:54:30,":clap: 
",loverajoel,2016-03-01 07:01:48
303,2016-03-01 01:08:36,"fix typo in tip #49(zh-CN)
",zhangpenglin,2016-03-01 01:47:36
303,2016-03-01 01:47:29,"Thank you :+1: 
",sjfkai,2016-03-01 01:47:36
302,2016-02-29 16:21:32,"I interpret **Reduce builtin function usage** as ""cut down on your usage of native functions"", which is a downright bizarre sentiment.

@darul75 I suggest a catchier and more accurate replacement: **How to `reduce()` and PROFIT!**
",gromgit,2016-03-05 05:06:06
302,2016-03-01 00:11:45,"@darul75 what do you think about it?
",loverajoel,2016-03-05 05:06:06
302,2016-03-01 20:02:06,"I think your proposed title is a bit too catchy, but I can definitely see why we should rename it.
Quick fix: adding backticks?
",kurtextrem,2016-03-05 05:06:06
302,2016-03-01 21:03:58,"Or perhaps a simple **How to `reduce()` arrays**?
",gromgit,2016-03-05 05:06:06
302,2016-03-01 23:21:30,"@gromgit PR please.
",zenopopovici,2016-03-05 05:06:06
302,2016-03-02 04:13:20,"Hi all,

Sure it was a bit confusing and I did not know how to express it well.

I have to think about it too but if you have idea just put it I am on
holiday now and connexion very bad here.

Kindly,

Julien

Port: 06 24 79 14 83

2016-03-02 0:22 GMT+01:00 Zeno Popovici notifications@github.com:

> @gromgit https://github.com/gromgit PR please.
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/loverajoel/jstips/issues/302#issuecomment-190959235.
",darul75,2016-03-05 05:06:06
302,2016-03-02 05:28:40,"@zenopopovici Done, #308 
",gromgit,2016-03-05 05:06:06
302,2016-03-02 07:37:40,"If @darul75 is fine with that :shipit: (#308)

2016-03-02 6:28 GMT+01:00 gromgit notifications@github.com:

> @zenopopovici https://github.com/zenopopovici Done, #308
> https://github.com/loverajoel/jstips/pull/308
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/loverajoel/jstips/issues/302#issuecomment-191068749.
",kurtextrem,2016-03-05 05:06:06
302,2016-03-02 11:02:13,"Sounds good :+1: 
",darul75,2016-03-05 05:06:06
302,2016-03-02 13:38:23,"merged!

Thanks all :+1: 
",loverajoel,2016-03-05 05:06:06
301,2016-02-29 10:55:46,"## tip 27 render problem
## TL;DR;

![](http://i.imgur.com/BfV25sv.png)
try to fix this render probelm
## Username

[neighborhood999](https://github.com/neighborhood999)
",neighborhood999,2016-02-29 10:56:00
300,2016-02-29 09:16:39,"## Pygments is no longer supported
## TL;DR;

Pygments is no longer supported, switching to rouge
## Username

zeno.popovici
## Extra
## 
",zenopopovici,2016-02-29 09:16:45
300,2016-02-29 13:48:34,"this fix broke some styles in the site, but don't worry I will fix it later.
Thanks for this!
",loverajoel,2016-02-29 09:16:45
300,2016-02-29 14:04:35,"I figured there would be some issues, let me know if there is anything I can do to help.
",zenopopovici,2016-02-29 09:16:45
299,2016-02-29 09:14:14,"## Fix jekyll build error
## TL;DR;

TW translation prevented pages from generating
## Username

zeno.popovici
## Extra
## 
",zenopopovici,2016-02-29 09:14:25
298,2016-02-29 05:25:53,"Fix typo in 2016-02-15-detect-document-ready-in-pure-js.md
",xcatliu,2016-02-29 08:29:03
298,2016-02-29 08:29:14,"Thanks!
",zenopopovici,2016-02-29 08:29:03
297,2016-02-29 03:36:13,"Fix typo in 2016-01-27-short-circuit-evaluation-in-js.md
",xcatliu,2016-02-29 08:30:04
297,2016-02-29 08:30:10,"Thanks!
",zenopopovici,2016-02-29 08:30:04
296,2016-02-28 05:07:45,"## translate tip 49
## TL;DR;

as title
## Username

[neighborhood999](https://github.com/neighborhood999)
",neighborhood999,2016-02-28 05:08:07
295,2016-02-27 15:32:13,"Hey @loverajoel, I have a question.
I already merge my #286, but I go to jstips blog found article no update.
what's happen?
",neighborhood999,2016-02-29 09:18:37
295,2016-02-29 06:28:17,"I have the same problem at zh_CN version. I have commited the newest tip but it not appears.
@loverajoel
",sjfkai,2016-02-29 09:18:37
295,2016-02-29 08:33:46,"We have a build failure due to Jekyll changes for GitHub pages. @loverajoel needs to look into this.

<S_CODE_TOKEN>
",zenopopovici,2016-02-29 09:18:37
295,2016-02-29 08:35:01,"Maybe #285 is also related to this?
",zenopopovici,2016-02-29 09:18:37
295,2016-02-29 09:18:37,"It seems that it was unrelated to GitHub changes, but due to @neighborhood999 changes. Please make sure titles do not start with a backtick, this will break jekyll. I've fixed this.
",zenopopovici,2016-02-29 09:18:37
295,2016-02-29 09:34:19,"@zenopopovici Sorry, it's my bad.
",neighborhood999,2016-02-29 09:18:37
294,2016-02-27 13:19:06,"## Easiest way to extract Unix timestamps
## TL;DR;

In Javascript you can easily get the unix timestamp
## Username

@nmrony
## Extra

Converting miliseconds to seconds as Unix timestamp is calculaed in seconds
",nmrony,2016-03-03 15:44:08
294,2016-02-27 16:56:36,"It's probably worth adding https://github.com/loverajoel/jstips/issues/293#issuecomment-189654261
",kurtextrem,2016-03-03 15:44:08
294,2016-02-27 17:12:49,"@kurtextrem Hmm, Will add a paragraph on it after confirmation of next comment
",nmrony,2016-03-03 15:44:08
294,2016-02-29 14:07:35,":shipit: 
",loverajoel,2016-03-03 15:44:08
294,2016-02-29 14:35:40,":shipit: 
",zenopopovici,2016-03-03 15:44:08
294,2016-03-01 01:58:41,"For the sake of readability, is `Math.floor()` better than `~~` ? 
",sjfkai,2016-03-03 15:44:08
294,2016-03-01 02:52:48,"@sjfkai @nmrony For the sake of **accuracy**, `Math.floor()` should **always** be used over `~~`. Since `~` is defined to work over 32 bits, `~~` actually causes a Y2038 issue:

<S_CODE_TOKEN>
",gromgit,2016-03-03 15:44:08
294,2016-03-01 02:59:56,"@gromgit :+1: 
",sjfkai,2016-03-03 15:44:08
294,2016-03-01 12:14:52,"@nmrony, @gromgit has a point. I would also go for `Math.floor`. What do you think?
",zenopopovici,2016-03-03 15:44:08
294,2016-03-02 04:15:53,"@zenopopovici @gromgit Sure!! I will give this patch a final touch when I return home . 
",nmrony,2016-03-03 15:44:08
294,2016-03-02 18:42:34,"@zenopopovici Updated `PR` with `Math.floor` and working date string format to grab timestamp of specific date for iOS devices
",nmrony,2016-03-03 15:44:08
294,2016-03-03 02:17:26,"@nmrony I think there's some confusion regarding the recent discussions in #293 .

It's not that Safari on iOS devices has a brain-damaged `Date()` that requires full ISO 8601 timestamp strings; it's that **single-digit days and months** aren't reliably parsed across platforms. For instance, the venerable Firefox on _all desktop and mobile platforms_ fails to parse `2016-2-28`, but no JS implementation of `Date()` in recorded history has ever choked on `2016-02-28`.

The key statement should probably read as follows:

To get the Unix epoch value (seconds since midnight 1 Jan 1970 UTC) of a specific date, pass `YYYY-MM-DD` (4-digit year, 2-digit month and day) as a parameter to the `Date` constructor.
",gromgit,2016-03-03 15:44:08
294,2016-03-03 07:15:13,"@gromgit  I have already mentioned it in updated PR
",nmrony,2016-03-03 15:44:08
294,2016-03-03 07:30:27,"@nmrony Sorry, I wasn't clear. What I mean to say is that `YYYY-MM-DD` and `YYYY-MM-DDT00:00:00Z` are _universally understood_ `Date()` input formats. The phrase ""for iOS devices"" is completely unnecessary, and may in fact confuse readers into believing that some other format is required for JS on Android or other platforms.
",gromgit,2016-03-03 15:44:08
294,2016-03-03 12:32:13,"@gromgit Okay. Let me update the PR right away. Hopefully we can ship it after this update :smiley: 
",nmrony,2016-03-03 15:44:08
294,2016-03-03 12:43:47,"@gromgit @kurtextrem @sjfkai @zenopopovici Please can you review? Hopefully it is okay now. If it is please add :shipit: :wink:  
",nmrony,2016-03-03 15:44:08
294,2016-03-03 12:59:10,":shipit: 
",gromgit,2016-03-03 15:44:08
294,2016-03-03 14:54:51,":clap: :clap: :clap: 
",loverajoel,2016-03-03 15:44:08
294,2016-03-03 15:34:26,":shipit: 
",kurtextrem,2016-03-03 15:44:08
294,2016-03-03 15:45:21,"merged, thanks guys!

![](http://i.giphy.com/nU704Y2jeFOHm.gif)
",loverajoel,2016-03-03 15:44:08
293,2016-02-26 20:50:13,"A unix timestamp is based in seconds since the UNIX epoc.   A JavaScript datetime value is the milliseconds.. you need to divide by 1000 to get a unix timestamp.

<S_CODE_TOKEN>
",tracker1,2016-03-05 05:06:30
293,2016-02-26 21:14:24,"@tracker1 true

@nmrony take a look here
",loverajoel,2016-03-05 05:06:30
293,2016-02-27 06:50:33," Yes true, silly mistake always gives pain. @tracker1 Thanks... @loverajoel Let me send a patch for it. How can I send a patch?
",nmrony,2016-03-05 05:06:30
293,2016-02-27 07:24:54,"Just do another PR.
",kurtextrem,2016-03-05 05:06:30
293,2016-02-27 09:21:09,"It seems that RFC2822 has much compatibility than ISO8601, so we prefer `new Date('2016/01/01')`  to `new Date('2016-01-01')`
",hingsir,2016-03-05 05:06:30
293,2016-02-27 12:16:29,"@hingsir RFC2822 dates are of the form ""01 Jan 2016"" rather than ""2016/01/01"", and RFC3339 (the official ""Internet date and timestamps"" RFC) is actually based on ISO8601, so I'm not sure what you mean by ""compatibility"".
",gromgit,2016-03-05 05:06:30
293,2016-02-27 13:03:35,"@hingsir JS `dateString` value is compatible with IETF-compliant RFC 2822 timestamps and also a version of ISO8601. Main difference is between time zones 
please check 
-  [Date Javascript MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)
- [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse)
",nmrony,2016-03-05 05:06:30
293,2016-02-27 13:21:23,"@loverajoel @kurtextrem Sent another PR with conversion in seconds #294 
",nmrony,2016-03-05 05:06:30
293,2016-02-27 14:40:43,"@nmrony @gromgit You both right. The problem I met was that `new Date('2016-1-1')` returns  `Invalid Date` in iOS environment while `new Date('2016/1/1')` parsed correctly
",hingsir,2016-03-05 05:06:30
293,2016-02-27 18:18:47,"@hingsir yes  and to convert it into `ISO-8601` format you need to pass `YYYY-MM-DDT00:00:00Z` and it should works fine on iOS. I don't have iOS devices right now. Can you confirm it? Then I will add it in Tip #294. One more thing `ES5`  assumes timezone is `UTC` where `ES2015` will be  Local timezone
",nmrony,2016-03-05 05:06:30
293,2016-02-28 04:27:16,"@nmrony @hingsir Safari for iOS 9.2.1 handles ISO8601 `2016-01-01T00:00:00Z` just fine.

I also tested the other formats listed in the _Date and time (current at page generation) expressed according to ISO 8601_ sidebar of [https://en.wikipedia.org/wiki/ISO_8601](the Wikipedia page), across a slew of browsers on Linux, Mac OS X, iOS and Android. I was not surprised that every browser rejects the week-related date formats, but I was shocked that both `20160101T000000Z` and the ordinal date format `2016-001` also failed.

Clearly, code that handles textual dates **always** need to sanitize them beforehand.
",gromgit,2016-03-05 05:06:30
293,2016-02-29 15:58:45,"@gromgit I will update PR adding the information soon
",nmrony,2016-03-05 05:06:30
293,2016-03-05 05:06:37,"fix merged
",loverajoel,2016-03-05 05:06:30
292,2016-02-26 20:03:50,"## Return Values with the 'new' Operator
## TL;DR;

This is an example of what results in using the 'new' operator with functions that return primitive, non-primitive, or undefined values. 
## Username

[@BradleyStafford](https://twitter.com/bradleystafford)
[Morklympious](https://github.com/morklympious)
## Extra

N/A
",Morklympious,2016-04-05 17:34:26
292,2016-02-26 20:16:33,"You could also add, that this mechanism allows ""private"" variables.
see: https://babeljs.io/repl/#?experimental=false&evaluate=true&loose=false&spec=false&code=function%20Test()%20%7B%0A%20%20this.test%20%3D%20%22123%22%3B%0A%20%20%0A%20%20return%20%7B%20fn1%3A%20function()%20%7B%20console.log(%22t%22%2C%20this.test)%20%7D.bind(this)%2C%20fn2%3A%20function(t)%7B%20this.test%20%3D%20t%20%7D.bind(this)%20%7D%0A%7D%0A%0Avar%20t%20%3D%20new%20Test()%3B%0At.fn1()%3B%0At.fn2(%22hi%22)%3B%0At.fn1()%3B
",kurtextrem,2016-04-05 17:34:26
292,2016-02-26 22:30:14,"Thanks for the feedback! I'll think about incorporating some of this :) 
",Morklympious,2016-04-05 17:34:26
292,2016-03-05 05:17:45,"@Morklympious ping
",loverajoel,2016-04-05 17:34:26
292,2016-03-05 17:41:30,"@kurtextrem I think I'm going to omit the 'private' variables idea, It's a good thing to know, but I think the focus is less on simulating private state and more on ""What actually gets returned"". Someone should write about Module patterns or function scope, which is probably where the private state explanation is better suited
",Morklympious,2016-04-05 17:34:26
292,2016-03-11 21:25:53,"Good catch. I'll update and push later tonight! :)
",Morklympious,2016-04-05 17:34:26
292,2016-03-22 17:08:36,"@Morklympious ping!
",loverajoel,2016-04-05 17:34:26
292,2016-03-22 18:23:02,"Wow. guess who is terrible? IT'S ME. Okay okay okay, I'm at work right now but I'll update it TONIGHT. 

Thanks for keeping me honest. hahahaha.
",Morklympious,2016-04-05 17:34:26
292,2016-03-23 05:09:54,":+1: Added!
",Morklympious,2016-04-05 17:34:26
292,2016-03-23 10:16:05,"@Morklympious :). I'm :shipit: 
",zenopopovici,2016-04-05 17:34:26
292,2016-03-23 10:33:37,":shipit:   :+1: 
",sjfkai,2016-04-05 17:34:26
292,2016-04-05 01:39:20,":shipit: :+1: 
",nmrony,2016-04-05 17:34:26
292,2016-04-05 14:42:48,":shipit: 
",ppollo07,2016-04-05 17:34:26
292,2016-04-05 17:34:22,":shipit: üöÄ 
",loverajoel,2016-04-05 17:34:26
292,2016-04-05 17:48:08,"![](http://i.giphy.com/13qctMBrrgbwJi.gif)
",loverajoel,2016-04-05 17:34:26
291,2016-02-26 19:30:14,"As discussed in #289 I've added details about the titles.

I'm not sure about capitalization. Let's discuss about it :)

Oh and while we're at it: How useful are the dates (e.g. for file names and more)? Isn't simply counting up a better idea (like the main readme does already)?
",kurtextrem,2016-03-01 14:49:18
291,2016-02-26 19:42:46,"@kurtextrem Can we gat rid of the `<sup>`? Just use regular () or a comma.
",zenopopovici,2016-03-01 14:49:18
291,2016-02-26 19:44:31,"I would also add: 

After the tip is reviewed by 5 people and they gave their shippit emote vote (:shipit:), then the tip will be `ready to merge`
",zenopopovici,2016-03-01 14:49:18
291,2016-02-26 20:00:36,"sure.
",kurtextrem,2016-03-01 14:49:18
291,2016-03-01 12:18:04,"@kurtextrem Can you please add: Please note that your title cannot start with a backtick character. Then we can merge.
",zenopopovici,2016-03-01 14:49:18
291,2016-03-01 13:44:37,"I don't think title-style capitalization should be a formal rule, because I feel the tip names serve as _content summaries_ rather than headlines. Compare, for instance, Tip 20's current:

**Return objects to enable chaining of functions**

vs. the proposed:

**Return Objects to Enable Chaining of Functions**

I personally find the first far more readable than the second.
",gromgit,2016-03-01 14:49:18
291,2016-03-01 13:48:20,"That is a good point, thanks for the feedback.
",kurtextrem,2016-03-01 14:49:18
291,2016-03-01 13:56:31,"@zenopopovici Added.
Also added how to use ``` blocks correctly for the tips :D

Please also discuss ""How useful are the dates (e.g. for file names and more)? Isn't simply counting up a better idea (like the main readme does already)?""
",kurtextrem,2016-03-01 14:49:18
291,2016-03-01 13:56:51,":shipit: :clap: :clap: :clap: 
",loverajoel,2016-03-01 14:49:18
291,2016-03-01 14:18:53,"I think the tip number would be better than a date as the filename prefix, unless your publication backend needs dates in filenames for some reason. This way, the initial filename would be `xx-name-of-your-tip`.

Also, since the Notes section instructs submitters to:

> Leave the date and the tip number with xx.

I would suggest also setting the `tip_number` in `POST_TEMPLATE.md` to `xx`. This should help to avoid confusion.
",gromgit,2016-03-01 14:49:18
291,2016-03-01 14:30:57,"@gromgit Changing the file name now would involve a lot of work across all languages, breaking also Google incoming links. We're sticking to what we have now.

@kurtextrem Please also remove capitalization requirement, @gromgit has a point, besides almost all others are not capitalized. We should stick to non capitalized titles (this should be a requirement). 
",zenopopovici,2016-03-01 14:49:18
291,2016-03-01 14:42:22,"I've in-cooperated the suggested changes now.
",kurtextrem,2016-03-01 14:49:18
291,2016-03-01 14:44:52,"Sorry, @zenopopovici , I don't agree with mandating _any_ sort of title casing. This should instead be taken on a case-by-case basis; sometimes all-lower-case reads better, sometimes Headline-Style Casing works, and sometimes a mix is the best option, like the alternate title for my initial PR that conflicted with Tip 18:

### _Double Bitwise NOT_ Considered Harmful: A thorough analysis
",gromgit,2016-03-01 14:49:18
291,2016-03-01 14:49:34,"Thank you @kurtextrem.
",zenopopovici,2016-03-01 14:49:18
290,2016-02-26 19:20:06,"## Helpful Console Logging Tips
## TL;DR;

Helpful logging techniques using coercion and conditonal breakpoints.
## Username

[@zthall](https://twitter.com/zthall)]
## Extra
## Using conditional breakpoints to log data

If you wanted to log to the console a value each time a function is called, you can use conditional break points to do this. Open up your dev tools, find the function where you'd like to log data to the console and set a breakpoint with the following condition:

<S_CODE_TOKEN>

This always evaluates to false, so it will not pause the page thread when it's hit, but it will log data to the console. This can also be used to count how many times a function or callback is called.
## Printing a function variable to console

Have you ever logged a function variable to the console and weren't able to just view the function's code? The quickest way to see the function's code is to coerce it to a string using concatenation with an empty string.

<S_CODE_TOKEN>
",zackhall,2016-03-03 19:06:52
290,2016-02-26 19:36:24,":shipit: 
",kurtextrem,2016-03-03 19:06:52
290,2016-02-26 19:49:14,"Simple enough :shipit: 
",zenopopovici,2016-03-03 19:06:52
290,2016-02-26 21:33:05,"Hm,

> evaluates to false, so it will not pause the page thread when it's hit

Maybe add additional links explaining why it is not pause page thread?
",drakmail,2016-03-03 19:06:52
290,2016-02-26 21:39:48,"@drakmail I'd be happy to expand on it. Can you help me understand the part you'd like to clarify so that I can make it more clear? :smile: 

A conditional breakpoint pauses the page thread only if the condition for the breakpoint evaluates to true. So by using a condition like `console.log('foo') && false` it's guaranteed to evaluate to false since you're putting the literal false in the AND condition.

Is that helpful?
",zackhall,2016-03-03 19:06:52
290,2016-03-01 12:19:25,"@zackhall Please commit the clarification you suggested :)
",zenopopovici,2016-03-03 19:06:52
290,2016-03-01 22:26:29,"np ‚Äì I updated the pull request with the clarification. :+1: 
",zackhall,2016-03-03 19:06:52
290,2016-03-01 23:23:13,"I'm for :shipit: .
",zenopopovici,2016-03-03 19:06:52
290,2016-03-03 03:43:20,":shipit: 
",gromgit,2016-03-03 19:06:52
290,2016-03-03 06:38:37,"What about adding [this link](https://developer.chrome.com/devtools/docs/javascript-debugging#breakpoints) to explain what is or how to set  a `conditional breakpoint`?
",sjfkai,2016-03-03 19:06:52
290,2016-03-03 06:45:25,"@sjfkai Good point. The equivalent Firefox page is [here](https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Set_a_conditional_breakpoint).
",gromgit,2016-03-03 19:06:52
290,2016-03-03 16:37:02,"@sjfkai @gromgit great suggestion. I'll do that shortly. And here's the equivalent [Edge page](https://dev.windows.com/en-us/microsoft-edge/platform/documentation/f12-devtools-guide/debugger/#setting-and-managing-breakpoints) as well. 

@loverajoel that's awesome, I didn't know that was an option. Will add that as well.
",zackhall,2016-03-03 19:06:52
290,2016-03-03 17:55:04,"Out of curiosity, why would you do `console.log(funcVariable + '');` instead of `console.log(funcVariable.toString())`?
",homer0,2016-03-03 19:06:52
290,2016-03-03 18:11:17,"Shorter. Plus this is known and common practice in a lot of languages.
",kurtextrem,2016-03-03 19:06:52
290,2016-03-03 18:21:10,":shipit: 
",adaniloff,2016-03-03 19:06:52
290,2016-03-03 19:00:23,"@sjfkai @gromgit Done! Thank you for the suggestions!
",zackhall,2016-03-03 19:06:52
290,2016-03-03 19:01:00,"@kurtextrem I don't like mixing data types :P, but I get your point.

:shipit: 
",homer0,2016-03-03 19:06:52
290,2016-03-03 19:06:50,"![](http://i.giphy.com/aLdiZJmmx4OVW.gif)
",loverajoel,2016-03-03 19:06:52
290,2016-03-03 19:09:33,"![yay](https://media.giphy.com/media/26tPo1I4XyWzIBjFe/giphy.gif)
",zackhall,2016-03-03 19:06:52
290,2016-03-03 20:30:06,"I like your gifs guys ... here's mine :shipit: 
![citizen kane - clapping](https://cloud.githubusercontent.com/assets/767998/13508378/667e7b38-e18f-11e5-8058-1d48af1d07aa.gif)
",zenopopovici,2016-03-03 19:06:52
290,2016-03-04 05:54:48,"I guess that is what we call ""Tips after-launch party"" :P
",kurtextrem,2016-03-03 19:06:52
289,2016-02-26 16:14:58,"I've made a couple of changes in the main README.md.

First: The under title of JS tips should explain what ""JS"" means.
Second: I think the ""no matter if it is a weekend or a holiday"" was a relic from ""every day"", so I've removed that and changed the wording (as we have more channels than Twitter and GitHub).

Also I've removed ""JavaScript"" from the titles, as our tips are obviously about JS. No need to add that to titles.
Plus I've corrected a few names.

@loverajoel I think we should add title rules. Such as code in titles have to use the code tics `.  No mentioning of the word ""JavaScript"" / JS. And maybe: http://grammar.yourdictionary.com/capitalization/rules-for-capitalization-in-titles.html
",kurtextrem,2016-02-26 16:45:15
289,2016-02-26 16:45:18,"Awesome, thanks. Can you make a PR with the suggested changes? We can talk on them right there.
",zenopopovici,2016-02-26 16:45:15
289,2016-02-26 17:08:44,"@kurtextrem yes, we should add this in the contribution rules
",loverajoel,2016-02-26 16:45:15
288,2016-02-26 05:31:11,"## Translate to Spanish

[@ppollo07](https://twitter.com/ppollo07)
",ppollo07,2016-05-04 02:36:35
288,2016-02-26 05:41:05,":clap: :clap: :clap: 
",loverajoel,2016-05-04 02:36:35
288,2016-02-26 14:24:03,"Wow. Awesome work!
",zenopopovici,2016-05-04 02:36:35
288,2016-02-26 18:08:28,"Thanks! @zenopopovici 
",ppollo07,2016-05-04 02:36:35
288,2016-03-22 17:09:48,"@ppollo07 ping 
",loverajoel,2016-05-04 02:36:35
288,2016-04-02 23:25:50,"@loverajoel i need your check for my new commits.. It's all ready!!
",ppollo07,2016-05-04 02:36:35
288,2016-05-04 02:42:39,"Thanks @ppollo07 
",loverajoel,2016-05-04 02:36:35
287,2016-02-25 22:54:37,"Overall thought about the selection criterion for JSTips: I think a priority should be given to the tips useful for practical development problems that JS developers are facing that are not well addressed in the existing resources.  Just to give a few examples:  Lately, I have been coding using MEAN stack.  There are a very few resources addressing issues associated with NPM Mongoose (MongoDB module for NodeJS) integration (i.e save() method is sporadically stops working, upsert option in findOneAndUpdate() has a new flag that has to be included if you want this method to work for new entries in to be added to the DB although this information is nowhere to be found in documentation.)  Another good example is from my recent experience with the front-end dev't: if you need to find out in JS which cell in the table is clicked on, you should be really attentive how you do it because this click events tend to fire multiple times on every click.  Again, good luck with searching for a solution for this.  It'll take you a while....Those are just examples.  I think this sort of tips are much more valuable than, say, discussions on  the way of using prototypical inheritance patterns.  Doug Crockford is a pretty good source for those.  So, except you can prove you are better better than Doug, read the book first and submit your tip later if you still think it is valuable....There is no point of covering issues that are well covered in the literature and/or are all over Stackoverflow.  Just my 2 cents.....
",pastrop,2016-08-10 19:43:03
287,2016-02-25 23:04:19,"L

El jue, feb 25, 2016 06:24 PM, pastrop notifications@github.com escribi√≥:

> Overall thought about the selection criterion for JSTips: I think a
> priority should be given to the tips useful for practical development
> problems that JS developers are facing that are not well addressed in the
> existing resources. Just to give a few examples: Lately, I have been coding
> using MEAN stack. There are a very few resources addressing issues
> associated with NPM Mongoose (MongoDB module for NodeJS) integration (i.e
> save() method is sporadically stops working, upsert option in
> findOneAndUpdate() has a new flag that has to be included if you want this
> method to work for new entries in to be added to the DB although this
> information is nowhere to be found in documentation.) Another good example
> is from my recent experience with the front-end dev't: if you need to find
> out in JS which cell in the table is clicked on, you should be really
> attentive how you do it because this click events tend to fire multiple
> times on every click. Again, good luck with searching for a so lution for
> this. It'll take you a while....Those are just examples. I think this sort
> of tips are much more valuable than, say, discussions on the way of using
> prototypical inheritance patterns. Doug Crockford is a pretty good source
> for those. So, except you can prove you are better better than Doug, read
> the book first and submit your tip later if you still think it is
> valuable....There is no point of covering issues that are well covered in
> the literature and/or are all over Stackoverflow. Just my 2 cents.....
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/loverajoel/jstips/issues/287.√±
",calderaro,2016-08-10 19:43:03
287,2016-02-25 23:29:12,"@pastrop Everybody is more than welcome to contribute with a PR. We're not refusing anything that is of interest.
",zenopopovici,2016-08-10 19:43:03
287,2016-02-26 06:01:25,"Your last few sentences clearly show the reason for JSTips: ""All over the
place"".
So who has time to go over every answer on StackOverflow? How do you Google
things you don't even know (e.g. as beginner: ""wtf is prototype?"". If you
don't know it, you can't find it).
Our tips aren't for pros only, but target beginners as well. If they want
to get better, they can find multiple good tips in one place, reviewed by
multiple good JS authors.
Of course we don't only target beginners, we'd like to have tips for
everyone.
We highly welcome any type of PR's!
",kurtextrem,2016-08-10 19:43:03
287,2016-03-03 10:36:20,"Perhaps each tip should be indicated with some sort of level? i.e. `beginner`, `medior`, `pro`?
",ro0NL,2016-08-10 19:43:03
287,2016-03-03 11:09:51,"@ro0NL Not a bad suggestion ... //cc @loverajoel 
",zenopopovici,2016-08-10 19:43:03
287,2016-03-05 05:07:45,"@ro0NL @zenopopovici yep, we can create labels or tags and I jekyll support this
",loverajoel,2016-08-10 19:43:03
287,2016-08-10 19:43:03,"Merged with: https://github.com/loverajoel/jstips/issues/368
",zenopopovici,2016-08-10 19:43:03
286,2016-02-25 17:29:24,"## Wording and follow recently updated
## TL;DR;

as title
## Username

[neighborhood999](https://github.com/neighborhood999)
",neighborhood999,2016-02-27 15:06:14
286,2016-02-25 17:31:01,"@neighborhood999 you are admin and you can merge your fixes for this language 
",loverajoel,2016-02-27 15:06:14
286,2016-02-25 17:35:06,"@loverajoel I know :smile: 
but I not finish, I will as soon as possible.
",neighborhood999,2016-02-27 15:06:14
286,2016-02-25 17:36:00,"@neighborhood999 haha sorry
",loverajoel,2016-02-27 15:06:14
286,2016-02-25 17:37:46,"@loverajoel It's OK. I just want this translate will be better.
I want go to sleep. Good Night :smile: 
",neighborhood999,2016-02-27 15:06:14
286,2016-02-26 03:12:05,":+1:  awesome work!
",sjfkai,2016-02-27 15:06:14
286,2016-02-26 14:22:14,"Really cool! :+1: 
",zenopopovici,2016-02-27 15:06:14
285,2016-02-25 13:55:11,"Hi,

Just a minor issue.. but i noticed the paginator at http://www.jstips.co sometimes show 3 results per page and sometimes 4 results per page..

As we speak:
- http://www.jstips.co/3/ shows 4 results
- http://www.jstips.co/4/ shows 3 results
- http://www.jstips.co/5/ shows 3 results
- http://www.jstips.co/6/ shows 4 results
- http://www.jstips.co/7/ shows 3 results

Also noticed that page #1 in the paginator links to the `previous` page instead of the `first` page... ;-)

My2cents.
",ro0NL,2016-08-10 19:41:55
285,2016-02-25 13:57:37,"Perhaps also start at index 1 rather than index 0 for the tip count..

Tip #0 feels a bit weird to me (http://www.jstips.co/15/)
",ro0NL,2016-08-10 19:41:55
285,2016-02-25 14:21:17,"We'll look into that. Thanks.
",zenopopovici,2016-08-10 19:41:55
285,2016-02-25 14:29:50,"@ro0NL yes, so weird, I will check.

thanks
",loverajoel,2016-08-10 19:41:55
285,2016-03-05 05:08:34,"I fixed that, now we are showing 10 per page, but still is strange
",loverajoel,2016-08-10 19:41:55
285,2016-03-07 07:58:23,"@loverajoel the 1st page link is still wrong...

http://www.jstips.co/3/

Both page 1 & 2 are linking to page 2.
",ro0NL,2016-08-10 19:41:55
285,2016-03-07 15:20:42,"@ro0NL true, I will check, thanks
",loverajoel,2016-08-10 19:41:55
285,2016-05-06 15:04:18,"Merged this issue here: https://github.com/loverajoel/jstips/issues/223
",zenopopovici,2016-08-10 19:41:55
285,2016-08-10 19:41:55,"This si fixed.
",zenopopovici,2016-08-10 19:41:55
284,2016-02-25 11:15:51,"Why have there not been any new tips since 48?
",woverton,2016-02-25 14:20:23
284,2016-02-25 12:05:18,"See #260.

@loverajoel, need to update the project description:

> This is about one JS tip every day!
",FagnerMartinsBrack,2016-02-25 14:20:23
284,2016-02-25 14:20:23,"@woverton there are tips in review, you can contribute by giving your :shipit: (OK) vote to them or suggest improvements. Take a look at the open PRs.
",zenopopovici,2016-02-25 14:20:23
284,2016-02-25 14:32:29,"@woverton how @zenopopovici said, rules changed, we are waiting for review for merge, for example this https://github.com/loverajoel/jstips/pull/248
",loverajoel,2016-02-25 14:20:23
283,2016-02-25 06:19:54,"## [WIP] Translate to Spanish_ES

Translate to Spanish
## Twitter

[@ppollo07](https://twitter.com/ppollo07)
",ppollo07,2016-02-26 05:08:45
283,2016-02-25 06:23:23,"You have files for CH in your PR, please make a rebase and only send Spanish lang.

Also, good work!
",loverajoel,2016-02-26 05:08:45
283,2016-02-25 23:24:34,"Toote magic!! haha
Ready to merge
",ppollo07,2016-02-26 05:08:45
283,2016-02-25 23:30:18,"@ppollo07 Thank you for your work, we'll lot over it asap.
",zenopopovici,2016-02-26 05:08:45
283,2016-02-25 23:57:55,"@ppollo07 you still have conflicts, there are files from EN language
",loverajoel,2016-02-26 05:08:45
282,2016-02-25 04:22:19,"## fix code snippet mismatching text description
## TL;DR;

In the existing code snippet, all 5 timeouts are triggered at the same time (1000ms later). In order to print out 1 number every second, I modified the timeout delay so the ith number is printed after i seconds.
",henrysun918,2016-02-25 14:13:40
282,2016-02-25 14:14:17,"Thanks, merged. You're right the text said ""every second"".
",zenopopovici,2016-02-25 14:13:40
281,2016-02-25 03:58:15,"## jsPerf instead of jsPref
## TL;DR;

changed the link name from jsPref to jsPerf
",henrysun918,2016-02-25 14:07:51
281,2016-02-25 14:07:58,"Thanks!
",zenopopovici,2016-02-25 14:07:51
280,2016-02-24 16:39:37,,madtaras,2016-02-24 17:12:16
280,2016-02-24 17:12:32,"Thank you for your contribution @madtaras 
",zenopopovici,2016-02-24 17:12:16
279,2016-02-23 21:53:11,"Modified tip and a bit of explanation to avoid throwing a `TypeError`.  As written, it can throw an exception if called without a parameter:

<S_CODE_TOKEN>

_Note that this does not avoid the exception thrown when `words` is neither a `string` nor an `Array` of `string`s._
",boneskull,2016-03-01 12:20:49
279,2016-02-25 14:22:12,"@boneskull nice catch! 

@mattfxyz can you take a look here?
",loverajoel,2016-03-01 12:20:49
279,2016-02-25 14:36:20,"Not sure how safe  `|| []` is ... but in this case ...
",zenopopovici,2016-03-01 12:20:49
279,2016-02-26 15:35:33,"This was mostly a theoretical example. It's not really code you would ever really use in production because it's such silly function. You can merge it, but I think it takes away from what the example is about. 
",mattfaluotico,2016-03-01 12:20:49
279,2016-02-26 15:56:07,"It makes the tip more complete. However, I would refrain from explaining that little part. A separate tip would be better I'd say (quick, but useful!)
(Example title ""Logical Operators don't only compare"" or so - probably something for me? :D)
",kurtextrem,2016-03-01 12:20:49
279,2016-03-01 12:21:07,"I've merged it. Thanks!
",zenopopovici,2016-03-01 12:20:49
279,2016-03-01 18:31:03,"ty
",boneskull,2016-03-01 12:20:49
278,2016-02-23 16:14:02,"## fix _config.yml
## TL;DR;

fix _config.yml
## Username

[neighborhood999](https://github.com/neighborhood999)
## Extra

sorry, my bad. :(
",neighborhood999,2016-02-23 16:14:20
277,2016-02-23 16:04:53,"## fix zh_TW permalink
## TL;DR;

fix permalink
## Username

[@neighborhood999](https://github.com/neighborhood999)
",neighborhood999,2016-02-23 16:05:23
276,2016-02-23 15:17:51,"## Minor grammar fixes
## TL;DR;

Minor grammar fixes mostly related to plural and singular forms
## Username

@ryanoasis
## Extra
- mostly concerning plural and singular uses
- 'Tip to...' not consistent with the other list items
",ryanoasis,2016-02-23 21:25:27
276,2016-02-23 21:25:28,"Thanks
",loverajoel,2016-02-23 21:25:27
276,2016-02-23 22:28:55,"no problem! Thank _you_ for the good repo!
",ryanoasis,2016-02-23 21:25:27
275,2016-02-23 11:46:02,"tip aka test in production,
it should be useful
it should not be too fancy
",zzz6519003,2016-03-05 13:39:43
275,2016-03-05 13:39:43,"I think we covered this. If you have a suggestion regarding contributing rules, just add a PR and we can discuss it.
",zenopopovici,2016-03-05 13:39:43
274,2016-02-23 03:47:09,"follow recently update.
fix some translated, use original character.
",neighborhood999,2016-02-23 03:47:30
273,2016-02-23 03:41:11,"## [Fix typo in 11 Chinese version ]
",plrthink,2016-02-23 06:01:54
273,2016-02-23 06:01:22,"@plrthink Thank you very much! Expect more :+1: 
",sjfkai,2016-02-23 06:01:54
272,2016-02-23 03:23:05,"Array.apply(null,{length:10}).map(Number.call,**Number**);
in tip33, if function map's second param is 'Array',the result will be nine arrays;if the second param is 'Object',the result will be something like '[number:0]'...I wonder **how the param influences the result**?
and what is the reference of 'this' in Number.call?
thank you
",SudoKillMe,2016-03-05 05:09:09
272,2016-02-23 07:44:14,"Map's second param is used as `this` when executing callback,so `Array.apply(null,{length:10}).map(Number.call,Number)`  will execute `Number.call.call(Number,undefined, n)` in each loop.`Number.call.call(Number,undefined, n)` is the same as `Number.call(undefined, n)`.
You can also use `Array.apply(null,{length:10}).map(Function.prototype.call,[Number|Array|Object])` instead.
",kubrick1991,2016-03-05 05:09:09
272,2016-02-23 08:17:53,"@kubrick1991 
Thank you very much. I benefited a lot from your answer.
however,I still have a question,as you said:
`Array.apply(null,{length:10}).map(Function.prototype.call,Number)` will execute `Function.prototype.call.call(Number,undefined,0,[undefined,...])` for the first element,in this code,'this' refers to 'Number'(am i right?),and this is the same as `Function.prototype.call(undefined,0,[undefined,...])`,in this code,'this' refers to 'undefined'(am i right?), so in my view,this code is the same as `Function(0)`,the result should have nothing with the second param([Number|Object|Array]),however,the second param influences the result,could you tell me why?
thank you again!
",SudoKillMe,2016-03-05 05:09:09
272,2016-02-23 10:07:09,"@SudoKillMe 
`Function.prototype.call.call([Number|Array|Object],undefined,n)` is the same as `[Number|Array|Object].call(undefined,n)`,not `Function.prototype.call(undefined,n)`.The second param is the function to finally execute, and the first param is just a `call` function.
",kubrick1991,2016-03-05 05:09:09
272,2016-02-23 10:57:20,"@SudoKillMe 
`Function.prototype.call(undefined,0)` is not the same as `Function(0)`.

The former calls function `Function.prototype` with `undefined` as its context and `0, [undefined, ...]` as its arguments. This will return `undefined` (function `Function.prototype` always returns `undefined`).

The latter calls constructor `Function` with only argument `0`. The result of such call is a newly created function with `0` used as it`s body, i.e. it`s almost the same as `function(){0}`.

The thing is `call` function calls some function in some context with some arguments. If you invoke ""call"" as member of some object (e.g. `Function.prototype.call(...`) then this object will be used as a function to be called.
",schyzoo,2016-03-05 05:09:09
272,2016-02-23 11:18:22,"@kubrick1991 
thanks a lot! I never thought the detail of these functions,you helped me a lot
thanks again
",SudoKillMe,2016-03-05 05:09:09
272,2016-02-23 11:19:31,"@schyzoo 
thanks,your answer made me understand something that I didn't know
",SudoKillMe,2016-03-05 05:09:09
271,2016-02-23 02:58:32,"update PR template link
",neighborhood999,2016-02-23 03:01:22
270,2016-02-22 13:00:17,"## Fix tip 00 with more data

Following issue #257 and the comments I made a PR to add more data about the tips.
It's purely about performance on Mobile or desktop.
## dexterneo

[dexterneo](https://github.com/dexterneo)
",jeremyfourna,2016-02-25 14:15:35
270,2016-02-22 13:29:42,"Nice, real data to compare performance, easy to understand. I've gone trough it and I can't find any issues.
:shipit: 
",zenopopovici,2016-02-25 14:15:35
270,2016-02-22 23:28:25,"@dexterneo awesome work, can you add the link to jsperf? (for curious people) or add the browser version, this measures will change in the time
",loverajoel,2016-02-25 14:15:35
270,2016-02-23 18:48:43,"Regarding the stats it's the average of browser by family (Chrome = all versions of Chrome currently on the market, etc...)

The link is already there at the beginning of all the big parts... Do you want to see it for each stats (by browser) ?

I can add the date for each stats, this way when we'll look at it we'll know that is was in february 2016 ?

Tell me what do you prefer ?
",jeremyfourna,2016-02-25 14:15:35
270,2016-02-24 17:30:16,"@dexterneo Just add the browser version for each stats item. (e.g. IE 11, Chrome 44) You can add also the date if you wish.
",zenopopovici,2016-02-25 14:15:35
270,2016-02-24 21:44:13,"+1
",loverajoel,2016-02-25 14:15:35
270,2016-02-25 00:16:26,"OK I'll push another version.
",jeremyfourna,2016-02-25 14:15:35
270,2016-02-25 12:39:06,"I just commited another version with browser version but I think we have a problem with **jsperf**

On Google Chrome blog, they talk about the next version of Chrome mobile v47 & v48 but on **jsperf** there is only v33 for Chrome mobile, so this page with benchmark with all the browser might be already deprecated lol

I don't know how **jsperf** works to add new browser support etc...
",jeremyfourna,2016-02-25 14:15:35
270,2016-02-25 14:15:18,"I think it's good enough right now. 
",zenopopovici,2016-02-25 14:15:35
270,2016-02-25 14:15:43,"Thanks for your work!
",zenopopovici,2016-02-25 14:15:35
270,2016-02-25 16:51:39,"your welcome
",jeremyfourna,2016-02-25 14:15:35
269,2016-02-22 03:15:40,"> P.S.: If variable1 is a number, then first check if it is 0.

`number` should translate to `Êï∞Â≠ó`
",zhangpenglin,2016-02-22 07:03:21
269,2016-02-22 03:41:54,"@neighborhood999 ping
",loverajoel,2016-02-22 07:03:21
269,2016-02-22 03:46:10,"I think this PR need @sjfkai review beacause this version is **zh_CN**
what do you think @loverajoel ?
",neighborhood999,2016-02-22 07:03:21
269,2016-02-22 03:49:32,"@neighborhood999 sorry, my bad
",loverajoel,2016-02-22 07:03:21
269,2016-02-22 07:01:28,"@zhangpenglin Thank you.  Except more PR to help me improve  the zh_CN version.
",sjfkai,2016-02-22 07:03:21
268,2016-02-20 19:50:11,"## Describe `++` operator
## TL;DR;

Explain how `a++` works
## Username

[@megapctr](https://github.com/megapctr)
## Extra

As requested by @zenopopovici 
",megapctr,2016-02-22 08:45:09
268,2016-02-20 23:50:17,"@megapctr: I would prefer a short phrase on -- rather than the ""excercise"" ... what do you think?
",zenopopovici,2016-02-22 08:45:09
268,2016-02-21 10:33:40,"Done. Is everything okay now?
",megapctr,2016-02-22 08:45:09
268,2016-02-21 16:54:02,":shipit: 
",loverajoel,2016-02-22 08:45:09
268,2016-02-21 17:32:33,":shipit: 
",zenopopovici,2016-02-22 08:45:09
268,2016-02-21 17:34:02,"@megapctr Thank your work! We'll merge it in the coming week.
",zenopopovici,2016-02-22 08:45:09
268,2016-02-22 08:45:14,"This is simple enough, merging.
",zenopopovici,2016-02-22 08:45:09
267,2016-02-20 16:40:08,"## Easy forEach operation
## TL;DR;

Make an easy `forEach` operation by using a simple regular expression.
## sekaiamber

[[@sekaiamber](https://github.com/sekaiamber)]
## Extra

Close the PR #124 , using the new PR rules.
",sekaiamber,2016-05-06 14:59:17
267,2016-02-20 16:40:20,"Related #124, using the new PR rules.
",sekaiamber,2016-05-06 14:59:17
267,2016-02-20 16:49:44,"Thank you @sekaiamber, we'll put it under review next week when the new rules go into effect.
",zenopopovici,2016-05-06 14:59:17
267,2016-02-24 17:23:36,"Not sure this tip will pass review. It needs to be a JS tip and be grammatically correct.
",zenopopovici,2016-05-06 14:59:17
267,2016-02-25 14:17:00,"@sekaiamber We discussed this, unless it points out a jQuery specific issue, we can't accept jQuery, either convert to vanilla JS or close PR.
",zenopopovici,2016-05-06 14:59:17
267,2016-02-25 16:37:11,"@zenopopovici You've misunderstood. jQuery is used as example and is pretty common. Their technique is clever and in this case shows the point.
The ""real"" code in this tip is vanilla JS.

However, I think the title is not fitting.
",kurtextrem,2016-05-06 14:59:17
267,2016-02-25 17:13:21,"I get what the tip does, but it revolves around how jQuery does stuff. Actual code should be given first, techniques described, and then maybe show alternatives. Not the other way around. It's too crude and a bit hard to understand.
",zenopopovici,2016-05-06 14:59:17
267,2016-02-25 17:20:48,"Actually I think the order is fine, it just needs other text. Such as:
""When taking a deep look into jQuery, we find a clever trick to define multiple functions with a lot less manual writing. For example you won't find `appendTo` and `prependTo`'s method body. Why is that?
...jQuery code...

We can easily use this technique like so:
...the code...
""

Also, jQuery is only named ""jQuery"" (so it could be any other library; We already have a tip similar to the one here, see: https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-01-15-even-simpler-way-of-using-indexof-as-a-contains-clause.md), and apart from `jQuery(selector)` the code snippet **is** vanilla JS. But that is irrelevant in this case, as it is used as ""showcase code"", not as ""use this code"".
",kurtextrem,2016-05-06 14:59:17
267,2016-02-25 18:18:59,"@loverajoel Maybe you can have a look, i might be wrong... but i'm still not convinced it's a good one.
",zenopopovici,2016-05-06 14:59:17
267,2016-03-03 04:59:28,"I have two issues with this tip:
1. The title is very confusing. How could applying a function over an array be any easier than `forEach`? It took a while to understand that a more accurate title would be **Easy `forEach` on delimited string lists**.
2. The content documents a slightly shorter, but less clear and more fragile alternative to:

<S_CODE_TOKEN>

For the tip to work, you need to remember that the regex must match _the individual elements you're interested in_, so you'd usually be specifying a _negative match_ on the delimiters. You'd therefore have to start with a delimiter match expression, which is precisely what `split` consumes.
",gromgit,2016-05-06 14:59:17
267,2016-03-05 05:19:31,"ping
",loverajoel,2016-05-06 14:59:17
267,2016-05-06 14:59:17,"Closed due to inactivity.
",zenopopovici,2016-05-06 14:59:17
266,2016-02-20 14:37:26,"This changes the wording around security:
https://github.com/loverajoel/jstips/pull/265
",jonathanKingston,2016-02-20 16:45:12
266,2016-02-20 15:06:06,"Changes accepted. Makes perfect sense. 
",zenopopovici,2016-02-20 16:45:12
266,2016-02-20 15:17:12,"Forgot about Chinese. We'll need a process to do this. 
",zenopopovici,2016-02-20 16:45:12
266,2016-02-20 16:45:12,"Update: Chinese language will be updated by the language responsible.
",zenopopovici,2016-02-20 16:45:12
266,2016-02-20 17:43:13,"Thank you!

On Sat, 20 Feb 2016 16:45 Zeno Popovici notifications@github.com wrote:

> Closed #266 https://github.com/loverajoel/jstips/issues/266.
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/loverajoel/jstips/issues/266#event-557653242.
",jonathanKingston,2016-02-20 16:45:12
265,2016-02-20 14:36:36,"The language of this tip is very strong in suggesting that it would prevent an attacker. If an attacker has script execution rights in your code using tricks like this can make an attackers life harder but very unlikely would stop the issue.
Closures were not really designed for security as data comes back out of them and bound to prototypes and DOM etc.
Real ES6 modules would create a whole new realm which is builtins and globals isolated from the users script execution.
",jonathanKingston,2016-02-20 15:05:13
264,2016-02-20 14:19:15,"## Cached fibonacci
## TL;DR;

Better cached version of fibonacci
## Username

@tommot348
## Extra
",sylvaindethier,2016-02-22 02:54:37
264,2016-02-21 17:05:36,"@hingsir ping!

@sylvaindethier translation isn't necessary for fixes, but @sjfkai will thank you :p
",loverajoel,2016-02-22 02:54:37
264,2016-02-22 01:50:32,"@sylvaindethier :+1:
",hingsir,2016-02-22 02:54:37
263,2016-02-20 12:56:06,"## Spelling mistake
## TL;DR;

Spelling mistake, for tip 27
## Username

http://twitter.com/zenopopovici
## Extra

Fixes #185
",zenopopovici,2016-02-20 12:56:36
262,2016-02-19 10:01:41,"Re: https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-02-15-detect-document-ready-in-pure-js.md

Why not just use the `DOMContentLoaded` event for those use cases?
",mathiasbynens,2016-03-05 05:09:49
262,2016-02-19 13:08:18,"I think it's more about (browsers') compatibilities, as explained [here](https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange).

Not really sure about it though.

<S_CODE_TOKEN>

It may be helpful to add it in the tip @loverajoel :) 
",adaniloff,2016-03-05 05:09:49
262,2016-02-19 13:11:29,"For old IE support you need something like https://github.com/dperini/ContentLoaded/blob/master/src/contentloaded.js anyway.
",mathiasbynens,2016-03-05 05:09:49
262,2016-02-19 13:20:04,"About [compatibilities](https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded#Cross-browser_fallback) : 

<S_CODE_TOKEN>

So I guess it wont work for older versions than IE8, in which case `contentLoaded` would be required.
",adaniloff,2016-03-05 05:09:49
262,2016-02-19 13:27:21,"To summarize:
1. `DOMContentLoaded` is IE9+.
2. If you need to support IE8 and older (in 2016 I hope you don‚Äôt have to) you should use something like https://github.com/dperini/ContentLoaded/blob/master/src/contentloaded.js that implements the scrolling trick (which the code samples in this post don‚Äôt do).

IMHO the post should be simplified to use `DOMContentLoaded` for the last two examples. If IE8 support is a concern then https://github.com/dperini/ContentLoaded should be mentioned.
",mathiasbynens,2016-03-05 05:09:49
262,2016-02-19 13:45:36,"Seems legit :) :shipit: !
",adaniloff,2016-03-05 05:09:49
262,2016-02-19 17:02:29,"@madmantalking I can add one more case using this `DOMContentLoaded`, what do you think

Thanks for your suggestion
",loverajoel,2016-03-05 05:09:49
262,2016-02-19 21:51:22,"I think IE9+ support is OK. Older browsers are simply edge cases which we shouldn't cover anymore. 
",zenopopovici,2016-03-05 05:09:49
262,2016-02-23 00:18:23,"This one is probably should be closed.  I also think that we shouldn't worry about IE8 and earlier browsers.  In all fairness none of the newer JS capabilities are supported in older browsers and fewer and fewer people working on new systems care about those.  Sure, there are older systems that need to be maintained but if you are in the maintenance mode, you probably already know what to watch for so :shipit: for this one
",pastrop,2016-03-05 05:09:49
261,2016-02-19 08:32:57,"Hi, thanks again for sharing it, I have just made a small code refactoring :)
",darul75,2016-02-25 14:22:49
261,2016-02-19 17:08:14,"@darul75 ping!
",loverajoel,2016-02-25 14:22:49
261,2016-02-25 14:22:58,"thanks @darul75 
",loverajoel,2016-02-25 14:22:49
260,2016-02-19 00:48:47,"## Update project guidelines

Based on comments in this [issue](https://github.com/loverajoel/jstips/issues/251) I rewrite the rules.

Please feel free to add suggestions!
",loverajoel,2016-02-22 23:17:51
260,2016-02-19 08:30:02,":+1: 
By the way, now we can add issue and PR templates. Is that something we want?
",kurtextrem,2016-02-22 23:17:51
260,2016-02-19 16:58:01,"@kurtextrem I added yesterday the PR template 
",loverajoel,2016-02-22 23:17:51
260,2016-02-19 17:09:55,"Aah sorry :)
Am 19.02.2016 17:58 schrieb ""Joel Lovera"" notifications@github.com:

> @kurtextrem https://github.com/kurtextrem I added yesterday the PR
> template
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/loverajoel/jstips/pull/260#issuecomment-186302586.
",kurtextrem,2016-02-22 23:17:51
260,2016-02-19 21:51:01,"@zenopopovici haha 5 is better to me, we can try with 5 and if we see that it is much we can return to 3
",loverajoel,2016-02-22 23:17:51
260,2016-02-20 13:37:58,"@loverajoel There are still some spelling mistakes suggested by @drakmail. Take a look when you have the time.
",zenopopovici,2016-02-22 23:17:51
260,2016-02-21 17:17:19,"@drakmail fiexed, thanks!
",loverajoel,2016-02-22 23:17:51
260,2016-02-21 17:18:10,":shipit: 
",drakmail,2016-02-22 23:17:51
260,2016-02-21 17:40:45,":shipit: 
",zenopopovici,2016-02-22 23:17:51
260,2016-02-21 18:21:43," 5 is good, :shipit:
",bmkmanoj,2016-02-22 23:17:51
260,2016-02-22 23:17:48,"Thanks guys! 
",loverajoel,2016-02-22 23:17:51
260,2016-02-23 05:44:13,":tada: this is awesome :)
",kurtextrem,2016-02-22 23:17:51
259,2016-02-18 18:52:06,"Addresses #251 - License.
",zenopopovici,2016-02-18 18:53:46
259,2016-02-18 18:53:44,"Awesome, thanks!
",loverajoel,2016-02-18 18:53:46
258,2016-02-17 20:18:28,"Fixed a typo on line 17
",souljacker,2016-02-17 21:29:45
258,2016-02-17 21:29:49,"@souljacker thanks
",loverajoel,2016-02-17 21:29:45
258,2016-02-17 22:10:01,"@loverajoel :bowtie: 
",souljacker,2016-02-17 21:29:45
257,2016-02-17 17:35:47,"Via url of the tip : http://jsperf.com/push-item-inside-an-array

<S_CODE_TOKEN>

It's false !

arr.push(6); does 26 457 551 operations per second ! in Chrome 47.0.2526.106
arr[arr.length] = 6; does 5 223 471 operations per second ! in Chrome 47.0.2526.106

READ : operations per second (higher is better) at the bottom of the chart !

So in fact arr.push(6); is 5.06 times faster !!! in Chrome 47.0.2526.106

Could you modify the tip please
",jeremyfourna,2016-03-05 05:10:10
257,2016-02-18 18:13:43,"@loverajoel :shipit: 
",adaniloff,2016-03-05 05:10:10
257,2016-02-18 23:31:19,"@dexterneo you are right, can you send a PR? if not, let me know and I will made the fix
",loverajoel,2016-03-05 05:10:10
257,2016-02-19 20:55:30,"OK I'll send a PR during the WE
",jeremyfourna,2016-03-05 05:10:10
257,2016-02-19 21:03:52,"Also, in safari `arr[arr.length] = 6;` is almost 2% faster that push :-)
",drakmail,2016-03-05 05:10:10
257,2016-02-19 21:06:23,"And maybe benchmark doesn't correct because there is could be some browser engine optimizations caused by same data in all tests (arr always have same set of elements)
",drakmail,2016-03-05 05:10:10
257,2016-02-22 13:01:38,"Hope the PR will be of use.
",jeremyfourna,2016-03-05 05:10:10
257,2016-02-22 13:02:02,"I'll let you close the issue if the PR is OK with you.
",jeremyfourna,2016-03-05 05:10:10
257,2016-02-22 13:27:17,"Cool stuff! Thanks @dexterneo, we'll add it under review this week.
",zenopopovici,2016-03-05 05:10:10
257,2016-02-26 08:52:01,"`var arr1 = [];
var arr2 = [];
var arr3 = [];
var arr4 = [];`
`console.time(11);`
`for(var i=0; i<10; i++){`
`arr1.push(i);`
`}`
`console.timeEnd(11);//output: **0.437**ms`

`console.time(22);`
`for(var i=0; i<10; i++){`
    `arr2[arr2.length] = i;`
`}`
`console.timeEnd(22);
//output: **0.062**ms`

`console.time(33);`
`for(var i=0; i<100000000; i++){`
    `arr3.push(i);`
`}`
`console.timeEnd(33);
//output: **2127.292**ms`

`console.time(44);`
`for(var i=0; i<100000000; i++){`
    `arr4[arr4.length] = i;`
`}`
`console.timeEnd(44);
//output: **2224.373**ms`
i have tested too, and i found that if i is very small ,the second way  is faster
however,if i is large enough Ôºåthey almost have same speed,even the first way execute faster than the second
",SudoKillMe,2016-03-05 05:10:10
256,2016-02-17 15:35:45,"I'm contributing to the Portuguese translation, and I think I might have found a misspelling in tip 35, English version.

At like 17 it reads:

> This is the **similiar** use of

Is ""similiar"" a misspelling of ""similar"" or is it a technical term I'm not aware of?
",souljacker,2016-02-18 10:00:59
256,2016-02-17 16:47:04,"It's a misspelling.
",polshgiant,2016-02-18 10:00:59
256,2016-02-18 10:01:28,"fixed by #258 
",sjfkai,2016-02-18 10:00:59
255,2016-02-17 13:00:33,,radarhere,2016-02-17 13:15:28
254,2016-02-17 11:23:56,,bsitruk,2016-02-18 16:03:44
254,2016-02-17 13:52:58,"@adaniloff ping
",loverajoel,2016-02-18 16:03:44
254,2016-02-18 16:03:07,"Thanks  @bsitruk ! Can i accept the PR from Github UI or should I do it in CLI ?
EDIT : I'm quite new here :)
",adaniloff,2016-02-18 16:03:44
254,2016-02-18 16:03:49,"@ahmedelgabri merged
",loverajoel,2016-02-18 16:03:44
254,2016-02-18 16:06:05,"@loverajoel I think you meant @adaniloff :)
",ahmedelgabri,2016-02-18 16:03:44
254,2016-02-18 17:14:24,"I think too :P @loverajoel , so you are the one that validate PR and just wait for the author to confirm it, right :)? 

Just wanna be sure about the process here.
",adaniloff,2016-02-18 16:03:44
253,2016-02-17 10:57:02,"## [reminders about reduce function usage]
## TL;DR;

Some examples of using reduce() builtin function.
## Username

[@darul75](https://github.com/darul75)
## Extra
",darul75,2016-02-17 20:11:15
253,2016-02-17 20:10:15,"nice tip
",loverajoel,2016-02-17 20:11:15
252,2016-02-16 22:43:16,"Minor syntax correction.
",mmurkidjanian,2016-02-16 23:07:54
252,2016-02-16 23:08:01,"Thanks!
",loverajoel,2016-02-16 23:07:54
251,2016-02-16 17:51:58,"One month and a half were born Js Tips with the concept of ""One tip per day"", 46 tips after these are my thoughts...

One tip day was an ambitious goal, even more, when the objective was a good quality and a useful tip.

We had really good tips for these days, excellent tips, but for the received feedback (and you can see that in the issues) show me that by follow the goal of one tip per day, I merged tips that maybe required more review.

This kind of things make me rethink that if we want to keep JsTips like ""the source of the truth"" we have to review the concept of ""one tip per day, maybe we can merge one tip per day, but maybe another days not, because maybe there aren't a really good tip ready to merge.

Seriously, this is not about the pass tips and the people that sent his tips, I'm pretty sure that without his tips this project should be dead, this is only about improve and make more useful the project.

What do you think about this?

Thanks

Joel
",loverajoel,2016-02-22 23:19:33
251,2016-02-16 18:30:28,"I think that's a natural evolution of the idea. Inevitably one day no good idea will come up and, in that case, it would be better to leave it be instead of filling it with a not so good tip or something too obvious.

Sure, we all would love one amazing new tip each day, but that won't be always possible. In that case, I think quality should be considered over frequency. 
",souljacker,2016-02-22 23:19:33
251,2016-02-16 18:40:22,"What about that one:
- For now we switch to ""one tip a week"". This leaves us empty room for reviewing tips and discussing (click ""Watch"", get notified about PRs and issues, join the discussion!)
- If (too) many new tips are coming in, we can switch back to daily (as the previous measure gives us enough time to review the new ones, so we publish the older ones first)
",kurtextrem,2016-02-22 23:19:33
251,2016-02-16 20:02:16,"@kurtextrem I agree with your first point. If we're handing out one a week, we'll have quite a bit of time to revamp the quality of individual tips. 

Quality should always be before quantity. 
",Pixeluh,2016-02-22 23:19:33
251,2016-02-16 20:10:09,"Totally agree with the stated opinions by @souljacker and @kurtextrem. Definitely it's really hard to keep high quality on the reviews for all purposed tips on a daily basis.

I believe it's a good idea to switch to a different time frame, though I'm not sure if this should be once per week. Maybe at least twice per week or on a scheduled basis excluding the weekends like every Monday, Wednesday and Friday. 

Of course this is something which depends on the amount of the tips and can vary in the time.

I'm also more than happy to help in the review process or in any other possible way as I think `JSTips` is really a great initiative!
",radibit,2016-02-22 23:19:33
251,2016-02-16 20:20:10,"Why do one need to bind a frequency to this publication of a tip?

I think it should be like ""one tip after another"" more than ""one tip a day/week/month/whatever"".

If two tips are good enough to be published the same day, that's great! But if they are not ready to be released, better waiting for more quality than publish some wrong / unclear tips.

I think too, maybe categorizing tips (by difficulty, library, etc) could be nice. Sometimes I wanted to check some old tips, and I struggled a bit... But it's only one month since the beginning of this project!

Sorry for bad English, I really enjoy this project tho ;).
",adaniloff,2016-02-22 23:19:33
251,2016-02-16 20:22:10,"+1 to @adaniloff, I think that is better don't set a frequency
",loverajoel,2016-02-22 23:19:33
251,2016-02-16 20:35:11,"### I think a way forward it to set a bunch of rules:
1. Tips should enter an ""under review"" phase where everyone contributing can vote on a tip (OK/NAK) in an Issue or PR.
2. If you want to ""localize"" tips, you will get a lot of requests that are basically just translating text. I don't see why tips should be translated. It's not a software for users where you need that kind of localization. You'll reduce a lot of overhead work with this, work that should be pushed to the improvement of existing tips and review on new tips.
3. Set basic code guidelines so that all tips use the same formatting, language, variable names, structure, etc.
4. Tips should not be bound to a time constraint. This only decreases the quality of the tips and also puts unnecessary stress on the maintainers to deliver. Once a week is great for a start, and then you publish whatever number of tips make it trough review.
5. Once this gets bigger you might want to publish them, also users need to know that they can freely use them, so every tip should be bound to a simple free-for-reuse license.

There may be other stuff that I'm not aware of. ;)
",zenopopovici,2016-02-22 23:19:33
251,2016-02-16 20:43:32,"@jucrouzet 
1. :+1: 
2. Translated tips are merged without code review because it's only a translation
3. :+1: 
4. :+1: 
5. I don't understand what are you trying to say, now jstips is open and free for reuse
",loverajoel,2016-02-22 23:19:33
251,2016-02-16 20:43:50,"I kinda agree with the comment above by @zenopopovici. Especially the 1., 3. and 4 :)

EDIT : @loverajoel  ahah that's fun, same reaction :)
EDIT2 : for the 3., I personnaly like [those rules](https://github.com/feross/standard/blob/master/RULES.md)!
",adaniloff,2016-02-22 23:19:33
251,2016-02-16 23:15:25,"@loverajoel  
5. I'm thinking ahead, I would want to publish these in an ebook format free for use at a time in the future. Anyway, there is no LICENSE file in the repo itself and one should be present (it's pretty standard). The readme has a link to a license not a license itself. Maybe I'm bickering about a non-issue but that's just me.

I've just downloaded the iOS app, it's gonna be my main free time lecture for a while :)
",zenopopovici,2016-02-22 23:19:33
251,2016-02-16 23:16:48,"@adaniloff - Those rules look pretty cool. :+1: 
",zenopopovici,2016-02-22 23:19:33
251,2016-02-16 23:18:35,"Guys, I'm not sure how did I came up in the discussion, but I'm pretty sure it's a bug :)
However, interesting exchanges :)
",jucrouzet,2016-02-22 23:19:33
251,2016-02-16 23:58:32,"It's my bug :) Sorry.
",zenopopovici,2016-02-22 23:19:33
251,2016-02-17 00:59:36,"Maybe tips should start in `_posts/stage0/` wrt initial submission, in this way others can arrange for PRs and once it's been curated can move forward.
- `stage0` - Initial Submittion for review (by PR)
- `stage1` - Initial Review, accepted as a potential tip topic, edits should happen here pre-release
- `stage2` - Content edited, ready for release, prioritization stage

With each `git mv` through stages, the original and referenced authors should be tagged in the commit message.  Not sure if en, or other languages should be separated in the various stages, or if `en` should be default.

Just some thoughts on this one.
",tracker1,2016-02-22 23:19:33
251,2016-02-17 05:11:10,"@zenopopovici I don't know much about licenses, I like a licence that is free use but for open source projects :smile: 
",loverajoel,2016-02-22 23:19:33
251,2016-02-17 08:57:44,"I think we should also define rules such as:
- At least 3 (or 2?) people have to give their ""LGTM"" 
- when there is one 'complaint' resolve first before moving on

I also like standard a lot (@adaniloff suggested it).
",kurtextrem,2016-02-22 23:19:33
251,2016-02-17 09:07:41,"Yes, +1 for Standard JS
",gihrig,2016-02-22 23:19:33
251,2016-02-17 09:56:04,"@zenopopovici :+1: I think it is great idea not bounding to a time constant. Another variant ‚Äì¬†publish only prepared tips once a week. It could provide some regularity without reducing quality.
",drakmail,2016-02-22 23:19:33
251,2016-02-17 10:16:35,"I'm on a meeting today so I won't be able to read / participate, I'll do it later!

Happy to see people who are concerned about jstip :)!
",adaniloff,2016-02-22 23:19:33
251,2016-02-17 10:23:15,"Agree with other people's opinions. It's more important to focus on tips' quality  rather than must obey ""One tip per day"".
",sjfkai,2016-02-22 23:19:33
251,2016-02-17 15:52:24,"@loverajoel - Here is another view to improve the quality of tips. If we can get some of most renowned guys in the JS community to contribute to this project by providing their tips, including the library/framework creators and committers/contributors, the people who drive the EcmaScript and web standards, we can expect the tips to be of high quality. And if we are not able to get them to contribute to this project, at least we can request them to be part of a review panel for the tips, if there is ever one review panel created. 

Another way would be to take a look at some of the awesome blog posts written by these people and translate it to tips format and publish them here with their permission/ attribution. This would make sure we can gather the quality content present already in multiple sources and collate them in this repo. 
",bmkmanoj,2016-02-22 23:19:33
251,2016-02-17 15:58:59,"I think quality is always more important than quantity.  The value comes from the output itself and not necessarily from the frequency of its arrival.  Also if you you feel like you don't have enough JS in your life, check this one out https://www.codewars.com.  It may give you ideas for good tips!
",pastrop,2016-02-22 23:19:33
251,2016-02-17 16:25:06,"@bmkmanoj I tried to contact JS rockstars to contribute but without success yet.
",loverajoel,2016-02-22 23:19:33
251,2016-02-17 16:38:46,"I will shoot a message to NYC JS group I am member of¬†http://www.meetup.com/NY-JavaScript/

<S_CODE_TOKEN>

 To: loverajoel/jstips jstips@noreply.github.com 
Cc: pastrop pas_trop2003@yahoo.com
 Sent: Wednesday, February 17, 2016 11:25 AM
 Subject: Re: [jstips] Rethinking JsTips goal (#251)

@bmkmanoj I tried to contact JS rockstars to contribute but without success yet.‚Äî
Reply to this email directly or view it on GitHub.  
",pastrop,2016-02-22 23:19:33
251,2016-02-17 16:41:09,"It may not be relevant with the main subject of this topic, but I also think one of the greatest thing in a quality > quantity approach is the community which will participate.

Lemme explain my point of view.

Publishing quality means people code to be extremely analysed / reviewed. So people who are going to contribute will share the eager to learn / debate about things they may be not sure about (and not only show to others things they will consider as ""true"", whatever  others say).

Even if there are less tips than 1 a day, that will bring more discussions and PRs, more implication, participation etc from a good community, which will grow bigger AND better (=with better understanding of all JS concepts).

My point is by improving quality, people will want to contribute not only to share but also to learn (I think that is an important quality).

I don't know if this is still relevant with the goal of this subject but I just wanted to share this :).

Hope it will help you to take some decisions about the future updates of this project (the PRs and submissions requests, frequency, quality etc).

Sorry for bad english :).
",adaniloff,2016-02-22 23:19:33
251,2016-02-17 16:45:22,"@loverajoel That is kinda sad :worried:. I really like this project and I would like to take some responsibility towards keeping it going and grow stronger, by translating some of good stuff from the JS rockstars that I have been collating from blogs/ sites and publish here. If you feel, making me a collaborator will help in this direction - you may do so, but it is fine otherwise also.
",bmkmanoj,2016-02-22 23:19:33
251,2016-02-17 20:08:29,"Simple things are always the best, keep on.
",ramitayba,2016-02-22 23:19:33
251,2016-02-17 21:21:33,"All of us are on the same page, **quality > quantity**.
So, I'm going to create a couple labels to tag each tip.

All tips will have (same now) a label `tip-proposal` to identify tips PR's. Also will be two more labels to identify the status of the tip:  `under review` and `ready to merge`.

A tip will be `ready to merge` when at least 5 people give his :shipit: => `:shipit:`

Also, I need help for somebody that know about licenses, @zenopopovici are right, and the repo don't have a valid license file, and I think that it should contemplate free usage under open source projects, right?
",loverajoel,2016-02-22 23:19:33
251,2016-02-18 07:53:47,"@loverajoel Are you talking about tips license or about code in tips license? For tips best choice is one of Creative Commons licenses, for code ‚Äì¬†GPL v3. These licenses best fits for free usage in open source projects.
",drakmail,2016-02-22 23:19:33
251,2016-02-18 15:42:15,"@drakmail awesome! thanks for that!
",loverajoel,2016-02-22 23:19:33
251,2016-02-18 18:52:35,"@loverajoel I've added the license. 
",zenopopovici,2016-02-22 23:19:33
251,2016-02-18 22:01:53,"Quality of quantity for sure.
",johnstew,2016-02-22 23:19:33
251,2016-02-18 23:46:11,"So, following up on the idea of peer-reviewing ¬†tips before publishing is there going the be some holding area for people to go in and review the pending tips. ¬†How it all is going to work? ¬†Are we going to somehow leverage github workflow with people submitting pull requests?¬†
Also here is yet another pretty amorphous thought. ¬†I am writing scaffolding for ecommerce platofrm using MEAN stack. ¬†While doing it I run into pretty bizarre behavior related to the structure of JSON object (result of the MongoDB database query) that I am sending into my Angular controller via JSON. ¬†It took me over 2 hours to troubleshoot and I bet there are a lot of people out there banging their heads against the wall being faced with the same problem. ¬†This may be too large to be a tip yet it would be useful to share. ¬†Maybe JSTips should allow inputs with people explaining the problem and providing links to their github repos for details¬†

<S_CODE_TOKEN>

 To: loverajoel/jstips jstips@noreply.github.com 
Cc: pastrop pas_trop2003@yahoo.com
 Sent: Wednesday, February 17, 2016 4:22 PM
 Subject: Re: [jstips] Rethinking JsTips goal (#251)

All of us are on the same page, quality > quantity.
So, I'm going to create a couple labels to tag each tip.All tips will have (same now) a label tip-proposal to identify tips PR's. Also will be two more labels to identify the status of the tip: under review and ready to merge.A tip will be ready to merge when at least 5 people give his  => :shipit:Also, I need help for somebody that know about licenses, @zenopopovici are right, and the repo don't have a valid license file, and I think that it should contemplate free usage under open source projects, right?‚Äî
Reply to this email directly or view it on GitHub.  
",pastrop,2016-02-22 23:19:33
251,2016-02-19 00:52:05,"PR with proposed changes about new rules  https://github.com/loverajoel/jstips/pull/260

I need review
",loverajoel,2016-02-22 23:19:33
251,2016-02-19 03:24:33,"@loverajoel If we're talking about licensing tips code, the GPL is absolutely the wrong license, due to this line at the end of the license file.

> ""The GNU General Public License does not permit incorporating your program into proprietary programs.""

The GPL will ensure that businesses or anyone developing commercial software will not acknowledge  using JS Tips (if they're paying attention).

Look around the [npm registry](https://npmjs.org) and you'll see the MIT is far and away the most common license used in open source JS.

Because MIT is not compatible with GPL, some times a dual license model is used.

If the plan is to offer tips code under any license, contributors need to be made aware of that and explicitly agree to the license(s) used.

On the other hand, if you are only applying the license to the JS Tips site (not the tips code), one of the Creative Commons licenses is probably best.

For more on the various licenses see:

[tl;dr leagal](https://tldrlegal.com/)
[Open Source Intiative](https://opensource.org/)
Wikipedia has a [comparison](https://en.wikipedia.org/wiki/Comparison_of_free_and_open-source_software_licenses) of free and open source licenses.
[Creative Commons](https://creativecommons.org/choose/)

Licensing can be a sticky issue, hope this helps.
",gihrig,2016-02-22 23:19:33
251,2016-02-19 07:31:03,"@gihrig GPL best fits for requirements of @loverajoel

> I think that it should contemplate free usage under open source projects, right?

@gihrig you are right, MIT is better as license for tips that allows usage in proprietary projects.
",drakmail,2016-02-22 23:19:33
251,2016-02-19 08:28:25,"Personally I vote for https://en.wikipedia.org/wiki/WTFPL.
",kurtextrem,2016-02-22 23:19:33
251,2016-02-19 09:02:56,"I think GPL should be used. All contributors are volunteers, reviews are done by the same volunteers, it should be open source. 

It should be up to @loverajoel though. 

We can change the license now, but it will be very hard to do that later.

PS: The license in the repo applies to everything unless we split the repo into 2 different repos (one for tips, the other for the site) and apply a different license to each of them.
PPS: The license file type for GLP is plain-text (makes no sense to add .md to it) /cc @loverajoel 
",zenopopovici,2016-02-22 23:19:33
251,2016-02-19 09:26:28,"@loverajoel I think there should be a issue with vote for most suitable license for the tips.
",drakmail,2016-02-22 23:19:33
251,2016-02-19 17:07:16,"I have not problems about licence type, we can choose the fittest for the project.
The only case that I think that we have to prevent is for example if somebody uses the Tips for creating a platform for tech js and it isn't free.

cc @drakmail @kurtextrem @zenopopovici 
",loverajoel,2016-02-22 23:19:33
251,2016-02-19 17:40:26,"Oh yes, totally right.
So we need a license which prevents commercial use, and requires crediting
when using or modifying the genuine content of the tip (don't confuse the
genuine content with actual code - I don't think it makes sense to
""license"" code in tips, as that would bring confusion whether you have to
credit the author when using the code. It's also likely someone else wrote
about the same code snippet already)
Am 19.02.2016 18:07 schrieb ""Joel Lovera"" notifications@github.com:

> I have not problems about licence type, we can choose the fittest for the
> project.
> The only case that I think that we have to prevent is for example if
> somebody uses the Tips for creating a platform for tech js and it isn't
> free.
> 
> cc @drakmail https://github.com/drakmail @kurtextrem
> https://github.com/kurtextrem @zenopopovici
> https://github.com/zenopopovici
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/loverajoel/jstips/issues/251#issuecomment-186307539.
",kurtextrem,2016-02-22 23:19:33
251,2016-02-19 17:59:26,"@kurtextrem +1
",loverajoel,2016-02-22 23:19:33
251,2016-02-19 18:50:42,"@kurtextrem +1
",zenopopovici,2016-02-22 23:19:33
251,2016-02-19 20:50:07,"some idea about what kind of license is?
",loverajoel,2016-02-22 23:19:33
251,2016-02-19 20:57:31,"@loverajoel I think best is MIT license for code in tips and one of of Creative Commons licenses for tips text. It allow to use tips code in free and proprietary projects and restrict tips text usage (for example, allowing usage only with link to jstips repo)
",drakmail,2016-02-22 23:19:33
251,2016-02-19 21:40:08,"I want to merge the new rules, but I need :shipit:'s :p

https://github.com/loverajoel/jstips/pull/260
",loverajoel,2016-02-22 23:19:33
251,2016-02-19 21:59:02,"Suggestion: Can we also set a limit of 2 weeks for an issue to be answered? We would close it if 2 weeks pass and the creator didn't answer. Would help to keep the issue list lean.
",zenopopovici,2016-02-22 23:19:33
251,2016-02-19 22:01:37,"Suggestion2: Can we ask people with that have a better implementation of some tip to make a PR? There are some answers in issues that would require a PR, but are left as comments.
",zenopopovici,2016-02-22 23:19:33
251,2016-02-20 12:46:07,"Suggestion from #186: We should add JSBin links to tips. I second that!
",zenopopovici,2016-02-22 23:19:33
251,2016-02-20 16:05:15,"I agree w/ @zenopopovici [point 2](https://github.com/loverajoel/jstips/issues/251#issuecomment-184865110). Why should the tips be translated ? IMO any (JS) developer should be able to read technical english.
Is GitHub translated ? No !
Is MDN translated ? ... Oh wait, yes ! But personally I always read their `en_US` docs.
",sylvaindethier,2016-02-22 23:19:33
251,2016-02-20 16:06:33,"I think voluntary translations are fine, however they shouldn't block publishing.
",kurtextrem,2016-02-22 23:19:33
251,2016-02-20 16:47:32,"As it stands now, every language will have a responsible that will follow each commit that changes the en  version, so translations will not block publishing. So everyone is happy :8ball: 
",zenopopovici,2016-02-22 23:19:33
251,2016-02-21 17:48:00,"Guys you might want to look over the PR and give your :shipit: or :no_good: vote for the new rules.

We can still improve rules along the way. Anyone can come up with a PR. We want to implement the new rules next week and we have a few tips waiting to be reviewed in the pipeline. 

//cc @souljacker, @kurtextrem, @Pixeluh, @radibit, @adaniloff, @jucrouzet, @tracker1, @gihrig, @sjfkai, @bmkmanoj, @pastrop, @ramitayba, @johnstew
",zenopopovici,2016-02-22 23:19:33
251,2016-02-22 03:38:03,"I might've somehow missed it yet could you guys tell me how the voting works? ¬†I go to GitHub and ¬†don't see where I am supposed to vote

<S_CODE_TOKEN>

 To: loverajoel/jstips jstips@noreply.github.com 
Cc: pastrop pas_trop2003@yahoo.com
 Sent: Sunday, February 21, 2016 12:48 PM
 Subject: Re: [jstips] [Discussion] Rethinking JsTips goal (#251)

Guys you might want to look over the PR and give your  or  vote for the new rules.We can still improve rules along the way. Anyone can come up with a PR. We want to implement the new rules next week and we have a few tips waiting to be reviewed in the pipeline. //cc @souljacker, @kurtextrem, @Pixeluh, @radibit, @adaniloff, @jucrouzet, @tracker1, @gihrig, @sjfkai, @bmkmanoj, @pastrop, @ramitayba, @johnstew‚Äî
Reply to this email directly or view it on GitHub.  
",pastrop,2016-02-22 23:19:33
251,2016-02-22 08:44:31,"@pastrop Just enter the `:shipit:` or `:no_good:` emoticon in the comments section of the PR/Issue.
Or just say ""I'm OK with this"". 
",zenopopovici,2016-02-22 23:19:33
251,2016-02-22 21:34:39,"It look like we are overthinking it....So :shipit: It'll always can be amended later, also I wouldn't spend to much time focusing on localization & translation. The way things are now, CS is done in English. If people feel strongly about translating tips into other languages, more power to them....
",pastrop,2016-02-22 23:19:33
251,2016-02-22 22:42:26,"Agree ... let's merge the new rules @loverajoel 
",zenopopovici,2016-02-22 23:19:33
251,2016-02-22 23:19:31,"New rules merged! Thanks for your comments and your support! 
",loverajoel,2016-02-22 23:19:33
250,2016-02-16 13:16:37,"Now it consistent
",drakmail,2016-02-20 13:30:35
250,2016-02-18 17:36:45,"@drakmail I made a PR (for you) about two things :
- 2 spaces instead of 4 
- spaces instead of tabs 

Tell me if anything
",adaniloff,2016-02-20 13:30:35
250,2016-02-18 23:30:47,"+1 to 2 spaces
",loverajoel,2016-02-20 13:30:35
250,2016-02-19 07:32:47,"+1 to 2 spaces :-)
",drakmail,2016-02-20 13:30:35
249,2016-02-16 08:39:52,"The code and instructions given in #46 are a gross oversimplification. Have a look at the hoops jQuery needs to jump through to arrive at a reliable cross-browser 'dom ready'.

(Perhaps it's time to start vetting tips before publishing them, because this is the umpteenth time that you're spreading wrong information and potentially harming other unknowing people's codebases with it.)
",rjgotten,2016-02-20 13:20:37
249,2016-02-16 09:53:02,":+1: totally correct!
",kurtextrem,2016-02-20 13:20:37
249,2016-02-16 14:11:35,"@rjgotten I agree with you, even these days I have in mind rethink the ""one js tip per day"", following this directive, force us merge tips fast and without review enough.
",loverajoel,2016-02-20 13:20:37
249,2016-02-16 17:52:43,"@radibit @kurtextrem https://github.com/loverajoel/jstips/issues/251
",loverajoel,2016-02-20 13:20:37
249,2016-02-20 13:20:37,"We're adding new rules in the coming days. #46 has been closed for now.
",zenopopovici,2016-02-20 13:20:37
248,2016-02-15 14:36:35,"## Extract Unix timestamp in Javascript
## TL;DR;

Easiest way to extract Unix Timestamp in Javascript
## Username

[@nmrony](https://github.com/nmrony)
## Extra
",nmrony,2016-02-26 14:40:21
248,2016-02-15 15:24:31,"I think .getTime() is better than +new Date()
",gogainda,2016-02-26 14:40:21
248,2016-02-15 17:01:12,"@gogainda perf? Else +new Date wins, less characters.
(for current timestamp Date.now() can be used and is shorter)
",kurtextrem,2016-02-26 14:40:21
248,2016-02-15 18:18:15,"@kurtextrem At least is easier to understand for newcomers. `+new Date` seems like magic
",gogainda,2016-02-26 14:40:21
248,2016-02-15 18:21:32,"@gogainda Feel free to dive into the mechanics behind that. More knowledge for everyone! :muscle: 
",kurtextrem,2016-02-26 14:40:21
248,2016-02-16 06:11:24,"@kurtextrem @gogainda Agreed and `getTime()` , `.now()` is performant than the magic trick. Let me add those also and send another PR with these functions. BTW- What is the Patch Template?
",nmrony,2016-02-26 14:40:21
248,2016-02-20 13:32:57,"@nmrony Just update the current PR. We'll add it under review in the coming days, where it can be voted by everyone. See #251 
",zenopopovici,2016-02-26 14:40:21
248,2016-02-20 16:44:24,"@zenopopovici I have updated my PR.. Found that `date.now()` is performant than `getTime` [now vs getTime](http://jsperf.com/gettime-vs-now-0). Please have a look on PR if it is all ok or not. Thanks
",nmrony,2016-02-26 14:40:21
248,2016-02-20 16:54:09,"Can you clarify ""magic""? :) I like the wording but + should be explained. Otherwise, it looks great to me. We'll open an issue so that the community can review this next week.
",zenopopovici,2016-02-26 14:40:21
248,2016-02-20 17:29:07,"@zenopopovici Under the hood the runtime calls `valueOf` method of the Date object.  Then the unary `+`  operator calls `toNumber()` with that returned value. More information can be found in the links below
[Date.prototype.valueOf](http://es5.github.io/#x15.9.5.8)
[Unary + operator](http://es5.github.io/#x11.4.6)
[toNumber()](http://es5.github.io/#x9.3)
Should I add these links in this tips? or better to remove the part? :-)
",nmrony,2016-02-26 14:40:21
248,2016-02-20 18:20:25,"@nmrony I know what it does :), but some of the people reading might not. Just add it to the explanation. A short sentence and link should be fine :)
",zenopopovici,2016-02-26 14:40:21
248,2016-02-20 19:30:24,"@zenopopovici I have added a short explanation and those links also. Please check the PR now. Hope it is fine :). Thanks
",nmrony,2016-02-26 14:40:21
248,2016-02-22 12:02:57,":shipit: 
",drakmail,2016-02-26 14:40:21
248,2016-02-22 13:24:51,":shipit: 
",zenopopovici,2016-02-26 14:40:21
248,2016-02-22 23:29:02,":shipit: :clap: 
",loverajoel,2016-02-26 14:40:21
248,2016-02-24 03:59:06,"@gogainda @kurtextrem :shipit: ?
",loverajoel,2016-02-26 14:40:21
248,2016-02-25 15:11:15,"Can I give a  :shipit: ? :smile: 
",nmrony,2016-02-26 14:40:21
248,2016-02-25 15:14:46,"@loverajoel: Let's ship this :)
",zenopopovici,2016-02-26 14:40:21
248,2016-02-25 15:21:38,"@nmrony hahah that's the reason why I proposed 3 shipits in the rules, but now is 5 :p
",loverajoel,2016-02-26 14:40:21
248,2016-02-25 16:28:38,":shipit: :D
",kurtextrem,2016-02-26 14:40:21
248,2016-02-26 03:21:05,":shipit:   :+1: 
",sjfkai,2016-02-26 14:40:21
248,2016-02-26 14:48:06,"thanks guys!
",loverajoel,2016-02-26 14:40:21
247,2016-02-15 14:13:57,"Hello. 
Sorry for english mistakes if any, it's not my native language.

Feel free to comment and tell me what's wrong, if anything :).

First pull request on github by the way, please be gentle with me :D.
",adaniloff,2016-02-16 15:38:18
247,2016-02-15 16:59:32,"Please take a look at it again. I've commented inline.

Also I'm not sure what tip you're trying to get over. Can you please explain?

Thank you,
Jacob
",kurtextrem,2016-02-16 15:38:18
247,2016-02-15 17:09:54,"First, Thank you for replying to me.
I'm trying to explain which differences there are with theses different variable declarations.

EDIT : the idea is to see how x and y change with those different declarations

Could you explain to me what's wrong please? (I don't see any problem... ?) 

Again, excuse me for my poor english.

You can test the script and see console.log results by clicking on the following link : [here](https://babeljs.io/repl/#?experimental=false&evaluate=true&loose=false&spec=false&code=var%20y%2C%20x%20%3D%20y%20%3D%201%20%2F%2F%3D%3D%20var%20x%3B%20var%20y%3B%20x%20%3D%20y%20%3D%201%0Aconsole.log%28'--%3E%201%3A'%2C%20%60x%20%3D%20%24%7Bx%7D%2C%20y%20%3D%20%24%7By%7D%60%29%0A%0A%2F%2F%20Will%20print%0A%2F%2F--%3E%201%3A%20x%20%3D%201%2C%20y%20%3D%201%0A%0A%3B%28%28%29%20%3D%3E%20%7B%20%0A%20%20var%20x%20%3D%20y%20%3D%202%20%2F%2F%20%3D%3D%20var%20x%3B%20y%20%3D%202%3B%0A%20%20console.log%28'2.0%3A'%2C%20%60x%20%3D%20%24%7Bx%7D%2C%20y%20%3D%20%24%7By%7D%60%29%0A%7D%29%28%29%0Aconsole.log%28'--%3E%202.1%3A'%2C%20%60x%20%3D%20%24%7Bx%7D%2C%20y%20%3D%20%24%7By%7D%60%29%0A%0A%2F%2F%20Will%20print%0A%2F%2F2.0%3A%20x%20%3D%202%2C%20y%20%3D%202%0A%2F%2F--%3E%202.1%3A%20x%20%3D%201%2C%20y%20%3D%202%0A%0A%3B%28%28%29%20%3D%3E%20%7B%20%0A%20%20var%20x%2C%20y%20%3D%203%20%2F%2F%20%3D%3D%20var%20x%3B%20var%20y%20%3D%203%3B%0A%20%20console.log%28'3.0%3A'%2C%20%60x%20%3D%20%24%7Bx%7D%2C%20y%20%3D%20%24%7By%7D%60%29%0A%7D%29%28%29%0Aconsole.log%28'--%3E%203.1%3A'%2C%20%60x%20%3D%20%24%7Bx%7D%2C%20y%20%3D%20%24%7By%7D%60%29%0A%0A%2F%2F%20Will%20print%0A%2F%2F3.0%3A%20x%20%3D%20undefined%2C%20y%20%3D%203%0A%2F%2F--%3E%203.1%3A%20x%20%3D%201%2C%20y%20%3D%202%0A%0A%3B%28%28%29%20%3D%3E%20%7B%20%0A%20%20var%20y%2C%20x%20%3D%20y%20%3D%204%20%2F%2F%20%3D%3D%20var%20x%3B%20var%20y%3B%20x%20%3D%20y%20%3D%203%0A%20%20console.log%28'4.0%3A'%2C%20%60x%20%3D%20%24%7Bx%7D%2C%20y%20%3D%20%24%7By%7D%60%29%0A%7D%29%28%29%0Aconsole.log%28'--%3E%204.1%3A'%2C%20%60x%20%3D%20%24%7Bx%7D%2C%20y%20%3D%20%24%7By%7D%60%29%0A%0A%2F%2F%20Will%20print%0A%2F%2F4.0%3A%20x%20%3D%204%2C%20y%20%3D%204%0A%2F%2F--%3E%204.1%3A%20x%20%3D%201%2C%20y%20%3D%202%0A%0Ax%20%3D%205%20%2F%2F%20%3D%3D%20x%20%3D%205%0Aconsole.log%28'--%3E%205%3A'%2C%20%60x%20%3D%20%24%7Bx%7D%2C%20y%20%3D%20%24%7By%7D%60%29%0A%0A%2F%2F%20Will%20print%0A%2F%2F--%3E%205%3A%20x%20%3D%205%2C%20y%20%3D%202)
",adaniloff,2016-02-16 15:38:18
247,2016-02-15 17:34:40,"Ah, I see. It is one context and they live in the same environment.
Now I see what you're trying to get over.

Could you please add more comments to the tip? E.g. after the 2nd output:
""As you can see, the code has only changed the global `y`, as we haven't declared the variable in the closure.""
After the 3rd:
""Now we declare both variables through `var`. Meaning they only live in the context of the closure.""
After the 4th:
""Both variables have been declared using `var` and only after that we've set their values. As local > global, `x` and `y` are local in the closure, meaning the global `x` and `y` are untouched.""
That makes it more obvious to what exactly is going on.

Also adding the Babel link is so helpful. Can you please also add it?

The comment in line 28 is still wrong.
",kurtextrem,2016-02-16 15:38:18
247,2016-02-15 18:19:45,"Ahh, thanks for the L.28; I hadn't noticed until I read your last comment!
Also, good idea too add explanations, I thought what I was trying to do was obvious but I see now it is not, thanks to you.

I'm doing all that, thanks man!
",adaniloff,2016-02-16 15:38:18
247,2016-02-15 18:37:30,"Should / could I mention you ? For your help :) ? 
Thanks again !
",adaniloff,2016-02-16 15:38:18
247,2016-02-15 18:49:36,"You decide, It's all your tip. I'm just trying to help :) 

I've added one last comment - and I think it would be better to add ` to the x, y and var in the explanations (to understand that we're talking about code)
",kurtextrem,2016-02-16 15:38:18
247,2016-02-15 19:16:57,"Damn. I changed my setup env and can't figure how to make thoses ` work now. I'm on it!
EDIT : ok, that's good now !
",adaniloff,2016-02-16 15:38:18
247,2016-02-16 09:53:25,"Seems good to me! :+1: 
",kurtextrem,2016-02-16 15:38:18
247,2016-02-16 10:44:17,"Yeah! Thanks for your help :)

Btw the last commit I did remove the special thanks I'd written.
Gonna do it again.

Should I do something else for the pull request? Like redo a pull request or so ...? First time doing it so I don't really know :).
",adaniloff,2016-02-16 15:38:18
247,2016-02-16 11:20:23,"I guess you have to change the file name, as today is the 02-16.

Apart from that, @loverajoel ping
",kurtextrem,2016-02-16 15:38:18
247,2016-02-16 11:31:11,"Damn, you're right, thanks again (what would I do without you ahah).
Doing this @ + nickname ping, will trigger an alert for him ? Just to know :)
",adaniloff,2016-02-16 15:38:18
247,2016-02-16 12:40:49,"He will get a notification that he was mentioned :)
",kurtextrem,2016-02-16 15:38:18
247,2016-02-16 13:06:52,"Got it :)
",adaniloff,2016-02-16 15:38:18
247,2016-02-16 15:38:15,"good tip! thanks for your tip @adaniloff and for your review @kurtextrem !
",loverajoel,2016-02-16 15:38:18
246,2016-02-15 06:35:05,,hingsir,2016-02-15 14:14:41
245,2016-02-15 01:40:41,"I felt that while the JavaScript of this tip is solid, the English could use some work.

I know that ""grammar nazi"" PRs can sometimes come under fire, but I thought that I'd try anyways. No offense meant by my corrections.
",AgentEpsilon,2016-02-15 02:07:11
245,2016-02-15 02:07:09,"@AgentEpsilon thanks man!
",loverajoel,2016-02-15 02:07:11
244,2016-02-14 19:30:06,"## [Spread operator and array switch]
## TL;DR;

The Spread operator examples had the numbers array and the Spread operator switched.
## Username

https://github.com/nickooms/
## Extra

Math.max(...numbers) and Math.min(...numbers) do work, while Math.max(numbers...) and Math.min(numbers...) both produce a SyntaxError: missing ) after argument list
",nickooms,2016-02-14 19:36:51
244,2016-02-14 19:36:40,"üôàüôà

Thanks
",loverajoel,2016-02-14 19:36:51
243,2016-02-14 16:50:54,"`effectvely` ‚Üí `effectively`
",pra85,2016-02-14 17:03:49
243,2016-02-14 17:03:44,"thanks
",loverajoel,2016-02-14 17:03:49
243,2016-02-14 17:05:46,"No problems :+1: 
",pra85,2016-02-14 17:03:49
242,2016-02-13 17:49:22,"Know and understand the JavaScript passing mechanism.
",bmkmanoj,2016-02-13 21:23:10
242,2016-02-13 21:24:22,"Awesome! thanks for your tip
",loverajoel,2016-02-13 21:23:10
241,2016-02-13 15:07:47,"Hi @loverajoelÔºö
I very like jstipsÔºÅThat's simple and usefulÔºÅ
So I want to translate to Chinese Translation for my friends and other peoples for learning.
I will complete other config and something.
",neighborhood999,2016-02-21 23:49:24
241,2016-02-13 21:00:18,"Hey @neighborhood999 what is the difference with this Chinese version? https://github.com/loverajoel/jstips/tree/gh-pages/_posts/zh_CN
",loverajoel,2016-02-21 23:49:24
241,2016-02-13 21:00:46,"@sjfkai ping!
",loverajoel,2016-02-21 23:49:24
241,2016-02-14 01:33:34,"@loverajoel yep, different Chinese version is on diction and Chinese Translation is use by Taiwanese.
",neighborhood999,2016-02-21 23:49:24
241,2016-02-14 03:00:53,"yes, we need this version, and it should be called `zh_TW`. Some differences from `zh_CN`
",sjfkai,2016-02-21 23:49:24
241,2016-02-15 13:22:18,"Hey @loverajoel, I already setting config, please check. thank you :)
",neighborhood999,2016-02-21 23:49:24
241,2016-02-15 13:36:14,"@neighborhood999 sure, I will check it today, thanks!
",loverajoel,2016-02-21 23:49:24
241,2016-02-16 03:19:38,":+1: 
",sjfkai,2016-02-21 23:49:24
241,2016-02-16 03:29:40,"@loverajoel thank youÔºÅ
",neighborhood999,2016-02-21 23:49:24
241,2016-02-16 03:32:44,":+1: 
",chentsulin,2016-02-21 23:49:24
241,2016-02-20 12:03:45,"@sjfkai Please merge this if all looks ok.
",zenopopovici,2016-02-21 23:49:24
241,2016-02-20 12:54:01,"@zenopopovici thank youÔºÅ
",neighborhood999,2016-02-21 23:49:24
241,2016-02-20 14:41:53,"@zenopopovici  Please  keep up with the newest tip.

And after finish that  @loverajoel maybe you should  merge this
",sjfkai,2016-02-21 23:49:24
241,2016-02-20 15:08:02,"@sjfkai: will be more careful 
",zenopopovici,2016-02-21 23:49:24
241,2016-02-21 03:40:22,"@sjfkai I already update to newest tips.
",neighborhood999,2016-02-21 23:49:24
241,2016-02-21 16:54:45,"@neighborhood999 I will merge this weekend!
",loverajoel,2016-02-21 23:49:24
241,2016-02-21 23:56:50,"@neighborhood999 I merged your PR, thanks for this huge work!

I will add you administrator and you will in charge to translate tips and update tips after improvements.

Please let me know if you have any question
",loverajoel,2016-02-21 23:49:24
241,2016-02-22 01:00:46,"@loverajoel thank you for mergeÔºÅ
OK, It's no problem, I will update tips and improvements.
",neighborhood999,2016-02-21 23:49:24
241,2016-02-23 15:18:50,"![image](https://cloud.githubusercontent.com/assets/1700100/13255989/84cc2744-da27-11e5-895b-d026e60697da.png)

Impressive visitors yesterday
",loverajoel,2016-02-21 23:49:24
241,2016-02-23 16:14:42,"Cool :) 
",zenopopovici,2016-02-21 23:49:24
241,2016-02-23 16:18:16,"I post and share this website in my facebook group.
They are so happy have zh-TW lang version!
I'm really thanks @loverajoel let me merged my translate version.
",neighborhood999,2016-02-21 23:49:24
240,2016-02-12 11:10:00,"https://github.com/loverajoel/jstips/issues/216#issuecomment-180286182
",adaniloff,2016-02-18 23:30:05
240,2016-02-13 21:01:31,"@madmantalking ping!
",loverajoel,2016-02-18 23:30:05
240,2016-02-18 18:06:43,"@loverajoel it seems fine now, should I close the PR?
",adaniloff,2016-02-18 23:30:05
239,2016-02-11 11:00:58,"## Use of ~~ (Double Tilde)
## TL;DR;

Simple Use of ~~.
## Username

[@SarjuHansaliya](https://twitter.com/SarjuHansaliya)
[@Sarju](https://github.com/SarjuHansaliya)
",SarjuHansaliya,2016-02-11 13:20:47
239,2016-02-11 12:18:49,"We've got this one already.
https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-01-18-rounding-the-fast-way.md
",kurtextrem,2016-02-11 13:20:47
239,2016-02-11 13:20:45,"Ok Thanks
I haven't checked that post.

Closing....
",SarjuHansaliya,2016-02-11 13:20:47
239,2016-02-12 16:50:15,"@SarjuHansaliya sorry, but we have a tip about it.

Thanks
",loverajoel,2016-02-11 13:20:47
238,2016-02-11 07:45:56,,soyuka,2016-02-12 16:49:24
238,2016-02-12 10:00:26,"ping @loverajoel @lewisje
",soyuka,2016-02-12 16:49:24
237,2016-02-11 00:44:04,"Fixes #132 
",emars,2016-02-11 14:50:00
237,2016-02-11 14:50:50,"@emars awesome! thanks
",loverajoel,2016-02-11 14:50:00
236,2016-02-10 23:03:25,"In the [example about getting the median of an array](https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-02-10-array-average-and-median.md) you appear to get the higher of the two middle values, when sorting an array with an even number of values; usually, however, the median is defined as the arithmetic mean of the two middle values, and the following change will follow that definition:

<S_CODE_TOKEN>

If the array has odd length, then `lowMiddle === highMiddle` so the median is still the middle value. Something similar could probably be done with the right-shift operator, but my first stab at it didn't work on arrays of odd length.

(Maybe you could use `let highMiddle = values.length >> 1;` and `let lowMiddle = highMiddle - (~values.length & 1);` to keep it using bitwise operators.)
",lewisje,2016-02-12 16:49:26
236,2016-02-10 23:45:17,"@soyuka ping!
",loverajoel,2016-02-12 16:49:26
236,2016-02-11 07:46:01,"Yes you're right, my mistake thanks! 
",soyuka,2016-02-12 16:49:26
235,2016-02-10 16:26:29,"## Array average and median
## Username

https://github.com/soyuka
",soyuka,2016-02-10 21:32:33
235,2016-02-10 21:33:56,"Thanks man, I have to fix a couple of things!
",loverajoel,2016-02-10 21:32:33
234,2016-02-09 05:13:13,"In regards to the es15 examples - It mentions, ""We can't use the same approach when the elements are Objects, because Objects are stored by reference and primitives are stored by value."" but the approach using set works fine with non primitives... let's take a look

<S_CODE_TOKEN>
",ghost,2016-02-10 08:39:35
233,2016-02-08 20:58:43,"While, confusingly, the `writable` prop of `Object.defineProperty` defaults to false, setting it to true actually enables standard behavior,
in that it _allows_ writing to the property instead of disallowing it.

Source: [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty)
",AgentEpsilon,2016-02-09 00:12:29
233,2016-02-09 00:12:29,"Closed by duplicated https://github.com/loverajoel/jstips/pull/232
@AgentEpsilon thanks
",loverajoel,2016-02-09 00:12:29
232,2016-02-08 18:20:48,,jucrouzet,2016-02-09 00:12:59
232,2016-02-09 00:11:32,"@mallowigi ping!
",loverajoel,2016-02-09 00:12:59
232,2016-02-09 00:12:56,"@mallowigi that's right.

Thanks @jucrouzet 
",loverajoel,2016-02-09 00:12:59
231,2016-02-08 14:03:35,"@loverajoel  @SarjuHansaliya
",asvny,2016-02-09 15:31:43
231,2016-02-08 14:14:52,"Advantages of that syntax?
",kurtextrem,2016-02-09 15:31:43
231,2016-02-08 16:38:55,"@kurtextrem  It is more clean and uses ES2015 !
",asvny,2016-02-09 15:31:43
231,2016-02-09 07:46:51,"@annamalai-saro yea good point.
",SarjuHansaliya,2016-02-09 15:31:43
230,2016-02-07 21:45:10,"Hey guys :smiley: 

I created a [jstips slackbot](https://github.com/radibit/js-tips-slack-bot) implementation for receiving the latest great tips you're curating in a selected Slack group or channel.

This PR includes a change of the readme file with a reference link to the repo of this project.

Cheers!
",radibit,2016-02-07 22:15:38
230,2016-02-07 22:15:37,"Awesome!! thanks for amazing work!
",loverajoel,2016-02-07 22:15:38
229,2016-02-07 11:50:36,,vamshisuram,2016-02-10 00:16:26
229,2016-02-10 00:21:30,"Thanks!
",loverajoel,2016-02-10 00:16:26
229,2016-02-10 02:32:45,":)
",vamshisuram,2016-02-10 00:16:26
228,2016-02-06 23:10:28,,mallowigi,2016-02-08 17:59:53
228,2016-02-07 16:28:59,"@mallowigi can you add some link to official documentation?
",loverajoel,2016-02-08 17:59:53
228,2016-02-08 07:26:06,"Here
",mallowigi,2016-02-08 17:59:53
227,2016-02-06 22:28:48,,nktssh,2016-02-06 22:32:49
227,2016-02-06 22:32:52,":+1: 
",loverajoel,2016-02-06 22:32:49
226,2016-02-05 14:47:15,"The link with / at the end cause a page not found (404). Fixed. @loverajoel 
",hevertoncastro,2016-02-05 17:40:48
226,2016-02-05 17:40:45,"Thanks
",loverajoel,2016-02-05 17:40:48
225,2016-02-05 13:24:51,"@loverajoel 

Files added:

`_posts/pt_BR/`
`images/flags/pt_BR.png`
`pt_BR/about.md`
`pt_BR/index.html`
`CONTRIBUTING_pt_BR.md`

Edit edited:

`_config.yml`

I already translate three tips, soon I will do the others.

Best
",hevertoncastro,
225,2016-02-05 14:41:31,"Overall good translation, waiting to see merged :clap: 
",FagnerMartinsBrack,
225,2016-02-05 16:24:31,"@FagnerMartinsBrack Thanks for the suggestions, it was a great help! Feel free to help with the other tips. :smile: 
",hevertoncastro,
225,2016-02-13 04:06:37,"I'd like to help translating the rest, but I have no idea where to start :P 

Should I wait for this pull to be merged or should I just fork the repository and start translating the other files and then submit my own pull request?
",souljacker,
225,2016-02-15 20:46:46,"@souljacker, your help would be great! You can help me in this pull request. I've created a repository [""dicas-js""](https://github.com/hevertoncastro/dicas-js) on my Github account, just fork it and send a pull request there with the translation.  Start from newer tips to older, I'm translating from older to newer.

Send me a email if you have doubt: heverton@hotmail.com.br
",hevertoncastro,
225,2016-02-20 13:39:16,"@hevertoncastro @souljacker Thank you for your work, let us know when you're done.
",zenopopovici,
224,2016-02-05 06:16:26,,pakastin,2016-02-05 06:18:01
224,2016-02-05 06:18:01,"Sorry, duplicate with #219 and that solution is better..
",pakastin,2016-02-05 06:18:01
223,2016-02-04 19:16:01,"Sorry to bash on this tip like that, but I think we could provide more details on ++ and -- operators. Maybe add a new section about them?

For example, what's the difference between `var b = --a;` and `var b = a--;`?
",megapctr,2016-05-06 15:04:28
223,2016-02-04 20:05:50,"Seeing that post I immediately thought that, too.

Knowing the difference between `a--` and `--a` is quite useful ‚Äì especially in combination with ternary operators.
",timomeh,2016-05-06 15:04:28
223,2016-02-07 07:00:14,"Yeah. `a--` and `--a` or `a++` and `++a` are quite interesting.

<S_CODE_TOKEN>

And

<S_CODE_TOKEN>
",hsleonis,2016-05-06 15:04:28
223,2016-02-20 12:30:27,"@megapctr Could you create a new PR with the proposed changes? We'll merge once we review it.

Thanks.
",zenopopovici,2016-05-06 15:04:28
223,2016-02-20 19:51:03,"You're welcome :wink:
",megapctr,2016-05-06 15:04:28
223,2016-02-22 09:02:17,"I noticed that [jstips.co](http://www.jstips.co/en/assignment-shorthands/) doesn't render my ordered list properly (compare to [github](https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-02-04-assignment-shorthands.md)). Should I open an issue for this?
",megapctr,2016-05-06 15:04:28
223,2016-02-22 13:23:48,"@loverajoel It seems that Jekyll is doing something fishy with the GitHub pages. Is this related to the warning we receive on each merge?
",zenopopovici,2016-05-06 15:04:28
223,2016-02-22 23:30:29,"@zenopopovici @mebjas so strange, I think that maybe it's related with the Jekyll update in the last time for Github, I will back with more info.
Thanks
",loverajoel,2016-05-06 15:04:28
222,2016-02-04 19:11:54,"Tip says

> Instead of using:
> 
> <S_CODE_TOKEN>
> 
> We can use:
> 
> <S_CODE_TOKEN>

Why go the long way? This is not cleaner OR simpler.
",megapctr,2016-02-04 19:15:18
222,2016-02-04 19:15:18,"I agree with you, and I remove it, thanks for your advice! 
",loverajoel,2016-02-04 19:15:18
221,2016-02-04 13:39:01,"Fix #215
",SarjuHansaliya,2016-02-04 13:46:59
221,2016-02-04 13:40:07,"@loverajoel  Now we can merge right ?
",SarjuHansaliya,2016-02-04 13:46:59
221,2016-02-04 13:47:03,"thanks!
",loverajoel,2016-02-04 13:46:59
220,2016-02-04 13:21:09,,SarjuHansaliya,2016-02-04 13:21:44
219,2016-02-04 07:27:10,"In proposed approach variable ""temp"" is declared with ""var"" in global scope, thefore temp is shared between all iteration of console.log. It's not necessary to use ""temp"", since let in for loop declares independent variable ""i"" on each step.
",ezubarev,2016-02-13 21:02:16
219,2016-02-04 12:45:36,"@madmantalking ping!
",loverajoel,2016-02-13 21:02:16
218,2016-02-04 05:45:58,"#215 fix
",SarjuHansaliya,2016-02-04 13:01:13
218,2016-02-04 12:46:49,"@SarjuHansaliya mergeback!
",loverajoel,2016-02-04 13:01:13
218,2016-02-04 12:48:42,"Sorry , I am new to github.
So can u help me to understand meaning of mergeback ? 
",SarjuHansaliya,2016-02-04 13:01:13
218,2016-02-04 12:53:44,"sure! try made a `git pull`, maybe you will have conflicts to resolve
",loverajoel,2016-02-04 13:01:13
217,2016-02-04 03:25:38,"edited i to temp and also added another solution using let
",shrynx,2016-02-04 03:26:39
217,2016-02-04 03:26:37,"awesome!
",loverajoel,2016-02-04 03:26:39
217,2016-02-04 03:27:07,"@loverajoel Thanks for updating and pointing out the mistakes.
",shrynx,2016-02-04 03:26:39
216,2016-02-03 20:22:22,"It would probably be good to note that with ES6 the `let` keyword is useful since it's block scoped unlike `var`. In fact the following would work as expected, and a transpiler like Babel can transform the code to something similar to the tip solution.

<S_CODE_TOKEN>
",jupl,2016-02-20 12:33:57
216,2016-02-03 20:25:51,"@madmantalking ping!
",loverajoel,2016-02-20 12:33:57
216,2016-02-04 02:01:41,"@jupl Nice, I was just about to write what you just wrote.

Also, @madmantalking for the second and third examples. I think you meant to `console.log(temp)` instead of `console.log(i)` and the result would be `4 4 4 4 4` 
",JakeRawr,2016-02-20 12:33:57
216,2016-02-04 02:55:19,"@loverajoel @JakeRawr oh yes , damn, i did that mistake , i'll make the necessary changes for logging temp.
and also i'll incorporate solution using let as an alternative solution
",shrynx,2016-02-20 12:33:57
216,2016-02-05 10:26:07,"Hi there,

The last part of this tip is wrong : 

<S_CODE_TOKEN>

It should be either : 

<S_CODE_TOKEN>

Or : 

<S_CODE_TOKEN>
",adaniloff,2016-02-20 12:33:57
216,2016-02-19 21:55:12,"@loverajoel: This should be closed as the PR for it is closed. We should add ""Fixes #bugnumber"" to our commit message so that when the PR is closed, also the afferent bug is closed.
",zenopopovici,2016-02-20 12:33:57
215,2016-02-03 17:19:35,"The text should clearly state that original range will yield an array from 0... **N-1**, and the second version will yield an array from 1...N.

For instance:

<S_CODE_TOKEN>

By the way, the second version is probably not quite as useful as a start and end version:

<S_CODE_TOKEN>
",StevenACoffman,2016-02-04 13:46:59
215,2016-02-03 17:39:47,"@SarjuHansaliya ping!
",loverajoel,2016-02-04 13:46:59
215,2016-02-04 04:58:06,"@StevenACoffman Thanks for pointing out.
@loverajoel Should I update a post and create pull request ?
",SarjuHansaliya,2016-02-04 13:46:59
214,2016-02-03 17:03:11,"According to [this article](http://www.2ality.com/2015/10/property-traversal-order-es6.html), it looks like the browsers traverse the keys through the same order.

I just let it here to complete the tip #32.
",bsitruk,2016-05-06 15:01:56
214,2016-02-19 21:56:17,"@bsitruk if you have a suggestion can you please make a PR?
",zenopopovici,2016-05-06 15:01:56
214,2016-05-06 15:01:56,"Closed due to inactivity.
",zenopopovici,2016-05-06 15:01:56
213,2016-02-03 16:27:50,,bsitruk,2016-02-03 17:38:35
213,2016-02-03 17:38:32,"Awesome! thanks
",loverajoel,2016-02-03 17:38:35
212,2016-02-03 16:22:55,,simeg,2016-02-03 17:38:10
212,2016-02-03 17:38:14,"Thanks
",loverajoel,2016-02-03 17:38:10
211,2016-02-03 03:38:56,"I will add repository for the apps soon after a bit of code refactoring.  
",Satya5614,2016-02-03 04:19:37
211,2016-02-03 04:19:33,"OMG
",loverajoel,2016-02-03 04:19:37
211,2016-02-03 04:19:45,"Awesome work man!
",loverajoel,2016-02-03 04:19:37
210,2016-02-03 00:57:06,"Hi, 

Adding URL's for IOS and Android Apps built for the project .

Please check - http://getjs.tips/

Apps made by - @satya5614

@loverajoel 
",rishantagarwal,2016-02-03 04:23:14
210,2016-02-03 02:00:37,"awesome! :+1: 
",sjfkai,2016-02-03 04:23:14
210,2016-02-03 04:22:08,"I merge this one https://github.com/loverajoel/jstips/pull/211 with the link for each app
",loverajoel,2016-02-03 04:23:14
209,2016-02-02 19:55:12,"Based on the (now closed) issue [#193](https://github.com/loverajoel/jstips/issues/193)
",RafaelTaranto,2016-02-05 00:44:59
209,2016-02-02 21:10:32,"@hingsir ping
",loverajoel,2016-02-05 00:44:59
209,2016-02-04 23:46:44,"@RafaelTaranto thanks
",hingsir,2016-02-05 00:44:59
208,2016-02-02 12:05:23,"I checked out master some weeks ago, pulled every now and then. Now I forked a branch and wanted to add some changes I did with my earlier checked out branch and see that the (new) branch is completely different from master. And there are more, so one branch has 32 tips, the other 30, the master ""only"" 23. Is there a reason that these branches are all having there own life? To which branch should one contribute, as the master seems to be the most outdated one?
",AlphaHasi,2016-02-02 12:10:52
208,2016-02-02 12:10:52,"Ach, ok, now I see: gh-pages is ""default"". Still confused, but I will take this one from now on.
",AlphaHasi,2016-02-02 12:10:52
208,2016-02-03 04:24:19,":+1: 
",loverajoel,2016-02-02 12:10:52
207,2016-02-02 08:03:38,"ÊîØÊåÅ‰∏Ä‰∏ã Âçö‰∏ªÂÜôÁöÑ‰∏çÈîô~
ÂÖçË¥πSSHÁæ§ÈáåÊúâÁöÑÔºåÊ¨¢ËøéÂçö‰∏ª‰πüÊù• QQÁæ§536768091
",mmk2000,2016-02-02 08:15:28
207,2016-02-02 08:15:28,"@mmk2000  No AD! (Á¶ÅÊ≠¢ÂπøÂëäÔºÅ)
",sjfkai,2016-02-02 08:15:28
206,2016-02-01 22:46:25,"I believe this code example has a mistake in it?
",codeclown,2016-02-02 13:17:32
206,2016-02-02 13:17:38,"Thanks man!
",loverajoel,2016-02-02 13:17:32
205,2016-02-01 13:38:48,,tisohjung,
205,2016-02-20 13:40:11,"@tisohjung Thank you for your work. Let us know when we can merge.
",zenopopovici,
205,2016-03-05 05:21:05,"@tisohjung ping
",loverajoel,
204,2016-02-01 10:04:58,"## Create Range 0...N easily using one line
## TL;DR;

Below is the line with which we can create 0...N range.

<S_CODE_TOKEN>

Lets break down this line into parts.We know how ""call"" function works in javascript.So in ""call"" first argument will be context and from second arguments , it will be list of arguments of function on which we are calling ""call"" function.

<S_CODE_TOKEN>

This will retun sun of 5 and 6.

map of array in javascript takes two arguments , first callback and second thisArg(context).Callback is taking three arguments , value , index and whole array on which we are iterating.so common syntax is like : 

<S_CODE_TOKEN>

Below line create array of given length.

<S_CODE_TOKEN>

Putting all parts together below is the solution.

<S_CODE_TOKEN>

If you want range 1...N , it will be like this.

<S_CODE_TOKEN>
## Username

[@SarjuHansaliya](https://twitter.com/SarjuHansaliya)
",SarjuHansaliya,2016-02-02 16:28:45
204,2016-02-01 22:55:21,"love it :+1: nice tip
",pklinger,2016-02-02 16:28:45
204,2016-02-02 04:41:40,"Thanks @pklinger .
",SarjuHansaliya,2016-02-02 16:28:45
203,2016-01-31 19:52:42,"Hey, observe-dom-changes in new format!
",beyondns,2016-02-05 18:24:01
203,2016-02-05 00:46:18,"@beyondns can you add little more of explanation?
",loverajoel,2016-02-05 18:24:01
203,2016-02-05 08:44:05,"Yes, added.
",beyondns,2016-02-05 18:24:01
203,2016-02-05 18:25:45,"Thanks man
",loverajoel,2016-02-05 18:24:01
202,2016-01-31 18:37:32,,shidhincr,2016-01-31 18:41:59
202,2016-01-31 18:41:57,"thanks
",loverajoel,2016-01-31 18:41:59
201,2016-01-31 18:21:10,"- We need have a index for this language
- Translate contribution rules
",loverajoel,2016-02-20 13:26:30
201,2016-02-01 10:31:49,"Is the `index` what you said was tips title list? 
And , witch directory should I push these files ? In `zh_CN/` like `/zh_CN/CONTRIBUTING.md`?
I will translate soon.
",sjfkai,2016-02-20 13:26:30
201,2016-02-01 13:27:00,"I think that is better create a `CONTRIBUTING_zh_CN.md` file in the root
",loverajoel,2016-02-20 13:26:30
201,2016-02-03 05:22:05,"@sjfkai I have to make a hot fix https://github.com/loverajoel/jstips/commit/e357531a0ea914d77f7d5acd460173e571f7299c 

Seems be a bug in the update of jekyll by github:
https://github.com/jekyll/jekyll/issues/4433
https://github.com/jekyll/jekyll/issues/4442

I will revert this when find another solution
",loverajoel,2016-02-20 13:26:30
201,2016-02-20 13:26:30,"This is fixed for now.
",zenopopovici,2016-02-20 13:26:30
200,2016-01-31 17:58:37,,loverajoel,2016-01-31 17:58:41
199,2016-01-31 07:57:00,"Would it be worth it to add Disqus for being able to comment on the tips? I had some issues with the Fibonnaci examples, and if there was a way to comment for feedback, that would be great.
",pertrai1,2016-01-31 16:26:13
199,2016-01-31 08:02:06,":+1: very good idea :)
",kurtextrem,2016-01-31 16:26:13
199,2016-01-31 08:04:04,"@kurtextrem :-). I would be willing to implement if it it ok to do so
",pertrai1,2016-01-31 16:26:13
199,2016-01-31 15:25:33,"@pertrai1 there are Disqus comments in the site. 
![image](https://cloud.githubusercontent.com/assets/1700100/12702969/b00ad852-c815-11e5-8b6b-0a1375a9c33e.png)

let me know if not work for you
",loverajoel,2016-01-31 16:26:13
199,2016-01-31 16:26:13,"ah be done gone. Did not even see that. Thanks @loverajoel 
",pertrai1,2016-01-31 16:26:13
198,2016-01-31 04:28:16,"Changes based on the tip comments and the @nikshulipa suggestions. #192 
",davegomez,2016-02-06 17:57:02
198,2016-02-01 17:05:43,"ping!
",davegomez,2016-02-06 17:57:02
198,2016-02-06 07:08:01,"@loverajoel ping 
",davegomez,2016-02-06 17:57:02
198,2016-02-06 17:57:08,"@davecan sorry
",loverajoel,2016-02-06 17:57:02
197,2016-01-31 04:00:13,"`!!value` converts `value` to a `Boolean`. This much is true. 

It's also arguably ""too clever"" and a source of confusion to inexperienced JS programmers--it's in the same category as using `~` with `Array.prototype.indexOf()`. 

An alternative which I have found to be much more obvious (though perhaps too verbose for some) is instead using `Boolean(value)`, which does the same. 

Just wanted to start a conversation around this. I think this project is a good idea, but it's my hope the tips will show great ways to solve problems instead of just ways to solve problems in the fewest amount of characters. 
",boneskull,2016-02-20 12:37:59
197,2016-01-31 15:23:11,"@hakhag ping!

@boneskull maybe you can move this conversation to http://www.jstips.co/en/converting-truthy-falsy-values-to-boolean/ , there are Disqus comments and more people can see this
",loverajoel,2016-02-20 12:37:59
197,2016-02-19 21:22:04,"@boneskull seems @hakhag didn't see this
",loverajoel,2016-02-20 12:37:59
197,2016-02-20 12:37:59,"Closing, as conversation was moved. If you have suggestions on improvements for a specific tip, please make a PR. 
",zenopopovici,2016-02-20 12:37:59
197,2016-02-20 23:54:12,"Moved where?
On Sat, Feb 20, 2016 at 04:38 Zeno Popovici notifications@github.com
wrote:

> Closed #197 https://github.com/loverajoel/jstips/issues/197.
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/loverajoel/jstips/issues/197#event-557526223.
> 
> ## 
> 
> Christopher Hiller
> https://boneskull.com | https://github.com/boneskull
",boneskull,2016-02-20 12:37:59
197,2016-02-21 00:34:55,"@boneskull here:  http://www.jstips.co/en/converting-truthy-falsy-values-to-boolean/ 
",zenopopovici,2016-02-20 12:37:59
197,2016-02-23 21:44:06,"Well, I commented on there (and other are in agreement with me), but nothing has changed.  How do we get a tip changed?  Or in this case, probably removed?
",boneskull,2016-02-20 12:37:59
196,2016-01-30 21:29:01,"As pointed in the comments http://www.jstips.co/en/speed-up-recursive-functions-with-memoization

@hingsir
",mistic100,2016-01-31 15:18:13
196,2016-01-31 05:57:45,"+1
",hingsir,2016-01-31 15:18:13
196,2016-01-31 15:18:24,"thanks @mistic100 
",loverajoel,2016-01-31 15:18:13
196,2016-01-31 21:08:29,"The version @mistic proposed only fills the cache, but never reads from it.
It has to be something along the lines of:
(cache[n]=cache[n-1]||self(n-1)+cache[n-2]||self(n-2))
",tommot348,2016-01-31 15:18:13
195,2016-01-30 11:37:09,"the (cache[n]=cache[n-1]+cache[n-2]) part can't work, because the values arent't computed first if you don't call the function for every number smaller than the one you want.

this works:
var fibonacci = (function(){
    var cache = {
        0: 0,
        1: 1
    };
    return function(n){
        return n <= 1 ? cache[n] : (cache[n] = (cache[n-1] || fibonacci(n-1) + cache[n-2] || fibonacci(n-2)));
    }
})();
",tommot348,2016-03-05 05:15:09
195,2016-01-30 15:28:51,"@hingsir ping
",loverajoel,2016-03-05 05:15:09
195,2016-01-31 05:55:37,"thanks, see [pr196](https://github.com/loverajoel/jstips/pull/196/files)
",hingsir,2016-03-05 05:15:09
195,2016-02-04 05:23:13,"Are you sure of that implementation ?
I've benchmarked this tips, but it seems memoized functions takes longer to run, if it can run !

Check out the bencmarks:
- jsPerf: https://jsperf.com/js-tips-29
- jsBin: https://jsbin.com/silobu/edit?js,console

I propose a better cached version for fibonacci, which can be simply implemented for any other recursive function:

<S_CODE_TOKEN>
",sylvaindethier,2016-03-05 05:15:09
195,2016-02-04 10:18:41,"I added some stuff
- [jsperf](http://jsperf.com/js-tips-29/2)
- [jsbin](https://jsbin.com/qobelopaje/edit?js,console)

The iterative version is to show that tail recursive functions can (always) be written in an iterative way and that's almost always faster.
",tommot348,2016-03-05 05:15:09
195,2016-02-20 12:44:24,"@sylvaindethier Please make a PR and then we can review it. 
",zenopopovici,2016-03-05 05:15:09
195,2016-02-20 13:30:46,"@zenopopovici sure, should have done it first.
Question: Do I have to update both [_posts/en](tree/gh-pages/_posts/en) & [_posts/zh_CN](tree/gh-pages/_posts/zh_CN) corresponding files ?
If I'm totally wrong, what should I have to do ?
",sylvaindethier,2016-03-05 05:15:09
195,2016-02-20 13:36:29,"@sylvaindethier Yes, please update both posts if you can, if not, we have to involve @sjfkai for the chinese version.

In the coming days we'll add new rules and submit every update / new tip to a review by the community if it's approved, it will get merged. See #251 
",zenopopovici,2016-03-05 05:15:09
195,2016-02-20 13:37:48,"@tommot348 Nice perf for your iterfib algo dude :+1: . I'm working on a PR and will include your algos w/ your permission.
@zenopopovici But the initial point is that the `memoized` functions (fibonnacci and others) are very poor in performance compared w/ standard algo. The point was: are you sure of the implementation, or the point that memoized funcs are more efficient ?
",sylvaindethier,2016-03-05 05:15:09
195,2016-02-20 13:48:52,"@zenopopovici I'm working on that PR. But the changes are from @tommot348, code has better [perf](https://jsperf.com/js-tips-29/2) than mine.
",sylvaindethier,2016-03-05 05:15:09
195,2016-02-20 13:57:17,"@sylvaindethier I see now, maybe the tip is not really OK and we have to change it completely. That's why we're implementing tips review. 
@loverajoel weigh in on this?
",zenopopovici,2016-03-05 05:15:09
195,2016-02-20 14:24:54,"PR is #264 
",zenopopovici,2016-03-05 05:15:09
195,2016-02-20 14:49:46,"Usually, Before I translate the new tip, I will review new commits to update every changes in `en` tips. 

But if you can update both language I would really appreciate
",sjfkai,2016-03-05 05:15:09
195,2016-02-20 14:55:01,"@sjfkai done! If the text has no explanation about the code the PR #264 should be OK
",sylvaindethier,2016-03-05 05:15:09
195,2016-02-20 15:39:03,"@sylvaindethier you can use my code. Thanks for looking at it again 
",tommot348,2016-03-05 05:15:09
195,2016-02-23 01:45:53,"As we all know this is a pretty classic problem. Below is Douglas Crockford code for that (Chapter 4 from the JS the Good Parts):

<S_CODE_TOKEN>

So here is a thought: Except the author submitting the tip truly believes that submitted solution is significantly better than whatever else has been done before, I don't think such a tip has a merit.  Again, I am talking about well researched problems.  Other examples that come to mind are: Tail call optimization for the factorial function or using closures inside the loop.  I suggest we should close this item.  For the future, we need to decide how to deal with this sort of tips.  In my mind there are 2 ways ( again assuming it doesn't include a truly innovative approach): It either should be shipped including a generally accepted solution (i.e. something widely published in the literature or posted on stackoverflow with hundreds of votes) or it doesn't get shipped.  Just my 2 cents....
",pastrop,2016-03-05 05:15:09
194,2016-01-30 10:16:34,"All links on the github pages site are broken, this should fix that.
",samadivk,2016-02-20 12:12:29
194,2016-02-20 12:12:29,"We can't do that, we're using: http://www.jstips.co 
",zenopopovici,2016-02-20 12:12:29
193,2016-01-29 17:29:46,"@loverajoel Either I'm entirely missing something or this first example doesn't do anything:
https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-01-29-speed-up-recursive-functions-with-memoization.md

<S_CODE_TOKEN>

I think what this might be going for is something like this?

<S_CODE_TOKEN>
",danieluhl,2016-01-31 21:27:36
193,2016-01-29 17:33:12,"@hingsir ping
",loverajoel,2016-01-31 21:27:36
193,2016-01-29 18:00:55,"@danieluhl true
",mrosata,2016-01-31 21:27:36
193,2016-01-29 18:18:52,"Yep, the first example only works if you go sequentially starting at 2. 
",RafaelTaranto,2016-01-31 21:27:36
193,2016-01-29 19:44:46,"This will be fixed in es9.
jk, thanks for pointing this out :+1:
",megapctr,2016-01-31 21:27:36
193,2016-01-31 05:56:33,"my bad, [pr196](https://github.com/loverajoel/jstips/pull/196/files) may fix that
",hingsir,2016-01-31 21:27:36
193,2016-01-31 15:18:59,"@danieluhl PR merged, can I close this?
",loverajoel,2016-01-31 21:27:36
193,2016-02-01 12:30:33,"Still not getting result from cache, can't submit pr right now but the return should be :

`return (n in cache) ? cache[n] : (cache[n] = self(n-1) + self(n-2));`
",RafaelTaranto,2016-01-31 21:27:36
192,2016-01-29 15:06:16,"- Use lastIndexOf instead of IndexOf
- use third parameter in .filter function. It will avoid search in closure and make this function more independent
- optimize sort function: use ternary operator instead of if-s. In any case, 'esle' statement is redundant there.
",nktssh,2016-02-20 13:42:36
192,2016-01-29 15:08:17,"@davegomez ping!
",loverajoel,2016-02-20 13:42:36
192,2016-01-29 20:45:44,"I'll change it this Saturday, I'm kind of busy right now.

And thanks for the suggestions, they are great.
",davegomez,2016-02-20 13:42:36
192,2016-01-29 20:50:32,"@davegomez  I can merge this if you give me the 'ok'
",loverajoel,2016-02-20 13:42:36
192,2016-01-29 21:43:26,"Of course @loverajoel, no problem at all
",davegomez,2016-02-20 13:42:36
192,2016-01-31 04:03:50,"Well, I just checked the suggested changes and I have some objections.
1. There's no clear gain in using `lastIndexOf()` instead of `indexOf()` but maybe a 3% performance improvement. I can't see any problem on using it either.
2. I can't see the point of the third param suggestion, maybe I didn't understand what you are trying to suggest about the closures and the use of the self keyword is misleading and confusing.
3. Adding a nested ternary operator won't make the function more optimal but confusing and nested ternaries are considered bad style. On the other matter, if I remove the `else` statement the resulted ""sorted"" array will be something like this:

<S_CODE_TOKEN>

I prefer to not merge these suggestions @loverajoel 
",davegomez,2016-02-20 13:42:36
192,2016-02-20 13:42:36,"This has been merged. 
",zenopopovici,2016-02-20 13:42:36
191,2016-01-29 11:02:56,,hevertoncastro,2016-02-05 13:26:26
190,2016-01-28 19:37:14,"## Tip proposal: remove dupl. prim. values from Array
## TL;DR;

Tip illustrates how to remove duplicate primitive values from an Array.
## Username

[@danillouz](https://twitter.com/danillouz)
",danillouz,2016-02-06 18:46:04
190,2016-01-30 15:49:07,"@danillouz hey take a look [here](http://stackoverflow.com/a/9229821/2313726)

Can you add some of this? I like this tip
",loverajoel,2016-02-06 18:46:04
190,2016-01-30 16:38:22,"@loverajoel good stuff! learned some new things myself :) How about I expand the tip to also include deduplicating primitives and link to the SO answer as a reference. Maybe you can review it when you have the time and we can iterate on it if necessary. What do you think?
",danillouz,2016-02-06 18:46:04
190,2016-01-31 15:29:40,"@danillouz yes sure! 
",loverajoel,2016-02-06 18:46:04
190,2016-02-03 15:19:22,"@danillouz  ping!
",loverajoel,2016-02-06 18:46:04
190,2016-02-03 16:22:54,"@loverajoel sorry, am swamped with work! I'll do my best to send a pull request tomorrow!
",danillouz,2016-02-06 18:46:04
190,2016-02-06 18:27:48,"@loverajoel hi, I updated the tip and included a way to deduplicate Objects. Added some references, among of them, the SO answer you provided. I also added the way to dedup using a `Set` which is really cool I think!

I did leave out anything about performance though.  First of all I couldn't reproduce the statements made about performance in the SO answer. Even though it's true that in theory a sequential search (using `filter` with `indexOf`) is less performant that doing a direct lookup (hash table), I believe the engine is heavily optimizing methods like `filter` and `indexOf`. In my test cases the implementations where a hash table was used, were actually the slowest.
Second, IMO it's a bit out of scope. I mean, it's all about tips and I think when we start to talk about performance we start to complicate things because we also need to include info about how we tested stuff and show specific results to prove this. I think this could be a post by itself.
But if you think this would be important to add, maybe you can advise me how to approach this to keep it simple.

Please review my changes when you have the time and let me know what you think.
",danillouz,2016-02-06 18:46:04
190,2016-02-06 18:46:05,"So beautiful tip! clear and useful!
I agree with you about performance hover this tip, don't worry!
Thanks @danillouz !
",loverajoel,2016-02-06 18:46:04
190,2016-02-06 18:58:49,"@loverajoel Thanks! Glad you like it! Was really cool to contribute to your awesome project!
",danillouz,2016-02-06 18:46:04
189,2016-01-28 12:21:22,"Hi, @loverajoel 

This patch moved the detailed jstips to the `readme` file.
The reason is that I think some of people, maybe, prefer to overview all the tips in one pages 
and just click the anchor of a specific tip to jump to that tip directly instead of jumping into a 
markdown file following the Jekyll format. I also add the `to the top` link so the people can jump to the top of the page conveniently.

This is just my thought :) Please check it. 
https://github.com/lockys/jstips/tree/patch-1
",lockys,2016-01-29 15:51:37
189,2016-01-29 15:12:55,"@loverajoel What is your thought about this?
If you think it's not a good idea, I will close this PR. :)
",lockys,2016-01-29 15:51:37
189,2016-01-29 15:44:11,"@lockys  this was the first idea but the `readme.md` grew up a lot and it's hard to read it, that's the reason why we decide divide in different files.

Thanks for you suggestion!
",loverajoel,2016-01-29 15:51:37
189,2016-01-29 15:51:37,"That is true.
Thanks for your reply @loverajoel. and your awesome work :)
",lockys,2016-01-29 15:51:37
188,2016-01-28 09:30:52,"Translated all tips.
",sjfkai,2016-01-31 16:09:04
188,2016-01-28 21:51:59,"@sjfkai awesome! 

I need your help and you have to follow [this](https://github.com/loverajoel/jstips/pull/173) ""instructions"" to adapt the defaults vars of the site to Chinese, after that, we can merge this!

Example https://github.com/loverajoel/jstips/pull/178
",loverajoel,2016-01-31 16:09:04
188,2016-01-29 02:17:57,"where can I see the Chinese version?
",icescut,2016-01-31 16:09:04
188,2016-01-29 02:48:20,"@icescut  It have not merged Chinese version into the offical blog. You can temporarily look at [this](https://cnodejs.org/topic/56a050ac8392272262331d62#56aa02f971204e03637a36a0).
",sjfkai,2016-01-31 16:09:04
188,2016-01-29 03:39:19,"@sjfkai thx :+1: 
",icescut,2016-01-31 16:09:04
188,2016-01-29 14:04:09,"@sjfkai what is the translation of 'Chinese"" word in Chinese?
",loverajoel,2016-01-31 16:09:04
188,2016-01-29 14:40:35,"`‰∏≠Êñá` is the translation of Chinese in Chinese.
",li-xinyang,2016-01-31 16:09:04
188,2016-01-29 15:08:36,"@li-xinyang thanks!
",loverajoel,2016-01-31 16:09:04
188,2016-01-31 18:05:40,"Guys, I merged this branch to master! Congrats for huge work!

http://www.jstips.co/zh_CN/

@sjfkai I added you how collaborator of the repository and now you are in charge of the Chinese version.

Hope this help to grow the community!
Please let me know any question.

Thanks for your efforts!!
",loverajoel,2016-01-31 16:09:04
188,2016-01-31 18:07:07,"Also I crate a new label to tag pr and issues related to this language
",loverajoel,2016-01-31 16:09:04
187,2016-01-28 08:16:12,"## JavaScript tips in Spanish

Translation and localization of the content in the repo and the tips.
## frikinside

[frikinside](https://github.com/frikinside)
## Extra

It would be progress slowly but constant, hope anyone find it useful!
Please feel free to critic the translation if you think I do it something wrong or if it could be done better :D
",frikinside,
186,2016-01-28 07:44:07,"Would be nice to play with tip's code to grasp the topic better, wouldn't it?
",qaraluch,2016-08-10 19:35:23
186,2016-02-17 13:17:28,"I agree, this sounds pretty cool.
",JetLaggedEgg,2016-08-10 19:35:23
186,2016-02-17 13:20:52,":+1: 
",drakmail,2016-08-10 19:35:23
186,2016-02-17 13:21:58,"I think Babel (online) is better (ES6, console.log output)
",kurtextrem,2016-08-10 19:35:23
186,2016-02-17 13:22:33,"hey add you idea [here](https://github.com/loverajoel/jstips/issues/251)
",loverajoel,2016-08-10 19:35:23
186,2016-02-17 15:37:45,"I second that

:+1: 
",souljacker,2016-08-10 19:35:23
186,2016-02-20 12:44:56,":+1: Great idea
",zenopopovici,2016-08-10 19:35:23
186,2016-08-10 19:35:22,"Moved to https://github.com/loverajoel/jstips/issues/368.
If you guys want to help let me know.
",zenopopovici,2016-08-10 19:35:23
185,2016-01-28 02:59:13,"mistake?
",turitcha,2016-02-20 12:56:36
185,2016-02-19 22:07:25,"@turitcha  Could you please elaborate? If you spot a mistake, a PR is the best way to go.
",zenopopovici,2016-02-20 12:56:36
184,2016-01-27 16:20:31,,bhaskarmelkani,2016-01-27 16:21:19
183,2016-01-27 15:02:48,"## Square brackets notation instead of eval
## TL;DR;

Eval is possibly the most misused function in JavaScript, we use it to execute code in a string dynamically but most of the times we just don't need it. Square brackets notation as property accesors could be a proper alternative.
## frikinside

[frikinside](https://github.com/frikinside)
## Extra

I made the branch after start with the translate so don't be afraid about that creations and deletions in commits.
Also, my english is not a professional level so maybe something isn't fully understandable
",frikinside,2016-05-06 14:57:28
183,2016-01-27 23:36:26,"Brackets mean.. What brackets ??
",shivarajnaidu,2016-05-06 14:57:28
183,2016-01-28 08:02:58,"**Square** brackets!
I didn't think it would be necesary to say it explicitly. I can update it with no problems!
",frikinside,2016-05-06 14:57:28
183,2016-02-22 11:58:28,"Maybe better way is define functions not in global scope, but in isolated scope, like this:

<S_CODE_TOKEN>
",drakmail,2016-05-06 14:57:28
183,2016-02-25 14:23:47,"+1 to @drakmail 
",loverajoel,2016-05-06 14:57:28
183,2016-03-01 12:27:10,"@frikinside Ping.
",zenopopovici,2016-05-06 14:57:28
183,2016-05-06 14:57:28,"Closed due to inactivity.
",zenopopovici,2016-05-06 14:57:28
182,2016-01-27 09:39:03,":+1: 
",zzz6519003,2016-03-05 05:12:57
182,2016-02-20 12:59:52,"Hey @zzz6519003,

Please make a PR with an example in so we can consider / merge your suggestion.

Thanks!
",zenopopovici,2016-03-05 05:12:57
181,2016-01-27 08:35:04,"## Implementing asynchronous loops
## TL;DR;

You may run into problems while implementing asynchronous loops.
## Username

https://github.com/madmantalking
",shrynx,2016-02-03 18:02:21
181,2016-01-27 08:58:19,"I've added some inline comments.

Apart from that :+1: 
",kurtextrem,2016-02-03 18:02:21
181,2016-01-27 09:49:09,"oh great thanks . i made too many grammar mistakes , oh but one thing , i
don't think it will be ""above's"" rather it will ""above"" only.

On Wed, Jan 27, 2016 at 5:58 PM, Jacob Gro√ü notifications@github.com
wrote:

> I've added some inline comments.
> 
> Apart from that [image: :+1:]
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/loverajoel/jstips/pull/181#issuecomment-175493409.
",shrynx,2016-02-03 18:02:21
181,2016-01-27 10:32:23,"@kurtextrem I think i have made all the necessary changes by now. have a look.
",shrynx,2016-02-03 18:02:21
181,2016-01-27 10:54:00,"Commented :)

Apart from that :+1: 
(Although you could reduce the for loop to e.g. 3, which gives a slightly tinier tip)
",kurtextrem,2016-02-03 18:02:21
181,2016-01-27 14:46:28,"@kurtextrem even i was thinking about but for the sake of better explanation, i considered to keep it.
",shrynx,2016-02-03 18:02:21
181,2016-01-28 16:36:53,":+1: 
@gogainda
",shivarajnaidu,2016-02-03 18:02:21
181,2016-01-28 16:40:00,"But small problem with your code .. Actually not small big problem :smile: .. Your code wouldn't work dear @gogainda
",shivarajnaidu,2016-02-03 18:02:21
181,2016-01-28 16:45:29,"Your set time out function will called out after 1000ms but `for` loop will not wait for that function.. It will continue and completes the looping.. While setTimeout function waiting to reach 1000ms... 
",shivarajnaidu,2016-02-03 18:02:21
181,2016-01-28 16:50:09,"Sorry if my above guess is wrong.. But I am thinking of this way.. So I just my thought.. 
@gogainda
",shivarajnaidu,2016-02-03 18:02:21
181,2016-01-28 17:51:20,"@shivarajnaidu have you run it?
",gogainda,2016-02-03 18:02:21
181,2016-01-28 19:31:43,"You could add a solution using 'let'; it's similar to the original loop.

<S_CODE_TOKEN>
",ghost,2016-02-03 18:02:21
181,2016-01-29 02:04:54,"@noncentz Thanks for pointing it out , but i believe `let` can be used only with strict.
",shrynx,2016-02-03 18:02:21
181,2016-01-29 15:54:35,"`let` is no more strictmode only keyword.. It's now working on Firefox 44 above and chrome (without strictmode)
",shivarajnaidu,2016-02-03 18:02:21
181,2016-01-29 15:59:01,":+1: tnx @noncentz
@gogainda
Look at @noncentz 's code .. I think , That correct way to do .. 
",shivarajnaidu,2016-02-03 18:02:21
181,2016-01-31 00:13:16,"@shivarajnaidu Hmm... Seems wierd , let is not working without strict
![capture](https://cloud.githubusercontent.com/assets/4706261/12699329/d3ed7f4c-c7fa-11e5-86ed-ea2863a92d74.PNG)
",shrynx,2016-02-03 18:02:21
181,2016-01-31 15:41:46,"@madmantalking @shivarajnaidu works for me! `Chrome 48`

![image](https://cloud.githubusercontent.com/assets/1700100/12703066/0f12648a-c818-11e5-8288-8cf4120a9f30.png)
",loverajoel,2016-02-03 18:02:21
181,2016-02-02 03:36:46,":+1:  @loverajoel :smile: 
",shivarajnaidu,2016-02-03 18:02:21
181,2016-02-03 18:35:26,"thanks for your tip!
",loverajoel,2016-02-03 18:02:21
180,2016-01-27 07:13:54,,hingsir,2016-01-27 13:21:44
180,2016-01-27 13:21:42,"+1
",loverajoel,2016-01-27 13:21:44
179,2016-01-27 01:39:50,"~~ÂÅ∂Â∞î‰ªéËÆ∫Âùõ‰∏äÂèëÁé∞‰∫ÜËøô‰∏™È°πÁõÆÔºåÊØèÂ§©Êó©Êô®‰∏äÁè≠‰πãÂâçÁúã‰∏ÄÁúãÔºå‰ªäÂ§©ÊÄé‰πàÊ≤°ÊúâÊõ¥Êñ∞Ôºü~~
I found this project from the forum by accident and always look through it before  going to work every morningÔºåbut why doesn't it update as usual todayÔºü
",cococe,2016-01-28 21:31:18
179,2016-01-27 02:10:51,"You should <s>replied</s>reply in English.
",hueitan,2016-01-28 21:31:18
179,2016-01-27 04:32:02,"@huei90 ok„ÄÇ
 You should `reply` in English
",cococe,2016-01-28 21:31:18
179,2016-01-27 04:33:19,"thank you @cococe 
",hueitan,2016-01-28 21:31:18
179,2016-01-27 07:59:02,"The title should be updated as well.
Maybe you should consider the place where the owner lives.
He is in Spain (UTC + 1) I think, I guess the time in Spain is about 1/27 9:00 a.m now
You filed this issue at 1/27 3:00 a.m in Spain. It's time for sleep. :grin:
",lockys,2016-01-28 21:31:18
179,2016-01-27 08:06:12,"@lockys thank you.
",cococe,2016-01-28 21:31:18
178,2016-01-26 19:43:21,"Translated config and about files
",LorenzoRogai,2016-02-20 11:57:24
178,2016-01-27 02:17:37,"@LorenzoRogai awesome work! let me know when you finish to translate all post so we can merge this!

Thanks for this man!
",loverajoel,2016-02-20 11:57:24
178,2016-02-20 11:50:49,"@LorenzoRogai The structure of jstips has changed to better support multi-language, can you please update your PR / tell us if you're willing to translate all remaining tips?

Thanks!
",zenopopovici,2016-02-20 11:57:24
178,2016-02-20 11:57:24,"Just saw that you have another PR #170 for this. I will close this. Please keep the translations in one PR, that will help us keep track of things.

Thank you for your work!
",zenopopovici,2016-02-20 11:57:24
177,2016-01-26 14:14:23,"The second code excerpt, above ""Check this example"" wasn't being highlighted. Fixing it.
",teles,2016-01-26 14:15:14
177,2016-01-26 14:15:12,"+1 thanks!
",loverajoel,2016-01-26 14:15:14
176,2016-01-26 14:04:53,,hartca,2016-01-26 14:11:15
176,2016-01-26 14:11:18,"thanks
",loverajoel,2016-01-26 14:11:15
175,2016-01-26 13:15:30,"- add compress.html
- fix wrong markdown semantic

This will save some bytes over bandwidth
",marcobiedermann,
175,2016-01-27 07:48:01,"What is this {{}} 
",shivarajnaidu,
175,2016-01-27 07:54:01,"This Layout will remove compress your HTML.

It will:
- removes unnecessary whitespace
- removes optional end tags
- removes optional start tags
- removes comments
- preserves whitespace within `<pre>`

You will find more information about this [here](http://jch.penibelst.de/)
",marcobiedermann,
175,2016-01-27 09:44:02,"Oh.. You are telling this to use in this website..??
",shivarajnaidu,
175,2016-01-27 10:08:11,"Yes. Minifying content is always recommended.
",marcobiedermann,
175,2016-01-27 23:32:44,"What library is it yar ??
",shivarajnaidu,
175,2016-01-28 06:45:04,"The layout is hosted on this repo: https://github.com/penibelst/jekyll-compress-html
",marcobiedermann,
175,2016-01-28 07:00:13,":+1:
",shivarajnaidu,
175,2016-02-20 12:19:30,"@marcobiedermann Please pull changes and rebase your work on top of it. We only want your changes in the PR. 

Thanks.!
",zenopopovici,
175,2016-08-10 19:49:00,"@loverajoel We should at least test this.
",zenopopovici,
174,2016-01-26 09:35:33,"<S_CODE_TOKEN>

Why not use concat here as well?

<S_CODE_TOKEN>
",joargp,2016-01-28 21:31:11
173,2016-01-26 03:00:38,"#### What does this PR do?

Add a new language support
",loverajoel,2016-01-31 17:58:42
173,2016-01-26 03:03:21,"@LorenzoRogai I need your help here, you can checkout in this branch and work on it.
",loverajoel,2016-01-31 17:58:42
173,2016-01-26 03:07:59,"When this changes will be done and [this](https://github.com/loverajoel/jstips/pull/170) PR done, first I will merge this and then your pr.

After that I will add you how collaborator of the repo and you will be in charge of the italian version.

Let me know if you need help!
",loverajoel,2016-01-31 17:58:42
172,2016-01-25 22:57:41,"‚Ä¶ array

When describing the effect of setting array.length = 0,
it is stated that copies of the array will also be affected
and loose their content.
This is only true for references (listNoCopy = listA),
but not for copies (listCopy = [...listA]).
",janriemer,2016-02-20 13:45:13
172,2016-01-25 23:23:23,"I've seen that there is currently a very [similar open PR](https://github.com/loverajoel/jstips/pull/168) by @johanna-bodnyk.
Nevertheless, I think both PR's describe two distinct aspects, namely reference values and copy values.
So maybe we can merge both?!  :yum:

Thanks for your effort.
",janriemer,2016-02-20 13:45:13
172,2016-02-20 13:45:13,"This has been merged in another PR.
",zenopopovici,2016-02-20 13:45:13
171,2016-01-25 22:25:16,"Fix typo in word 'official'.
",janriemer,2016-01-26 04:22:57
171,2016-01-26 04:23:02,"thanks
",loverajoel,2016-01-26 04:22:57
170,2016-01-25 22:17:10,"Pull request for the translation of the tips

Done:
- 2015-12-29-inserire-un-elemento-in-un-array.md
- 2016-01-01-angularjs-digest-vs-apply.md
- 2016-01-05-differenze-tra-undefined-e-null.md
- 2016-01-13-consiglio-per-misurare-le-prestazioni-di-un-blocco-di-codice-javascript.md
- 2016-01-19-concatenazione-stringhe-sicura.md
- 2016-01-20-restituire-oggetti-per-permettere-il-concatenamento-di-funzioni.md
- 2016-01-21-mescolare-un-array.md
- 2016-01-23-metodo-veloce-per-convertire-stringhe-in-numero.md

Unfinished:
- 2016-01-03-migliorare-condizioni-nidificate.md
",LorenzoRogai,
170,2016-01-26 03:05:10,"@LorenzoRogai awesome!
1 - Please add a nice description to this PR :dancer: 
2 - I will need your help [here](https://github.com/loverajoel/jstips/pull/173/files) (I mentioned you)
",loverajoel,
169,2016-01-25 17:08:00,,hingsir,2016-01-25 17:40:45
168,2016-01-25 16:23:38,"The use of the word ""copy"" was confusing to me, since we're really talking about another pointer to the same array, not a copy of the array. I think this might clarify it.
",johanna-bodnyk,2016-01-26 01:40:10
168,2016-01-25 16:26:06,"@microlv ping!
",loverajoel,2016-01-26 01:40:10
168,2016-01-25 16:33:47,":+1: @johanna-bodnyk's rewording helped me understand it better
",chriskwan,2016-01-26 01:40:10
168,2016-01-26 01:30:49,"@johanna-bodnyk seems great!
",microlv,2016-01-26 01:40:10
167,2016-01-25 16:01:20,"## Currying vs partial application.
## TL;DR;

Currying and partial application are two ways of transforming a function into another function with a generally smaller arity.
The differences between the two is:
- Currying always produces nested unary (1-ary) functions. The transformed function is still largely the same as the original.
- Partial application produces functions of arbitrary arity. The transformed function is different from the original ‚Äì it needs less arguments.
## Username

@[bhaskarmelkani](https://www.twitter.com/bhaskarmelkani)

Extra
",bhaskarmelkani,2016-01-28 17:55:02
167,2016-01-28 17:59:09,"Thanks man!
",loverajoel,2016-01-28 17:55:02
167,2016-01-28 19:11:20,"Your welcome :)
",bhaskarmelkani,2016-01-28 17:55:02
166,2016-01-25 07:54:31,"Using immediately invoked function expression

TL;DR;

 IIFE - immediately invoked function expression) is an anonymous function expression that is immediately invoked and has some important uses in Javascript.

Username

@rishantagarwal
",rishantagarwal,2016-01-25 23:52:06
166,2016-01-25 08:53:11,":+1: 

If you want to add further information to your tip:
- Try to explain the difference between !function(){}() (or +function(){}()) and (fn())() (or better: add this link https://blog.mariusschulz.com/2016/01/13/disassembling-javascripts-iife-syntax)
- Add a jsperf which IIFE is the fastest (! is you want to save bytes, (fn()()) if you don't)
",kurtextrem,2016-01-25 23:52:06
166,2016-01-25 13:11:31,"@rishantagarwal  hey use the PR template -> https://github.com/loverajoel/jstips/blob/gh-pages/GIT_TEMPLATE.md
",loverajoel,2016-01-25 23:52:06
166,2016-01-25 15:01:05,"@loverajoel  - Updating PR Template. Thanks
@kurtextrem  - Adding external URL's and JsPerf.

Thanks guys !!
",rishantagarwal,2016-01-25 23:52:06
166,2016-01-25 15:28:52,"update the file name with today date
",loverajoel,2016-01-25 23:52:06
166,2016-01-25 17:58:50,"@rishantagarwal I will wait for your, I wanna publish this tip today
",loverajoel,2016-01-25 23:52:06
166,2016-01-25 18:15:11,"@rishantagarwal You can add link to [this](http://benalman.com/news/2010/11/immediately-invoked-
function-expression/) article. It explains IIFE in a very good way :)
http://benalman.com/news/2010/11/immediately-invoked-function-expression/
",bhaskarmelkani,2016-01-25 23:52:06
166,2016-01-25 23:05:08,"@loverajoel - Please check
",rishantagarwal,2016-01-25 23:52:06
165,2016-01-25 07:28:02,"## Assignment Shorthands
## Simple shorthands to make code cleaner and simpler.
#### Assignment Operators

Assigning is very common. Sometimes typing becomes time consuming for us 'Lazy programmers'.
So, we can use some tricks to help us and make our code cleaner and simpler.

Instead of using:

<S_CODE_TOKEN>

We can use:

<S_CODE_TOKEN>

This is the similiar use of

<S_CODE_TOKEN>
#### If-else (Using ternary operator)

This is what we write on regular basis.

<S_CODE_TOKEN>

We can user ternary operator to make it awesome:

<S_CODE_TOKEN>
#### Null, Undefined, Empty Checks

<S_CODE_TOKEN>

Shorthand here:

<S_CODE_TOKEN>

P.S.: If variable1 is a number, then first check if it is 0.
#### Object Array Notation

Instead of using:

<S_CODE_TOKEN>

Use this:

<S_CODE_TOKEN>
#### Associative array

Instead of using:

<S_CODE_TOKEN>

Use this:

<S_CODE_TOKEN>
## Username

Here I am: [@hsleonis](https://github.com/hsleonis)
## Website

You can see a cool animation by me: [ThemeAxe.com](http://www.themeaxe.com)
",hsleonis,2016-02-04 18:45:32
165,2016-01-25 13:11:37,"@hsleonis  hey use the PR template -> https://github.com/loverajoel/jstips/blob/gh-pages/GIT_TEMPLATE.md
",loverajoel,2016-02-04 18:45:32
165,2016-01-26 04:50:33,"@loverajoel please check the update. I have made the changes.
",hsleonis,2016-02-04 18:45:32
165,2016-01-30 15:59:15,"@hsleonis you have to use [this](https://github.com/loverajoel/jstips/blob/gh-pages/POST_TEMPLATE.md) template for you tip and [this](https://github.com/loverajoel/jstips/blob/gh-pages/GIT_TEMPLATE.md) for you pull request message.

BTW, I like this tip
",loverajoel,2016-02-04 18:45:32
165,2016-02-04 19:04:23,"Thanks!
",loverajoel,2016-02-04 18:45:32
165,2016-02-07 05:34:51,":+1: good idea, useful tips
",shivarajnaidu,2016-02-04 18:45:32
165,2016-02-07 06:55:16,"Thanks :)
",hsleonis,2016-02-04 18:45:32
164,2016-01-25 05:44:35,"test
",chakravarthysm,2016-01-25 05:45:49
163,2016-01-25 02:46:14,"## Speed up recursive functions with memoization
## TL;DR;

Recursive functions are used in many situations e.g. fibonacci, GCD or factorial. If improperly used, they would perform badly. This tip will tell you how to improve the performance.
## Username

[@hingsir](https://github.com/hingsir)
",hingsir,2016-01-29 15:55:38
163,2016-01-25 15:17:07,"@hingsir  hey use the PR template -> https://github.com/loverajoel/jstips/blob/gh-pages/GIT_TEMPLATE.md
",loverajoel,2016-01-29 15:55:38
163,2016-01-26 02:13:35,"@loverajoel Is that ok?
",hingsir,2016-01-29 15:55:38
163,2016-01-26 03:08:36,"@hingsir :+1: 
",loverajoel,2016-01-29 15:55:38
163,2016-01-29 15:57:25,"thanks man!
",loverajoel,2016-01-29 15:55:38
162,2016-01-25 01:48:27,"## $scope.on() and $rootScope.on() in angularjs
## TL;DR;

If we use $state.reload() by angular-ui's UI-Router,we will find that,$rootScope.on() will trigger many times;That's because when we call $state.reload(),$scope.on() will unbind,but $rootScope.on() will not. we can resolve it by two way.
## Username

[xiaoyu5256](https://github.com/xiaoyu5256)
## Extra
",xiaoyu5256,2016-05-06 14:58:15
162,2016-01-25 15:17:24,"@xiaoyu5256   hey use the PR template -> https://github.com/loverajoel/jstips/blob/gh-pages/GIT_TEMPLATE.md
",loverajoel,2016-05-06 14:58:15
162,2016-01-26 00:16:07,"@loverajoel  It's ok?
",xiaoyu5256,2016-05-06 14:58:15
162,2016-05-06 14:58:15,"Closed due to inactivity.
",zenopopovici,2016-05-06 14:58:15
161,2016-01-25 00:53:20,,hingsir,2016-01-25 00:55:17
161,2016-01-25 00:55:15,":+1: 
",loverajoel,2016-01-25 00:55:17
160,2016-01-24 21:22:58,"## Filtering And Sorting a List of Strings
## TL;DR;

You may have a big list of names you need to filter in order to remove duplicates and sort them alphabetically.
## davegomez

[@davegomez](https://twitter.com/davegomez)
",davegomez,2016-01-26 19:33:49
160,2016-01-26 04:25:58,"update the file name to today
",loverajoel,2016-01-26 19:33:49
160,2016-01-26 15:30:52,"@davegomez ping!
",loverajoel,2016-01-26 19:33:49
160,2016-01-26 19:42:26,"Thanks man
",loverajoel,2016-01-26 19:33:49
160,2016-01-27 00:13:01,"I'm sorry @loverajoel, I just saw the email. Too much work!
",davegomez,2016-01-26 19:33:49
159,2016-01-24 20:34:46,"## ES6 Destructuring
## TL;DR;

ES6 destructuring is a syntax modernization that improves readability and reduces the amount of code necessary for expressive declarations.
## Username

[@webb04](https://github.com/webb04)
## Extra

ES6 destructuring is a syntax modernization that improves readability and reduces the amount of code necessary for expressive declarations.
### Array destructuring

<S_CODE_TOKEN>
### Object destructuring

<S_CODE_TOKEN>

You can find more information about JavaScript ES6 destructuring here:
- [Getting Started with JavaScript ES6 Destructuring](https://strongloop.com/strongblog/getting-started-with-javascript-es6-destructuring/)
- [ES6 In Depth: Destructuring](https://hacks.mozilla.org/2015/05/es6-in-depth-destructuring/)
",webb04,2016-05-06 14:57:53
159,2016-01-25 15:17:45,"@hsleonis  hey use the PR template -> https://github.com/loverajoel/jstips/blob/gh-pages/GIT_TEMPLATE.md
",loverajoel,2016-05-06 14:57:53
159,2016-01-25 17:38:01,"@loverajoel Hey hope that's ok now
",webb04,2016-05-06 14:57:53
159,2016-01-25 17:40:23,"@webb04 the PR template is for the PR message 
![image](https://cloud.githubusercontent.com/assets/1700100/12559041/8e725c0e-c371-11e5-8e43-c166430b95ab.png)
, and the Post template is for the post.
",loverajoel,2016-05-06 14:57:53
159,2016-05-06 14:57:53,"Closed due to inactivity.
",zenopopovici,2016-05-06 14:57:53
158,2016-01-24 19:16:38,"Converting to number fast way

TL;DR;

Converting strings to numbers is extremely common. The easiest and fastest way to achieve that would be using the + operator.

Username

@[bhaskarmelkani](https://twitter.com/bhaskarmelkani)

Extra

Added comment for browser specific behaviour or +, parseInt and other similar functions.
",bhaskarmelkani,2016-03-05 05:25:08
158,2016-01-25 18:19:49,"@sonnyt 
",bhaskarmelkani,2016-03-05 05:25:08
158,2016-02-20 14:00:48,"@bhaskarmelkani: Please link to jsperf.com not to Dropbox. Those files may go away.
",zenopopovici,2016-03-05 05:25:08
158,2016-02-25 14:25:02,"rebase
",loverajoel,2016-03-05 05:25:08
157,2016-01-24 19:01:19,"## Public, private, static and prototype properties in JS.
## TL;DR;
- Private properties are defined by using 'var' keyword inside the object,its not directly accessible to instances.
- Public properties are defined by using `this.propertyName`, it is accessible to instances.
- Prototype properties are defined by `Classname.prototype.propertyName`, its public and is shared by instances.
- Static properties are defined by `Classname.propertyName`, it can be used without creating instances.
## Username

@[bhaskarmelkani](https://www.twitter.com/bhaskarmelkani)
## Extra

Explaining with example as how to create private, public, static, prototype properties in JS without using ES6.
",bhaskarmelkani,2016-03-11 18:19:20
157,2016-01-24 19:03:42,"hey use the PR template -> https://github.com/loverajoel/jstips/blob/gh-pages/GIT_TEMPLATE.md
",loverajoel,2016-03-11 18:19:20
157,2016-01-24 19:08:19,"Done.
",bhaskarmelkani,2016-03-11 18:19:20
157,2016-01-27 08:40:29,"Done, check if LGTY
",bhaskarmelkani,2016-03-11 18:19:20
157,2016-03-01 12:24:35,"@loverajoel We should try to review all old tips before accepting new ones...
",zenopopovici,2016-03-11 18:19:20
157,2016-03-01 21:29:54,"@zenopopovici sure, under review :dancer: 
",loverajoel,2016-03-11 18:19:20
157,2016-03-11 14:48:25,"@neighborhood999 @gromgit @kurtextrem @loverajoel @adaniloff @drakmail @sjfkai @pastrop Can you guys look over this? We have also other 3 tips under review. If you've got the time, give us some feedback and :shipit: or not vote.
",zenopopovici,2016-03-11 18:19:20
157,2016-03-11 17:39:58,"@zenopopovici I was making a big post with big explanations, but I think ""shorter is better"" ahahah :sunglasses:.

So, I think this tips need some big changes : 
- some text error (for ex. : in the description which is almost the same as the one from the source it is from, ""example of a person"" should be changed).
- I also think it could be easier to read if we alternate one block of text with one block of code 
- then a link to babeljs (https://babeljs.io/repl/) could be used to have the whole code tested
- also I'm not a big fan of this kind of OOP-like programming style, I would rather recommand the ""module pattern"" (by the way the source is 4 years old, I think it's kinda gross and may be too old to be used as a ""tip"" since JS has changed a lot since then; but it's just my opinion)
- finally I think this lacks of basic explanations. Clearly, it's a tip for people who are new JS developers, and not explaining things like the differences between privileged / public methods makes me sad. I also think it should be written somewhere that, since it's not real OOP, JS public methods != OOP public methods (JS privileged is more like OOP public then JS public).

Sorry for the long post ! :sweet_potato: 

PS : style too long :(
EDIT : I forgot to mention I'll probably be too busy to work on it atm, but I'll try to do it asap
",adaniloff,2016-03-11 18:19:20
157,2016-03-11 17:50:18,"I'll have to give a :-1:, for several reasons:
1. Only the example code is original, as far as I can tell. The tip's text was plagiarized from the URL referenced at the end, right down to the grammatical errors in the latter. (Immediate ""red flags"" for me: the `tip-tldr` and the text looked like they were written by two different people, and the text refers to a ""person"" that's only defined in the original URL's example.) It's one thing to have someone else's words inspire your own, and quite another to make a blatant copy.
2. Hacked-up ""class"" implementations like this are so 2000's. [ES6 classes](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes) are a proper approximation of the real thing, for those who can't/won't wrap their heads around prototypes.
3. The example is inconsistent with the text. For example, the private var `_sum` is missing a `var` declaration, and `this.add` and `this.show` are actually **privileged** methods; since they access instance variables/methods, neither of them can be defined as public methods.
4. Bad things happen if you accidentally invoke this kind of ""class"" like a function: without the all-important `new` keyword, [`this`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/this) is set to either the global object or `undefined` (the latter applies if `use strict` is in effect). If the former, `x`, `y`, `add` and `show` suddenly become global entities, overwriting any previous definitions and potentially causing strange logic bugs. ES6 classes don't have this issue.
",gromgit,2016-03-11 18:19:20
157,2016-03-11 18:13:44,"I agree with the pretty much all the comments by @adaniloff and @gromgit . I don't find this tip particularly useful.   ES6 brings pretty significant changes to the way classes are represented.  I would guess that those who are interested in classical inheritance patterns will be well advised to move to ES6 classes.  
So it is :-1: for me. Also, I would recommend this book to anyone interested in deep diving into ES5 inheritance patterns: http://bdcampbell.net/javascript/book/javascript_the_good_parts.pdf look at the chapter 5  
",pastrop,2016-03-11 18:19:20
157,2016-03-11 18:19:20,"Thanks guys, was really my sentiment but I wanted to make sure. Closing. 
@bhaskarmelkani Please take into account the comments. Sorry we have to refuse this.
",zenopopovici,2016-03-11 18:19:20
157,2016-03-12 03:18:10,"I got a quick question on submitting tips. ¬†I have the repo forked. ¬†So, when I am submitting am ¬†I supposed to use Commit directly option or Create a new branch and start a pull request?
Thanks!

<S_CODE_TOKEN>

 To: loverajoel/jstips jstips@noreply.github.com 
Cc: pastrop pas_trop2003@yahoo.com
 Sent: Friday, March 11, 2016 9:49 AM
 Subject: Re: [jstips] Using public, private, static, prototype properties in JS (#157)

@eighborhood999 @gromgit @kurtextrem @loverajoel @adaniloff @drakmail @sjfkai @pastrop Can you guys look over this? We have also other 3 tips under review. If you've got the time, give us some feedback and  or not vote.‚Äî
Reply to this email directly or view it on GitHub.  
",pastrop,2016-03-11 18:19:20
157,2016-03-12 05:47:32,"@pastrop You can't commit directly to the main repo unless you're a collaborator, so you'd have to create pull requests. Creating a separate branch for each pull request helps keeps things in order when you're juggling changes to multiple tips, so I generally do the following:
1. [Update local fork from the main repo](https://help.github.com/articles/syncing-a-fork/)
2. Create and checkout a new branch: `git checkout -b tipXX-update gh-pages`
3. Make and commit edits.
4. Push this branch to my fork.
5. Go to my forked repo page. There should be a **Compare and Pull Request** button next to your new branch. Click it and follow the instructions.
",gromgit,2016-03-11 18:19:20
157,2016-03-12 15:45:02,"@gromgit, thanks! I think I figured it out, just didn't read the instruction attentively enough for the first time. ¬†I did it all yesterday night, hopefully correctly, will check it again later today

<S_CODE_TOKEN>

 To: loverajoel/jstips jstips@noreply.github.com 
Cc: pastrop pas_trop2003@yahoo.com
 Sent: Saturday, March 12, 2016 12:48 AM
 Subject: Re: [jstips] Using public, private, static, prototype properties in JS (#157)

@pastrop You can't commit directly to the main repo unless you're a collaborator, so you'd have to create pull requests. Creating a separate branch for each pull request helps keeps things in order when you're juggling changes to multiple tips, so I generally do the following:   
- [Update local fork from the main repo]
- Create and checkout a new branch: git checkout -b tipXX-update gh-pages
- Make and commit edits.
- Push this branch to my fork.
- Go to my forked repo page. There should be a Compare and Pull Request button next to your new branch. Click it and follow the instructions.
  ‚Äî
  Reply to this email directly or view it on GitHub.  
",pastrop,2016-03-11 18:19:20
156,2016-01-24 18:51:03,"## Short circuit evaluation in JS.
## TL;DR;

Use logical AND (&&), OR (||) for conditions.
## Username

@[bhaskarmelkani](https://www.twitter.com/bhaskarmelkani)

Extra
",bhaskarmelkani,2016-01-27 16:02:30
156,2016-01-24 18:54:57,"@bhaskarmelkani hey use the PR template -> https://github.com/loverajoel/jstips/blob/gh-pages/GIT_TEMPLATE.md
",loverajoel,2016-01-27 16:02:30
156,2016-01-24 19:05:35,"@loverajoel : Updated check if needs any modification .
",bhaskarmelkani,2016-01-27 16:02:30
156,2016-01-25 10:33:35,"**Interesting.**
after using coffeescript, i always want to write code in pure javascript like 

<S_CODE_TOKEN>

Your tip answer this question in a way.

**But**, it'll be better if, it's not a must that isTrue() comes along with &&, isFalse() comes along with ||.
I don't want to have a second though for using `&&`/`||` whenever i test a variable is true or false (Though it may be natural after several times).

**I** thought about this:

<S_CODE_TOKEN>

but it means you must wrap your target value, which is a little ugly and less elegant.
",xianxingg,2016-01-27 16:02:30
156,2016-01-25 15:07:37,"@loverajoel Can I add a use-case for &&.

The logical AND could be used to avoid exceptions when using properties of undefined.
Example:-

<S_CODE_TOKEN>
",bhaskarmelkani,2016-01-27 16:02:30
156,2016-01-25 15:10:39,"`dog && dog.bark && dog.bark();`
",xianxingg,2016-01-27 16:02:30
156,2016-01-25 15:59:40,"Nice tip :+1: @bhaskarmelkan
",shivarajnaidu,2016-01-27 16:02:30
156,2016-01-25 16:02:09,"We can even add this && use for best security practices of JavaScript .. How about this ya 
@bhaskarmelkan 
",shivarajnaidu,2016-01-27 16:02:30
156,2016-01-27 16:14:06,"@bhaskarmelkani thanks for your tip!
",loverajoel,2016-01-27 16:02:30
156,2016-01-27 16:14:37,"@loverajoel your welcome :)
",bhaskarmelkani,2016-01-27 16:02:30
155,2016-01-24 18:32:59,,bhaskarmelkani,2016-01-24 18:39:30
155,2016-01-24 18:35:01,"@loverajoel This is ready to merge branch. Let me know if any issues.
",bhaskarmelkani,2016-01-24 18:39:30
155,2016-01-24 18:39:28,"@bhaskarmelkani awesome! thanks!
",loverajoel,2016-01-24 18:39:30
154,2016-01-24 17:16:54,"Updated directory structure.
",bhaskarmelkani,2016-01-24 18:33:58
154,2016-01-24 17:18:40,"Original PR #152 
",bhaskarmelkani,2016-01-24 18:33:58
154,2016-01-24 17:21:55,"update the fila name with today date
",loverajoel,2016-01-24 18:33:58
154,2016-01-24 17:23:09,"if you can, please squash your commits
",loverajoel,2016-01-24 18:33:58
154,2016-01-24 17:23:29,"Okay
",bhaskarmelkani,2016-01-24 18:33:58
154,2016-01-24 18:33:56,"Since this was forked from master, so squashing was creating conflicts and history was breaking.
Created ready to merge PR #155 
",bhaskarmelkani,2016-01-24 18:33:58
153,2016-01-24 15:15:20,,bhaskarmelkani,2016-01-24 18:52:07
153,2016-01-24 15:59:37,"We can simply use default parameter initialization ( new in es6).
Now we can initialize functions like this 

<S_CODE_TOKEN>

Instead of 

<S_CODE_TOKEN>

@bhaskarmelkani 
",shivarajnaidu,2016-01-24 18:52:07
153,2016-01-24 17:25:05,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-01-24 18:52:07
153,2016-01-24 18:52:03,"Closing this with an updated PR #156 
",bhaskarmelkani,2016-01-24 18:52:07
152,2016-01-24 14:25:38,,bhaskarmelkani,2016-01-24 17:18:05
152,2016-01-24 14:30:25,"Link to a jsperf would be great :+1: 
",kurtextrem,2016-01-24 17:18:05
152,2016-01-24 15:26:24,"@kurtextrem : Adding Jspref :)
",bhaskarmelkani,2016-01-24 17:18:05
152,2016-01-24 15:53:18,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-01-24 17:18:05
152,2016-01-24 17:13:30,"Hey, I have updated the branch as suggested. Should I close this PR and raise a new against gh-pages ?
",bhaskarmelkani,2016-01-24 17:18:05
152,2016-01-24 17:17:43,"Closing this for #154 
",bhaskarmelkani,2016-01-24 17:18:05
151,2016-01-24 09:25:26,"The statement holds for Chrome but for Safari,Firefox + is not fastest.

<img width=""672"" alt=""firefox"" src=""https://cloud.githubusercontent.com/assets/8968871/12535469/78231366-c2aa-11e5-9828-effe89dc878f.png"">
<img width=""683"" alt=""safari"" src=""https://cloud.githubusercontent.com/assets/8968871/12535471/78d453ec-c2aa-11e5-9f9a-b9a0e1d61edb.png"">
<img width=""770"" alt=""chrome"" src=""https://cloud.githubusercontent.com/assets/8968871/12535470/78c1dd70-c2aa-11e5-85b9-26697673f78e.png"">
",bhaskarmelkani,2016-01-24 19:17:04
151,2016-01-24 13:27:55,"#127 
",bhaskarmelkani,2016-01-24 19:17:04
151,2016-01-24 19:17:04,"Closing this for #158 
",bhaskarmelkani,2016-01-24 19:17:04
150,2016-01-23 21:14:59,,danillouz,2016-01-28 18:29:39
150,2016-01-27 02:32:44,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-01-28 18:29:39
150,2016-01-27 21:53:18,"Hi there, cool stuff! Is it best to open a new pull request or to update this one according to the instructions?
",danillouz,2016-01-28 18:29:39
150,2016-01-27 22:47:10,"@danillouz it's more easy close this pr and create a new one
",loverajoel,2016-01-28 18:29:39
149,2016-01-23 16:41:39,"Firefox 43.0.4 on Mac

http://i.imgur.com/1W51hsJ.png
",windows1087,2016-01-28 21:30:56
149,2016-01-23 16:45:33,"![bildschirmfoto 2016-01-23 um 17 44 10](https://cloud.githubusercontent.com/assets/1036749/12531370/f7a5c6f4-c1f8-11e5-8c0b-e50996fa264d.jpg)

It's also one of the slowest in Safari Version 9.0.3 (11601.4.4) on Mac OS X El Capitan

_(edit) All 3 major browsers (Chrome, Safari, Firefox at latest versions) on my MacBook 13' retina late 2013 on Mac OS X El Capitan compared, the fastest ways are Bitwise operators._
",marklabenski,2016-01-28 21:30:56
149,2016-01-25 08:13:45,"The `parseInt` function shouldn't even be on that list. It doesn't perform proper value conversion to the number type; it parses strings - and only strings! - into numbers.

E.g.

<S_CODE_TOKEN>

On top of that, it parses _partially accepted_ strings, which is generally **not** what you want when you're performing type conversion.

E.g.

<S_CODE_TOKEN>
",rjgotten,2016-01-28 21:30:56
149,2016-01-25 10:58:56,"@rjgotten üëçüèº
",Kerndog73,2016-01-28 21:30:56
149,2016-01-29 15:20:38,"Thank you @rjgotten 
But the point was, that it strongly depends on the browser/system wether the suggested method is the fastest. So it shouldn't be called ""the fastest way"" in general (Even if I wish it was)
",marklabenski,2016-01-28 21:30:56
148,2016-01-22 21:09:19,,bhaskarmelkani,2016-01-24 19:10:45
148,2016-01-22 22:14:29,"ES6?
",Kerndog73,2016-01-24 19:10:45
148,2016-01-23 07:50:55,"No, this is without ES6.
",bhaskarmelkani,2016-01-24 19:10:45
148,2016-01-23 08:45:26,"private??? 
",shivarajnaidu,2016-01-24 19:10:45
148,2016-01-23 08:46:59,"Private keyword in JavaScript is just reserved for future use .. Now it doesn't have any use in js ...
",shivarajnaidu,2016-01-24 19:10:45
148,2016-01-23 08:48:31,"And also I don't sure about other key words mentioned in this topic heading .. Except static  and prototype
",shivarajnaidu,2016-01-24 19:10:45
148,2016-01-23 09:32:14,"Check this out :
http://phrogz.net/JS/classes/OOPinJS.html
",bhaskarmelkani,2016-01-24 19:10:45
148,2016-01-24 17:25:25,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-01-24 19:10:45
148,2016-01-24 17:53:16,"@bhaskarmelkani ,please check out our repositories issues for issue named with best way to write classes in js.   I seen the link you mentioned in your comment.. It's nice but old.. 
Now we have native classes in java script (new in es6) .. Please refer that issue...
And here ,the issue is about private and public key words .. These are not related to classes in JavaScript.. They are only in java :)
",shivarajnaidu,2016-01-24 19:10:45
148,2016-01-24 18:40:34,"@loverajoel I will update it.
@shivarajnaidu : Hey classes in ES6 are not supported by browsers yet. This just to tell how one can you  
variables/properties that have a private scope to a function(often called as class in prototypal inheritance).

We should start using ES6 concepts but also should have idea about old techniques. :)
",bhaskarmelkani,2016-01-24 19:10:45
148,2016-01-24 19:10:45,"Closing this with updated PR #157 
",bhaskarmelkani,2016-01-24 19:10:45
147,2016-01-22 17:46:38,,0xmtn,2016-03-05 05:25:42
147,2016-01-22 18:00:52,"mergeback
",loverajoel,2016-03-05 05:25:42
147,2016-01-23 10:21:39,"Mergeback where? Sorry, couldn't understand. 
",0xmtn,2016-03-05 05:25:42
147,2016-01-23 15:07:57,"I can merge this fix, you should make a mergeback or rebaase
",loverajoel,2016-03-05 05:25:42
147,2016-01-23 19:39:57,"Sorry for misunderstanding @loverajoel, long days, no sleep, forgot that you already published two more tips.
",0xmtn,2016-03-05 05:25:42
147,2016-02-20 14:02:01,"@0xmtn Your merge is not OK, you have still GIT merge markers in place.

E.g.:
`<<<<<<< d5840b8e0bbd664aa60726ae506cd0f2d26bf9e1`

Please fix so we can merge.
",zenopopovici,2016-03-05 05:25:42
146,2016-01-22 16:00:22,"[https://hingsir.github.io/jstips-site/dist/tips/](https://hingsir.github.io/jstips-site/dist/tips/)
",hingsir,2016-01-24 16:03:07
146,2016-01-22 17:06:50,"@hingsir I'm working in a jekyll-now theme and I think that this weekend will be ready
",loverajoel,2016-01-24 16:03:07
146,2016-01-22 23:50:03,"@loverajoel looking forward to !
",hingsir,2016-01-24 16:03:07
146,2016-01-23 09:24:31,"I build a site called `awesome search` providing simple functionality to search in awesome list recently with a friend.
As `jstips` is listed in awesome list, so `jstips` is in `awesome search` automatically.
https://awesomelists.top/#/repos/loverajoel/jstips :)
Just let users overview the tips by the category dropdown.
I think it will be better to see the official static site of `jstips` by @loverajoel.
repo:
https://github.com/lockys/awesome-search/
",lockys,2016-01-24 16:03:07
146,2016-01-23 10:06:58,"@lockys +1
",hingsir,2016-01-24 16:03:07
146,2016-01-24 16:03:07,"@hingsir @lockys hey I added those [here](https://github.com/loverajoel/jstips#lets-keep-in-touch) and you can see the blog live in jstips.co

Thanks
",loverajoel,2016-01-24 16:03:07
146,2016-01-26 12:36:39,"@loverajoel  that's fantastic! :100: 
",lockys,2016-01-24 16:03:07
145,2016-01-22 15:40:39,,dggriffin,2016-01-24 15:59:59
145,2016-01-24 15:59:57,"Hey @dggriffin close this because I added this [here](https://github.com/loverajoel/jstips#lets-keep-in-touch)

Thanks for your contribution
",loverajoel,2016-01-24 15:59:59
144,2016-01-22 15:32:05,,hakhag,2016-01-31 15:33:08
144,2016-01-24 17:25:39,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-01-31 15:33:08
143,2016-01-22 10:56:47,"Thank for the tips.

We can also use this trick to do a safe string concatenation :

<S_CODE_TOKEN>

it's less verbose and faster !

http://jsperf.com/string-concatenate-concat-vs-join/4
",FlorianBELLAZOUZ,2016-01-28 21:30:41
143,2016-01-22 12:28:56,"@FlorianBELLAZOUZ  nice trick
",gogainda,2016-01-28 21:30:41
143,2016-01-22 12:38:26,"I'd say this one should probably replace the `.concat` function in #19.
",kurtextrem,2016-01-28 21:30:41
143,2016-01-22 13:04:07,"Nice tip @FlorianBELLAZOUZ    :thumbsup:

**we can also make use of [`template strings`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings) to acomplish the same..**

<S_CODE_TOKEN>

_See_ [Template Strings at Mozilla Developer Network](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings)
",shivarajnaidu,2016-01-28 21:30:41
142,2016-01-22 07:37:18,"I could not find proper minify compliers for JS minify? Can any one suggest?
",jknaresh,2016-03-05 05:13:06
142,2016-01-22 09:06:06,"gulp or bower is not enough?
",infacq,2016-03-05 05:13:06
142,2016-01-22 23:02:24,"> gulp or bower is not enough?

Gulp is a task-runner and bower is a package manager. Neither is a minifier.

You want a decent minifier, you use something like UglifyJS.
",rjgotten,2016-03-05 05:13:06
142,2016-01-23 00:59:31,"[**UglifyJS2**](https://github.com/mishoo/UglifyJS2) is a good choice

> It‚Äôs almost a full rewrite (except for the parser which is heavily modified, everything else starts from scratch).
",xovel,2016-03-05 05:13:06
142,2016-01-23 02:41:51,"Yeah UglifyJS is what I use. üëçüèº
",Kerndog73,2016-03-05 05:13:06
141,2016-01-21 20:21:15,,alawatthe,2016-01-21 21:43:29
141,2016-01-21 21:43:27,"thanks @alawatthe 
",loverajoel,2016-01-21 21:43:29
140,2016-01-21 20:19:27,"I am talking about the algorithm about the following algorithm by @mvedie:

<S_CODE_TOKEN>

Information why this algorithm does not work (and shouldn't be used) can be found for example in [this awesome blog post](http://bost.ocks.org/mike/algorithms/#shuffling) and by googling a bit.

I'm therefore proposing to remove the corresponding section from the tip.
",alawatthe,2016-01-21 21:43:31
140,2016-01-21 21:42:33,"Ok, my bad, thank you for this link which opened my eyes. 
",mvedie,2016-01-21 21:43:31
140,2016-01-21 22:12:17,"No worries @mvedie, I'm here to help :-D
",alawatthe,2016-01-21 21:43:31
140,2016-01-21 22:21:14,"@alawatthe hahah :+1: 
",loverajoel,2016-01-21 21:43:31
140,2016-01-22 06:39:28,"And i'm here to learn :)

> Le 21 janv. 2016 √† 23:21, Joel Lovera notifications@github.com a √©crit :
> 
> @alawatthe hahah 
> 
> ‚Äî
> Reply to this email directly or view it on GitHub.
",mvedie,2016-01-21 21:43:31
139,2016-01-21 19:47:03,"Fix error when peopole make a bad copy / paste .

Slice make a clone of the array, so shuffled returned array must be pushed in a var.
",mvedie,2016-02-20 14:04:53
139,2016-01-22 15:26:03,"@0xmtn ping!
",loverajoel,2016-02-20 14:04:53
139,2016-01-22 17:49:52,"https://github.com/loverajoel/jstips/pull/147 - Changed.
It was not actually a bad copy/paste. It was tested, and the output  was from browser inspector. I thought it'd be decision of the user whether to push it to a var or not, when I noticed it ;)
",0xmtn,2016-02-20 14:04:53
139,2016-01-22 21:30:21,"This is not a problem because tips have been removed , but : 

https://jsfiddle.net/8thfq94p/
",mvedie,2016-02-20 14:04:53
139,2016-01-22 21:32:43,"But if you copy/paste the code directly in chrome console , the standard comportement of the console is to display the returned result of the last call. It's not a good method to test ;)
",mvedie,2016-02-20 14:04:53
139,2016-01-23 09:52:36,":thumbsup: 
",0xmtn,2016-02-20 14:04:53
139,2016-02-20 14:04:53,"This is handled in another PR
",zenopopovici,2016-02-20 14:04:53
138,2016-01-21 19:23:35,,chentsulin,2016-01-21 19:26:49
138,2016-01-21 19:26:47,":+1: 
",loverajoel,2016-01-21 19:26:49
137,2016-01-21 18:08:17,,0xmtn,2016-01-21 18:10:32
136,2016-01-21 17:52:51,"In tip https://github.com/loverajoel/jstips/blob/master/README.md#21---shuffle-an-array, the alternate shuffle function by @mvedie ( which I really like, btw) appears to assume that `shuffle` is defined on the `Array.prototype` as it contains a `slice()` method on `this`, rather than on an `array` parameter ~ but that throws an error:

<S_CODE_TOKEN>

Fix that by specifying `array` as a parameter, and calling `slice()` on that instead:

<S_CODE_TOKEN>
",dfkaye,2016-01-21 18:10:37
136,2016-01-21 17:54:08,"@0xmtn ping
",loverajoel,2016-01-21 18:10:37
136,2016-01-21 18:08:35,"Fixed - https://github.com/loverajoel/jstips/pull/137 
",0xmtn,2016-01-21 18:10:37
135,2016-01-21 14:39:53,,hingsir,2016-01-30 15:52:40
135,2016-01-24 17:25:48,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-01-30 15:52:40
134,2016-01-21 09:13:21,"I have translated this repo to simplified Chinese.
",sjfkai,2016-01-28 21:49:11
134,2016-01-21 09:27:29,":+1: !
",drakmail,2016-01-28 21:49:11
134,2016-01-21 12:45:13,"Amazing job man!!!!! I will need your help to translate statics words for the blog, I will back to you
",loverajoel,2016-01-28 21:49:11
134,2016-01-21 17:23:08,"When you finish the tip 01 and 02 I will merge this! :clap: :clap: :clap: :clap: 
",loverajoel,2016-01-28 21:49:11
134,2016-01-22 07:14:35,"Great!!! 
",microlv,2016-01-28 21:49:11
134,2016-01-22 18:24:03,"nice work!
",mrvicadai,2016-01-28 21:49:11
134,2016-01-27 02:20:03,"Hi @sjfkai, the structure of the repo changed and now we support multi language for the site. Please let me know when you finish to move all files to the new structure so we can merge this.
Thanks for awesome work!
",loverajoel,2016-01-28 21:49:11
133,2016-01-20 21:37:54,"Made small spelling and grammar changes to entire document (up to tip 20).
",schindld,2016-01-22 13:35:20
133,2016-01-21 04:41:27,"Besides those two small comments: :skull: like it!
",homer0,2016-01-22 13:35:20
133,2016-01-22 10:26:58,":100: 
",gogainda,2016-01-22 13:35:20
133,2016-01-22 13:35:24,"Thanks!
",loverajoel,2016-01-22 13:35:20
132,2016-01-20 20:49:55,,emars,2016-02-11 14:50:00
132,2016-01-21 04:48:40,"This is another case of quoting the docs, but the **Unapply attacks** part was pretty interesting; I think you should make your tip about it, instead of `Creating immutable objects`, `How to prevent unapply attacks` :).

@loverajoel 
",homer0,2016-02-11 14:50:00
132,2016-01-21 09:56:13,"You should mention that freeze is not recursive, e.g. if my object have nested objects in it, these are not frozen.
",mallowigi,2016-02-11 14:50:00
132,2016-01-24 17:25:59,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-02-11 14:50:00
132,2016-01-30 15:55:29,"Hey @emars I like this tip but yes i'm agree with @homer0 if you can change the focus of the tip to _unapply attacks_ will be useful.
",loverajoel,2016-02-11 14:50:00
132,2016-02-03 17:47:47,"@emars ping!
",loverajoel,2016-02-11 14:50:00
132,2016-02-03 17:56:01,"Sounds good! I'll update it today. 
",emars,2016-02-11 14:50:00
132,2016-02-09 21:13:06,"@emars ping!
",loverajoel,2016-02-11 14:50:00
132,2016-02-09 23:00:31,"hey my bad, I set aside some time to update it tomorrow morning. for real this time.
",emars,2016-02-11 14:50:00
132,2016-02-10 13:47:33,"Since it's now being applied to the `gh-pages` , would I need to create a new PR for the updated tip? 
",emars,2016-02-11 14:50:00
132,2016-02-10 13:58:24,"@emars yes, you have to create a new pr, sorry
",loverajoel,2016-02-11 14:50:00
132,2016-02-10 14:33:03,"sure no worries. 
",emars,2016-02-11 14:50:00
131,2016-01-20 20:10:28,"Most correct and semantic way:

<S_CODE_TOKEN>
",3y3,2016-01-28 21:29:47
130,2016-01-20 18:59:35,,dggriffin,2016-01-20 19:06:39
130,2016-01-20 19:06:44,"thanks
",loverajoel,2016-01-20 19:06:39
129,2016-01-20 18:19:14,"Tip how to observe cascading DOM changes
",beyondns,2016-02-03 04:24:46
129,2016-01-20 18:32:56,"Some points for improvements:
- Add example usage (real function call)
- Add explanations for the parameters and or link to the MDN article
",kurtextrem,2016-02-03 04:24:46
129,2016-01-21 05:00:40,"Besides @kurtextrem comments, 
- `extensions to existent sites`, are you talking about injecting/embedding content on a website?.
- [ ] whant?.
- [ ] Add more description, don't leave it just to the code to explain the tip.
- [ ] [squash your commits](http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html).
",homer0,2016-02-03 04:24:46
129,2016-01-21 08:52:52,"Yes, I used this tip to build extension with injecting/adding functionality and content. 
",beyondns,2016-02-03 04:24:46
129,2016-01-21 09:49:56,"Also useful for Chrome extensions (probably Firefox, Safari, Opera etc as well)
",kurtextrem,2016-02-03 04:24:46
129,2016-01-24 17:04:35,"FYI the link to MDN `MutationObserver` documentation has the incorrect domain `mozillaa.org`.
",sdgluck,2016-02-03 04:24:46
129,2016-01-24 17:26:07,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-02-03 04:24:46
129,2016-01-25 12:26:41,"plain README.md was cool :)
",beyondns,2016-02-03 04:24:46
129,2016-01-25 12:32:48,"I refactor my tip (working example now), do I need something more?

Thanks
",beyondns,2016-02-03 04:24:46
129,2016-01-25 13:11:22,"@beyondns  hey use the PR template -> https://github.com/loverajoel/jstips/blob/gh-pages/GIT_TEMPLATE.md
",loverajoel,2016-02-03 04:24:46
129,2016-01-26 09:04:33,"Should I do new pull request to use new format?
",beyondns,2016-02-03 04:24:46
129,2016-01-26 09:11:40,"Yes, you can fork a branch from `gh-pages` and after adding your changes you can create a PR with specified PR format.
Then once the PR is created, you can close this PR mentioning the PR id of the new one. :)
",bhaskarmelkani,2016-02-03 04:24:46
129,2016-01-31 15:34:16,"@beyondns ping!
",loverajoel,2016-02-03 04:24:46
129,2016-02-02 12:07:35,"pong https://github.com/loverajoel/jstips/pull/203
",beyondns,2016-02-03 04:24:46
128,2016-01-20 18:13:37,,ankon,2016-01-20 18:16:10
128,2016-01-20 18:16:15,":+1: 
",loverajoel,2016-01-20 18:16:10
127,2016-01-20 16:17:18,,sonnyt,2016-01-23 15:11:57
127,2016-01-21 05:07:43,"Honest question, lets say `var n = '-1'`, why would I use `+/-a` instead of `Number(a)`?.
Also, [squash](http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html) your commits.

:skull: Like it!
",homer0,2016-01-23 15:11:57
127,2016-01-21 08:30:46,"@homer0 because of perf and less bytes used: https://jsperf.com/number-vs-parseint-vs-plus/29
",kurtextrem,2016-01-23 15:11:57
127,2016-01-21 15:04:27,"What @kurtextrem said :smile: 
",sonnyt,2016-01-23 15:11:57
127,2016-01-21 15:22:58,"@kurtextrem thanks :)
",homer0,2016-01-23 15:11:57
127,2016-01-22 15:29:50,"@sonnyp can you add a jsperf link? also mergeback and squash your commits
",loverajoel,2016-01-23 15:11:57
127,2016-01-22 15:35:19,"I think you meant @sonnyt :smiley: 
",sonnyp,2016-01-23 15:11:57
127,2016-01-22 15:53:15,"@loverajoel I merged and added jsPref. Rebasing is causing bunch of problems... ugh :sob: 
",sonnyt,2016-01-23 15:11:57
127,2016-01-22 15:54:12,"@sonnyp :laughing: :wave: 
",sonnyt,2016-01-23 15:11:57
127,2016-01-23 15:15:15,"@sonnyt thanks for your tip man!
",loverajoel,2016-01-23 15:11:57
126,2016-01-20 14:30:15,"Just started translation to Russian :)
",drakmail,2016-02-20 12:29:12
126,2016-01-20 16:42:42,"Woww!!! awesome!
",loverajoel,2016-02-20 12:29:12
126,2016-01-27 02:20:36,"Hi @drakmail , the structure of the repo changed and now we support multi language for the site. Please let me know when you finish to move all files to the new structure so we can merge this.
Thanks for awesome work!
",loverajoel,2016-02-20 12:29:12
126,2016-02-20 12:22:47,"@drakmail Please let us know if you're still willing to translate jstips into Russian.

Thanks!
",zenopopovici,2016-02-20 12:29:12
126,2016-02-20 12:29:10,"@zenopopovici after communication with local JS group I decided doesn't translate tips by reason that most of JS programmers know English enough to understand the tips.
",drakmail,2016-02-20 12:29:12
125,2016-01-20 11:15:38,"Hi,

This pull request clarifies example comments, fixes grammar, and adds formatting to the tip 15.
",loonies,2016-01-20 17:25:53
125,2016-01-20 13:53:31,"@jhogoforbroke ping
",loverajoel,2016-01-20 17:25:53
125,2016-01-20 17:19:58,"@loonies @loverajoel ok, that's fair :+1:
",jhogoforbroke,2016-01-20 17:25:53
125,2016-01-20 20:06:15,"![](http://i.giphy.com/3o8doPqqOI7DADOb96.gif)
",loonies,2016-01-20 17:25:53
124,2016-01-20 10:31:38,"using a simple regular expression to make an easy `forEach` operation. :)
",sekaiamber,2016-02-20 16:41:22
124,2016-01-20 10:55:22,"Very interesting tip! Does it just another approach to `.split("","").forEach`? Does it perform better? Readability is not better part of this method of iteration :)
",drakmail,2016-02-20 16:41:22
124,2016-01-20 11:58:34,"@darkmail it seems that `Array.prototype.forEach` is not supported in IE8 :(.  
Speaking about performance, I use following test case in my Chrome console:

<S_CODE_TOKEN>

It seems that using regular expression is a little bit faster then using `split`, and `split` will create a new array in memory but regular expression not.

And `/[^, ]+/g` can deal with string like `""p1, p2 ,p3,     p4""`, it will ignore the space in the string, this is better then using `split` :)
",sekaiamber,2016-02-20 16:41:22
124,2016-01-21 05:42:29,"Pretty nice!!! I didn't know this. Now, I did a [jsperf test](http://jsperf.com/regexp-loop-vs-split-loop/2) and, except for Opera, it looks like the `split` _loop_ it's faster... but anyway, it's a nice trick/tip to know :).

:skull: 
",homer0,2016-02-20 16:41:22
124,2016-01-21 06:27:00,"@homer0 Thank you for the test :), and I test again and found if the length of the array is small, `split` will win, I think it is because when splitting a big string, make a new big array will cast a long time.  
In most instances, the string is short, and the performance between these 2 way is extremely close, we can almost ignore it.
",sekaiamber,2016-02-20 16:41:22
124,2016-01-21 06:31:50,"@sekaiamber agree :+1: 
",homer0,2016-02-20 16:41:22
124,2016-01-21 09:28:11,"Why is it better than [""foo"",""bar""].forEach ?
",mallowigi,2016-02-20 16:41:22
124,2016-01-21 09:50:58,"cool tip! :stars: 
",r-obert,2016-02-20 16:41:22
124,2016-01-21 09:55:24,"is replace not more like map than forEach? it definitely seems like it, if you used an explicit return, so perhaps you should allude to that in the documentation.
",r-obert,2016-02-20 16:41:22
124,2016-01-21 09:56:27,"@mallowigi thats a good point, i think the forEach pull request has much better value. this probably confuses people more than anything.
",r-obert,2016-02-20 16:41:22
124,2016-01-21 10:24:52,"@mallowigi @strcmp Yes, you are right:). I think `forEach` is more readable. This tip more like a promise of code style in a project:) It may reduce the code size, and use the regular expression to do other things. See [this](https://github.com/RubyLouvre/avalon/blob/master/avalon.js#L3340), and [this](https://github.com/RubyLouvre/avalon/blob/master/avalon.js#L1113) is use to instead of `.split(',')`.  

Thanks for the point :)
",sekaiamber,2016-02-20 16:41:22
124,2016-02-20 14:07:41,"@sekaiamber Can you please rebase your work on top of the latest commit? We're changing rules (see: #251), and we want to submit your tip for review.
",zenopopovici,2016-02-20 16:41:22
124,2016-02-20 16:41:18,"@zenopopovici Please see #267 ,and I'll close this PR :)
",sekaiamber,2016-02-20 16:41:22
124,2016-02-20 16:41:38,"Thank you!
",zenopopovici,2016-02-20 16:41:22
123,2016-01-20 10:09:48,"Any Security Issue and Solution?
",jknaresh,2016-03-05 13:44:24
123,2016-01-20 13:52:41,"This would be great! +1
",loverajoel,2016-03-05 13:44:24
123,2016-01-21 19:41:59,"Happy to contribute a few:
- [ ] [Web crypto](https://developer.mozilla.org/en-US/docs/Web/API/Window/crypto)
- [ ] [Secure contexts](https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts)
- [ ] [CSP](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy)
- [ ] [SRI](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity)

All of these impact JavaScript however not sure on if any but web crypto fit the current format. Other generic ones may be more relevant like basic security principles like filtering data in node may be more relevant.
",jonathanKingston,2016-03-05 13:44:24
123,2016-01-22 07:35:13,"Is any way, can we secure AJAX request?
",jknaresh,2016-03-05 13:44:24
123,2016-02-06 11:43:13,"@jknaresh well AJAX is 'secure' out of the box but it depends on what you are referring to. For example you can't just make an AJAX request to another server without both parties opting into using a **[CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing)** request, this means that hacker sites can't steal your GeoCities session just by making an AJAX request.

Now the security mentioned above is Same-Origin Policy(**[SOP](https://en.wikipedia.org/wiki/Same_origin_policy)**) which prevents an untrusted Origin speaking to another Origin from doing things you didn't expect with it. Forms and links can cross Origins but they can't read or execute the code on the other origin. (Origin is just a fancy name for Hostname, Port and Protocol _So https://example.com can't speak to http://example.com._)

So I assume you are more on about how to secure a conversation between your users and the server itself?
Most of the security features actually need to come from your server:
- [HPKP](https://en.wikipedia.org/wiki/HTTP_Public_Key_Pinning)
- [CSP](https://en.wikipedia.org/wiki/Content_Security_Policy)
- [HSTS](https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security)
- [TLS](https://en.wikipedia.org/wiki/Transport_Layer_Security)

One exception is [CSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery) token protection which usually requires some setup on the client side to enable. It prevents the user sending requests they didn't expect from their own browser. This can happen as any Origin can POST a form to another, meaning a user can be on example.com and end up deleting their Habbo Hotel account as the hacker has sent a form over to Habbo which you are logged into.

Essentially CSRF tokens work by using code that can only be read by users on the page to prevent privileged requests from happening. This is similar to Cookies in that it is sent back to the server on the request however it's different as it's usually sent in a HTTP header by code that recognises the page has loaded and the user actually made that action.
This comes as a pain for AJAX requests as it usually means taking server response headers and injecting it into your AJAX request headers to give a unique key back to the server.

Other than that you could use [WebCrypto](https://developer.mozilla.org/en-US/docs/MDN/Doc_status/API/WebCrypto) to store the data of your users on your servers encrypted without you even having the keys.

This was a little hastily written but yeah, let me know what sort of thing you are after securing and I can expand on that.
",jonathanKingston,2016-03-05 13:44:24
123,2016-02-20 13:04:21,"Hey guys,

Maybe we can muster a few examples, and good case practices in a PR :see_no_evil: from some of you who have a bit of experience with this?
",zenopopovici,2016-03-05 13:44:24
123,2016-02-20 17:45:44,"Yeah will get some commits up soon. Can't guarantee timeline at the moment.
Is there any preference in the order of the work for the comments I left
above?
Are there other topics or things that might be out of scope?

On Sat, 20 Feb 2016 13:04 Zeno Popovici notifications@github.com wrote:

> Hey guys,
> 
> Maybe we can muster a few examples, and good case practices in a PR [image:
> :see_no_evil:] from some of you who have a bit of experience with this?
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/loverajoel/jstips/issues/123#issuecomment-186590904.
",jonathanKingston,2016-03-05 13:44:24
123,2016-02-20 18:24:10,"There are no restrictions, and we don't know where to start so I guess anything that is useful would do. I would start with best practices and small but smart stuff that helps in securing a JS proiect. E.g.: Crypto is pretty advanced stuff, so I would not prioritize this.
",zenopopovici,2016-03-05 13:44:24
123,2016-02-21 18:14:53,"@zenopopovici sure crypto doesn't really make sense as a tip despite perhaps hashing examples which are far less technical.
The other topics I mentioned are not really simple tips that could be copy and pasted etc. SRI probably is the only simple suitable for a tip where a few lines of code can demo how to prevent against hijacked servers.
",jonathanKingston,2016-03-05 13:44:24
123,2016-03-05 13:44:24,"Well we shouldn't do it just for the sake of it. If we can come up with short tips on Security, then please submit a pr, if not, then maybe it doesn't fit the purpose of jstips. 
",zenopopovici,2016-03-05 13:44:24
122,2016-01-20 09:55:53,"Hey guys,

Great repo you've created. I would like to add a new tip, what do you think?
",dislick,2016-02-12 17:03:26
122,2016-01-24 17:26:22,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-02-12 17:03:26
122,2016-01-31 15:35:33,"Hey @dislick I like this tips, can you update the format?
",loverajoel,2016-02-12 17:03:26
122,2016-02-12 17:03:25,"@dislick I made the work for you and published your tip! https://github.com/loverajoel/jstips/blob/gh-pages/_posts/en/2016-02-12-use-destructuring-in-function-parameters.md

Thanks
",loverajoel,2016-02-12 17:03:26
121,2016-01-20 09:41:40,"Since the README.md starts getting longer it would be nice to split the tips into several files, and has only a list of titles on the README.md with links to the tip's md file. It will make the reading easier and also people will have less conflicts since the will work in different files and not on the README.
",AvraamMavridis,2016-01-20 13:51:28
121,2016-01-20 09:43:48,"Duplicates #13 :)
",drakmail,2016-01-20 13:51:28
121,2016-01-20 13:51:38,"closed by duplicate
",loverajoel,2016-01-20 13:51:28
121,2016-01-20 13:53:42,":+1: 
",AvraamMavridis,2016-01-20 13:51:28
120,2016-01-20 07:22:15,"Please excuse me for changing this line. As i wanted to give a demo to this class. Apologies for any inconvenience.
",Viqar,2016-01-20 07:23:04
120,2016-01-20 07:23:04,"Please excuse me for changing this line. As i wanted to give a demo to this class. Apologies for any inconvenience.
",Viqar,2016-01-20 07:23:04
119,2016-01-20 06:58:20,"FYI

<!-- Reviewable:start -->

[<img src=""https://reviewable.io/review_button.png"" height=40 alt=""Review on Reviewable""/>](https://reviewable.io/reviews/loverajoel/jstips/119)

<!-- Reviewable:end -->
",microlv,2016-01-22 15:13:17
119,2016-01-21 01:43:49,"Make Array empty/clear more performance
",microlv,2016-01-22 15:13:17
119,2016-01-21 05:51:35,"Nice and a simple :). I like it :skull: 
",homer0,2016-01-22 15:13:17
119,2016-01-21 12:50:12,"nice tip!
",loverajoel,2016-01-22 15:13:17
119,2016-01-22 02:39:28,"@mallowigi Thanks for correct my language error. ;)
",microlv,2016-01-22 15:13:17
119,2016-01-22 15:24:07,"@microlv thanks for your tip!
",loverajoel,2016-01-22 15:13:17
119,2016-01-22 18:25:10,"@loverajoel the title `#(number)` is still there (should be #22)
",mrvicadai,2016-01-22 15:13:17
119,2016-01-22 18:29:45,"@mrvicadai I changed it in master, don't worry
",loverajoel,2016-01-22 15:13:17
118,2016-01-19 22:35:35,,Kerndog73,2016-01-31 15:37:14
118,2016-01-20 13:54:20,"@gogainda ping
",loverajoel,2016-01-31 15:37:14
118,2016-01-21 05:53:25,"_Template strings are only available in ES6_
",homer0,2016-01-31 15:37:14
118,2016-01-21 07:20:36,"The latest versions of all major browsers have ES6 (except for IE obviously)
",Kerndog73,2016-01-31 15:37:14
118,2016-01-21 07:24:43,"@Kerndog73 my bad :disappointed: , I should've checked the support, sorry!!
To be fair, I said it was from ES6, not that it wasn't supported hahaha :P.
You can ignore my comment!
",homer0,2016-01-31 15:37:14
118,2016-01-21 07:31:16,"@homer0 Haha that's alright
",Kerndog73,2016-01-31 15:37:14
118,2016-01-21 14:07:39,"LGTM
",gogainda,2016-01-31 15:37:14
118,2016-01-27 02:33:43,"@Kerndog73 hey can you move this fix to the correct file?
",loverajoel,2016-01-31 15:37:14
118,2016-01-27 03:23:05,":+1: dudes .. template strings are very useful thing.  Worth to know..
",shivarajnaidu,2016-01-31 15:37:14
117,2016-01-19 18:26:28,"On `Chrome 48.0.2540.0 32-bit on Windows NT 10.0 64-bit`, [`concat` looks much faster than `join`](http://jsperf.com/string-concatenate-concat-vs-join/2).
",jczimm,2016-01-28 21:29:28
117,2016-01-19 19:26:48,":+1: 

concat is 51% faster on Safari, 38% faster on Firefox
",dincho,2016-01-28 21:29:28
117,2016-01-19 19:35:19,"@gogainda ping
",loverajoel,2016-01-28 21:29:28
117,2016-01-19 20:12:09,"Hi all! @jczimm in your example you were joining only numbers, but my tip is about strings as well, so I modified you example, so at least one variable is string. Check the results here http://jsperf.com/join-and-concat
",gogainda,2016-01-28 21:29:28
117,2016-01-19 20:58:58,":+1: 
",jczimm,2016-01-28 21:29:28
117,2016-01-19 22:10:10,"> Hi all! @jczimm in your example you were joining only numbers, but my tip is about strings as well, so I modified you example, so at least one variable is string. Check the results here http://jsperf.com/join-and-concat

Now concat is 53% faster in Safari and 46% faster in Firefox
",dincho,2016-01-28 21:29:28
117,2016-01-20 07:54:23,"On [MDN concat page](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/concat) there is a comment about performance

> It is strongly recommended that assignment operators (+, +=) are used instead of the concat() method. 

I think this should be mentioned. Not in terms of recommendation but performance.
",caisah,2016-01-28 21:29:28
117,2016-01-22 15:24:09,"> concat is 51% faster on Safari, 38% faster on Firefox

And straight-up `+` operators are 100+ times than both in Firefox.

> Not in terms of recommendation but performance.

No; **also** in terms of recommendation.

The whole problem with accidentally performing math operations is easily avoided when you actually _know_ how the language works and exploit the fact that the `+` operator is left-associative. 

Just do one of the following:

<S_CODE_TOKEN>

You should **only** use `String.prototype.concat` or `Array.prototype.join` when you are dealing with an unknown quantity of operands that need to be concatenated.
",rjgotten,2016-01-28 21:29:28
117,2016-01-22 22:25:46,"@rjgotten üëçüèº
",Kerndog73,2016-01-28 21:29:28
116,2016-01-19 16:10:26,"Simple typo fix.
",timbuckley,2016-01-19 17:14:46
116,2016-01-19 16:13:20,"Closing, given earlier (by 4 minutes!) PR https://github.com/loverajoel/jstips/pull/115 does the same thing.
",timbuckley,2016-01-19 17:14:46
116,2016-01-19 16:34:11,"https://github.com/loverajoel/jstips/pull/115 is closed, so I'll reopen this one.
",timbuckley,2016-01-19 17:14:46
116,2016-01-19 17:14:44,"Thanks
",loverajoel,2016-01-19 17:14:46
115,2016-01-19 16:06:28,,dggriffin,2016-01-19 16:24:14
114,2016-01-19 15:38:22,"For example, this line:

<S_CODE_TOKEN>

Rounding 1.999 should give 2, not 1. 1 is either flooring or truncating. And as the example shows that negative values are like `Math.ceil`, it means `~~` is only truncating.

Also, on another note, truncating could be done using `parseInt`, which is the cleaner way I think.
",malexandre,2016-01-28 21:29:17
114,2016-01-19 15:56:39,"@pklinger ping
",loverajoel,2016-01-28 21:29:17
114,2016-01-19 16:37:44,"> Also, on another note, truncating could be done using parseInt, which is the cleaner way I think.

No it's not. You run afoul of number vs. string representations, radix handling, etc.

The cleanest way to truncate a number is to [use the standard Math.trunc function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc), or polyfill it with the suggested implementation from Mozilla...
",rjgotten,2016-01-28 21:29:17
114,2016-01-19 16:43:16,"My bad, I forgot to check the Math functions, and just used my C habits (casting to int).
",malexandre,2016-01-28 21:29:17
114,2016-01-19 17:25:05,"@malexandre Ok, ""rounding"" is definitively wrong in the mathematical sense. What it really does is truncating and mimicing as explained in the text:

> making it a great tool to round towards 0. For numeric input, it therefore mimics the Math.ceil() for negative and Math.floor() for positive input

In the end, I guess people want to see some unknown, (more or less) useful tricks here. Not being 100% accurate on the title to have a use case, but brining across a new trick was my main intention here.
If you feel really disturbed by the title, issue a PR and correct it 'mathematically correct', yet exciting. I'm happy to see improvements, really.
Also,

<S_CODE_TOKEN>

needs a makeover saying `false` instead of `0` as it is comparing.
",pklinger,2016-01-28 21:29:17
113,2016-01-19 12:28:40,"I think the `in` operator increases readability.

https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/in
",dislick,2016-01-19 18:30:19
113,2016-01-19 12:35:50,"Personally I'd switch it to `if (colorObj[color])`.
",kurtextrem,2016-01-19 18:30:19
113,2016-01-19 17:43:53,"@AlbertoFuente ping
",loverajoel,2016-01-19 18:30:19
113,2016-01-19 18:28:19,"@dislick is a good improvement, also the one proposed by @kurtextrem, @loverajoel if you want to add it to the tip for me it's ok, thanks for improvements :+1: 
",AlbertoFuente,2016-01-19 18:30:19
113,2016-01-19 18:30:17,"@dislick @kurtextrem @AlbertoFuente thanks!
",loverajoel,2016-01-19 18:30:19
113,2016-01-20 12:28:36,"Relevant jsperf: http://jsperf.com/in-vs-array-syntax1/2
",kurtextrem,2016-01-19 18:30:19
112,2016-01-19 11:01:27,"""mentatory"" -> ""mandatory""
",PLNech,2016-01-19 17:43:15
112,2016-01-19 17:43:13,"Thanks
",loverajoel,2016-01-19 17:43:15
111,2016-01-19 10:33:16,,codeurge,2016-01-19 17:43:03
111,2016-01-19 17:43:01,"Thanks
",loverajoel,2016-01-19 17:43:03
110,2016-01-19 01:56:16,"‚Ä¶exception of the explanation on the differences of `=>` and `->`.

Minor spelling fixes.
",yird,2016-01-31 15:37:32
110,2016-01-19 17:42:39,"@pklinger ping
",loverajoel,2016-01-31 15:37:32
110,2016-01-19 17:56:57,"@Yird I'd say leave the title as it is (catchy) to draw attention and to keep the tip in memory, but change the rest of the article as you did.  Thanks for the PR.
",pklinger,2016-01-31 15:37:32
110,2016-01-27 02:34:11,"@Yird hey can you move this fix to the new file?
",loverajoel,2016-01-31 15:37:32
110,2016-01-27 04:19:12,"@pklinger @loverajoel Sorry it took a while to respond. Well the official name for it is just Arrow Function. Fat might be more catchy but I think these tips should be more accurate to the standard.
",yird,2016-01-31 15:37:32
109,2016-01-19 00:27:50,"Is  Pseudomentatory even a word? What does this mean?

I think the author meant pseudo-mandatory parameters?
",gihrig,2016-01-28 21:29:08
109,2016-01-19 00:32:04,"@gihrig It stems from the word `mentation`, meaning `mental activity; the result of`. 
",module17,2016-01-28 21:29:08
109,2016-01-19 02:36:19,"That doesn't fit the usage in the tip, making function parameters required, does it?
",gihrig,2016-01-28 21:29:08
108,2016-01-18 20:48:04,"@loverajoel @drakmail I know there was some discussion of Jekyll (or another static site generator), so I've parsed the individual tips into files with front matter than can be used with a site generator.

They are produced directly from the `README.md`, so the markdown is GFM, but I know that jekyll's native GFM support is not exactly one-to-one with the GFM that gets rendered through Github directly, so there may need to be some adjustments.
",rwoll,2016-01-24 15:57:47
108,2016-01-18 21:09:08,"Awesome!
",loverajoel,2016-01-24 15:57:47
108,2016-01-24 15:57:47,"hey @rwoll thanks for your work, I have to create [each file](https://github.com/loverajoel/jstips/tree/gh-pages/_posts/en) again because in the last time a lot of changes was applied hover the main readme. Now we support front-mattered js tips.

I will close this pr, but thanks again!
",loverajoel,2016-01-24 15:57:47
107,2016-01-18 20:41:09,":sunglasses: 
",davisonio,2016-01-18 21:09:42
107,2016-01-18 20:45:03,"Awesome :sunglasses: !
",drakmail,2016-01-18 21:09:42
107,2016-01-18 21:09:40,"woww!! thanks
",loverajoel,2016-01-18 21:09:42
107,2016-01-21 08:37:59,"awesome
",zzz6519003,2016-01-18 21:09:42
106,2016-01-18 20:10:08,,davegomez,2016-01-24 21:07:11
106,2016-01-19 01:54:04,"I like :skull: 
",homer0,2016-01-24 21:07:11
106,2016-01-24 17:26:29,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-01-24 21:07:11
106,2016-01-24 21:23:45,"üëçDone!
",davegomez,2016-01-24 21:07:11
105,2016-01-18 18:24:27,"If a tip is about performance it should really have numbers to back up its claim.
",timjrobinson,2016-03-05 05:26:08
105,2016-01-18 18:26:14,"@pklinger ping!
",loverajoel,2016-03-05 05:26:08
105,2016-01-18 19:34:04,"Hi, we've come across this previously @timjrobinson. Have a look at [this](http://rocha.la/JavaScript-bitwise-operators-in-practice) and  #85 . But I appreciate your PR for improvements.
",pklinger,2016-03-05 05:26:08
105,2016-01-18 20:18:33,"Sure any link is fine, just needs some benchmarks. 
",timjrobinson,2016-03-05 05:26:08
105,2016-01-18 20:29:15,"@timjrobinson also be aware of #104 latest results seem to differ from past tests
",pklinger,2016-03-05 05:26:08
105,2016-01-19 01:50:53,"I like this, even if you think you should always use `Math.floor` for better readability it's always nice to see the numbers: http://jmp.sh/4aUhv8H (Chrome, Firefox, Opera, Safari and iOS).

Also, the post on [rocha.la](http://rocha.la/JavaScript-bitwise-operators-in-practice) it's 4 years old, and being the discussion about performance, I don't think it's relevant.
",homer0,2016-03-05 05:26:08
105,2016-02-20 14:20:48,"@timjrobinson Can you please rebase your work? We can review and merge it then.
",zenopopovici,2016-03-05 05:26:08
104,2016-01-18 18:20:32,"made a quick [jsperf](http://jsperf.com/flooring-numbers-comparison)...

In this test, it looks like Math.floor is faster.
",jczimm,2016-01-28 21:28:53
104,2016-01-18 18:23:22,"@pklinger ping
",loverajoel,2016-01-28 21:28:53
104,2016-01-18 18:27:10,"Interesting ‚Äì¬†in safari 9 performance of `Math.floor()` is really ugly, but in Chrome it is fasted method :)
",drakmail,2016-01-28 21:28:53
104,2016-01-18 18:29:22,"Added firefox tests ‚Äì performance of all this methods is same in it
",drakmail,2016-01-28 21:28:53
104,2016-01-18 20:11:55,"huh interesting. have a look at #85 and the [link with past performances](https://github.com/loverajoel/jstips/pull/85#issuecomment-172122884). I only tested it with Chrome
",pklinger,2016-01-28 21:28:53
104,2016-01-19 15:57:34,"@jczimm 
@pklinger

> made a quick jsperf...

FYI: That test is no good.

Engines may memoize the results of a function when static code analysis shows that it is side-effect free and has deterministic output and when the same input is repeatedly fed into the function. That is exactly the case here: the test uses a single constant, picked before the clocked test loops, and the function under test produces deterministic results.

At the very least use a test that employs a function with side-effects. For instance; prepopulate an array of floating point numbers, where each value, when truncated to an integer, would point to the next index to pick from the array in a next iteration of the test.

However, you really should stop putting stock into micro-benchmarks like this altogether, because they've been proven time and again _TO - NOT - WORK_ with modern JS runtimes.
",rjgotten,2016-01-28 21:28:53
104,2016-01-19 18:09:40,"[updated jsperf with @rjgotten 's suggestion](http://jsperf.com/flooring-numbers-comparison/2)

Alright, looks about the same for all three methods.
",jczimm,2016-01-28 21:28:53
103,2016-01-18 17:42:15,,WMeldon,2016-01-18 17:43:08
103,2016-01-18 17:43:05,":+1: 
",loverajoel,2016-01-18 17:43:08
102,2016-01-18 15:59:36,"Return the object in the function to chain functions!
",WakeskaterX,2016-01-20 15:42:57
102,2016-01-19 01:58:02,"One small note; I know why you do the `self` but I don't think you need it for this snippet.

:skull: :)
",homer0,2016-01-20 15:42:57
102,2016-01-19 15:58:59,"Good point, force of habit.  I almost always do self to avoid any gotchas, but it simplifies the idea removing it :)
",WakeskaterX,2016-01-20 15:42:57
102,2016-01-20 15:49:14,"Thanks man!
",loverajoel,2016-01-20 15:42:57
101,2016-01-18 14:17:44,"I have issued a PR #100 that will help to start the formation of a repo that can continue to increase as the tips come in overt the year. My proposal has it where there is a 2016 directory with a README that has a link to each month for the year, and then a directory for each month inside of that directory that has a README for the tips of that month. This will help to keep the README to a minimum for just that month.
",pertrai1,2016-01-28 21:28:34
101,2016-01-18 18:30:31,"Seems very good! I think there a slightly better approach ‚Äì¬†keep one file per tip in month directory
",drakmail,2016-01-28 21:28:34
101,2016-01-18 18:36:38,"@drakmail So you are thinking of having something that would be like so:

<S_CODE_TOKEN>
",pertrai1,2016-01-28 21:28:34
101,2016-01-18 18:39:07,"@pertrai1 as mentioned in #13 it will be nice to have title in filename ‚Äì it could be easily converted to readable URL format in static site generators like Jekyll
",drakmail,2016-01-28 21:28:34
101,2016-01-18 18:40:42,"@drakmail yes I like that method much more.
",pertrai1,2016-01-28 21:28:34
101,2016-01-18 18:43:12,"Hey guys, we are talking about it in this issue #13.
Now I'm working in a jelly blog and the file organization will be like this 
![image](https://cloud.githubusercontent.com/assets/1700100/12399663/270b5c36-bdfa-11e5-8251-cbbd057b2d54.png)
https://github.com/barryclark/jekyll-now/tree/master/_posts
",loverajoel,2016-01-28 21:28:34
101,2016-01-18 18:46:41,"@loverajoel keeping eye on #13, but @pertrai1 suggested nice idea ‚Äì¬†doesn't keep all posts in just flat `_posts` directory, but keep it in structured sub-directories by months and years. Maybe, then move it in #13 and close this issue as duplicate?
",drakmail,2016-01-28 21:28:34
101,2016-01-18 18:49:07,"@drakmail yes, it's a good idea but I'm not sure if jelly allow me this organisation, I have to check it
",loverajoel,2016-01-28 21:28:34
101,2016-01-18 19:01:47,"If you are talking about [jekyll](https://jekyllrb.com) then yes, it allow usage of nested directory structure
",drakmail,2016-01-28 21:28:34
101,2016-01-18 19:10:13,"@drakmail yes, sorry! Awesome it's a deal!
",loverajoel,2016-01-28 21:28:34
101,2016-01-18 20:51:40,"I've made PR #108 which includes a `_posts` directory whose files are ready to be used with a static site generator like jekyll. There is also a template file in `_drafts` of the PR that shows the file I used to generate the posts.
",rwoll,2016-01-28 21:28:34
101,2016-01-18 20:54:05,"@rwoll awesome!!! I think that this week I can end the theme and create the blog, thanks
",loverajoel,2016-01-28 21:28:34
101,2016-01-18 21:05:02,"@loverajoel when you done you could use js2016.tips domain if you will use gh-pages branch, just let me know
",drakmail,2016-01-28 21:28:34
101,2016-01-19 01:19:56,"@loverajoel @drakmail @rwoll This is great. Let me know if there is any help needed with getting Jekyll up and running with gh-pages.
",pertrai1,2016-01-28 21:28:34
101,2016-01-24 16:04:09,"Hey finally the repo change the format, now the `master` branch is `gh-page` and it's live in jstips.co.

Feedback and suggestion are welcome
",loverajoel,2016-01-28 21:28:34
100,2016-01-18 14:11:12,"With more and more tips that come in, the README file will become very long. Breaking it up by year - month will allow for at max 31 tips to take up a README file.
",pertrai1,2016-01-18 21:11:53
100,2016-01-18 21:11:53,"@pertrai1 thanks for your suggestion, [this](https://github.com/loverajoel/jstips/pull/108) will be the final organisation 
",loverajoel,2016-01-18 21:11:53
99,2016-01-18 13:02:55,"Scales better, as we don't have to start adding more zeros once the tips will be over 100 or 1000..
",lipis,2016-01-24 16:00:46
99,2016-01-19 01:58:29,":+1: 
",homer0,2016-01-24 16:00:46
99,2016-01-24 16:00:44,"Hey @lipis the repo change the format, so I will close this pr, if you consider reopen again.

Thanks
",loverajoel,2016-01-24 16:00:46
98,2016-01-18 09:24:24,,yjcxy12,2016-01-18 13:35:47
98,2016-01-18 13:35:45,"thanks
",loverajoel,2016-01-18 13:35:47
97,2016-01-18 04:09:50,,elrrrrrrr,2016-01-19 05:41:24
97,2016-01-18 13:35:31,"@elrrrrrrr ping
",loverajoel,2016-01-19 05:41:24
97,2016-01-19 02:02:02,"Just to be annoying :P, would you mind adding an example where you would want to detect the module before requiring it?
",homer0,2016-01-19 05:41:24
97,2016-01-19 03:57:21,"@0xmtn  added function definition.
",elrrrrrrr,2016-01-19 05:41:24
97,2016-01-19 04:08:59,"@homer0   such as loading the ""~/config.js"" . 
",elrrrrrrr,2016-01-19 05:41:24
97,2016-01-19 04:54:02,"@elrrrrrrr ohh, sorry, I didn't understand it at first, by ""detect"", I thought you were saying that it knows if the module was loaded or not (yeah, the shame... I didn't went to the docs :P).

Please consider changing the _""you can detect a module before actually requiring it""_ to something like _""you can check if a module can be required or not""_; just a suggestion :P.

Other than the suggestion, :skull: like it!
",homer0,2016-01-19 05:41:24
96,2016-01-18 03:11:50,"There are many JS developers in China, and I, a tech discussion/sharing community host, want to help translate this great series of tips to a Chinese version.

Do we have any official guidelines for this?
",kalasoo,2016-03-05 05:13:23
96,2016-01-18 03:12:31,"https://github.com/loverajoel/jstips/pull/78
",hueitan,2016-03-05 05:13:23
96,2016-01-18 03:13:21,"@huei90 Thx
",kalasoo,2016-03-05 05:13:23
96,2016-01-18 03:17:36,"@huei90 it seems he hasn't started the work. We'll work on it asap
",kalasoo,2016-03-05 05:13:23
96,2016-01-18 09:28:19,"@kalasoo I have started with this. See https://github.com/fundon/jstips/blob/zh_CN/README-zh_CN.md.  

You can join this repo https://github.com/fundon/jstips. :)
",fundon,2016-03-05 05:13:23
96,2016-01-18 10:56:50,"@fundon Awesome, I will register a domain name to host a simple static website for this daily tip in two languages.
",kalasoo,2016-03-05 05:13:23
96,2016-01-18 12:38:54,"@kalasoo Cool! I added you to collaborators.
",fundon,2016-03-05 05:13:23
96,2016-01-19 02:29:09,"@fundon let's do it. Do you have a wechat account? u can add me: **kalasoo**
",kalasoo,2016-03-05 05:13:23
96,2016-01-19 02:32:30,"@kalasoo I'm working in a jekyllrb blog and I think that it will be done for this week
",loverajoel,2016-03-05 05:13:23
96,2016-01-19 02:36:20,"@loverajoel cool, we'll keep it simple and tidy to different language versions.
",kalasoo,2016-03-05 05:13:23
96,2016-01-19 02:50:28,"@kalasoo @fundon  I have in mind host all languages in the same site, just looking how to make jekyllrb multi-language.
Maybe I can add how collaborator one person by idiom in order to help me administer the project 
",loverajoel,2016-03-05 05:13:23
96,2016-01-19 02:53:05,"@loverajoel There's no problem hosting it in the same site. As I have registered jstips.cn already, we can host it separately but mutually linked.
",kalasoo,2016-03-05 05:13:23
96,2016-01-19 02:54:27,"@loverajoel Of course, the content should synced with the main site.
",kalasoo,2016-03-05 05:13:23
96,2016-01-19 02:57:55,"@kalasoo Do you have in mind how to organice the repo in two languages or more? 
These are options:
https://github.com/octopress/multilingual
https://github.com/drallgood/jekyll-multilingual
",loverajoel,2016-03-05 05:13:23
96,2016-01-19 02:59:53,"This one is good https://www.sylvaindurand.org/making-jekyll-multilingual/
",loverajoel,2016-03-05 05:13:23
96,2016-01-19 03:11:04,"@loverajoel I haven't used Jekyll before (#GhostLover), so I may need to learn it as well.
",kalasoo,2016-03-05 05:13:23
96,2016-01-19 06:30:27,"Now that you mentioned it, I am willing to translate these tips to portuguese from Brazil in case nobody have done it yet. Just document the patterns on how to do it :)
",FagnerMartinsBrack,2016-03-05 05:13:23
96,2016-01-19 07:52:05,"@kalasoo It shouldn't be an issue as long as someone is willing to do it. However I assume the English is relatively simple here.
",LiYongSheldon,2016-03-05 05:13:23
96,2016-01-19 13:23:07,"@FagnerMartinsBrack good idea, at the end of the week I will have the theme and basic structure that support multi-language done, I will back here with more info
",loverajoel,2016-03-05 05:13:23
96,2016-01-19 13:32:15,"@LiYongSheldon agree. Basically, it's more important to publish the content with a website & newsletter to help people approach it easily. Also, keep the credit to the contributors.
",kalasoo,2016-03-05 05:13:23
96,2016-01-19 14:23:40,"@loverajoel Looking forward to it :)
",FagnerMartinsBrack,2016-03-05 05:13:23
96,2016-01-20 08:07:53,"I really love this repo and it would be awesome to world spread it in most of the common idioms!
Maybe I can give you a hand with Spanish translate?
",frikinside,2016-03-05 05:13:23
96,2016-01-20 08:19:26,"I could help to translate it to Russian :)
",drakmail,2016-03-05 05:13:23
96,2016-01-20 13:50:58,"@frikinside @drakmail +1
",loverajoel,2016-03-05 05:13:23
96,2016-01-24 21:37:03,"I can help with the Italian translation. Let me know when you have a structure to do so :+1: 
",LorenzoRogai,2016-03-05 05:13:23
96,2016-01-25 13:14:00,"@loonies in order to start, create a folder for you language (`en`,  `es`,  `cn`, `it`) and start to translate every tip, meanwhile I will adapt the theme
",loverajoel,2016-03-05 05:13:23
96,2016-01-25 14:26:19,"@LorenzoRogai, @loverajoel is probably replying to you
",loonies,2016-03-05 05:13:23
96,2016-01-25 18:30:53,"@loverajoel @loonies I'm working on it
",LorenzoRogai,2016-03-05 05:13:23
95,2016-01-18 02:41:40,"I tried (and failed) to set up an index/toc. I couldn't get the link from my toc to link to the id of the tip. This would be a good feature.
",joshbivens,2016-01-24 16:04:45
95,2016-01-18 19:34:13,"@joshbivens I agree and have suggested a structure for how the tips are help inside of the repo to then be used with the likes of Jekyll. #101 
",pertrai1,2016-01-24 16:04:45
95,2016-01-20 17:05:29,"Yes! That would be cool. Much better than one _long_ document.
",joshbivens,2016-01-24 16:04:45
95,2016-01-24 16:04:44,"@joshbivens hey now we have this [here](https://github.com/loverajoel/jstips#tips-list)

Thanks
",loverajoel,2016-01-24 16:04:45
94,2016-01-18 01:37:15,,wujichao,2016-01-18 21:15:10
94,2016-01-18 21:15:08,"thanks
",loverajoel,2016-01-18 21:15:10
93,2016-01-18 00:44:10,"fixed minor spelling errors. Changed ""fat arrow functions"" to just ""Arrow functions"" with the exception of the explanation on the differences of `=>` and `->`.
",yird,2016-01-24 16:01:37
93,2016-01-18 21:15:46,"can you make a mergeback and squash your commits?
",loverajoel,2016-01-24 16:01:37
93,2016-01-24 16:01:37,"Close by inactivity and the repo changed format
",loverajoel,2016-01-24 16:01:37
92,2016-01-17 18:06:03,,Cretezy,2016-01-18 20:51:22
92,2016-01-17 18:07:05,"See https://github.com/loverajoel/jstips/pull/87 :)
",drakmail,2016-01-18 20:51:22
91,2016-01-17 07:54:40,,mallowigi,2016-02-06 23:09:43
91,2016-01-17 09:10:24,"I'd say keep the text general and not personal (so: ""Many don't know that, but it is "" -> ""It is"").
""It is not even a feature of ES6 (ES2015) since it was defined in ES5.1."" sounds like it was defined in 5.1 but removed again in ES6. Better would be: ""The feature is available since ES5.1"" (or maybe just leave this out)

Apart from that, nice tip! :+1: 
",kurtextrem,2016-02-06 23:09:43
91,2016-01-22 13:38:57,"@mallowigi hey can you add link to official documentation?
",loverajoel,2016-02-06 23:09:43
91,2016-01-24 17:24:49,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-02-06 23:09:43
91,2016-01-31 15:36:07,"@mallowigi I like this tips, can you update the format?
",loverajoel,2016-02-06 23:09:43
90,2016-01-17 07:29:16,"Added link in tip #54 , as why `typeof null === 'object'`.
",bhaskarmelkani,2016-01-18 01:05:25
90,2016-01-18 01:05:23,"Thanks!
",loverajoel,2016-01-18 01:05:25
89,2016-01-16 21:26:33,,bhaskarmelkani,2016-01-25 16:02:10
89,2016-01-16 21:36:40,"I'm not sure if this is a ""tip"". It doesn't give any concrete example how this improves your code. If you find some fancy function where jQuery applies that (or some other framework) and add that to your tip it would be more helpful.

My comment is not meant to offend.
",kurtextrem,2016-01-25 16:02:10
89,2016-01-17 06:59:57,"Great, will check if I can make it helpful in some way. Also, will take care of this for my next contributions.

Thanks a lot for a prompt response :).
",bhaskarmelkani,2016-01-25 16:02:10
89,2016-01-17 22:55:41,"Just out of curiosity. Recently I was developing an object oriented response for a unit-test module where I ended up using currying as a setter for changing a specific object property. I had this response that were used in several parts of my test and I wanted to keep it DRY due to the huge ammount of repetitive calls:

<S_CODE_TOKEN>

Detailed fiddle: https://jsfiddle.net/bheqfbhf/2/

Just ignore the obvious flaws, like of assigning a cross-instance property to the function reference or depending upon the variable name that is declared. It is at least an interesting use case to be explored because it allows customizing other inputs later without changing any code.
",FagnerMartinsBrack,2016-01-25 16:02:10
89,2016-01-24 17:24:30,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-01-25 16:02:10
89,2016-01-25 16:02:10,"Closing this in favor #167 
",bhaskarmelkani,2016-01-25 16:02:10
88,2016-01-16 21:15:29,,drakmail,2016-01-24 15:58:32
88,2016-01-18 00:14:24,":+1:
",pklinger,2016-01-24 15:58:32
88,2016-01-24 15:58:32,"@pklinger hey I close this pr, I added this [here](https://github.com/loverajoel/jstips#lets-keep-in-touch)

Thanks
",loverajoel,2016-01-24 15:58:32
87,2016-01-16 17:37:41,"A little numeration fix for the latest tip, it has to be the 16th
",x87,2016-01-18 01:04:13
87,2016-01-17 07:48:34,":+1: 
",ceoaliongroo,2016-01-18 01:04:13
87,2016-01-18 01:04:08,"üò±thanks
",loverajoel,2016-01-18 01:04:13
86,2016-01-16 04:21:12,,jhogoforbroke,2016-01-16 04:23:28
86,2016-01-16 04:23:25,"awesome!
",loverajoel,2016-01-16 04:23:28
86,2016-01-16 04:25:48,":thumbsup:
",jhogoforbroke,2016-01-16 04:23:28
85,2016-01-15 20:09:39,,pklinger,2016-01-18 16:48:16
85,2016-01-15 20:39:55,"Wow, nice tip
",drakmail,2016-01-18 16:48:16
85,2016-01-15 22:51:11,"Wow, do you know something about don't use `~~` in chrome?
",loverajoel,2016-01-18 16:48:16
85,2016-01-15 22:56:22,"Awesome! Maybe it doesn't improve code readability, but it could be useful sometimes.
",parro-it,2016-01-18 16:48:16
85,2016-01-15 23:11:09,"Yes @loverajoel i've found this here: http://rocha.la/JavaScript-bitwise-operators-in-practice
There are quite some differences amongst the browsers according to the source. Newer browser performance tests even out pretty much... The tip should in fact just save you from one of those ""what the fuck does '~~' do??!"" moments. I would never ever use this in shared code/projects as ~~ is just not as mnemonic as Math.floor(). As we all know, maintaining code is most expensive, so just avoid it and rather write proper 'understandable' code as long as you don't need some performance gains.
",pklinger,2016-01-18 16:48:16
85,2016-01-16 10:53:44,"It should be noted that operation is clipped to 32 bits integers.
So largest number that can be converted that way is 2147483647.

<S_CODE_TOKEN>
",gmarketer,2016-01-18 16:48:16
85,2016-01-18 00:17:09,"I should elaborate more on that in another sentence, thanks for the tip. @gmarketer 
",pklinger,2016-01-18 16:48:16
85,2016-01-18 15:30:28,"make a merge back, and if you can, please squash your commits at the end
",loverajoel,2016-01-18 16:48:16
85,2016-01-18 16:24:45,"merged. squashing fails constantly :disappointed: 
",pklinger,2016-01-18 16:48:16
85,2016-01-18 16:42:46,"@pklinger awesome! don't worry about it 
",loverajoel,2016-01-18 16:48:16
85,2016-01-18 16:49:07,"@pklinger hey do you have twitter account?
",loverajoel,2016-01-18 16:48:16
85,2016-01-18 16:59:58,"@loverajoel yes, I do. But I'm more on the 'consumer side' ... https://twitter.com/codebusiness
",pklinger,2016-01-18 16:48:16
85,2016-01-18 17:01:56,"@pklinger perfect! Thanks for you awesome tips man!
",loverajoel,2016-01-18 16:48:16
85,2016-01-18 17:08:41,"Everybody just gives a bit and everybody may profit. Thank you for your time you put in here managing it all @loverajoel :clap: 
",pklinger,2016-01-18 16:48:16
85,2016-01-20 09:46:02,"AFAIK, asm.js use `x|0` for that which also cast to a 32 bits integer and consist of only one operation instead of two.
",julien-f,2016-01-18 16:48:16
84,2016-01-15 17:03:14,,drakmail,2016-01-15 17:24:19
84,2016-01-15 17:24:18,"Thanks
",loverajoel,2016-01-15 17:24:19
83,2016-01-15 12:09:50,"sources
- https://en.wikipedia.org/wiki/JavaScript
- http://dictionary.reference.com/browse/javascript
",sonnyp,2016-01-15 21:34:20
83,2016-01-15 21:34:17,":+1: 
",loverajoel,2016-01-15 21:34:20
82,2016-01-15 06:37:56,"add new tip about angularjs $scope.on() and $rootScope.on()
",xiaoyu5256,2016-03-05 05:26:25
82,2016-01-15 07:03:30,"But angular 2 going to all angular 1 stuff like scope and all... So I think planning for angular 2 will be useful than angular 1.. And let know what other people thinks about this...
",shivarajnaidu,2016-03-05 05:26:25
82,2016-01-24 17:24:22,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-03-05 05:26:25
82,2016-01-25 00:10:34,"@loverajoel  ok,I will update it.
",xiaoyu5256,2016-03-05 05:26:25
81,2016-01-15 02:58:10,,toplan,2016-01-15 03:05:49
81,2016-01-15 03:05:47,"Thanks
",loverajoel,2016-01-15 03:05:49
81,2016-01-15 16:13:00,"@toplan thx. that slipped through
",pklinger,2016-01-15 03:05:49
80,2016-01-14 16:58:54,"Safe replacement with VIM

<S_CODE_TOKEN>
",wizawu,2016-01-14 17:02:05
79,2016-01-14 16:58:31,"> The stakes at risk if you inaccurately explain the => behavior for this are that you end up thinking things like, ‚Äúarrow functions are just syntax sugar for function‚Ä¶‚Äù They clearly are not. Nor are they sugar for var self = this or .bind(this).

http://blog.getify.com/arrow-this/
",gmarketer,2016-01-28 21:28:20
79,2016-01-14 17:43:59,"@pklinger ping
",loverajoel,2016-01-28 21:28:20
79,2016-01-14 22:15:33,"@gmarketer Thank you for the interesting hint. Could you please give concrete improvement tips? Or add another example that clarifies the issue better?
",pklinger,2016-01-28 21:28:20
79,2016-01-15 06:26:14,"Very good tip, That's just tip, not PhD paper, after all. Some nuances always will be, I guess. Add link to a further reading. 
",qaraluch,2016-01-28 21:28:20
78,2016-01-14 03:45:37,,fundon,2016-02-25 14:24:39
78,2016-01-14 03:50:54,"Wowww!!!
",loverajoel,2016-02-25 14:24:39
78,2016-01-21 12:45:51,"Hey you should be in sync https://github.com/loverajoel/jstips/pull/134
",loverajoel,2016-02-25 14:24:39
78,2016-01-24 11:48:07,"Ok, i will.
",fundon,2016-02-25 14:24:39
78,2016-02-25 14:24:39,"closed by duplicate 
",loverajoel,2016-02-25 14:24:39
77,2016-01-13 16:02:08,,soyuka,2016-01-15 21:35:32
77,2016-01-15 21:35:31,"thanks
",loverajoel,2016-01-15 21:35:32
76,2016-01-13 11:08:02,"Signed off by Minhaz A V minhazav@gmail.com
",mebjas,2016-01-16 16:07:27
76,2016-01-13 19:38:51,":+1: 
",tevko,2016-01-16 16:07:27
76,2016-01-13 22:01:49,"@mebjas good tip, but I think that closures deserves a tip itself, what do you think about split this tip in arguments and closures and add more context to them?
",loverajoel,2016-01-16 16:07:27
76,2016-01-14 07:53:40,"Yeah, that sounds good. We should first have a tip about `closures` then `arguments` using them.
",mebjas,2016-01-16 16:07:27
76,2016-01-14 07:59:30,"What do you think should be done? - change this pull to closure one? or both closure and arguments in one tip? @loverajoel 
",mebjas,2016-01-16 16:07:27
76,2016-01-14 16:08:34,"Please use 2 spaces tabulations
",soyuka,2016-01-16 16:07:27
76,2016-01-16 15:46:42,"@mebjas hey can you make merge back? I cant merge this
",loverajoel,2016-01-16 16:07:27
76,2016-01-16 16:04:58,"Done @loverajoel 
",mebjas,2016-01-16 16:07:27
76,2016-01-16 16:07:17,"@mebjas thanks
",loverajoel,2016-01-16 16:07:27
76,2016-01-16 16:08:45,"What about tip no - 16?
",mebjas,2016-01-16 16:07:27
75,2016-01-13 08:01:00,,syaning,2016-01-24 15:59:16
75,2016-01-24 15:59:16,"Hey @syaning I added this [here](https://github.com/loverajoel/jstips#tips-list)
Thanks for your help!
",loverajoel,2016-01-24 15:59:16
74,2016-01-13 02:42:15,"Fix extra spaces in tip 12
",xcatliu,2016-01-13 22:03:05
74,2016-01-13 22:03:03,"thanks
",loverajoel,2016-01-13 22:03:05
73,2016-01-13 00:52:45,"Added tip on ES6 destructuring. 
",webb04,2016-02-20 16:40:19
73,2016-01-13 02:22:58,"@webb04 nice tip and so clear
",loverajoel,2016-02-20 16:40:19
73,2016-01-13 07:04:04,"Is basic ES6 functionality really a good idea for tips?
",Havvy,2016-02-20 16:40:19
73,2016-01-15 01:50:01,"@webb04 ping!
",loverajoel,2016-02-20 16:40:19
73,2016-01-18 08:36:12,"This functionality only available in chrome 49 (dev channel). I think this tip is a little early
",Kerndog73,2016-02-20 16:40:19
73,2016-01-24 17:24:13,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-02-20 16:40:19
73,2016-02-20 14:22:29,"@webb04 Please update the PR.
",zenopopovici,2016-02-20 16:40:19
73,2016-02-20 15:44:17,"@zenopopovici Hi, this has been replaced by #159
",webb04,2016-02-20 16:40:19
73,2016-02-20 16:40:19,"Thank you @webb04!
",zenopopovici,2016-02-20 16:40:19
72,2016-01-12 20:24:25,"accidentially closed the last PR #71 
",pklinger,2016-01-14 15:40:02
72,2016-01-12 20:30:11,":cry: I just leaved some comments there...
",parro-it,2016-01-14 15:40:02
72,2016-01-12 20:37:23,"Thanks for the input in #71 , i'll also follow those comments.
",pklinger,2016-01-14 15:40:02
72,2016-01-12 20:43:46,"You're welcome!
",parro-it,2016-01-14 15:40:02
72,2016-01-13 07:04:34,"Is it a good idea to make tips based on basic ES6 syntax?
",Havvy,2016-01-14 15:40:02
72,2016-01-13 11:57:40,"I would say yes, i think the most people who're listening to jstips have already heard of ES6.. and if we make a note ""This tip is ES6 Only"" it should be clear - also the guys they're not using ES6 can learn step by step the advantages of the new standard.
",michaelzoidl,2016-01-14 15:40:02
72,2016-01-13 12:03:06,"I'd rather see ways that arrow functions can be used to do something cool, like that required argument default value thing (which honestly made me shudder, but it was still cool) - not something I can find out by going to MDN and reading the article on arrow functions, or destructuring, or anything else similar.
",Havvy,2016-01-14 15:40:02
72,2016-01-13 12:05:26,"@Havvy I agree with you
",parro-it,2016-01-14 15:40:02
72,2016-01-13 13:08:23,"Yes , es6 will be great thing to know
",shivarajnaidu,2016-01-14 15:40:02
72,2016-01-13 16:58:41,"@Havvy I agree with you, this one and #73 are basic ES6 syntax that you will have to learn.
",homer0,2016-01-14 15:40:02
72,2016-01-13 19:47:20,"I guess there is a a broad audience and not everybody is on the same level here. Compared to other already published submissions like tip 9 or 11, this is also one of the 'basic' tips. Count yourselves amongst the lucky ones if you are already familiar with ES6 - but I guess there are plenty of readers that are not aware of the new standard and common pitfalls coming alongside like scoping issues in this tip.
",pklinger,2016-01-14 15:40:02
72,2016-01-13 23:04:31,"@pklinger after changes please, squash your commits
",loverajoel,2016-01-14 15:40:02
72,2016-01-14 00:53:49,"@loverajoel done
",pklinger,2016-01-14 15:40:02
72,2016-01-14 00:59:52,"@pklinger hey you have to do a merge back or rebase
",loverajoel,2016-01-14 15:40:02
72,2016-01-14 01:23:30,"@loverajoel thanks for notifying, missed the latest updates. should be resolved now
",pklinger,2016-01-14 15:40:02
72,2016-01-14 15:49:29,"@pklinger super cool tip, thanks for your contribution!
",loverajoel,2016-01-14 15:40:02
71,2016-01-12 20:07:20,"Please review and give some tips for improvements, thanks!
",pklinger,2016-01-12 20:17:43
70,2016-01-12 15:02:48,"In addition to Twitter, it would be nice to receive a tip in a daily email.
",mnort9,2016-01-13 23:10:37
70,2016-01-12 15:26:46,"+1
",michaelzoidl,2016-01-13 23:10:37
70,2016-01-12 15:35:47,":+1: 
",drakmail,2016-01-13 23:10:37
70,2016-01-12 15:44:44,"@mnort9 What is the twitter handle?
",rocketinventor,2016-01-13 23:10:37
70,2016-01-12 16:49:47,"@tips_js
",mnort9,2016-01-13 23:10:37
70,2016-01-12 16:50:52,"Might be able to use something simple like IFTTT:
https://ifttt.com/recipes/234075-new-tweet-by-specific-user-send-me-an-email
",mnort9,2016-01-13 23:10:37
70,2016-01-13 04:38:06,"I think a mailer should have the full tip text _plus_ a link to github, not just a link to github and a title.
",rocketinventor,2016-01-13 23:10:37
70,2016-01-13 12:46:37,"+1
",qaraluch,2016-01-13 23:10:37
70,2016-01-13 13:06:14,"+1
",barryceelen,2016-01-13 23:10:37
70,2016-01-13 13:56:18,"+1
",FoxxMD,2016-01-13 23:10:37
70,2016-01-13 15:08:42,"I'm created a Mailchimp campaign for anyone who want to receive latest js tip every day.

You can sign up here: http://js2016.tips
",drakmail,2016-01-13 23:10:37
70,2016-01-13 15:15:31,"@drakmail Wowww that's awesome and the domain too
",loverajoel,2016-01-13 23:10:37
70,2016-01-13 15:26:52,"Nice, that is exactly what I was hoping for!
",rocketinventor,2016-01-13 23:10:37
70,2016-01-13 17:59:46,"Also it would be incredible if there was an RSS feed :)
",habfast,2016-01-13 23:10:37
70,2016-01-13 18:01:40,"@habfast I'm working on this :+1: 
",loverajoel,2016-01-13 23:10:37
70,2016-01-13 18:28:16,"Thank you all for feedback, send first Daily JS Tip to 16 subscribers :)
",drakmail,2016-01-13 23:10:37
70,2016-01-13 18:30:47,"@habfast Mailchimp automatically creates RSS feed: http://us12.campaign-archive1.com/feed?u=91c81a54b7387a056b046a2ca&id=9551be788c , you could use it :)
",drakmail,2016-01-13 23:10:37
70,2016-01-13 22:00:30,"Oh that's great, thanks! However the layout is quite broken in the feedbin webapp (but fine in reeder).
",habfast,2016-01-13 23:10:37
70,2016-03-04 02:20:12,"@drakmail Mysteriously, I suddenly stopped receiving tip emails after February 18. An ideas why?
",rocketinventor,2016-01-13 23:10:37
70,2016-03-04 05:50:18,"We've switched from daily to ""higher quality through reviews first"" meaning
there won't be daily tips, but instead from time to time.
Am 04.03.2016 03:20 schrieb ""Elliot Gerchak"" notifications@github.com:

> @drakmail https://github.com/drakmail Mysteriously, I suddenly stopped
> receiving tip emails after February 18. An ideas why?
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/loverajoel/jstips/issues/70#issuecomment-192064822.
",kurtextrem,2016-01-13 23:10:37
70,2016-03-08 17:46:51,"@rocketinventor after switching from not a daily tips I got a small vacation :relaxed: Starting tomorrow I'll continue sending tips. But it will be sent according to new js tips policy, as @kurtextrem mentioned before.
",drakmail,2016-01-13 23:10:37
69,2016-01-12 05:37:21,"I know of several different ways to show loading images during Ajax calls, but would like to know the method most preferred for maintainability and performance.
",Awakens,2016-05-06 15:01:23
69,2016-01-13 21:14:50,"Personaly I would with pleasure <3
",alexanderisora,2016-05-06 15:01:23
69,2016-03-05 05:14:10,"@Awakens ping!
",loverajoel,2016-05-06 15:01:23
69,2016-05-06 15:01:23,"Closed due to inactivity.
",zenopopovici,2016-05-06 15:01:23
68,2016-01-12 03:24:16,"var debug = function(){console.log(arguments);};

<S_CODE_TOKEN>

Please update if you feel any other format?
Make sure, If you prefer using prototype Why?

thnx.
",jknaresh,2016-03-05 05:14:17
68,2016-01-12 03:47:59,"@jknaresh it's hard to read :)  you can format your snippet with markdown.
",hingsir,2016-03-05 05:14:17
68,2016-01-13 07:12:41,"This is ultimately bikeshedding.

If you have ES6 and like the `class` keyword, use that.

I prefer calling Object.create() in the ""constructor"" function instead of dealing with `new` and `this`. They don't buy me anything but they do confuse newbies (and people who don't want to figure out how `this` works), but Object.create() is mostly obvious.
",Havvy,2016-03-05 05:14:17
68,2016-01-13 16:35:27,"@Havvy Can you give an reference URL?
",jknaresh,2016-03-05 05:14:17
68,2016-01-13 18:31:39,"Es6 classes. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes

<S_CODE_TOKEN>
",shivarajnaidu,2016-03-05 05:14:17
68,2016-01-18 08:39:38,"Use ES6 syntax. It's the standard. The old syntax is kind of confusing to new comers anyway. 
",Kerndog73,2016-03-05 05:14:17
68,2016-01-18 09:11:38,"Please add es6 classes to first option.. Because they are new ,easy to use and clear 
",shivarajnaidu,2016-03-05 05:14:17
68,2016-01-18 09:15:02,"Above models seems varients of same thing .. Not fair to use.  Confusing thing to newbies
",shivarajnaidu,2016-03-05 05:14:17
68,2016-01-18 09:30:53,"@shivarajnaidu üëç
",Kerndog73,2016-03-05 05:14:17
68,2016-01-18 12:28:04,"Like @shivarajnaidu, this is what I use (ES6):

<S_CODE_TOKEN>

<S_CODE_TOKEN>

And later on...

<S_CODE_TOKEN>

https://github.com/lukehoban/es6features#classes
",baptistebriel,2016-03-05 05:14:17
68,2016-01-19 20:09:08,"The best way to write ""classes"" in javascript is avoid `class` keyword and constructors, instead you should prefer factory functions for that.
",joseluisq,2016-03-05 05:14:17
68,2016-01-19 21:40:05,"@joseluisq the class keyword is syntactical sugar over the existing prototype system. So when you use the clear and easy to understand class syntax you are still using the same prototype stuff. There is absolutely no advantage to using prototype syntax
",Kerndog73,2016-03-05 05:14:17
68,2016-01-19 21:43:01,"Tell em @shivarajnaidu and @baptistebriel
",Kerndog73,2016-03-05 05:14:17
68,2016-01-19 21:49:17,"@Kerndog73 yep, sorry it was corrected now. Also It should prefer Composition instead ""Inheritance"".
",joseluisq,2016-03-05 05:14:17
68,2016-01-20 06:25:30,"Thanks for your support @Kerndog73  and @baptistebriel , we can make use of `Default parameters` feature to avoid  `this.options = opt || {};` in above code @baptistebriel 
**we can initialize function parameters using `default parameters` feature in es6**

<S_CODE_TOKEN>

_**This is small enhancement**_ @baptistebriel 
[**See Default parameters in Mozilla Developer Network**](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters)
",shivarajnaidu,2016-03-05 05:14:17
68,2016-01-20 07:50:34,"_**Below article gives a great explanation about classes and the reason to use them instead of using old es5 hacks**_
**see here**
<br/>
[_**`Object-Oriented JavaScript ‚Äî A Deep Dive into ES6 Classes`**_](http://www.sitepoint.com/object-oriented-javascript-deep-dive-es6-classes/)
and
[_**`ES6 Classes in MDN`**_](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes)
",shivarajnaidu,2016-03-05 05:14:17
68,2016-01-20 08:39:43,"Nice one, @shivarajnaidu :)
Thanks for the links!
",baptistebriel,2016-03-05 05:14:17
68,2016-01-28 21:28:01,"Hey [this](https://medium.com/@dan_abramov/how-to-use-classes-and-sleep-at-night-9af8de78ccb4#.wqb6sannb) a good article about this
",loverajoel,2016-03-05 05:14:17
67,2016-01-11 17:58:36,,alawatthe,2016-01-11 18:32:46
67,2016-01-11 18:32:45,"true, thanks
",loverajoel,2016-01-11 18:32:46
66,2016-01-11 12:31:44,"The question of the tip is formatted as follows:

> How can we improve and make more efficient nested if statement in javascript.
> 
> <S_CODE_TOKEN>

With the given information (the if-clause and the function names), the most obvious choice would be _just to refactor the functions itself_

<S_CODE_TOKEN>

which is a good tip in itself, but maybe not in the same vain the original #03 is. Obviously this isn't always possible (or feasible) with all of the cases, so the example could be / should be easily modified to something that looks more non-trivial :smile_cat: 
",petetnt,2016-03-05 05:14:26
66,2016-01-28 21:26:57,"@AlbertoFuente ping!
",loverajoel,2016-03-05 05:14:26
66,2016-01-29 16:16:54,"Can we make use of functions ,for loop and if combination.. For if we provided with too much number of choices ? 
How about this dears ? :smile:
",shivarajnaidu,2016-03-05 05:14:26
66,2016-01-29 16:17:44,"Or can we use switch case ??
",shivarajnaidu,2016-03-05 05:14:26
66,2016-02-19 22:11:14,"A function would be the most obvious choice here. Switch can work too, but in this case it should be a function. 
@petetnt Can you add a PR that completes the example with a function as you suggested?
",zenopopovici,2016-03-05 05:14:26
66,2016-03-05 09:15:38,"Whoops @zenopopovici missed that @-mention and did see it until this was closed. I can scratch up a PR though now quickly :+1: 
",petetnt,2016-03-05 05:14:26
65,2016-01-11 07:09:58,"Array.from()
",PWAckerman,2016-01-28 21:26:26
64,2016-01-11 05:22:47,"Tip #9 mentions tagged template strings and links to the MDN page for template strings. I made the link point specifically to the Tagged Template Strings section on that page.
",dar5hak,2016-01-11 21:08:00
64,2016-01-11 13:06:42,"@JakeRawr ping
",loverajoel,2016-01-11 21:08:00
64,2016-01-11 17:31:13,"That's better. Thanks
",JakeRawr,2016-01-11 21:08:00
63,2016-01-11 04:38:44,"Add a new method to convert a Node List to an Array
",chen844033231,2016-01-12 05:51:35
63,2016-01-11 21:07:30,"@tevko ping
",loverajoel,2016-01-12 05:51:35
62,2016-01-11 03:59:39,"In example you have this object

<S_CODE_TOKEN>

and this check

<S_CODE_TOKEN>

and then these words saying that that kind of check is ok.

> Thats ok, but you have to know that there are two native methods for this kind of thing

Actually it is not ok, consider this example:

<S_CODE_TOKEN>

Which clearly shows that `typeof myObject['name'] === 'undefined'` is not checking existence of property, but checks type of that property value
",ihorskyi,2016-03-05 05:14:37
62,2016-01-11 06:15:08,"@igor-galchevsky In practice, a variable (or property) that exists should not be set to undefined so what difference does it make?
![undefined_js](https://cloud.githubusercontent.com/assets/6473114/12227852/4081b1aa-b801-11e5-955d-a831985f0408.png)
If it is set as undefined, it was probably suppose to not exist anyways, right?
",rocketinventor,2016-03-05 05:14:37
62,2016-01-11 06:38:01,"@rocketinventor, in practice I saw lot of people with more than 3 years JS experience setting undefined to property meaning it is empty. And also tons of other mistakes that should not be done.

So if you want to say it is a right way to assign **null** to param when you want to say it is empty - that's correct, if you want to say it is a good practice - also correct, but saying:
1. You shall **never expect** in practice someone assign **undefined** meaning property is empty
2. `typeof myObject['name'] === 'undefined'` is ok to check that property exist

is completely wrong, especially when inexperienced rookies reading these JS tips and have at least few places in their code where they assign undefined
",ihorskyi,2016-03-05 05:14:37
62,2016-01-12 07:38:27,"@igor-galchevsky: you have a valid point, but the problem you've raised also applies to the other mentioned methods.
E.g.

<S_CODE_TOKEN>

If you look at the ECMAScript source code, the hasOwnProperty method is ultimately checking for undefined.

I will add to this point though, that it is often agreed that native JavaScript methods are slower than doing the check yourself. There's quite a lot of extra handling that goes on in the `hasOwnProperty` method that isn't needed if you're just checking the property against undefined.

@loverajoel: A small point that may be worth mentioning about this as well. If you use `hasOwnProperty` on the window in IE7, it errors. 
",mynamesleon,2016-03-05 05:14:37
62,2016-01-12 15:30:46,"Why don't we write up a tip for this, then?
Obviously, this is something people need to know.
Also, @igor-galchevsky When is this a problem?
",rocketinventor,2016-03-05 05:14:37
62,2016-01-12 17:52:53,"@rocketinventor, what do you mean ""when"" ? :)
",ihorskyi,2016-03-05 05:14:37
62,2016-01-12 22:38:51,"my two cents => https://gist.github.com/dfkaye/c4da8da17b03f5fad4ff
",dfkaye,2016-03-05 05:14:37
62,2016-01-13 01:36:33,"I think that the discussion here is if people define empty vars as `null` or `undefined`.
The mistake is set `undefined` an empty `var`, if you don't do it, the expression will work.
Maybe we can fix the tip and add a message indicating that common mistake or you can send another tip talking about how to set empty vars :hand: 
What do you think?

Thanks for this rich discussion :smile:  
",loverajoel,2016-03-05 05:14:37
62,2016-01-13 02:23:29,"It is definitely not ok to use `typeof myObject['name'] !== 'undefined'` to check if a property is present in an object.

Regarding setting empty references:
- `typeof` is broken.
- JavaScript uses `null` for functions that should return a single element contract but returns nothing instead (`document.getElementById('')`).
- JavaScript uses `undefined` for values or properties that are not defined (`document.getNothing`).
- `undefined` can be better minified by assigning into an undefined variable in scope, so it makes sense using with the same semantic as `null` in certain circumstances to save bytes:

<S_CODE_TOKEN>
- Imperative definition of when to use `null` or `undefined` enters the ""space vs tabs"" domain of bikeshedding and has no value as a tip because it depends upon context and project specific tradeoffs.
",FagnerMartinsBrack,2016-03-05 05:14:37
62,2016-01-13 02:33:53,"@FagnerMartinsBrack I'm not agree with your last point and why do you says that `typeof` is broken for empty references?

I will make a pr and remove this check and add a link to this discussion.
",loverajoel,2016-03-05 05:14:37
62,2016-01-13 05:01:01,"If I understand the complaint, it's that `typeof o['name'] !== 'undefined'` is not a proper _existence_ check, but a _value_ check disguised as a _type_ check.  If you define something as `null`, its type will be `'object'`

<S_CODE_TOKEN>
",dfkaye,2016-03-05 05:14:37
62,2016-01-13 05:32:50,"fixed https://github.com/loverajoel/jstips/commit/d8859672e97458f2f566b096caba22a26fdccbfc
",loverajoel,2016-03-05 05:14:37
62,2016-01-13 05:33:27,"@dfkaye that's right. My point is that it is just unsafe to check property existence using `typeof myObject['name'] !== 'undefined'`. 
",ihorskyi,2016-03-05 05:14:37
62,2016-01-13 05:38:16,"@loverajoel @igor-galchevsky 
Ah I see now ~ the tip text is really about checking _whether an object property is non-null/undefined_
That check should be

<S_CODE_TOKEN>
",dfkaye,2016-03-05 05:14:37
62,2016-01-13 21:06:19,"@loverajoel 

> I'm not agree with your last point

The previous bullet point make it clear that if you care for bytes you can use `undefined` for not defined values semantic, but if you don't care then you don't need to and you can use `null`. Again, it depends upon the context of what you are doing.

> typeof is broken for empty references?

It depends on what you consider ""empty references"".

""If something works sometimes, and sometimes it does not, and there is a better option, always use the better option"". If one does not agree with this principle, then there is no point to continue the discussion.

`typeof` rules are complicated for some values and useless for others (like checking if a property exists).

When you say `typeof myObject.name` do you expect the value 'undefined' or that there is no property? There is no way to tell because it only returns 'undefined' either way. The only way to consistently check if a property is in an object (which is what tip 10 refers to), is using `obj,hasOwnProperty`:

<S_CODE_TOKEN>

See that both `typeof` returns `undefined`, a falsey value, but only `hasOwnProperty` makes it right, returning a **false** (not falsey) value.
",FagnerMartinsBrack,2016-03-05 05:14:37
62,2016-01-13 21:10:29,"@loverajoel 

> fixed d885967

If `myObject` has a property with value `0` it will return falsey and not enter the condition, therefore it is also not ok to check if a property is present with the `if (myObject['name'])` code.
",FagnerMartinsBrack,2016-03-05 05:14:37
62,2016-01-14 14:47:52,"Is it not easier to just do 
`if(test.key){
  console.log(test.key);
}`
",z-vr,2016-03-05 05:14:37
62,2016-01-16 09:24:52,"Why don't you use hasOwnProperty like @FagnerMartinsBrack said! It's simplest and most obvious solution. Using typeof to check existence is silly
",Kerndog73,2016-03-05 05:14:37
62,2016-02-20 13:13:10,"Hey @Kerndog73, @FagnerMartinsBrack, can you guys submit a PR with the required changes then we can review it and merge it. 
",zenopopovici,2016-03-05 05:14:37
61,2016-01-11 02:23:01,,infacq,2016-01-18 20:51:56
61,2016-01-18 19:31:00,"This can be solved if there is a directory structure of sorts put on place for the tips being discussed #101 
",pertrai1,2016-01-18 20:51:56
60,2016-01-10 19:57:31,,AvraamMavridis,2016-01-12 20:50:04
60,2016-01-12 16:44:09,"nice tip!
",parro-it,2016-01-12 20:50:04
60,2016-01-12 16:49:49,":+1: 
",afc163,2016-01-12 20:50:04
60,2016-01-12 17:56:45,"thx!
",AvraamMavridis,2016-01-12 20:50:04
60,2016-01-12 19:22:23,"@AvraamMavridis can you add a link to official documentation about es6?
",loverajoel,2016-01-12 20:50:04
60,2016-01-12 20:04:36,"@loverajoel you mean about default parameters? sure.
",AvraamMavridis,2016-01-12 20:50:04
60,2016-01-12 20:06:52,"@AvraamMavridis yes please, after your changes I will merge and publish this tip :rocket: 
",loverajoel,2016-01-12 20:50:04
60,2016-01-12 20:09:52,"Wow. That's really cool. It's a side effect of the default parameter expression not being evaluated until the value is actually required. Once we get good support for [proxies](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy) we could have a thrower object that automatically throws any property accessed on it.

<S_CODE_TOKEN>

I believe that should work. I don't actually have any environments right now that can run proxies.
",knpwrs,2016-01-12 20:50:04
60,2016-01-12 20:26:53,"@loverajoel done :boom: 
",AvraamMavridis,2016-01-12 20:50:04
60,2016-01-12 20:31:14,"@davecan I can't merge you have to do a mergeback or rebase. Will be better if you can squash your commits
",loverajoel,2016-01-12 20:50:04
60,2016-01-12 20:44:15,"@loverajoel I guess wrong @? Commits squashed. 
",AvraamMavridis,2016-01-12 20:50:04
60,2016-01-12 20:50:03,"@AvraamMavridis thanks for your contribution!
",loverajoel,2016-01-12 20:50:04
60,2016-01-12 20:50:51,"@loverajoel thx!
",AvraamMavridis,2016-01-12 20:50:04
60,2016-01-12 20:55:13,"@knpwrs sweet. thx for that.
",AvraamMavridis,2016-01-12 20:50:04
59,2016-01-10 12:18:34,"Hi. This project is going to be really big. So, I've been thinking about categories. What if tips will be divided by categories like:
Plain JS
ES2015
Angular JS
React JS
etc..

It will be easier to find tips for your needs.
@loverajoel What do you think?
",denar90,2016-01-28 21:25:52
59,2016-01-10 12:23:30,"https://github.com/loverajoel/jstips/issues/18 regarding framework tips

I guess another solution would be creating own repositories for these frameworks (and linking to them from here). 
Here and then some tips in the main repo (e.g. if no other tip has been found)
",kurtextrem,2016-01-28 21:25:52
59,2016-01-10 12:40:45,"Will it be some organization like jstips and repos in there? 
",denar90,2016-01-28 21:25:52
59,2016-01-10 18:19:49,"@denar90 in this issue https://github.com/loverajoel/jstips/issues/18 we talked about it.
We decide that the daily js tips will be only vanilla js and tips about frameworks, toolis and more will be like a bonus.
Now we are working in a beautiful template for [jekyll-now](https://github.com/barryclark/jekyll-now) and will be more easy to read and follow tips.
",loverajoel,2016-01-28 21:25:52
59,2016-01-11 06:09:07,"Cool. Got it. Do you need some help?
",denar90,2016-01-28 21:25:52
58,2016-01-10 06:37:23,,kohei-takata,2016-01-10 18:11:21
58,2016-01-10 18:11:19,"Thanks
",loverajoel,2016-01-10 18:11:21
57,2016-01-09 13:57:09,,gogainda,2016-01-19 15:23:54
57,2016-01-12 21:21:27,"Hey @gogainda take a look [here](https://developers.google.com/speed/articles/optimizing-javascript?csw=1&utm_campaign=Front%2BEnd%2BNewsletter&utm_medium=web&utm_source=Front_End_Newsletter_1)
",loverajoel,2016-01-19 15:23:54
57,2016-01-13 20:13:10,"@loverajoel According to this benchmark 'concat' variant is faster than 'join' http://jsperf.com/string-concatenation-join-concat-plus
",gogainda,2016-01-19 15:23:54
57,2016-01-15 21:39:21,"@gogainda awesome, can you add some about performance related? I think that will be more useful the tip.
Also squash your commits, please
",loverajoel,2016-01-19 15:23:54
56,2016-01-09 13:51:57,,ahmedelgabri,2016-01-11 21:27:19
56,2016-01-09 13:52:55,"Is there any way to test performance?
",kurtextrem,2016-01-11 21:27:19
56,2016-01-09 14:01:04,"I'm sure there is but perf tests in the wild doesn't make sense to me to be honest
",ahmedelgabri,2016-01-11 21:27:19
56,2016-01-11 21:10:12,"@tevko ping
",loverajoel,2016-01-11 21:27:19
56,2016-01-11 21:11:21,":+1: 
",tevko,2016-01-11 21:27:19
56,2016-01-11 21:27:21,"thanks
",loverajoel,2016-01-11 21:27:19
55,2016-01-08 22:57:42,"I was thinking that it would be cool to add a section about the upcoming/transpiled stuff that can be used with the new es6/7 drafts. For example http://blog.jeremyfairbank.com/javascript/javascript-es7-function-bind-syntax/ has some stuff that would be nice for the very first tip 

<S_CODE_TOKEN>
",0xF013,2016-03-05 05:14:58
55,2016-01-08 23:09:05,"+1
",duzun,2016-03-05 05:14:58
54,2016-01-08 20:10:25,"""undefined means a variable has not been declared""

A variable that has not been declared doesn't exists, so this statement is contradictory.
Hence, if you reference a variable that is not declared, it's value is not undefined as a reference error is thrown instead. (If you talk about referencing a non existing property of an object, that shouldn't be called a variable).
",oagarcia,2016-01-28 21:25:33
54,2016-01-18 21:08:51,"@bhaskarmelkani ping
",loverajoel,2016-01-28 21:25:33
53,2016-01-08 17:21:50,"For the sake of clarity, I'd recommend to the verbose semantic:

<S_CODE_TOKEN>
",Roland1975,2016-02-20 13:09:30
53,2016-01-08 17:31:00,"@Roland1975 I'm not sure what advantage `Array.prototype.slice.call(nodelist)` has over `Array.apply(null, nodelist)`  

In fact, I'd argue that the apply method is cleaner, faster, and easier to understand than the slice method. 

Also, the slice method is more of a hack / trick, whereas apply is literally built to accept an Array-like value
",tevko,2016-02-20 13:09:30
53,2016-01-08 22:41:17,"`Array.apply` and `[].slice` are not equivalent and here are two most important differences:
1. `Array.apply` would make all cells own properties. 
   As a proof, run this:
   `(new Array(100)).map(function(i){console.log(i)})` - no output
   `Array.apply(null, new Array(100)).map(function(i){console.log(i)})` - outputs ""undefined"" 100 times
2. `[].slice` is much faster, and the bigger array, the slower first method gets (in my tests 4x).

Proof: [Spped test](https://duzun.me/playground/js_speed#c=%20b%20%3D%20Array.apply%28null%2C%20a%29%3B%0A%2F%2F%20b%20%3D%20slice.call%28a%29%3B&d&i=var%20a%20%3D%20Array.apply%28null%2C%20Array%2810000%29%29.map%28function%28v%2Ci%29%7Breturn%20i%7D%29%3B%0Avar%20b%3B%0Avar%20slice%20%3D%20%5B%5D.slice%3B&n=10000)
",duzun,2016-02-20 13:09:30
53,2016-01-09 00:48:33,"Furthermore, if you had an array-like of a single element that is a number, Array.apply will give you an array with .length of that number. You don't have to worry about that with NodeList fortunately.

Also, if you are targeting ES6, then Array.of() is exactly what you're looking for.
",Havvy,2016-02-20 13:09:30
53,2016-01-09 16:33:32,"If you targeting ES6, there are more methods available:
- `for...of` can iterate over `NodeList`:

<S_CODE_TOKEN>
-  if you want forced conversion to array, you can use more beautiful `spread operator`:

<S_CODE_TOKEN>
",gmarketer,2016-02-20 13:09:30
53,2016-01-09 19:44:18,"For ES5 `concat` is the best choice:

<S_CODE_TOKEN>

It is faster then `[].slice`, but has equivalent effect.
",duzun,2016-02-20 13:09:30
53,2016-01-09 20:37:13,"@duzun my results for tests on your previous proof link are quite similar between `slice` and `concat`. How do you compare the two more accurately?
",davidbgk,2016-02-20 13:09:30
53,2016-01-09 20:49:38,"@davidbgk I just run the test several times and write down the execution times, then make an average.
I know this is not the best method to benchmark, but gives a quick idea of what works better.

I think a jsPerf would be more accurate.
",duzun,2016-02-20 13:09:30
53,2016-01-28 21:25:21,"Hey can we close this?
",loverajoel,2016-02-20 13:09:30
53,2016-02-20 13:09:30,"Please re-open and submit changes if this is still not OK.
",zenopopovici,2016-02-20 13:09:30
52,2016-01-08 17:18:26,,JakeRawr,2016-01-09 20:55:08
52,2016-01-08 22:36:37,"I like this one!
",taiga418,2016-01-09 20:55:08
52,2016-01-09 19:14:04,"Please at the final squash your commits. thanks
",loverajoel,2016-01-09 20:55:08
52,2016-01-09 19:35:00,"I've made the changes. Thanks
",JakeRawr,2016-01-09 20:55:08
52,2016-01-09 20:55:05,"ok, thanks for your contribution!
",loverajoel,2016-01-09 20:55:08
51,2016-01-08 12:19:56,"Worth noting that Strict Mode is always on on ES6/ES2015 modules.

We don't need to add ""use strict"" for ES6/2015 modules.
",hnordt,2016-01-28 21:26:16
51,2016-01-11 23:29:09,"[unins000.dat.txt](https://github.com/loverajoel/jstips/files/86533/unins000.dat.txt)

[unins000.dat.txt](https://github.com/loverajoel/jstips/files/86535/unins000.dat.txt)
",bojidar80,2016-01-28 21:26:16
51,2016-01-28 21:24:31,"Hey can we close this?
",loverajoel,2016-01-28 21:26:16
51,2016-01-28 21:26:16,"Of course.
",hnordt,2016-01-28 21:26:16
50,2016-01-08 11:34:00,,thearunster,2016-01-08 14:42:01
50,2016-01-08 14:41:59,"Thanks for your contribution!
",loverajoel,2016-01-08 14:42:01
49,2016-01-08 11:28:32,,thearunster,2016-01-08 14:41:41
49,2016-01-08 14:41:35,"Thanks :+1: 
",loverajoel,2016-01-08 14:41:41
48,2016-01-08 09:54:45,,da-vaibhav,2016-01-08 14:41:21
48,2016-01-08 14:41:19,"Thanks
",loverajoel,2016-01-08 14:41:21
47,2016-01-08 08:05:29,,0xmtn,2016-01-21 17:12:57
47,2016-01-11 13:58:39,"ping
",0xmtn,2016-01-21 17:12:57
47,2016-01-21 17:19:23,"Thanks @0xmtn !
",loverajoel,2016-01-21 17:12:57
47,2016-01-21 17:33:16,"my pleasure :thumbsup: 
",0xmtn,2016-01-21 17:12:57
46,2016-01-08 08:05:15,,0xmtn,2016-02-20 13:19:11
46,2016-01-11 13:58:45,"ping
",0xmtn,2016-02-20 13:19:11
46,2016-02-20 13:19:11,"@0xmtn we can't accept this right now. Please submit a new PR. In the coming days, rules will be updated and PRs will be voted by the community before becoming tips. See #251 
",zenopopovici,2016-02-20 13:19:11
45,2016-01-08 06:57:25,"- using console.time and console.timeEnd
",manmadareddy,2016-01-13 15:17:14
45,2016-01-10 18:36:02,"Can you add a jsfiddle demo?
",loverajoel,2016-01-13 15:17:14
45,2016-01-10 18:36:42,"after changes, squash your commits.
Thanks
",loverajoel,2016-01-13 15:17:14
45,2016-01-10 18:37:23,"sure I will add
",manmadareddy,2016-01-13 15:17:14
45,2016-01-11 04:17:17,"Updated my pull request with the resolved comments.
",manmadareddy,2016-01-13 15:17:14
45,2016-01-11 07:53:34,"Some people don't think console.time{End} is a reliable method and there are [better ways](https://mathiasbynens.be/notes/javascript-benchmarking) of measuring performance. That being said I still use console.time{End} myself but it might be worth adding that link to it as well! 
",jillesme,2016-01-13 15:17:14
45,2016-01-12 14:05:47,"@manmadareddy ping
",loverajoel,2016-01-13 15:17:14
45,2016-01-13 04:03:13,"sorry I missed your ping..
",manmadareddy,2016-01-13 15:17:14
45,2016-01-13 04:55:45,"@loverajoel 
Made the required changes.
",manmadareddy,2016-01-13 15:17:14
45,2016-01-13 04:58:25,"@manmadareddy excellent! thanks
",loverajoel,2016-01-13 15:17:14
44,2016-01-08 06:02:49,,hingsir,2016-01-10 18:21:52
44,2016-01-08 13:32:19,"That was my fault and now we can't update this beacouse the tweet link will lost :(
",loverajoel,2016-01-10 18:21:52
43,2016-01-08 03:43:24,"This should be its here :)
",akkatracker,2016-01-08 03:44:47
43,2016-01-08 03:44:45,"Thanks!
",loverajoel,2016-01-08 03:44:47
42,2016-01-08 02:12:52,"Maybe better to

`value = [].concat(value || [])`
",boneskull,2016-03-01 12:20:51
42,2016-01-08 02:13:37,"Otherwise you get `[undefined]`
",boneskull,2016-03-01 12:20:51
42,2016-01-08 07:13:13,"Also, usually you do not execute functions to log values to the console, but rather to process data and return values. If I pass a string to a function, I expect a string as return value, or at least not an array. It usually messes up the workflow in which the function is executed. I liked to add something like:

<S_CODE_TOKEN>
",Amberlamps,2016-03-01 12:20:51
42,2016-01-08 07:41:17,"@Amberlamps: About the return value: I prefer to get the same type of return value each time I call a function - not a string once and an array the next time. Seems to be personal preference, but I'd say most functions always have a constant return type.
",BlaM,2016-03-01 12:20:51
42,2016-01-08 09:38:15,"@BlaM: I agree. But when I use a third party library that converts strings to upper case, I find it weird to get an array when passing a string.

<S_CODE_TOKEN>
",Amberlamps,2016-03-01 12:20:51
42,2016-01-08 09:56:27,"@Amberlamps: Usually you wouldn't rely on a third party lib to uppercase strings - you would use String.toUpperCase() :yum:. But in the end it all comes down to the definition of the function. There is no right or wrong here - and returning uppercase is just an example.
",BlaM,2016-03-01 12:20:51
42,2016-01-28 21:24:23,"Hey can we close this?
",loverajoel,2016-03-01 12:20:51
42,2016-01-29 00:01:18,"My original comment was not addressed.  You guys went off on a tangent.  :smile:
",boneskull,2016-03-01 12:20:51
42,2016-02-19 22:07:34,"@boneskull if you have any improvements can you submit a new PR? Or let us know if this can be closed.
",zenopopovici,2016-03-01 12:20:51
41,2016-01-08 02:07:50,,jhogoforbroke,2016-01-15 15:41:13
41,2016-01-08 02:12:02,"Ow sorry, too late. I think that would be 8 now
",jhogoforbroke,2016-01-15 15:41:13
41,2016-01-08 07:05:06,"awesome,  but dot not think it's better readable for beginners.
",hingsir,2016-01-15 15:41:13
41,2016-01-09 02:39:22,"hi @hingsir! but it's so simple to understand and use. can you suggest me another title maybe?
",jhogoforbroke,2016-01-15 15:41:13
41,2016-01-13 23:02:39,"I like this one, maybe you can update the title and we can merge this
",loverajoel,2016-01-15 15:41:13
41,2016-01-14 01:02:51,"@loverajoel update title for even simpler way of use indexOf as a contains clause
",jhogoforbroke,2016-01-15 15:41:13
41,2016-01-14 12:58:30,"Why would you use indexOf when you can use includes. It's as readable as you can get
",Kerndog73,2016-01-15 15:41:13
41,2016-01-14 15:05:04,"includes are amazing, but for arrays is part of the ECMAScript 2016 (ES7) proposal, syntax and behavior is subject to change. Even in string is not fully supported in browser compatibility, the recomended [Polyfill](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes) uses indexOf behind:

<S_CODE_TOKEN>

It is very useful know indexOf
",jhogoforbroke,2016-01-15 15:41:13
41,2016-01-15 01:53:23,"@jhogoforbroke can you make a rebase or mergeback?
",loverajoel,2016-01-15 15:41:13
41,2016-01-15 13:41:22,"@loverajoel done!
",jhogoforbroke,2016-01-15 15:41:13
41,2016-01-15 15:41:11,"@jhogoforbroke thanks men!
",loverajoel,2016-01-15 15:41:13
40,2016-01-08 00:55:29,"Might need a more detailed description?
",Pingid,2016-03-05 05:26:42
40,2016-01-08 02:40:13,"The problem with classical inheritance is more about inheriting mandatory capabilities of the superclass than just using `new` or a constructor. Prototypal inheritance can have a constructor and use the `new` operator, the difference is that the capabilities are not dictated by the superclass and you can build an entire new object only using the parent properties as a base for the new one (just a ""prototype"" instead of a ""blueprint"").
",FagnerMartinsBrack,2016-03-05 05:26:42
40,2016-01-08 12:59:25,"I see that does make sense!
",Pingid,2016-03-05 05:26:42
40,2016-01-24 17:26:41,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-03-05 05:26:42
39,2016-01-07 23:01:32,"To confirm that 'use strict' is old and highly compliant
",mvedie,2016-01-07 23:30:02
39,2016-01-07 23:04:22,"To reassure people on the use of this command and compatibility
",mvedie,2016-01-07 23:30:02
39,2016-01-07 23:29:59,"ok thanks!
",loverajoel,2016-01-07 23:30:02
38,2016-01-07 18:23:57,"With a helpful link to MDN!
",emilyhorsman,2016-01-07 21:44:44
38,2016-01-07 21:44:42,"good catch! thanks
",loverajoel,2016-01-07 21:44:44
37,2016-01-07 18:12:32,"A safe, easy, and functional way to convert a node list into an array
",tevko,2016-01-08 16:38:35
37,2016-01-07 18:50:28,"+1
",johnstew,2016-01-08 16:38:35
37,2016-01-07 19:48:49,":+1: 
",manmadareddy,2016-01-08 16:38:35
37,2016-01-07 21:44:01,"@tevko nice tip!
This will be the tip for tomorrow, please make a rebase and update the number post and the date!
Thanks for your tip!
",loverajoel,2016-01-08 16:38:35
37,2016-01-08 02:01:28,"@loverajoel ok I think I did this correctly
",tevko,2016-01-08 16:38:35
37,2016-01-08 08:03:59,"@tevko `Array.apply` has higher performance than `[].slice.apply` or `Array.prototype.slice.apply`.  Is that right?
",hingsir,2016-01-08 16:38:35
37,2016-01-08 15:23:20,"@loverajoel fixed
",tevko,2016-01-08 16:38:35
37,2016-01-08 15:56:11,"@hingsir I'm not sure, How we can confirm or test that?
",loverajoel,2016-01-08 16:38:35
37,2016-01-08 16:38:46,"@tevko thanks for your tip!
",loverajoel,2016-01-08 16:38:35
37,2016-01-08 16:54:33,"Why not just `Array.from(NodeList)`?
",sergiodxa,2016-01-08 16:38:35
37,2016-01-08 16:55:31,"@sergiodxa browser support
",tevko,2016-01-08 16:38:35
37,2016-01-08 17:23:16,"@tevko https://github.com/loverajoel/jstips/issues/53
",loverajoel,2016-01-08 16:38:35
36,2016-01-07 17:16:01,,seanpat09,2016-01-11 16:50:31
36,2016-01-07 17:22:36,":+1: 
",manmadareddy,2016-01-11 16:50:31
36,2016-01-07 23:07:50,":+1: 
",mvedie,2016-01-11 16:50:31
36,2016-01-10 18:32:39,"please, squash your commits
",loverajoel,2016-01-11 16:50:31
36,2016-01-11 15:15:37,"hey @seanpat09 can you make the changes today, so I can merge and publish this tip today?
",loverajoel,2016-01-11 16:50:31
36,2016-01-11 16:27:33,"@loverajoel Sorry about that, just got back today. I made the change you suggested, though my git is pretty weak so I'm not sure if I made this pull request properly. If you'd like, I can just make a new pull request so that everything is in one commit.
",seanpat09,2016-01-11 16:50:31
36,2016-01-11 16:42:29,"@seanpat09 don't worry about commits, I can do the squash for you after the merge!
",loverajoel,2016-01-11 16:50:31
36,2016-01-11 16:50:21,"@seanpat09 perfect, thanks!
",loverajoel,2016-01-11 16:50:31
35,2016-01-07 16:25:09,"This closes #27. @volcodc was right, I had the commented output wrong. ""cactus"".uppercase should return ""CACTUS"" 
",mattfaluotico,2016-01-07 21:47:20
35,2016-01-07 21:47:20,"Hey @mattfxyz, @syaning did it for you!
",loverajoel,2016-01-07 21:47:20
34,2016-01-07 15:57:04,"Strict-mode has been around for a good long time, but I still see tons of non-strict code out there.  Maybe this tip will help spread the word.
",nainslie,2016-01-07 18:30:02
34,2016-01-07 17:11:37,"@nainslie we can merge and publish this tip today, please add the number #7 and the today date.
",loverajoel,2016-01-07 18:30:02
34,2016-01-07 17:31:10,"Please add the link for more documentation https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode
",loverajoel,2016-01-07 18:30:02
34,2016-01-07 18:01:02,"It should be updated now with wording changes/clarifications and today's date.  :-)  Thanks!
",nainslie,2016-01-07 18:30:02
34,2016-01-07 18:30:12,"Thanks @nainslie !!
",loverajoel,2016-01-07 18:30:02
34,2016-01-08 17:23:56,"@nainslie https://github.com/loverajoel/jstips/issues/51
",loverajoel,2016-01-07 18:30:02
33,2016-01-07 15:51:50,,pbrandt1,2016-01-18 01:16:05
33,2016-01-13 22:56:57,"hey @pbrandt1 I wanna merge this Tip the 1/16 can you please update the date and the number tip.
Also squash your commits please
",loverajoel,2016-01-18 01:16:05
33,2016-01-16 20:56:04,"i guess there was a problem?  did i eff something up? i'm definitely not a pro at git
",pbrandt1,2016-01-18 01:16:05
32,2016-01-07 14:47:09,"‚Äòin javascript‚Äô instead of ‚Äòon javascript‚Äô
",da-vaibhav,2016-01-07 17:09:50
32,2016-01-07 17:09:47,"thanks man!
",loverajoel,2016-01-07 17:09:50
31,2016-01-07 11:47:47,,0xmtn,2016-01-08 13:35:21
31,2016-01-07 13:56:09,"Woww!! nice tips! can you split in two separate pull requests?
",loverajoel,2016-01-08 13:35:21
31,2016-01-07 15:12:15,"@loverajoel Oh thanks! 
Actually, I put them in separate commits but I didn't think they'll be merged as the same pull request. Any ideas on how to achieve this?

Edit: I can create different branches for them and then PR separately. Can you merge them into the master?
",0xmtn,2016-01-08 13:35:21
31,2016-01-07 23:14:50,"The problem with your abbreviation function is that it is not compatible with languages such as Arabic, Chinese, Japanese or other complex language.
And i think it's a feature or use case more than a tip
",mvedie,2016-01-08 13:35:21
31,2016-01-07 23:38:50,"@0xmtn yes please create two new pull request, one per tip, so we can discuss about them. thanks
",loverajoel,2016-01-08 13:35:21
31,2016-01-08 08:10:55,"@loverajoel  Created two new branches and two PRs.
https://github.com/loverajoel/jstips/pull/46
https://github.com/loverajoel/jstips/pull/47

@mvedie Thanks for your version. Added your tip to JS Shuffle part. Separated this part into two, both knuth shuffling and purejs versions are there. Check that out.
",0xmtn,2016-01-08 13:35:21
31,2016-01-08 08:16:35,"@mvedie About abbreviation function. Yes it doesn't have language compatibility. But since we are putting tips here, I thought that this can show how to use ternary comparison and JS built-in functions to achieve something simple, without writing spaghetti code of ifs and elses and loops.

More languages can be added later of course. Or even language-specific snippets can be created, but I don't think it is a necessity to put them here. That should be left for the users' imagination, IMHO.
",0xmtn,2016-01-08 13:35:21
31,2016-01-08 13:35:20,"Close this PR and we can follow the discussion in the others pr's
",loverajoel,2016-01-08 13:35:21
30,2016-01-07 10:31:45,"fix the reuslt of printUpperCase
",syaning,2016-01-07 13:54:35
30,2016-01-07 13:54:33,"Yay!! thanks!
",loverajoel,2016-01-07 13:54:35
29,2016-01-07 10:05:10,,matjaz,2016-01-07 13:55:31
29,2016-01-07 12:29:36,"there is no both ways. `typeof` is a keyword and thus not requiring parentheses.
",matjaz,2016-01-07 13:55:31
29,2016-01-07 12:42:30,"@matjaz Yah, you are right. Good catch!
",rocketinventor,2016-01-07 13:55:31
29,2016-01-07 13:55:28,"sorry guys my bad, thanks!
",loverajoel,2016-01-07 13:55:31
29,2016-01-07 14:29:37,"@loverajoel
Next to this tip you can also add
if (Object.hasOwnProperty('key'))
To check 'key' is defined for a object or not.
",manmadareddy,2016-01-07 13:55:31
29,2016-01-08 03:47:30,"@manmadareddy Can you provide an example for that?
",rocketinventor,2016-01-07 13:55:31
29,2016-01-08 05:26:38,"@rocketinventor 

<S_CODE_TOKEN>

Tip#3 uses the same.
https://github.com/loverajoel/jstips#03---improve-nested-conditionals
",manmadareddy,2016-01-07 13:55:31
29,2016-01-08 08:36:07,"`new Object()` is anti-pattern. use `{}`.
",matjaz,2016-01-07 13:55:31
29,2016-01-08 08:42:50,"@matjaz @rocketinventor hello guys `new Object()` use to be an anti pattern with es6/7 that is changing quickly
",aaron-goshine,2016-01-07 13:55:31
29,2016-01-08 09:54:23,"can you elaborate? any links?
",matjaz,2016-01-07 13:55:31
28,2016-01-07 04:28:35,"It started as a minor grammar fix for a few words, and ended up being more detailed instructions. :) 

I tried to keep the English simple so more people can follow it easily. Hopefully it aligns with your intent, if not let me know.
",davecan,2016-01-07 05:15:44
28,2016-01-07 05:15:41,"Woww!! so clear, @mvedie  thanks for help me with my bad english! 
",loverajoel,2016-01-07 05:15:44
28,2016-01-07 06:55:06,"Not my contribution ;)
",mvedie,2016-01-07 05:15:44
28,2016-01-07 13:50:43,"haha sorry! :p
",loverajoel,2016-01-07 05:15:44
27,2016-01-07 04:08:51,"Tip #06 suggests that it's code returns the first letter capital rather than the whole word.

_printUpperCase(""cactus""); 
// => Cactus_

Ideally, if the end result wanted to look like that, the code should reflect something like this:

<S_CODE_TOKEN>

Just wanted to assist! Thanks!
-Chris
",volcodc,2016-02-20 13:10:19
27,2016-01-07 13:53:21,"@mattfxyz ping here!
",loverajoel,2016-02-20 13:10:19
27,2016-01-07 15:32:04,"You're right Chris. This was the print every word in all uppercase.m. I incorrectly wrote the sample output. 
",mattfaluotico,2016-02-20 13:10:19
27,2016-01-07 18:35:35,"Consider `map`'ing a function over an array instead of changing each function to contain a `for`-loop

<S_CODE_TOKEN>

It is an ES5 feature: http://caniuse.com/#search=map
",grav,2016-02-20 13:10:19
27,2016-01-08 17:15:01,"I'd rather avoid passing an array of items. Let the function proceed the arguments as an array using the native 'slice':

<S_CODE_TOKEN>

<S_CODE_TOKEN>

An array is an object; if you keep it local inside the function, the browser will garbage it as soon as the function exits.
",Roland1975,2016-02-20 13:10:19
27,2016-01-08 18:29:47,"That only works with use strict, else we leak arguments.

Roland notifications@github.com schrieb am Fr., 8. Jan. 2016 18:15:

> I'd rather avoid passing an array of items. Let the function proceed the
> arguments as an array using the native 'slice':
> 
> function printUpperCase(/\* item1, item2, item n */) {
>   var elements = Array.prototype.slice.call(arguments);
>   //...
> }
> 
> printUpperCase('item1', 'item2'); //ITEM1, ITEM2
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/loverajoel/jstips/issues/27#issuecomment-170061427.
> 
> ## 
> 
> Mit freundlichen Gr√º√üen,
> Jacob Gro√ü
",kurtextrem,2016-02-20 13:10:19
27,2016-01-28 21:24:09,"Hey can we close this?
",loverajoel,2016-02-20 13:10:19
27,2016-02-20 13:10:19,"Please submit changes in a PR and re-open this if you believe the tip is still not OK.
",zenopopovici,2016-02-20 13:10:19
26,2016-01-07 00:05:21,"Fixing some syntactic and grammatical errors.
",kostasx,2016-01-07 00:59:23
26,2016-01-07 00:59:20,"Thanks @kostasx  for this contribution, very useful!
",loverajoel,2016-01-07 00:59:23
25,2016-01-06 23:30:07,"Simple tip about using Array `forEach`, `filter`, `map` instead of classic for loops.
",chtefi,2016-02-23 20:12:52
25,2016-01-07 07:54:13,"While we're on the topic it may be a good idea to also show an example of how they can be composed, too
",bbultman,2016-02-23 20:12:52
25,2016-01-07 15:34:39,"Please include a link to jsperf. These functions aren't faster and currently the tips makes it look like those functions are the better ""code style"".
",kurtextrem,2016-02-23 20:12:52
25,2016-01-07 16:00:30,"I don't think talking about performance here is relevant.

Using those functions are not about that at all, but just about the sake of
clarity, simplicity, and good practice. (and it opens perspective to more
concepts such as composition for instance as said previously, and more
generally FP).
I think if you need performance, you will know it and know what to do.
",chtefi,2016-02-23 20:12:52
25,2016-01-07 16:10:58,"Honestly, that is just wrong. For loops have been part of Javascript since ever and EVERY single javascript out there knows how to read it.
Ask a newbie about for loop, what do they do?
Ask a newbie about the ""map"" function. Where is it from? What does it do? What parameters does it accept? Is there a need to return a value?
",kurtextrem,2016-02-23 20:12:52
25,2016-01-08 04:25:09,"I agree with @kurtextrem 
These are good functions to know but, saying not to use for loops when possible makes them sound bad when the reality is that they are just not always necessary.
",rocketinventor,2016-02-23 20:12:52
25,2016-01-08 04:32:51,"+1
",manmadareddy,2016-02-23 20:12:52
25,2016-01-08 08:51:31,"All right.
I rephrased the content to talk about ""alternatives"" to classic `for` loops, and not say ""avoid them"".
",chtefi,2016-02-23 20:12:52
25,2016-01-15 20:46:45,"PR updated.
Now using anonymous functions and added a note about the full functions signature. Thanks.
",chtefi,2016-02-23 20:12:52
25,2016-01-15 21:05:14,"`for` loops are imperative, `forEach` is functional. One could argue that imperative programming is better, if one is doing stand-up comedy of course. Clarity and maintainability should be always over early and micro optimizations.
",FagnerMartinsBrack,2016-02-23 20:12:52
25,2016-01-19 00:27:08,"- I don't think this is a good tip; these functions have been around for a while, and they are well known to a lot of developers. I think a tip should be something _that you probably didn't know_ (like the first tip or the one about wrapping `use strict`). We should differentiate between tip and tutorial, tutorial being something that explains the standard way to do something.
- You didn't mention something, I think, it's very important to the implementation of `forEach`, `filter` and `map`, and it's the fact that the optional second argument is the value of `this` inside the function (instead of having to use `.bind()` for an object or a class).
- Check tip #0, I think performance it's important here.

Expect the last one, it's all my personal opinion :D.
",homer0,2016-02-23 20:12:52
25,2016-01-19 00:32:48,"maybe it would be useful to add this example as a reason why you might use forEach instead of for?

<S_CODE_TOKEN>

that's something i ran into a while ago, i found it useful to know. sorry if its covered somewhere else, i found this repo only lately.
",r-obert,2016-02-23 20:12:52
25,2016-01-19 08:59:42,"@homer0 in my entourage, several didn't used them, for no reason, just because ""for i"" was doing the job. And you're right about the second arg, indeed ! Thanks. And yes, maybe this is not a ""tip"" as what is expected on this repo. I'll let @loverajoel decide. (you can close my PR without merging it, I don't mind)
@strcmp Yes indeed, I think everybody ran into this issue. Maybe this is a tip on itself?
",chtefi,2016-02-23 20:12:52
25,2016-01-19 10:57:48,"yeah i think so if it isn't already. maybe it could be written to be more general, i'm most familiar with the `for()` variant but i think it could at least apply to `while` as well.
",r-obert,2016-02-23 20:12:52
25,2016-01-19 11:04:57,"> I don't think this is a good tip; these functions have been around for a while, and they are well known to a lot of developers. 

i don't think this is factual, could you provide evidence of that? that seems to be your impression, not a reality.
",r-obert,2016-02-23 20:12:52
25,2016-01-19 12:58:54,"@strcmp personal experience working with another devs, the fact that they have been around since ECMA 5.1, and, I think the most important, if you go to the tips list, a couple of them make use `.map` and `.forEach` without explaining what they do.

I'm with @chtefi , @loverajoel you have the final word!
",homer0,2016-02-23 20:12:52
25,2016-01-19 13:07:33,"right but personal experience isn't universal, @chtefi described an experience at odds with yours, and my experience is at odds with yours too.
",r-obert,2016-02-23 20:12:52
25,2016-01-19 13:11:38,"i just feel this way because i feel like javascript is often taught ""the wrong way"" or people who haven't written any javascript in 10 years, might be unaware that there's an alternative to just using for(), and i think the sighted closure example is a common stumbling block.
",r-obert,2016-02-23 20:12:52
25,2016-01-19 14:35:40,"I find interesting a tip that assumes any level of knowledge, but it should never assume a higher level, because those who are not aware will not understand it, while the ones who are aware of it, will just remember it again and maybe help to improve. This is a win win state, any small piece of information increases awareness, it doesn't matter who is reading it.

I believe it should be documented somewhere that **explain something that some people already know is more useful than failing to explain to everyone**.
",FagnerMartinsBrack,2016-02-23 20:12:52
25,2016-01-21 04:09:01,"@strcmp @FagnerMartinsBrack It's unclear from this tip and its thread if you can use the index value ""`i`"" at all with these methods (`.forEach`, `.map`, etc).

For example, how would you write the following code block using these methods?

<S_CODE_TOKEN>

Also, is it possible to multiply each row in one array with the equivalently keyed row in another array in another array or such with these methods (simultaneous forEach with two arrays)?

Thanks!
",rocketinventor,2016-02-23 20:12:52
25,2016-01-21 04:21:20,"> people who haven't written any javascript in 10 years

Come on xD!! @loverajoel you need to clear this up, what kind of developers are the tips intended for?  noobies, stackoverflowers, advanced, out for 10 years?
",homer0,2016-02-23 20:12:52
25,2016-01-21 06:06:59,"@homer0 i find it strange how you choose to reply a fragment of everything i said, and ignore everything else. it says a lot. it seems like you are trying hard to make sure people **don't** learn, how bizarre. i am here to teach and help, i have no idea what your purpose is so far. i'll answer your question though, **JSTips are for everyone**, the fact you label people as ""noobies"", ""stackoverflowers"", and ""advanced"" says a lot, i probably won't reply to you again.

@rocketinventor the index is passed as a second argument to forEach, map, & other functions that operate on Arrays, see https://msdn.microsoft.com/en-us/library/ff679980(v=vs.94).aspx as an example. 
",r-obert,2016-02-23 20:12:52
25,2016-01-21 06:30:35,"@strcmp **I'm not trying to offend you nor everyone else**; I quoted that because it was really something weird to say; and I was honestly asking @loverajoel ; and complaining about the labels?  I was referencing in part to [this joke](https://www.reddit.com/r/ProgrammerHumor/comments/3dxkka/computer_programming_to_be_officially_renamed/) and, you were never a noobie?, or you never needed stackoverflow?; I have no problem admitting it, I learned about `var` scope a lot after learning js; and a BIG part of my Angular learning came from stackoverflow.

Please don't think I'm against your point of view nor @chtefi tip; please check the first point of my first comment, I don't think the tip is good because it's practically quoting the documentation, just google `forEach javascript` and you'll get the same kind of content. 

Maybe you are right and my question regarding ""what kind of developers are the tips indented for?"" should've been ""what's the type of tips you expect?"", a tip that it's practically documentation about the language is a good tip?

Again, sorry if you thought I was trying to start a fight, the labels part was wrong, but you have to agree, the `10 years` part was funny :stuck_out_tongue_closed_eyes: 
",homer0,2016-02-23 20:12:52
25,2016-01-21 08:58:24,"Well, I think this ""tip"" has gone too far and is too wide, too tutorialish yes (too many details to cover, look at all those comments, for one ""tip""). It should be more focused on a particular feature, such as the other tips.
@homer0 ""just google forEach javascript"" : I think this repo is useful to make you learned/realized something you would not look for explicitely. 
",chtefi,2016-02-23 20:12:52
25,2016-01-21 09:07:52,"@homer0 :laughing: okay, no problem i guess it was funny. i don't really look at stuff that way (noobie, etc), you're homer0 and your words are what i pay attention to. thats it really. with the 10 year reference i'm trying to say 10 years ago javascript was a lot different and people might have learnt it then and come away with the wrong impression. 

maybe tips like this would help people rediscover new things about javascript, avoid frustrating stumbling blocks like the example and so on :) 
",r-obert,2016-02-23 20:12:52
25,2016-01-21 09:16:14,"@rocketinventor  ""For example, how would you write the following code block using these methods?""

<S_CODE_TOKEN>

@rocketinventor ""Also, is it possible to multiply each row in one array with the equivalently keyed row in another array in another array or such with these methods (simultaneous forEach with two arrays)?""

<S_CODE_TOKEN>

i didnt test it, meant to give you a general idea.
",r-obert,2016-02-23 20:12:52
25,2016-01-21 09:58:19,"@chtefi 

> It should be more focused on a particular feature, such as the other tips.

He has a point.
What about documenting that a tip is valid while it doesn't take `x` minutes to read the content and links, being `x` a value previously defined?

Does it makes sense creating an issue about it?
",FagnerMartinsBrack,2016-02-23 20:12:52
25,2016-01-21 13:16:51,"![](http://i.giphy.com/Z6gwIJr7CPoqI.gif)
What a nice conversation!
I don't know what kind of developers are the tips intended for, it's the same conversation if ES6 simple functionality is a tip or not, for people that never read about it is a tip, same here.
I'm pretty sure that there are lot people that are starting with js and don't know about `map()` or `filter()`.

I haven't the final word, this is of the community and always I waited for each PR comments from the community before merge. (this is the thread most huge :p)

There 360 days and 360 tips per year, sufficient space for all kind of tips. Maybe in the while we can review this and the destination of the project!
",loverajoel,2016-02-23 20:12:52
25,2016-01-24 17:27:07,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-02-23 20:12:52
24,2016-01-06 23:28:13,,ollicle,2016-01-06 23:35:09
24,2016-01-06 23:35:10,"Thanks for you contribution! 
",loverajoel,2016-01-06 23:35:09
23,2016-01-06 23:11:23,"Change date format to ISO 8601 Date Standardization ( Issue #17 )
",mvedie,2016-01-06 23:12:36
22,2016-01-06 22:57:45,"Change date format to ISO 8601 Date Standardization ( Issue #17 )
",mvedie,2016-01-06 23:12:27
22,2016-01-06 23:02:57,"Awesome, can you too fix [here](https://github.com/loverajoel/jstips/blob/master/CONTRIBUTING.md) please?
",loverajoel,2016-01-06 23:12:27
22,2016-01-06 23:12:05,"Done in Commit #23 
",mvedie,2016-01-06 23:12:27
22,2016-01-06 23:12:25,"Thanks!!!
",loverajoel,2016-01-06 23:12:27
21,2016-01-06 22:41:58,,DannyBrown,2016-01-06 22:43:35
21,2016-01-06 22:43:33,"Thanks for you contribution! 
",loverajoel,2016-01-06 22:43:35
20,2016-01-06 20:03:59,"Extend null vs undefined with their behavior in JSON
",PeterAronZentai,2016-01-06 20:04:59
20,2016-01-06 20:04:53,"nice catch!
Thanks :dancer: 
",loverajoel,2016-01-06 20:04:59
19,2016-01-06 16:57:00,"small typo
",yjcxy12,2016-01-06 17:01:11
19,2016-01-06 17:01:07,"thanks
",loverajoel,2016-01-06 17:01:11
18,2016-01-06 15:54:29,"Hey, thanks for making this awesome project! I'm wondering if framework specific tips should be included? Including these might make more difficult for beginners to understand, not to mention harder to maintain, since frameworks update, get rewritten, and become anti-patterns rather quickly. 

Alternatively, allowing only vanilla javascript content will better serve beginners looking to understand language fundamentals, while promoting a better understanding of the language that so many frameworks and libraries depend on.
",tevko,2016-01-28 21:23:43
18,2016-01-06 16:45:14,":+1: totally agree with @tevko 
",aglipanci,2016-01-28 21:23:43
18,2016-01-06 17:26:09,"Hey @tevko thanks for your suggestion!

I'm not sure about what you proposed, these are my thoughts:
- Today frameworks are an important part of JS and it's a way to learn the language and best practices.
- JS Tips is not focused on beginners only.
- Share knowledges about famous frameworks will let that beginners know the frameworks/libraries and avoid common mistakes.
- It's hard write 365 tips only for javascript without frameworks, the idea it's include tips about tooling, dev environments, frameworks and more things related

But we can talk about it maybe I'm wrong, and only js is better for the project
",loverajoel,2016-01-28 21:23:43
18,2016-01-06 18:08:34,"Hi @loverajoel, thanks for taking the time to start a project like this. These are my opinions but maybe this will contribute to the discussion a bit.

There is merit to both approaches. However, I'll add that it is jarring to come to a project named ""Javascript Tips"" and see the first tip is about manipulating plain JS arrays followed by a tip about a deep (to me) aspect of Angular, a framework with which I know basically nothing (yet). This followed by a tip on React, again a framework I know nothing about.

So to me that kind of defeats the purpose of a project named ""Javascript Tips"" because it is neither accessible to newcomers nor is it a useful reference (""cookbook"") of actual JS techniques. Because a newcomer will immediately be thrown into the deep end of the pool by seeing Angular as the second tip, and a veteran will have to wade through what is essentially a random collection of tips from what may be such a huge variety of frameworks that it isn't very helpful at all.

Personally I would look for see Angular tips on a page titled ""Angular Tips"", for React tips on a page titled ""React Tips"", etc. And I would think a page titled ""Javascript Tips"" would be designed to help us all become better at _Javascript_ itself. :)

These are just my thoughts, I'm sure others may make better points than me. Maybe have one pure-JS tip each day with one ""bonus"" tip each day that is about a framework? That way everybody gets the pure-JS tip and can still pick up some tips from other frameworks along the way.

With all that said I think the motivation behind the project is fantastic and would be very helpful to people. So way to go on getting this started, however it turns out. :)
",davecan,2016-01-28 21:23:43
18,2016-01-06 18:09:46,"@davecan said it better than I could :+1: 
",tevko,2016-01-28 21:23:43
18,2016-01-06 18:22:14,":+1: 
",vishaltelangre,2016-01-28 21:23:43
18,2016-01-06 20:49:08,"+1
",shadowsyntax,2016-01-28 21:23:43
18,2016-01-06 22:15:29,":+1: 
",phil-r,2016-01-28 21:23:43
18,2016-01-07 03:25:14,"I like the purely Javascript tips because they are useful to all frameworks and all levels.
However, occasional (1 - 2 / week) framework tips are okay if they contribute to better JS mastery.
I like the idea of making the framework tips ""bonus"", and I also like the daily reading style.
Good work so far!
",rocketinventor,2016-01-28 21:23:43
18,2016-01-07 08:53:40,"I found all the tips _except_ for the Angular and React ones interesting. That's not to say that they're not, it's just that I, too, would prefer to only see vanilla JavaScript tips.

I full well appreciate that writing about vanilla JavaScript only is limiting, but given the immediate success of this repository, I think it's likely that people will submit ideas and, if you're open to it, full-blown tips for consideration.
",bookercodes,2016-01-28 21:23:43
18,2016-01-07 17:18:07,"ok you convince me, I like the idea about only vanilla JS and how a bonus extra tips(frameworks, devtools, ...)
What about this kind of tips https://github.com/loverajoel/jstips/pull/33? it's node

I will rewrite the rules, thanks all for your suggestions, so helpful!

I'll wait for your proposals tips :smiley_cat:
",loverajoel,2016-01-28 21:23:43
18,2016-01-08 03:26:52,"I think a few node tips here and there are okay. Code for node _is_ javascript.
",rocketinventor,2016-01-28 21:23:43
18,2016-01-18 08:13:53,"@loverajoel You are doing a great job with jstips, but you should encourage separations of concern anytime there is a need for it, jstips for pure Js pursuers and framework/library tips for frameworkers/librarians; if not then this repo will blow up into a puff of mushroom cloud. In the mean time talking about 365 days of the the year... Is there any one who would like to recommend music tracks or from youtube that are nice to listen while coding javascript or working with frameworks no separation of concern need on this one. https://github.com/aaron-goshine/three-sixtyfive-days-of-rain have a look at what I have so far https://github.com/aaron-goshine/three-sixtyfive-days-of-rain/blob/master/public/js/playlist-recommendation.js pull requests are welcome
",aaron-goshine,2016-01-28 21:23:43
17,2016-01-06 14:53:47,"I propose use of the ISO 8601 Date format (_e.g. 2016-01-03 for January 3rd, 2016_)

https://en.wikipedia.org/wiki/ISO_8601

**Relevant XKCD**
![Relevant XKCD](https://imgs.xkcd.com/comics/iso_8601.png)

**Exhibit A**, https://github.com/loverajoel/jstips/blob/cc8584a7f5812ac7d34f483c9269f846dad35169/README.md

<S_CODE_TOKEN>

**Exhibit B**, https://github.com/loverajoel/jstips/blob/cc8584a7f5812ac7d34f483c9269f846dad35169/README.md

<S_CODE_TOKEN>
",jnovack,2016-01-07 01:00:20
17,2016-01-06 17:07:54,"I agree with you! Do you wanna make a PR for solve this? thanks for your suggestion!
",loverajoel,2016-01-07 01:00:20
17,2016-01-06 23:14:49,"This issue can be closed ;)
",mvedie,2016-01-07 01:00:20
16,2016-01-05 22:47:11,"You can easily make a single methods work for an array of inputs or a single input by concatting the parameter into an array.
",mattfaluotico,2016-01-06 17:02:24
16,2016-01-06 00:09:22,"Awesome, tomorrow will be merged! Please squash your commits.
Thanks for your contribution!
",loverajoel,2016-01-06 17:02:24
16,2016-01-06 01:33:54,"Squashed :+1: 
",mattfaluotico,2016-01-06 17:02:24
16,2016-01-06 17:02:32,"Thanks!
",loverajoel,2016-01-06 17:02:24
16,2016-01-06 17:15:58,"This strikes me as unnecessary and undesirable. If one wants to provide one value to a function which accepts an array, simply provide a one-element array!

<S_CODE_TOKEN>
",davidchambers,2016-01-06 17:02:24
16,2016-01-08 17:25:40,"@mattfxyz https://github.com/loverajoel/jstips/issues/42 and https://github.com/loverajoel/jstips/issues/27
",loverajoel,2016-01-06 17:02:24
16,2016-01-09 02:28:23,"+1 to @davidchambers
It seems beneficial to aim for inputs and outputs into a function that do not change data type. Introducing logic to handle a change in an argument's data type because the argument value isn't type-safe makes functions unnecessarily complex and prone to runtime errors. ESLint has a consistent return type rule for [this reason](http://eslint.org/docs/rules/consistent-return.html).
",anselmbradford,2016-01-06 17:02:24
15,2016-01-04 19:30:05,"I am watching the repo, which means I get all issues, comments, and PRs. I'd like to just follow the tips themselves, is there any way (without Twitter)?
",rschindlauer,2016-01-24 18:03:59
15,2016-01-04 21:06:59,"Seconded!
",bbultman,2016-01-24 18:03:59
15,2016-01-05 16:16:24,"@rschindlauer not by the moment, in this issue https://github.com/loverajoel/jstips/issues/13 we are talking about to migrate this repo to jekyll blog and by this way you can follow the rss feed
",loverajoel,2016-01-24 18:03:59
15,2016-01-07 03:36:00,"@loverajoel By ""migrate"" do you mean adding a branch?
",rocketinventor,2016-01-24 18:03:59
15,2016-01-10 12:23:57,"Most tips come in via pull request, so simply ""Watch"" and turn on e-mail notifications :D
",kurtextrem,2016-01-24 18:03:59
15,2016-01-10 19:18:45,"Not sure if this would be of any help, but I created a repo that uses Jekyll and GitHub to generate just an XML feed:

https://github.com/mhulse/bookmark-utils

The feed is updated via the yaml file in the _data folder. 

My plan was to keep the feed updated via [Prose](http://prose.io). 
",mhulse,2016-01-24 18:03:59
15,2016-01-15 07:01:17,"You could get tips [by email](http://js2016.tips)
",drakmail,2016-01-24 18:03:59
15,2016-01-23 21:50:17,"> You could get tips by email

Loving the newsletter. Thanks!
",mhulse,2016-01-24 18:03:59
15,2016-01-24 16:17:21,"Hey good news, now you can follow this [official rss](http://www.jstips.co/feed.xml)
",loverajoel,2016-01-24 18:03:59
15,2016-01-24 18:03:59,"Cool, thanks! Closing this as resolved.
",rschindlauer,2016-01-24 18:03:59
15,2016-01-25 07:57:54,"You might soon see an IOS App for it . 
",rishantagarwal,2016-01-24 18:03:59
15,2016-01-25 08:03:48,"Quick question, what site is official? jstips.co or js2016.tips?
",mhulse,2016-01-24 18:03:59
15,2016-01-25 08:07:00,"jstips.co is based on gh-pages branch of this repo, js2016.tips ‚Äì¬†mostly is just a email subscription form maintained by me :)
",drakmail,2016-01-24 18:03:59
15,2016-01-25 08:10:44,"> jstips.co is based on gh-pages branch of this repo, js2016.tips ‚Äì mostly is just a email subscription form maintained by me :)

Ah, cool! Thanks for setting up the email sub! It's a perfect read in my inbox every day. Formatted very well and quick to grok. :+1: 
",mhulse,2016-01-24 18:03:59
15,2016-01-25 08:12:31,"Thank you!
",drakmail,2016-01-24 18:03:59
14,2016-01-04 06:45:32,,mohebifar,2016-01-04 13:04:27
14,2016-01-04 13:04:15,"good catch, thanks
",loverajoel,2016-01-04 13:04:27
13,2016-01-02 21:35:23,"How about keep one tip per file instead one page for all ?
In the future can do view tips like tldr ?  can generate the  one page tips with each tip .
",eggcaker,2016-01-28 21:22:21
13,2016-01-02 21:47:56,"Hey @eggcaker, yes, this is a good idea, I know that when the list of tips will grow up will be difficult to read.
I like the idea of all tips in the same file, because it's easy to read, but yes maybe the `readme` can be a index and each tip in separate files.

I think that the files should be named `#N - title` -> `01 - AngularJs: $digest vs $apply`
",loverajoel,2016-01-28 21:22:21
13,2016-01-02 21:55:14,"kind ofÔºå like a blog entry `#date #N #tags title` more for seach and read in the future.
",eggcaker,2016-01-28 21:22:21
13,2016-01-03 09:01:57,"Maybe post on a static site with rss.
",primozs,2016-01-28 21:22:21
13,2016-01-03 09:51:28,"@primozs +1
",macx,2016-01-28 21:22:21
13,2016-01-03 15:18:53,"I'm thinking use [jekyll-now](https://github.com/barryclark/jekyll-now) when the amount of tips grow
",loverajoel,2016-01-28 21:22:21
13,2016-01-04 11:29:16,"Can I suggest using Wintersmith? https://github.com/jnordberg/wintersmith

If you've used jekyll it'll be very familiar. We can have a script that auto populates the author, contributors and have the build files on the gh-pages branch.
",eknowles,2016-01-28 21:22:21
13,2016-01-05 16:14:55,"@eknowles sure I will try it, thanks
",loverajoel,2016-01-28 21:22:21
13,2016-01-05 16:20:16,"Since on the topic of static generators, a good leaderboard of the top open-source projects to choose from (can filter by JS) https://www.staticgen.com/
",cgmartin,2016-01-28 21:22:21
13,2016-01-06 10:13:53,"+1
",mallowigi,2016-01-28 21:22:21
13,2016-01-08 10:56:07,"You could use `doxie`, like what [git-tips](https://github.com/git-tips/tips) does.
",hemanth,2016-01-28 21:22:21
13,2016-01-12 06:56:35,"I also want to throw in, that using resources like images could be nice for some tips. Therefore, a nested folder structure could be useful for the future. At the moment, the project structure would be messed up pretty quickly if somebody wants to use image assets. Also, the loading speed of the single-page readme approach does not scale too well ...
",pklinger,2016-01-28 21:22:21
13,2016-01-15 06:27:28,"jstips(current/free way) can give more details on the section.
doxie is given only predefined structure.
",hueitan,2016-01-28 21:22:21
13,2016-01-15 06:53:11,":+1: for one tip per file
",drakmail,2016-01-28 21:22:21
13,2016-01-15 16:00:09,":+1: Really like the RSS idea. So that one can subscribe to the feed and get a new tip delivered every day!
",pmuens,2016-01-28 21:22:21
13,2016-01-15 17:09:05,"@pmuens also, you can subscribe to [email subscription](http://js2016.tips) or [use auto generated RSS feed](http://us12.campaign-archive2.com/feed?u=91c81a54b7387a056b046a2ca&id=9551be788c) (can be rendered with issues in some RSS clients)
",drakmail,2016-01-28 21:22:21
13,2016-01-18 10:29:14,"+1 The sooner this gets implemented, the better!
",tylerdmace,2016-01-28 21:22:21
13,2016-01-18 13:04:45,"I liked how I could read through them, for the repo 1/file makes sense but then a website or something where they get bundled would be needed
",AdriVanHoudt,2016-01-28 21:22:21
13,2016-01-18 13:06:52,"It not so hard just use something like Jekyll to convert it to nice blog format :)

Btw I'm planning to setup jekyll on js2016.tips website
",drakmail,2016-01-28 21:22:21
13,2016-01-19 19:16:01,"@drakmail thanks for the links!
",pmuens,2016-01-28 21:22:21
13,2016-01-20 15:25:05,"I like the 1 tip idea. What about using https://readthedocs.org/ - I love how people write on Github, and I think it's smart because it allows comments and easy updating. With ""read the docs"" the files could still be hosted here but as the text grows it would also be organized, navigable and I don't know too much about ""read the docs"" but I know they use make to build the documentation so maybe that could be extended to output a single .md as well. Get the best of both worlds?
",mrosata,2016-01-28 21:22:21
13,2016-01-24 15:06:40,"Hi guys, I'm working in the theme for jekyll in this [branch](https://github.com/loverajoel/jstips/tree/gh-pages) and the beta is live in [tipsjs.co](http://www.jstips.co/).
After debug and review the site I have in mind change the branch `gh-page` how `master` of this repo.
Now there are one tip per file and a TOP in the readme.

Feedback are welcome!
",loverajoel,2016-01-28 21:22:21
12,2016-01-02 21:22:55,"This repository is not really suited for pull requests: there is only one file to edit and we don't exactly know how. Why not use forms to let people post their tips, then select one every day?
",mallowigi,2016-01-07 01:00:46
12,2016-01-02 21:41:18,"hey @mallowigi,
I thought create a form or even a blog, but developers likes use github and write markdown, that's the reason why I chose this.
In order to add a new tip is easily. Just add your tip with [this format](https://github.com/loverajoel/jstips/blob/master/CONTRIBUTING.md#tip-format) at the top of the [tips list](https://github.com/loverajoel/jstips#tips-list).
Why do you think that isn't clear?

Thanks for your suggestion
",loverajoel,2016-01-07 01:00:46
12,2016-01-07 01:00:46,"close by inactivity 
",loverajoel,2016-01-07 01:00:46
11,2016-01-02 07:20:55,"<S_CODE_TOKEN>

Otherwise, we may have to scroll to the end of the page in order to find the latest tip.
",li-xinyang,2016-01-02 20:35:13
11,2016-01-02 14:13:26,":+1: 
",FlorianBELLAZOUZ,2016-01-02 20:35:13
11,2016-01-02 16:42:55,":+1: 
",CodeBrauer,2016-01-02 20:35:13
11,2016-01-02 20:14:35,"@li-xinyang yes this is a good catch, I will change the order! Thanks for the suggestion. 
",loverajoel,2016-01-02 20:35:13
11,2016-01-02 20:35:13,"Done https://github.com/loverajoel/jstips/commit/7b6229b985340ad9619be2fc7c1cd3bc4f35f4e6
",loverajoel,2016-01-02 20:35:13
10,2016-01-01 15:33:42,"Hey,

I highly suggest you read these: 

http://mrale.ph/blog/2014/02/23/the-black-cat-of-microbenchmarks.html
http://mrale.ph/blog/2012/12/15/microbenchmarks-fairy-tale.html
http://jsperf.com/string-concat-fast/9#comment-1

Most of those microbenchmarks are illusions, I suggest you shift from those performance tips killing code readability to some actually useful tips, I really like the idea of repository :+1:, but not like this.

To my understanding, this microbenchmark is an illusion:

<S_CODE_TOKEN>

Why? because `[0].concat(arr)` is generating a new array which is not used, so the VM doesn't run it at all! That's why it's _98 percent_ faster, because it's not running anything. Most probably if you are using this in some real-life example, they run at the same speed.

JavaScript engines are too smart to require us to use such tricks in order to make them run fast, these tricks just making our code hard to understand.
",mdibaiee,2016-03-05 05:15:05
10,2016-01-01 15:39:17,"Hey,
Well, I agree with @mdibaiee too. I like readable code more than some weird fast code.
I think these parts of performance stuff and optimizations should be done inside the JS engines. :+1: 
",mamal72,2016-03-05 05:15:05
10,2016-01-01 18:19:00,"ALSO: Tips like this do not account for future.  Even if you were 100% right (and agreed the VM means you're not with a mircotest), versions + environment changes means that you're adding a death sentence to your JS tip.  It's better to create tips that will stand the whole year and enrich your repo as it grows.  
",GantMan,2016-03-05 05:15:05
10,2016-01-01 23:21:33,"> JavaScript engines are too smart to require us to use such tricks in order to make them run fast

This. Sometimes, hacks may be faster. But engines strive to make the _correct_ way faster--that's what they're optimizing for. In the long run, as engines improve, hacks will inevitably end up being slower while reducing the readability/maintainability of your code.
",connor4312,2016-03-05 05:15:05
10,2016-01-02 20:28:29,"Hey guys, I understand what you are saying and yes, maybe was a bad tip to start.
The tips will not be always about performance, but thanks for your suggestion I will take care for the future.
@mdibaiee good articles, you are 100% right.

This kind of comments are very usefull and I'm thinking of link this issue with the tip.

I invite you to send some tip and help the community write better code!

Thanks guys
",loverajoel,2016-03-05 05:15:05
10,2016-01-04 14:51:08,"> Why? because `[0].concat(arr)` is generating a new array which is not used, so the VM doesn't run it at all! That's why it's 98 percent faster, because it's not running anything. Most probably if you are using this in some real-life example, they run at the same speed.

It may have a small impact, but the real issue is: the [two benchmark cases](http://jsperf.com/unshift-item-inside-an-array) are not doing the same thing. The `setup()` function initializing the array is called once at the beginning, then the cases are run thousands of times. The `unshift` case is mutating the initial array by prepending 0, causing the initial array to grow each time it is run. Conversely, the `concat` case is not mutating the initial array, so the operation is always done on a very small array, which is way faster.

See [my edition of the benchmark](http://jsperf.com/unshift-item-inside-an-array/4) to have better results. The first case is exactly the same, but the second is changing the initial array in the same way the first one does.

Anyway, I'm not a big fan of microbenchmarks either.
",BenoitZugmeyer,2016-03-05 05:15:05
10,2016-01-04 15:06:17,"@loverajoel Thank you! ‚úåÔ∏è I will add tips as soon as I find some time.
",mdibaiee,2016-03-05 05:15:05
10,2016-01-08 00:21:22,"I don't know precisly how jsperf works, but i think it's better if the test method is the following : http://jsperf.com/unshift-item-inside-an-array/11
Each function use a reserved array and the first function doesn't affect the array for the second function.

Tell me if my comment is stupid because i don't know if jsperf run setup in both case ?
",mvedie,2016-03-05 05:15:05
10,2016-01-11 01:20:38,"Also that test is kinda wrong as it is dependant of the size of the array. If you have a large array then `push` is faster: http://jsperf.com/push-item-inside-an-array/7
",Petah,2016-03-05 05:15:05
10,2016-01-21 19:51:36,"@loverajoel - [Rounding the fast way](https://github.com/loverajoel/jstips#18---rounding-the-fast-way) is like microseconds in difference at best which is complete microperf and also creates two subtle differences in that it operates on a 32bit address space and also is `Math.ceil(-1.5)` for negative numbers. (**I would completely swap out this tip**)
",jonathanKingston,2016-03-05 05:15:05
10,2016-02-05 14:19:50,"This tip is strongly misleading and should be updated according to the comments above (and @BenoitZugmeyer's edit of the jsperf).
",gunar,2016-03-05 05:15:05
10,2016-02-05 14:44:17,"Microbenchmarks are useless unless you are working developing a new language or framework. If that is the case, then you definitely don't need jstips. This should be about legibility and real life usage, not things that 99% of the JavaScripters will not be using in the wild.
",FagnerMartinsBrack,2016-03-05 05:15:05
10,2016-02-06 08:24:52,"imho I find the tip fitting.
JSTips is about stuff that most of us do not know. Who knew, that `~`was doing something useful? Who knew what `~~` does?
I see how other methods are faster and more readable, but as long as there are popular projects out there which use this syntax, it is great to know what it means.
",kurtextrem,2016-03-05 05:15:05
10,2016-02-06 10:59:09,"@kurtextrem I don't really disagree with that statement, it would be nicer to clarify to beginners that it isn't a good format for these x reasons. Cool drills you didn't know about come with warning labels too.
",jonathanKingston,2016-03-05 05:15:05
10,2016-02-06 11:03:48,"@jonathanKingston 

> Although ~~ may perform better, for the sake of readability please use Math.floor().

I think that is enough as warning label - or how would you re-paraphrase it?
",kurtextrem,2016-03-05 05:15:05
10,2016-02-06 11:30:41,"<sub>(For the sake of readability I would say that `Math.floor` could be a one-line module called `round-down`, just saying)</sub>
",FagnerMartinsBrack,2016-03-05 05:15:05
10,2016-02-06 12:04:02,"@kurtextrem hmm sure that line wasn't in when it was on the single pager. It is however missing the issue about it not being equivalent either which is the bigger issue.
",jonathanKingston,2016-03-05 05:15:05
10,2016-02-19 22:05:30,"Guys can you make the required changes for the affected tips in a PR?
",zenopopovici,2016-03-05 05:15:05
9,2015-12-31 09:32:48,"it's not declarative, but still curious about the performance 

<S_CODE_TOKEN>
",s850042002,2016-01-07 09:27:59
9,2015-12-31 11:04:30,"I do a test for you : https://jsperf.com/push-item-inside-an-array/6

<S_CODE_TOKEN>
",FlorianBELLAZOUZ,2016-01-07 09:27:59
9,2016-01-07 09:28:51,"Thanks :+1: 
",s850042002,2016-01-07 09:27:59
8,2015-12-31 04:26:34,,anselmbradford,2016-01-04 15:11:51
8,2016-01-02 20:30:44,"Hey can you make a rebase?
",loverajoel,2016-01-04 15:11:51
8,2016-01-04 15:11:51,"Looks like it's been fixed.
",anselmbradford,2016-01-04 15:11:51
7,2015-12-30 15:36:57,"- Added list with links to tips (as a table of content)
- Some typo and grammar fixing (probably still buggy)
",fjcero,2015-12-30 16:52:10
7,2015-12-30 16:52:04,"thanks @fjcero 
",loverajoel,2015-12-30 16:52:10
6,2015-12-30 10:25:04,,kerwitz,2016-01-07 01:00:06
6,2015-12-30 14:22:36,"Hey @kerwitz thanks for your help with my bad english!
Make a rebase and we can merge this PR.
Thank you very match!
",loverajoel,2016-01-07 01:00:06
6,2016-01-07 01:00:06,"closed by inactivity 
",loverajoel,2016-01-07 01:00:06
5,2015-12-30 08:12:15,"The new tip is in a file called arguments-tip.md and is formatted according to your guidelines.

The tip is about how to avoid a common optimization-killing practice when converting `arguments` into an array.
",Berkana,2016-01-31 21:39:40
5,2015-12-30 23:20:27,"Hey @Berkana I really like this tip, I will merge it and publish the January 2.
Please add your tip at the end of the list of tips in the README.md and update the date.
Please squash your commits.
Thanks
",loverajoel,2016-01-31 21:39:40
5,2016-01-02 20:31:11,"@Berkana ping
",loverajoel,2016-01-31 21:39:40
5,2016-01-04 07:23:28,"Hello. I was busy over the weekend. I'll make the changes on Monday.

(I'm not super fluent in GitHub; give me a wee bit of time to figure out how to squash commits. Unless it's something easy and straight-forward that you can point me to.)
",Berkana,2016-01-31 21:39:40
5,2016-01-04 13:06:34,"Please change your Tip date to 01/05/2016 and number 4.
In this [article](https://ariejan.net/2011/07/05/git-squash-your-latests-commits-into-one/) is explain very easy
",loverajoel,2016-01-31 21:39:40
5,2016-01-06 07:48:26,"Sorry about the delay; I've been extremely busy. I'll make the update on Wednesday evening.
",Berkana,2016-01-31 21:39:40
5,2016-01-13 22:58:04,"@Berkana can you to revive this tip? it's good
",loverajoel,2016-01-31 21:39:40
5,2016-01-14 08:37:27,"Sure. I'll have some friends of mine who have Git skills help me out some time this weekend. Sorry about the many delays.
",Berkana,2016-01-31 21:39:40
5,2016-01-15 12:44:54,"I can do it for you, just let me know
",loverajoel,2016-01-31 21:39:40
5,2016-01-18 07:36:44,"My friend wasn't able to help me, and I'm going to be busy for a while; I tried using the instructions in the article you linked, but it wasn't working or I I was misunderstanding something. Could you handle this for me? I'll have to catch up on refreshing my Git knowledge another time.
",Berkana,2016-01-31 21:39:40
5,2016-01-24 17:24:02,"Hi, how you can see the jstips repository changed his format and the `master` branch now is `gh-pages`, now are based in _jekyll blog format_. You can see live here => [jstips.com](http://www.jstips.co/)
For that reason you should update your tip with this [instructions](https://github.com/loverajoel/jstips/blob/gh-pages/CONTRIBUTING.md).

Let me know if you need some help or have suggestion. All are welcome!

Thanks
",loverajoel,2016-01-31 21:39:40
5,2016-01-31 21:39:40,"Hey @Berkana I move your tip and publish it! thanks for you contribution!
",loverajoel,2016-01-31 21:39:40
4,2015-12-30 06:55:29,"A little improvement :)

Thanks for good initiative!
",Gedmantas,2015-12-30 14:16:54
4,2015-12-30 14:16:52,"I like it, thanks
",loverajoel,2015-12-30 14:16:54
3,2015-12-29 23:17:05,,AlbertoFuente,2016-01-03 17:10:21
3,2015-12-30 11:30:12,"Using `switch` in Javascript is not a good pattern. https://toddmotto.com/deprecating-the-switch-statement-for-object-literals/
",padsbanger,2016-01-03 17:10:21
3,2015-12-30 11:52:33,"Thanks you for your point padsbanger, I know it's not appropriate to use switch on javascript and the problems associated with its use, I'm trying to convey the steps to improve nested if and nested if with several checks in each statement. Maybe I should add the problems associated with the use of switch.
",AlbertoFuente,2016-01-03 17:10:21
3,2015-12-30 12:02:12,"In line with this, I remember that Eric Elliot retracted his advice about not using switch statements https://twitter.com/_ericelliott/status/673011325568610305
",AlbertoFuente,2016-01-03 17:10:21
3,2015-12-30 23:26:51,"@AlbertoFuente hey nice tip, it's true the switch is not a good pattern but you can explain it.
I like the tip, if you edit your tip I will merge this the January 3, please add your tip at the end of the [Tip List](https://github.com/loverajoel/jstips#tips-list) and update the date.
Thanks for your help.
",loverajoel,2016-01-03 17:10:21
3,2015-12-31 09:11:32,"@loverajoel Ok, I will improve it, and thank you for this great initiative. :+1:
@manmadareddy Thank you for your contribution, I will add to the example. :+1:
",AlbertoFuente,2016-01-03 17:10:21
3,2015-12-31 23:35:13,"<S_CODE_TOKEN>
",ghost,2016-01-03 17:10:21
3,2016-01-01 11:29:49,"we want more jstips!!! one jstip a day keps bugs away!
",kotAPI,2016-01-03 17:10:21
3,2016-01-01 12:15:37,"Thanks for improvement @noncentz.
",AlbertoFuente,2016-01-03 17:10:21
3,2016-01-03 01:30:21,"@AlbertoFuente the contributions guidelines changed, and the new tips will be at the top of the list.
Please can you move your tip to the top and squash your commits? 
Thanks
",loverajoel,2016-01-03 17:10:21
3,2016-01-03 08:41:46,"I've already put the tip above the others, I have a question, I see different types of numbering for tips:

# 0 - Insert ...

# 1 - angularjs ...

# 02 - ReactJs ...

It would be nice to specify a standard for numbering the tips.
",AlbertoFuente,2016-01-03 17:10:21
3,2016-01-03 14:32:53,"@AlbertoFuente awesome! the tips numbering should be 00, 01, 02, 03...  I made a mistake with the previous two and now I can't fix because the tweets are going to lost the link(works with the title).
Please add the 03 and don't forget squash your commits.
After that I'll merge the PR.

Thanks man
",loverajoel,2016-01-03 17:10:21
3,2016-01-03 16:56:12,"I'm having troubles with the squash
",AlbertoFuente,2016-01-03 17:10:21
3,2016-01-03 17:07:12,"@AlbertoFuente this is a good article about [squash commits](https://ariejan.net/2011/07/05/git-squash-your-latests-commits-into-one/).
Don't worry I can do the squash for you after merger the PR
",loverajoel,2016-01-03 17:10:21
3,2016-01-03 17:09:40,"Thank you very much, there's something I'm not doing well.
",AlbertoFuente,2016-01-03 17:10:21
3,2016-01-03 17:10:09,"@AlbertoFuente don't worry, thanks for your tip!
",loverajoel,2016-01-03 17:10:21
2,2015-12-29 17:21:06,,madhur,2016-01-18 21:17:33
2,2016-01-02 14:17:37,"Is this pull request going to be accepted? Let me know if any changes are required.
",madhur,2016-01-18 21:17:33
2,2016-01-07 23:34:48,"@madhur sure, please make a rebase and move your tip to top of the tips.
This tip will be merged the 2016-01-09.
Adapt you tip to the [rules](https://github.com/loverajoel/jstips/blob/master/CONTRIBUTING.md)
",loverajoel,2016-01-18 21:17:33
2,2016-01-07 23:35:42,"- Add link to https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators
",loverajoel,2016-01-18 21:17:33
2,2016-01-18 21:18:06,"closed by inactivity 
",loverajoel,2016-01-18 21:17:33
1,2015-12-29 17:11:51,"When giving (especially performance-related) tips, any GC-related implications should be noted. For example, the sample tip in the readme shows a ""faster"" `arr.unshift()` by concatenating arrays. If this operation is performed very often, the GC will be collecting a bunch of temporary arrays that are immediately discarded.
",mscdex,2015-12-30 14:10:57
1,2015-12-29 17:34:51,"Hey @mscdex thanks, yes you are right I will take care about it for the next tips.
Thanks for your tip :smile: 
",loverajoel,2015-12-30 14:10:57
