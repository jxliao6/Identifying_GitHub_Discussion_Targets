issue_num,datetime,body,login,mention_login
986,2017-03-16 07:57:00,"@elchado 

> Make sure guys you are not running the app in another tab. close the terminal and also read the documentation of the app. first install node-inspector running in terminal : node-inspector

wat? This commment has nothing to do with the problem at hand. You must be confusing something.",buschtoens,elchado
986,2017-03-17 07:46:19,"@cyc115 Your error is a bit different. You're running `npm` as root and get file permission errors, weirdly enough. Try installing `babel-node-debug` as a non-root user or switch to a complete root shell with `sudo -s` and then `cd`.

You'll then get the same error as everybody else in this issue.

There's no suitable pre-built binary:


That's why `node-gyp` attempts to build them itself. But it fails accessing the desired temporary working directory, so it attempts to switch to a different one:


This one's missing `node-gyp` configuration files though:



---

By the way: running npm as a root user is a huge threat to your system's security.",buschtoens,cyc115
977,2017-02-28 10:55:47,"@marcbachmann Since most of the smart TV providers are using this tool for their browsers and they won't update their node versions (so we won´t be able to use `node --inspect`), this is the only way that people who develop with TVs can debug properly (the alternative is weinre, which is a really old-fashioned tool in these times).

For these reasons, I think that this project is still relevant.
",frankcortes,marcbachmann
970,2017-02-01 18:38:02,@JeffML this is a duplicate of #903.,gabmontes,JeffML
963,2017-02-06 16:40:47,"Hello @adamzerner 

I`m getting the same problem here.

Run on the terminal: 
**$ sudo lsof -i:5858**

You`ll find the process that is using the port.

And the, kill the process by running:
**$ sudo kill 0000**

Where the 0000 is the number of the process that is using the :5858 port.

Just warning: For me , also running Mac , it solved half of the problem, because I `m still unable to run node-debug without getting an error.",thePedroPaulino,adamzerner
960,2017-02-12 07:52:16,"Same env as @AlexPoirier1 

npm -- version
4.2.0
node --version
v7.4.0

Reverted back to node v6.9.5 and the install worked.",jnwu,AlexPoirier1
956,2016-12-27 01:27:06,@bajtos Thanks and wish you happiness in the year to come. :),sparkleholic,bajtos
950,2016-12-06 22:12:11,@virtualadrian This worked for me. I am using nvm and ran `nvm install 6.9.1` and then `nvm use 6.9.1` and it installed just fine. Thank you.,msholty-fd,virtualadrian
950,2016-12-08 06:54:15,@virtualadrian it installed just fine but it just not works ,lostcodder,virtualadrian
950,2017-02-13 17:32:53,"Won't install on Node 7.5.0 (npm 4.1.2, OSX 10.10.5). 

Same issues/output as @DealPete 

Unfortunately downgrading is not an option for me.
",sandro-pasquali,DealPete
950,2017-03-14 15:01:17,@virtualadrian 's solution work for me.,jimmyko,virtualadrian
947,2016-11-27 21:22:36,"@leegee i'm seeing the same thing! have you found a workaround?

(i'm on node `v5.10.1` btw)",brandly,leegee
947,2017-01-17 08:15:56,"@brandly — Sorry, no, but next time I need this module, I'll take Steve's advice.",leegee,brandly
942,2016-11-02 21:57:03,"@ryanspillsbury90 , just to prevent you from wasting time. This one is unlikely to be merged, repo doesn't look maintained.
",iamfrontender,ryanspillsbury90
942,2016-11-08 20:07:58,"@iamfrontender I saw that your workaround solves the problem of the Enter not working in the console, however, if I assign something new to an already existing variable the value does not get reflected. Do you know why that might happen?

This same thing does not happens if you define the variable in the console, but it does happens for existing ones:

**Variables defined in console**

<pre>
var aVar = 2
undefined
aVar
2
aVar = 3
3
aVar
3
</pre>

_versus_

**Variables already defined in the code** and trying to overwrite its value during a breakpoint:

<pre>
ip
""1.1.1.1""
ip='Hello'
""Hello""
ip
""1.1.1.1""
</pre>
",cgadam,iamfrontender
940,2016-11-09 18:25:27,"@brandonpsmith Yep. `node --inspect`. See it [in action](http://www.mattzeunert.com/2016/06/01/node-v8-inspector-inspect.html).
",nfantone,brandonpsmith
932,2016-11-15 06:37:17,"@samuelcastro @pospi do you guys run into the issue where it opens a new window for the inspector whenever your server reloads? kind of a pain in the but using the --inspect flag for me
",grantgeorge,samuelcastro
932,2016-11-15 06:37:17,"@samuelcastro @pospi do you guys run into the issue where it opens a new window for the inspector whenever your server reloads? kind of a pain in the but using the --inspect flag for me
",grantgeorge,pospi
932,2017-03-12 01:03:55,"@samuelcastro thanks for the tip!

The `--inspect` flag on the Node.js runtime is a great alternative!",Zignd,samuelcastro
930,2016-09-26 23:46:31,"@bajtos Thanks for replying.
Yes you're right. I'm also noticed that the recent node v6.4 is supporting `inspect` option. It's really good news. 
But in my case, I'm using the node in the embedded device which is pretty old version(v0.12.0). So unfortunately I can't use `inspect` option there. :(
",sparkleholic,bajtos
930,2016-11-16 09:31:11,"@naholyr node 7 --inspect supports the profiles tab
",graingert,naholyr
930,2016-12-07 02:01:15,"I'd like to use this node-inspector to debug node.js remotely, But the latest code looks it needs to run node-inspector on the same machine running on the local machine.
Even though I submitted a PR (https://github.com/node-inspector/node-inspector/pull/919) regarding this but it just supports only source viewing and break point.
In order to support other tabs like console, profile and etc, it seems like it should inject some modules to the running nodejs process via getting console object.

@bajtos 
In the case that the running nodejs process doesn't have console object because it substitutes for the other, node-inspect cannot inject modules into.
If injection is not available, the node-inspector cannot support forwarding console output, tabs functions like profile/console/etc.
But I'd like to use this project only for view source and setting break-point except other features.
So may I distribute this as another project name ? (maybe `node-inspector-remote` ?)
I just want to do this through forking the old node-inspect branch.
Please take a look at this (https://github.com/sparkleholic/node-inspector/commit/ef554d8ac26826d74e1113ba7cbe14c47ee4fe65)
",sparkleholic,bajtos
930,2016-12-07 12:22:25,"> @sparkleholic  But I'd like to use this project only for view source and setting break-point except other features. So may I distribute this as another project name ? (maybe node-inspector-remote ?)

Of course! Just make sure to give credit to the original project, this is usually done via `NOTICE` file in project root. See e.g. https://github.com/strongloop/loopback-datasource-juggler/blob/80d2264bc940e764bb8eb0aa3fa12f4ac770fb0d/NOTICE. (Just keep in mind that node-inspector has a different license than the projects mentioned by loopback-datasource-juggler.)

> I just want to do this through forking the old node-inspect branch. Please take a look at this (sparkleholic@ef554d8)

What branch would you like to target? [0.7.4](https://github.com/node-inspector/node-inspector/commit/6b147d968bb7dfd0967665b1d85ee2b64559e999) is the last version I am familiar with. If you like, I can create a long-lived branch `0.7.x` from `v0.7.4` and release `v0.7.5` with your patch. That way you don't have to fork.",bajtos,sparkleholic
930,2016-12-07 16:48:50,"Thanks @bajtos for the fast response.

> What branch would you like to target? 0.7.4 is the last version I am familiar with. If you like, I can create a long-lived branch 0.7.x from v0.7.4 and release v0.7.5 with your patch. That way you don't have to fork.

`0.7.x branch` would be nice :) 
If you do so, I don't have to fork as you mentioned.
Would you let me know when 0.7.x branch is made so that I can make a PR into it. :)
Thanks for your kind feedback.
",sparkleholic,bajtos
930,2016-12-07 18:01:16,"@sparkleholic excellent, here is the branch: https://github.com/node-inspector/node-inspector/tree/0.7.x",bajtos,sparkleholic
930,2016-12-09 02:47:18,"@bajtos I've just made a PR(https://github.com/node-inspector/node-inspector/pull/956) into `0.7.x branch`.
I'll be appreciated if you review it. 
Thanks. ",sparkleholic,bajtos
929,2017-03-21 22:35:51,"@bochen2014 I ran into the same issue, I think it's because bin/mocha spawns a sub-process which executes bin/_mocha

I found that out from this comment at the top of the bin/mocha file:


I was successful running it like so:
",MagicDuck,bochen2014
929,2017-03-22 05:45:55,I see... thanks @MagicDuck ,bochen2014,MagicDuck
928,2016-09-27 08:06:00,"@vird yes,it's work,but breakpoints can't work
",15920353089,vird
928,2016-10-27 09:22:08,"@RocketRooster this is going off-topic for this repository. Try the Node.JS mailing list?
",mightyiam,RocketRooster
918,2016-09-27 07:42:06,"@amelon how can i do this error?
",15920353089,amelon
914,2017-01-07 17:16:13,"@Kreozot I think we need to check if NM.length==0.
`cb(error, NM.length==0 ? null : NM[0].ref);`

This bug prevents me from debugging React Native project. Hope it will be merged soon and all react native developers will benefit.",vinceyuan,Kreozot
914,2017-01-17 03:57:15,@Kreozot Please take a look at my previous comment.,vinceyuan,Kreozot
914,2017-01-17 10:18:39,"@vinceyuan I don't see any difference between checking `error` (which defines when NM.length equals zero) and checking `NM.length` itself. Do you think that checking `NM.length` is more clear way?
",Kreozot,vinceyuan
914,2017-01-17 10:26:26,@Kreozot Yes. I think so. But you are right. Actually there is no difference in this context.,vinceyuan,Kreozot
911,2016-08-27 13:32:46,"@shri3k Thx so much.
I use Express MVC library.The view engine of Express is EJS.
I try to add node.js built-in debugger statement to EJS template.At this  moment,i can break on this breakpoint,but i can not add other breakpoints by clicking siderbar in mouse's left key.
Do you understand what i say?Can you help me?Thx.
",pei-han,shri3k
911,2016-09-02 16:38:52,"Sorry @pei-han. Didn't see this reply. I wouldn't call it Express as an MVC library but rather an http framework. Also, you can pick whichever view engine in express, totally up to you. Like I was saying in my previous reply, you're more likely to see [`response.render('your_view_name' , {some:'data'})`](http://expressjs.com/en/advanced/developing-template-engines.html) rendering on your server-side. You could technically put a breakpoint there and `step in` via `node-inspector` to see what's going on but other than that I haven't seen a clearer way to debug templates (which is possibly why you see people recommend you to not put your app logic in templates if at all possible).
",shri3k,pei-han
907,2016-08-25 01:23:41,"@InfinitiesLoop Right you are, thanks for that!
",bdanmo,InfinitiesLoop
907,2016-08-25 13:34:32,"@bertolo1988 As stated above, this is a duplicate of #905
",superclarkk,bertolo1988
907,2016-08-27 11:17:54,"@przemuh Downgrading to 6.3.1 worked for me on Ubuntu 14.04
",olavk,przemuh
907,2016-10-29 15:10:50,"@ZinLeo send pull request please!
",bertolo1988,ZinLeo
907,2016-11-14 12:18:56,"@ccqgithub @errord 

Maybe node with higher version(6.9.1) built in inspect, and `node-inspect` don't update longer..
**solution**:use `node --inspect yourapp` replace `node-inspect & node --debug yourapp`
It worked for me.
",wujunchuan,errord
907,2016-11-14 12:18:56,"@ccqgithub @errord 

Maybe node with higher version(6.9.1) built in inspect, and `node-inspect` don't update longer..
**solution**:use `node --inspect yourapp` replace `node-inspect & node --debug yourapp`
It worked for me.
",wujunchuan,ccqgithub
907,2016-11-14 13:01:08,"@wujunchuan that's true, very thanks ……
",ccqgithub,wujunchuan
907,2016-11-14 16:37:44,"@ccqgithub Use `node --inspect --debug-brk yourapp` to force the app to pause and wait so you have time to copy the chrome link.
",bertolo1988,ccqgithub
907,2016-11-28 09:33:43,"@wujunchuan worked for me, on node 6.9.1. great


",Vlandmist,wujunchuan
907,2016-11-29 11:35:04,@wujunchuan Worked like a charm! Thanks!!!,ppalladino,wujunchuan
907,2016-12-17 09:31:00,@wujunchuan node --inspect app.js works well! Thanks!,jonchenn,wujunchuan
907,2016-12-19 23:15:45,"@scniro 

Sorry its been a while. I had trouble using the node-inspect module, so I updated node to use the built-in v8 debugger released in [6.3.0](https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V6.md#2016-07-06-version-630-current-fishrock123).

Using the v8 debugger, I then ran into an issue where the dev-tools were loading but no code was loading. This was because I had my hosts files mapping localhost to a different address than default. I changed this mapping and then `--inspect` or `--inspect --debug-brk` worked.

Further, it seems that there has been an update to node in [6.9.2](https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V6.md#2016-12-06-version-692-boron-lts-thealphanerd) to resolve that problem I had with inspector by having inspector now prompt user to use 127.0.0.1 rather than localhost.",Elliot128,scniro
907,2017-02-12 18:28:21,"I have set up the debugging after @Pierre-LoanJ description or I just use node --inspect app.js. Everything looks good so far. I can debug the first start in the app.js. But if I want to debug an endpoint with POSTMAN, I get the error ""Cannot POST /api/trainingsWeek"". The endpoint works if I don't debug.

Do I have to take another address? Or anoter tool than POSTMAN?

![first](https://cloud.githubusercontent.com/assets/25726457/22864836/f128370e-f158-11e6-827f-5e4f73e5e232.JPG)
![second](https://cloud.githubusercontent.com/assets/25726457/22864837/f12ae2a6-f158-11e6-90aa-de0a5ecb13c9.JPG)
![third](https://cloud.githubusercontent.com/assets/25726457/22864838/f141e42e-f158-11e6-8a03-b9acebd07d7a.JPG)",ddg86,Pierre-LoanJ
907,2017-02-13 20:23:09,"+1 for @ddg86 got the same issue and need to solve this....
",BigPun86,ddg86
907,2017-02-17 10:57:53,"It is running. Maybe someone did the same stupid mistake. @BigPun86  @suhailgupta03  @juanlet 

I just used the wrong file and after some research my launch.json was buggy. I am working with Express now and the server set up and the Express set up is devided in two files app.js and www.js. You need to use the www.js as the starting point for debugging.

I use VS Code to debug. To get it running, open your project and the debug view. There should be no configuration available. Click on the little wheel -> choose node.js as the environment

![image](https://cloud.githubusercontent.com/assets/25726457/23062745/4eb9e032-f507-11e6-88dd-2d3af193f070.png)

After that the standard json will be created and looks like this.

![image](https://cloud.githubusercontent.com/assets/25726457/23062809/9930c98c-f507-11e6-86ab-ab0205d4b88e.png)

And then click on the play button with the selection start programm. With that the debugging should run. Now you can use POSTMAN with the same url when you just run your server and the debugger from VS Code should hit your breakpoint.
",ddg86,suhailgupta03
907,2017-02-17 10:57:53,"It is running. Maybe someone did the same stupid mistake. @BigPun86  @suhailgupta03  @juanlet 

I just used the wrong file and after some research my launch.json was buggy. I am working with Express now and the server set up and the Express set up is devided in two files app.js and www.js. You need to use the www.js as the starting point for debugging.

I use VS Code to debug. To get it running, open your project and the debug view. There should be no configuration available. Click on the little wheel -> choose node.js as the environment

![image](https://cloud.githubusercontent.com/assets/25726457/23062745/4eb9e032-f507-11e6-88dd-2d3af193f070.png)

After that the standard json will be created and looks like this.

![image](https://cloud.githubusercontent.com/assets/25726457/23062809/9930c98c-f507-11e6-86ab-ab0205d4b88e.png)

And then click on the play button with the selection start programm. With that the debugging should run. Now you can use POSTMAN with the same url when you just run your server and the debugger from VS Code should hit your breakpoint.
",ddg86,BigPun86
907,2017-02-17 10:57:53,"It is running. Maybe someone did the same stupid mistake. @BigPun86  @suhailgupta03  @juanlet 

I just used the wrong file and after some research my launch.json was buggy. I am working with Express now and the server set up and the Express set up is devided in two files app.js and www.js. You need to use the www.js as the starting point for debugging.

I use VS Code to debug. To get it running, open your project and the debug view. There should be no configuration available. Click on the little wheel -> choose node.js as the environment

![image](https://cloud.githubusercontent.com/assets/25726457/23062745/4eb9e032-f507-11e6-88dd-2d3af193f070.png)

After that the standard json will be created and looks like this.

![image](https://cloud.githubusercontent.com/assets/25726457/23062809/9930c98c-f507-11e6-86ab-ab0205d4b88e.png)

And then click on the play button with the selection start programm. With that the debugging should run. Now you can use POSTMAN with the same url when you just run your server and the debugger from VS Code should hit your breakpoint.
",ddg86,juanlet
907,2017-03-04 04:37:07,"It was not working on Node v.7.6.0.
I did edit that @dacuotecuo recommended in the comments and it works now.",majd-kho,dacuotecuo
906,2016-11-18 10:08:49,"@lynx1983 this only partially fix the problem. Because all my http requests to the node server will hang until timeout. Like i put a breakpoint somewhere, but i didnt.
",tsm91,lynx1983
905,2016-09-07 22:33:46,"Thanks @kmkr but --inspect appears broken if you use the cluster API to fork workers, beware...
",gae123,kmkr
905,2016-09-08 07:32:24,"@kmkr

No they can't. `node --inspect` doesn't work on Windows 64 yet
",wzup,kmkr
905,2016-09-09 19:21:18,"@wzup solution: stop using windows.
",timothyerwin,wzup
905,2016-09-10 00:01:32,"Same issue.
OS: Ubuntu 15.10



Also using node 6.5.0 & npm 3.10.3 with linux brew. My colleague is using Ubuntu as well but nvm with same node/npm releases as mine.  Same issue.

The hack @brannon suggested works for me for now.
",odnarb,brannon
905,2016-09-20 12:51:55,"@LeandroFavero The problem is that hype on Node.js is over, and a lot of temporary solutions became permanent due to the lack of professional developers. Unfortunately `--inspect` is unstable and doesn't work for most of the interested users. I would expect `node-inspector` to disappear the same time as `node-gyp` would get Unicode support and drop Python from dependencies.

For the future commenters: consider using emoji reactions if you have the same setup as previous reporters. There're 2 messages a day with the same content, and it's annoying.
",polkovnikov-ph,LeandroFavero
905,2016-09-20 15:22:35,"@polkovnikov-ph why are you saying stuff like that? lack of professional developers? what is that based on? `--inspect` is new so they still need to patch it up. yes, it sucks that debugging isn't working out right now but they'll get it straightened out. it's unstable because the hype is real.
",timothyerwin,polkovnikov-ph
905,2016-09-22 03:03:58,"@fignuts but what version of node.js are you using?
",polkovnikov-ph,fignuts
905,2016-09-23 08:13:11,"@hgwood, nope, it doesn't fix the real problem. It just fix the uncatch error to output it properly. If you apply the fix, node-inspector will throw another error(`No NativeModule in target scope`)
",e-cloud,hgwood
905,2016-10-19 09:02:04,"@WebReflection It's a bit strange to agree with you, but you're totally correct. It was at least 2 months without a word from a maintainer. The last commit was in April. Looks like native Node's support is anticipated for a long time.
",polkovnikov-ph,WebReflection
905,2016-11-17 12:11:23,"@miroslawmajka FYI `6.3.1` should work too. It's the latest version of node 6 that wasn't instantly crashing.
",WebReflection,miroslawmajka
899,2016-08-03 20:25:07,"Thanks for filing this issue @justin-hackin -- `babel-node-debug` is exactly what I needed.
",uhoh-itsmaciek,justin-hackin
897,2016-07-27 16:35:50,"@cksachdev In my project I type in ""node-inspector --debug-port=5858"" to attach the debugger and host node-services on port 8080. It might be possible that you are typing in a command that exits prematurely. I say that because I get that error every time I close out the node-inspector process.

I'm new to this project and I would normally let an expert respond, but since I noticed no one responded to you in 15 days, I figure my novice answer is better than nothing. Hope that helps.
",wizarrc,cksachdev
873,2016-05-19 00:53:54,"@superclarkk switch to devtool https://mattdesl.svbtle.com/debugging-nodejs-in-chrome-devtools 

node-inspector is not ready for primetime.
",rayfoss,superclarkk
873,2016-06-20 13:27:13,"@LeandroFavero 
Fixed it already, without having to resort to such drastic measures as a full re-install.

On Windows, it seems you **must** issue the `npm install node-inspector -g` command from a shell that has the Node.js installation folder (in `Program Files` by default) as the current working directory, or the installation does not correctly detect which version of Node is installed and thus which version of the debugger to install. (At which point it falls back on a downright _ancient_ version of the v8 debugger, iirc; 0.15.&ndash;something...)
",rjgotten,LeandroFavero
871,2016-05-11 22:21:50,"@PeterWoodITG Sorry to ask, but how should I install this specific version that you have linked?
",Timer00,PeterWoodITG
871,2016-05-12 15:42:40,"@Timer00 `npm install git+https://github.com/PeterWoodITG/node-inspector.git -g`
",cosmosb,Timer00
871,2016-05-12 22:11:06,"Great! It works, thank you @cosmosb and @PeterWoodITG 
",Timer00,PeterWoodITG
871,2016-05-12 22:11:06,"Great! It works, thank you @cosmosb and @PeterWoodITG 
",Timer00,cosmosb
869,2016-05-11 15:58:18,"@mattkime I'm also seeing nearly the exact same error on my machine. 
- Running Mac OS X Yosemite (10.10.5)
- Node v5.11.1
- npm v3.8.6
- v8-debug v0.7.7

Also attached is the npm-debug log (slightly anonymized). 
[npm-debug.log.zip](https://github.com/node-inspector/node-inspector/files/259685/npm-debug.log.zip)
",romellem,mattkime
868,2016-05-11 16:07:26,"@markmcdermid thanks, that worked for me.
",romellem,markmcdermid
868,2016-05-11 20:01:54,"Tried @markmcdermid's version, but unfortunately still breaking (different error) on Node 6.1



Anyone else having the same issue?
",jamesdixon,markmcdermid
864,2016-05-10 13:40:30,"Thanks @rcosnita, that works
",griffinmacias,rcosnita
864,2016-05-13 21:32:00,"As part of my work i've had to track down what was causing this issue in our setup (not node, but we use node inspector). The culmination of that investigation was https://bugs.chromium.org/p/v8/issues/detail?id=5010.The symptoms were the same, and as @rcosnita they seemed to improved when using --debug-brk in some cases. So i suspect they are likely the same, im going to start looking to fix this on monday. 
",jaredwy,rcosnita
864,2016-05-14 06:26:23,"Same error here on node v6.1.0 & node-inspector v0.12.8; using --debug-break

As @alfg noted, it only happens (for me at least) when the breakpoint is within a callback that is reached after a different breakpoint outside the callback is encountered. Trying now to make a reproducible example
",blake-regalia,alfg
864,2016-05-19 15:02:27,"@LeandroFavero remove `node_modules` and run `npm install`. (Or just remove the `node-inspector` module)
",wokalski,LeandroFavero
864,2016-05-19 15:16:34,"@wokalski That is not the answer. The v8 fix has not been integrated into node yet.
",superclarkk,wokalski
864,2016-05-19 15:17:02,"I'm still having the same issue with node 6.2, illegal access while
debugging inside of a request callback :(

_Enzo Luis Stróngoli_
_NodeJS Developer_
_http://www.turismocity.com.ar http://www.turismocity.com.ar/_
_https://www.linkedin.com/in/enzostrongoli
https://www.linkedin.com/in/enzostrongoli_
_strongolienzo@gmail.com_ strongolienzo@gmail.com
_enzo@turismocity.com enzo@turismocity.com_

2016-05-19 12:02 GMT-03:00 Wojtek Czekalski notifications@github.com:

> @LeandroFavero https://github.com/LeandroFavero remove node_modules and
> run npm install. (Or just remove the node-inspector module)
> 
> —
> You are receiving this because you commented.
> Reply to this email directly or view it on GitHub
> https://github.com/node-inspector/node-inspector/issues/864#issuecomment-220351974
",theHazzard,LeandroFavero
864,2016-05-19 17:29:37,"@superclarkk It is not a fix for illegal access, but it is a fix for @LeandroFavero issue, as far as I know.
",wokalski,superclarkk
864,2016-05-19 17:29:37,"@superclarkk It is not a fix for illegal access, but it is a fix for @LeandroFavero issue, as far as I know.
",wokalski,LeandroFavero
864,2016-05-19 17:34:07,"sorry, I thought that was for this issue

_Enzo Luis Stróngoli_
_NodeJS Developer_
_http://www.turismocity.com.ar http://www.turismocity.com.ar/_
_https://www.linkedin.com/in/enzostrongoli
https://www.linkedin.com/in/enzostrongoli_
_strongolienzo@gmail.com_ strongolienzo@gmail.com
_enzo@turismocity.com enzo@turismocity.com_

2016-05-19 14:30 GMT-03:00 Wojtek Czekalski notifications@github.com:

> @superclarkk https://github.com/superclarkk It is not a fix for illegal
> access, but it is a fix for @LeandroFavero
> https://github.com/LeandroFavero issue, as far as I know.
> 
> —
> You are receiving this because you commented.
> Reply to this email directly or view it on GitHub
> https://github.com/node-inspector/node-inspector/issues/864#issuecomment-220395511
",theHazzard,superclarkk
864,2016-05-19 17:34:07,"sorry, I thought that was for this issue

_Enzo Luis Stróngoli_
_NodeJS Developer_
_http://www.turismocity.com.ar http://www.turismocity.com.ar/_
_https://www.linkedin.com/in/enzostrongoli
https://www.linkedin.com/in/enzostrongoli_
_strongolienzo@gmail.com_ strongolienzo@gmail.com
_enzo@turismocity.com enzo@turismocity.com_

2016-05-19 14:30 GMT-03:00 Wojtek Czekalski notifications@github.com:

> @superclarkk https://github.com/superclarkk It is not a fix for illegal
> access, but it is a fix for @LeandroFavero
> https://github.com/LeandroFavero issue, as far as I know.
> 
> —
> You are receiving this because you commented.
> Reply to this email directly or view it on GitHub
> https://github.com/node-inspector/node-inspector/issues/864#issuecomment-220395511
",theHazzard,LeandroFavero
864,2016-05-19 18:14:16,"@wokalski I have the same issue as @LeandroFavero and also the illegal access issue (I presume they are connected). Deleting and reinstalling all modules does not fix it.
",superclarkk,LeandroFavero
864,2016-05-19 18:14:16,"@wokalski I have the same issue as @LeandroFavero and also the illegal access issue (I presume they are connected). Deleting and reinstalling all modules does not fix it.
",superclarkk,wokalski
864,2016-05-19 18:47:52,"@superclarkk No, they are not connected afaik. I had this issue because I installed `node-inspector` with some version of `node` and used it with other. I'm sorry if my tip is misleading!
",wokalski,superclarkk
858,2016-06-10 17:40:45,"@3y3 @else we too would be interested in the former use case - debugging a remote node process while running node-inspector locally. Is that a feature which you are working on already or would be willing to add?
",mdhume,else
846,2016-07-19 23:06:35,"Thanks for the note @ntanitime .

I just updated Chromium from 50.0.2661.102 to 51.0.2704.79 and it fixed this for me.
",poldridge,ntanitime
841,2016-11-21 09:46:05," @AgentME thx ,it works for me.",wilbur1991,AgentME
833,2016-05-19 16:29:17,"@eliavmaman I removed/reinstalled all of my project's node modules and that seemed to take care of missing files error, but the node debugger is still not attaching to my front end app. Not sure what's going on but will keep playing around with it.
",kevinperumal,eliavmaman
833,2016-06-13 13:27:02,"@kevinperumal 10x but still having this issue.
",eliavmaman,kevinperumal
832,2016-06-28 03:58:58,"@mdotasia Do you mind sharing exactly how you compile your ES6 code and how you test it? I can't seem to get the combination of stuff right to get Babel + Mocha + node-inspector working in order to debug ES6 code with Mocha. Thanks!
",wafisher,mdotasia
832,2016-09-25 10:24:20,"@wafisher 
@mdotasia mentioned a couple of ways of compiling es6 using babel and then testing it with mocha.

the easist way (and most common way) is either
1. mocha --require setup.js  your_test.js  , while  in setup.js, you have  require('babel-register')(); 
2. mocha --compilers js:babel-register your_test.js 

you open the first terminal running node-inspector, then you startup mocha with --debug-brk, and it works on windows . I've tested it today, works fine (there is some performance issue, which I raised a issue #929 

after I read @mdotasia 's description, I tried the second approach, which is to pre-compile/transpile es6 to es5 using babel cli. 



which will transpile your es6 source code and put it into compiled dir.

you then follow the same process to debug it. and performance is improved. I have also verified this.

I just have one question: why node-debug doesn't work??? why must run node-inspector in separate teminal??
",bochen2014,mdotasia
832,2016-09-25 10:24:20,"@wafisher 
@mdotasia mentioned a couple of ways of compiling es6 using babel and then testing it with mocha.

the easist way (and most common way) is either
1. mocha --require setup.js  your_test.js  , while  in setup.js, you have  require('babel-register')(); 
2. mocha --compilers js:babel-register your_test.js 

you open the first terminal running node-inspector, then you startup mocha with --debug-brk, and it works on windows . I've tested it today, works fine (there is some performance issue, which I raised a issue #929 

after I read @mdotasia 's description, I tried the second approach, which is to pre-compile/transpile es6 to es5 using babel cli. 



which will transpile your es6 source code and put it into compiled dir.

you then follow the same process to debug it. and performance is improved. I have also verified this.

I just have one question: why node-debug doesn't work??? why must run node-inspector in separate teminal??
",bochen2014,wafisher
822,2016-02-09 21:05:12,"Hello @azellsworth , thank you for contribution.

Unfortunately we can't change something in `front-end` folder, because it updates automatically sometimes.
Look at `front-end-node` folder, there placed all our overrides.

I'd like your idea. But we need some changes here.

Instead of injecting in `registerCommand` func, you can define your own event (look at `showConsole`), which will be sent to front-end on start of `getRecourceTree` processing (and maybe in progress).

So `getResourceTree` in `lib/PageAgent` will looks somethind like that:



Event info is optional solution. But if you want, you can add real progress by sending `getResourceTreeProgress` after each `iterate` call in `lib/ScriptFileStorage.js`

Also would be nice to use DevTools api to create message. You also can use css instead of direct styling.
The example of css injection exists in `front-end-node/settings`
",3y3,azellsworth
817,2016-02-04 08:57:39,"@gzzhanghao , thank you for pr. Can you please retarget it to `next` branch instead of master.
`Fix this pointers in DebuggerAgent` - resonable
`Ignore errors when reading files` - reasonable
`Gracefully exit after receiving SIGINT` - reasonable, but remove console.log
`Fix restart frame handle` - outdated. Implemented in injection.
`Fix ConsoleAgent with large stack trace` - I will describe problem after your rebase

I prepare also description of roadmap. Coming soon.
",3y3,gzzhanghao
795,2016-05-10 18:45:06,"just ran into same issue, just like @alveshelio  suggested fixed with 


",serkanh,alveshelio
778,2015-12-04 13:27:44,"@x-yuri Node 5 is using npm 3, which is considered a rewrite. It's using sane permissions for files, impacting modules that relied on bad permissions.
",KenanSulayman,x-yuri
778,2015-12-04 13:38:29,"Yeah, that worked. @3y3 and @KenanSulayman, thank you!
",gunar,KenanSulayman
776,2015-11-20 09:17:03,"@xekoukou - could you give details of your environment?
",superclarkk,xekoukou
776,2015-12-06 20:43:37,"As @fiznool says this is a problem with C++ compiler in subpackages.
Anyway node-inspector installs successfully in this case.
Please retarget this issue to package there it happens.
",3y3,fiznool
776,2016-02-18 18:00:36,"Maaaany thnks @superclarkk !! This solution about `g++` and `gcc`version 5 works for me!! About this, `v8-debug` and `v8-profiler` were installed :)

+1
",mfdeveloper,superclarkk
776,2016-03-08 06:27:45,"Thank you @superclarkk! I was seeing this issue on Travis-CI, so I had to update your formula slightly to make it non-interactive. From my .travis.yml:


",kalahari,superclarkk
776,2016-06-05 10:25:54,"@Re0h, I upgraded to gcc 5.4.0 on CentOS 6 (had version 4) and it still fails.
",ronenm,Re0h
776,2016-06-05 12:37:09,"@ronenm @Re0h Apparently, this error does not necessarily mean that the npm installation failed as a whole. As long as npm ends it report with a list of installed dependencies, you are good to go. I was at least, my project runs just fine after I fixed an error totally unrelated to this one.
",Re0h,ronenm
776,2016-06-05 12:37:09,"@ronenm @Re0h Apparently, this error does not necessarily mean that the npm installation failed as a whole. As long as npm ends it report with a list of installed dependencies, you are good to go. I was at least, my project runs just fine after I fixed an error totally unrelated to this one.
",Re0h,Re0h
772,2015-11-10 16:00:37,"@shitiven I added an [option](#750) you may want to look at.  
It adds an option that will ignore the directories and files that you pass in using glob notation.
Example. 
`node-debug --ignore ""**/node_modules/**"" <filename>`

I use it to ignore node_modules which makes my debug startup time go from close to a minute down to a few seconds.
",zanemcca,shitiven
771,2016-01-08 19:39:57,"@amcdnl While I am the author of `babel-node-debug` (and I plan to update it to babel@6 compatibility soon), this specific issue is outside my expertise since I'm only mildly familiar with the `node-inspector` and `babel` projects. Unfortunately, this is an issue for the babel or node-inspector developers to sort out.
",CrabDude,amcdnl
767,2016-02-10 21:58:50,"@rainabba , you have slow startup on node-inspector 0.12.6?
",3y3,rainabba
767,2016-03-11 22:29:55,"@asselin , yes, pr will be acceptable.
",3y3,asselin
766,2017-01-16 10:31:01,"@jcollum  tried it few weeks ago, was way too basic compared to node-inspector",a7madgamal,jcollum
760,2015-11-06 09:38:43,"@shreyasubale I had that problem too; it seems to be caused by a buggy version of the node-touch package. If you add the newest version of node-touch to your project (npm install touch), it should get you past that particular issue. 
",OBJohn,shreyasubale
760,2015-12-06 20:51:07,"@iliakan , you original problem can be fixed by:


",3y3,iliakan
756,2015-10-05 01:59:08,"@vladikoff Did you ever find a workaround for this issue? I'm hitting it as well.

FWIW, this error started occurring for me after setting a breakpoint then reloading the browser.

Update for the next dev: Clearing my localStorage didn't fix the issue, but an uninstall / install of node-inspector did.
",ElliotChong,vladikoff
756,2016-01-02 00:06:09,"@Mule52 use `ps aux | grep node` and kill the process  that you were trying to debug. That's the only thing that ever works for me. 
",jcollum,Mule52
756,2016-01-02 00:26:15,"@jcollum, thanks for the response. 

Can you help me understand if I am debugging correctly? Via terminal (Linux Mint), I run ""node --debug server.js"" without the quotes. Then in another terminal window (using tmux), I run ""node-inspector &"" and open up my chrome dev tools. I then set breakpoints via the node-inspector dev tools. I refresh my client app in another chrome window and try to trigger the breakpoints I just set. I seem to hit these intermittently. I have not found a reliable way to debug this setup as of yet. 

Am I on the right track with my debug setup/init commands?

Thanks.
",Mule52,jcollum
756,2016-02-04 21:25:38,"I've been doing a lot of debugging the last few days and this bugfix has helped a lot. The tool is much more stable on my Mac now -- I never have to go and kill the NI process and my node processes and start from scratch. Thanks for solving this  issue  @svicalifornia  
",jcollum,svicalifornia
756,2016-02-05 00:50:45,"@jcollum You're welcome!
",svicalifornia,jcollum
756,2016-02-05 01:04:11,":clap: :+1: Many thanks @svicalifornia! :smile: 
",ElliotChong,svicalifornia
754,2015-09-29 08:58:43,"@rumkin , can you try



it can be helpful
`--build-from-source` is important in this case, all other flags are optional.
",3y3,rumkin
753,2015-10-08 14:04:57,"I had similar issue with `npm install java` on Centos 6.4... related to `node-gyp rebuild`

Got it resolved by using `python27`, instead of `python 2.6.6`. Thought of sharing it here, if it helps some one.

@funkyLover did you have to upgrade python by any chance?
",WarFox,funkyLover
753,2015-10-13 03:27:07,"@WarFox 
No, I am sure I didn't upgrade pyhton or make other similar operation,
",funkyLover,WarFox
752,2015-09-22 16:06:58,"Hello, @phdunham , thank you for verbose description.
I tried to reproduce your problem on Mac for node 0.12.7 and 4.0.0, but all works fine.
So I need some more time to check this code on Windows.
",3y3,phdunham
752,2015-10-03 16:11:09,"Hello @phdunham , unfortunately Marko's branch is only backporting of changes from master. So it will not be useful.

I tried to reproduce this issue on Win8 in VirtualBox, but all works fine... Do you have any machine with Win8  to confirm what there is no problems.

The third step - deeper debugging on your Win7 machines. It's no so hard to debug debugger =)
The best in this situation to have stack trace of caused error, if it doesn't possible use console.log to find a place of error.

So you need to `git clone` node-inspector sources and add some logs to files in `lib/Injections/NetworkAgent.js`. It may be reasonable to use `console._log` because `console.log` was wrapped by node-inspector.
",3y3,phdunham
750,2015-11-14 03:34:00,"@zanemcca would this speed up load times?

@3y3 @bajtos or someone can this be looked at?
",DylanPiercey,zanemcca
750,2016-01-15 02:20:28,"Thanks for the test @joeyrobert 
",zanemcca,joeyrobert
750,2016-02-08 18:36:46,"@zanemcca , do you see any issues in tree? Maybe I ignore some files which should not to be ignored?
",3y3,zanemcca
749,2015-09-19 22:44:47,"I saw that error and suspected it might be the issue.  I probably should have dug a little deeper before posting an issue on here.  However, I appreciate your reply.  I followed your steps and after installing python, node-gyp, VS and C++ compiler, I have node inspector up and running again.  Thanks @jamescostian, you're awesome!!!!! :)
",maityarkodeb,jamescostian
747,2015-09-15 22:41:08,"Hello @jcollum 
It will be useful to see your [debug logs](https://github.com/node-inspector/node-inspector/wiki/Debug-logs)
",3y3,jcollum
745,2015-09-17 12:32:36,"@QuinDennis , v46 is not a version of node. It is an ABI for detecting used V8 version.
",3y3,QuinDennis
743,2015-10-03 21:25:07,"@natdm , please update your c++ builder
",3y3,natdm
742,2015-12-10 18:04:44,"@mike1808 , you partially right here:

> when you unpause your debugger and something is printed in your console the node-inspector's backend sends the message to the front-end to show that printed log in your console.

But node-inspector do it only for internal errors. When we use F8, inspector sends two `continue` requests to server instead of one. I already try to fix this error, but maybe I do it in new frontend, which is not released now.
",3y3,mike1808
740,2015-09-10 18:41:05,"@Webkadabra , can you try to globally install `node-pre-gyp`


",3y3,Webkadabra
740,2015-09-14 15:51:46,"https://github.com/appveyor/ci/issues/402 should be fixed for prebuilt binaries for windows.

@noscripter , can you try to reinstall node-inspector now. I bump v8-profiler and v8-debug versions.
If error still exist will be reasonable to open bug in npm repository.
",3y3,noscripter
729,2015-08-28 18:33:00,"@michae1 , thank you for contribution.
There is one indentation case to fix. All other LGTM.
Please fix minor bugs and squash all changes to single commit.
",3y3,michae1
721,2015-09-06 20:53:16,"Since 0.9.0 we use https://github.com/benderjs/browser-launcher2 to start the browser, and make sure it's Chrome/Chromium/Opera (i.e. the browsers that can properly render node inspector; we detect installed browsers in the system and choose the most appropriate one; earlier we used `opener` module which just delegated opening the browser to the OS, which would open the defaul browser, which could have been e.g. Firefox) and this could be the reason why the behavior has changed.

`browser-launcher2` actually does a bit more than just launching a browser, for instance it creates a new profile for Chrome in a subfolder of `~/` - this is probably the issue that @CalvinScott reported (i.e. Chrome that was opened was the new profile created by browser-launcher, not your original profile; you should be able to open your original profile of Chrome normally)
",jakub-g,CalvinScott
718,2015-08-08 10:54:21,"@jkrems , thank you for idea. We use the same strategy now, but we are searching a native `require` function in `process.emit` func [link](https://github.com/node-inspector/node-inspector/blob/master/lib/InjectorClient.js#L5-L8)

This strategy has some side effects - we need to pause debugger and filter this break event on NI stage. It is more complicated than your solution - we need to `step out` for find a `require` in previous frame.

So it may be reasonable to update this part with your solution. Can you provide information about compatibility between node versions? 
",3y3,jkrems
718,2015-08-08 21:57:37,"@jkrems , thank you again for code snippet. I'll use this experience some later - at current time there is some critical features which I need to implement (es6 structures debugging). I keep this issue opened to don't loose this idea.

Now when you implemented this entry point, you may be interested in NI's magic - [v8-debug](https://github.com/node-inspector/v8-debug)
",3y3,jkrems
705,2015-07-28 07:41:25,"@ackalker , thank you for contribution.
PR is ready to merge, but I need @auchenberg feedback.

@auchenberg , is this change sensible for you?
",3y3,ackalker
703,2015-07-26 22:41:27,"Thanks for this issue @antonosmond , how you can see `node-inspector` 0.11.0 was released with new feature - **Network debugging**.
So, we wrap a part of code in app to grab information about http requests. This is possible that this new feature is not so stable as expected.
Can you please install `node-inspector@0.10.*` to confirm that problem is in Network wrapping. This is first important step.
The second step - can you please inspect what's wrong with wrapping:
1. You can look on headers and data which sended to AWS server (fiddler or wireshark will be helpful)
2. You also can look that node-inspector says about sended data
",3y3,antonosmond
703,2015-09-06 13:18:01,"I'm getting this same problem with dynamodb and the CRC checking failures mentioned by @dayglo 
",zephor,dayglo
699,2015-07-29 11:01:26,"Same problem here with scrolling (and also the starting point that @chk- mentioned).
",asgerhallas,chk-
699,2015-08-01 00:23:42,"@juuxstar thanks! Applying those styles to the main div (first and only child of body) really helped, not sure if the layout issues are completely gone, but at least node-inspector isn't impossible to use now.
",tlancina,juuxstar
699,2015-08-04 21:55:25,"+1 Thanks @juuxstar @tlancina The fix works, I've made a pull request with it.

Until the pull request is merged and version is bumped you can install it via
 `npm install -g https://github.com/akras14/node-inspector.git`
if you don't want to change the css itself :)
",akras14,tlancina
699,2015-08-04 21:55:25,"+1 Thanks @juuxstar @tlancina The fix works, I've made a pull request with it.

Until the pull request is merged and version is bumped you can install it via
 `npm install -g https://github.com/akras14/node-inspector.git`
if you don't want to change the css itself :)
",akras14,juuxstar
696,2016-06-16 16:52:47,"@heldinz have you made any progress on this? do you need help? 

I'd really like to see this working. It seems so essential to modern development that I'm a bit confused how it could still be an outstanding issue.

if nothing else, i'd really appreciate it if i could grab the branch you're working on.
",mattkime,heldinz
696,2016-06-17 10:34:09,"@mattkime I didn't get past the point described above, unfortunately. I will push to my fork later today though, hopefully you will get something out of it.
",heldinz,mattkime
696,2016-06-17 17:24:21,"@mattkime I've pushed my stuff to [my fork](/heldinz/node-inspector/tree/extensions).
",heldinz,mattkime
694,2015-07-23 11:32:36,"https://github.com/benderjs/browser-launcher2/blob/master/lib/config.js

FYI Here is how the config file name is evaluated

On Thursday, 23 July 2015, Yury Puzynya notifications@github.com wrote:

> @jakub-g https://github.com/jakub-g , any thoughts?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/node-inspector/node-inspector/issues/694#issuecomment-123895474
> .
",jakub-g,jakub-g
693,2015-07-27 15:52:37,"@stefanmayer13 I'm not using phantomjs though. I wonder what the issue is in my case.
",samholmes,stefanmayer13
693,2015-07-28 06:18:23,"@samholmes Even if you don't want to use phantomjs, node-inspector is checking it in the function checkOthers in detect.js. Try adding a console log of the process name in detect.js before line 124 and see which command is causing the issue. At least it helped me to find the root cause on my system.
",stefanmayer13,samholmes
693,2015-07-28 21:10:41,"@stefanmayer13 If node-inspector is checking phantomjs in the function checkOthers in detect.js, then why isn't phantomjs a dependency in node-inspector's package.json (this appears to be a bug)?

Also, I cannot find detect.js in my installed node-inspector. Can you help me to find it?
",samholmes,stefanmayer13
693,2015-07-28 21:39:30,"@samholmes It says in the stack trace you posted where the detect.js file is located: /usr/local/lib/node_modules/node-inspector/node_modules/biased-opener/node_modules/browser-launcher2/lib/detect.js
",stefanmayer13,samholmes
693,2016-10-13 17:30:51,"@stefanmayer13 and how did you fixed that phantomjs issue? I'm having the same problem but don't know if I have to update phantomjs to fix it or what to do. I'm not using phantomjs but node-inspector it is trying to check its version.
",figalex,stefanmayer13
685,2015-06-19 08:58:15,"@wdbacker , thank you for bug report. I added it to main work line.
",3y3,wdbacker
684,2015-06-23 22:36:18,"I'm :+1 here.

@auchenberg , are you ready to implement it?
",3y3,auchenberg
683,2015-06-18 18:47:54,"@jarthorn , all files in `front-end` folder is copy-paste from webkit sources. So, I think this question should be retargetted to blink source. Anyway I'm not friendly with licensing theory (I know MIT and GPL, but I don't know what is the difference between them :smile: )
@bajtos , any thoughts here?
",3y3,jarthorn
682,2015-06-29 15:40:10,"@sagittarius89 , can you confirm this issue on node-inspector 0.11.0?
",3y3,sagittarius89
682,2015-07-04 08:58:55,"@sagittarius89 , i got the same problem, no source files from node-inspector. node-inspector version 0.11.1, node version 0.12.3
",meikidd,sagittarius89
681,2015-06-16 23:51:34,"@zertosh , thank you for contribution. I'll merge it soon.

I see that you are `babel` organisation member. How about fix this issues also in `babel` itself?
I can target you to previous discussion about sourcemap problems.
",3y3,zertosh
678,2015-06-18 13:27:15,"@jakedsouza , can you go to this path and check that there is no `node-v44-darwin-x64` folder.
Maybe any other folder exists instead of this one?
",3y3,jakedsouza
678,2015-07-19 14:32:28,"@thejones yeah, i had the same problem this is the step to avoid `nvm reinstall-packages 0.12.5`

install all your global packages manually and everything will work
",tsm91,thejones
678,2015-10-19 02:51:34,"@cold-logic pointed me in the right direction, though I don't know where `babel-node-debug` came from.
1. Enter `/usr/local/lib/node_modules/node-inspector/node_modules/v8-profiler`
2. Run `npm run install`
3. Enter `/usr/local/lib/node_modules/node-inspector/node_modules/v8-debug`
4. Run `npm run install`

No errors after that.
",spamguy,cold-logic
678,2015-11-03 16:06:09,"@trevorhutt  error in my case
`Error: Module version mismatch. Expected 46, got 14.`
",echorohit,trevorhutt
678,2015-11-12 18:29:50,"@spamguy Thanks, that worked perfectly
",ShirajG,spamguy
678,2015-11-13 06:20:24,"@ShirajG your node version?
",echorohit,ShirajG
678,2015-11-14 21:18:50,"Thanks @spamguy, that fixed it!
",nickperkinslondon,spamguy
678,2015-11-17 20:28:08,"Thanks @spamguy worked fined for me!
Node v5.0.0
Npm v3.3.7
Node-inspector v0.12.3
",brunettdan,spamguy
678,2015-11-25 23:07:58,"Same issue here guys
Node v5.1.0
npm v3.3.12
Node Inspector v0.12.3
@spamguy 's fix didn't seem to do it, in the browser I am still getting:


",thiagodebastos,spamguy
678,2015-11-27 02:57:27,"I've got a work around based on @3y3 and @jakedsouza discussion above. 
Grab the expected files from S3 and add them to the desired location.
for Error: Cannot find module '/usr/local/lib/node_modules/node-inspector/node_modules/v8-debug/build/debug/v0.5.1/node-v11-darwin-x64/debug.node'
1) Get valid file from https://node-inspector.s3.amazonaws.com/debug/v0.5.1/node-v11-darwin-x64.tar.gz
2) decompress and place in /usr/local/lib/node_modules/node-inspector/node_modules/v8-debug/build/debug/v0.5.1/

when I restarted, I got a similar error for 'node-v11-darwin-x64/profiler.node', used the same process, restarted, and it all appears to be working. First time using the application so take it with a grain of salt.

find whatever node-inspector version you need here https://node-inspector.s3.amazonaws.com/
",jjrasche,jakedsouza
678,2015-11-30 20:39:02,"@jjrasche Thanks! Your solution is works for me. XUbuntu 14/16, Fedora 22.
",VoidVolker,jjrasche
678,2015-12-02 17:16:32,"@echorohit I was using 4.0.0 at the time, but via NVM
",ShirajG,echorohit
678,2016-02-01 15:31:27,"@natew , I see that you try to install outdated version of v8-debug. I can't understand how this can happen, but NI 0.12.5 requires `v8-debug` 0.7.0

Maybe `npm cache clean` will be helpful
",3y3,natew
678,2016-05-27 01:40:14,"@spamguy Tks!
",nandofalcao,spamguy
678,2016-11-21 04:00:16,"@spamguy Thanks, it work!",uncledu,spamguy
677,2015-06-18 23:43:21,"@bajtos , I fixed targetted issues. Unfortunately changes history was vwry dirty, so I prefer to squash all fixups.

What happened here:
- added `debug.convert`
- `response.push` used to handle `dataReceived` and `finishLoading` events.

@bajtos , @jkrems all your issues are fixed. It's ready to next round of review. First round was very useful.
",3y3,bajtos
677,2015-06-19 11:04:40,"LGTM. I think it's ok to squash most (all?) commits into a single one. Also please check why the CI build is failing, whether its related to the changes made in this PR.

I also think it's ok to address the two edge cases mentioned in @jkrems's comment in a new pull request, but feel free to fix them in this PR too. Whatever works best for you.
",bajtos,jkrems
677,2015-06-25 12:38:37,"Ok. I partially fixed issues from last @jkrems comments. I switched to new entry point for wrapper, and now I have some questions for discussion - look at code below.

From `_http_client.js` with my comments



@jkrems , about your gist example. 



There you target me to situation when socket will be never initialised.
I think that current realisation (where we send `requestWillBeSent` after socket initialisation) is correct, otherwise we can't say what request really will be sent =)
All other cases from your gist are handled in new commits.

@bajtos , I fixed tests and squashed all changes to three commits:
- implementation
- backported changes
- tests

Please review `squash!` changes. There I fixed a completely missed `responseFailure` and checked behavior changing when we listen on `error` and `response` events.
",3y3,bajtos
677,2015-06-25 12:38:37,"Ok. I partially fixed issues from last @jkrems comments. I switched to new entry point for wrapper, and now I have some questions for discussion - look at code below.

From `_http_client.js` with my comments



@jkrems , about your gist example. 



There you target me to situation when socket will be never initialised.
I think that current realisation (where we send `requestWillBeSent` after socket initialisation) is correct, otherwise we can't say what request really will be sent =)
All other cases from your gist are handled in new commits.

@bajtos , I fixed tests and squashed all changes to three commits:
- implementation
- backported changes
- tests

Please review `squash!` changes. There I fixed a completely missed `responseFailure` and checked behavior changing when we listen on `error` and `response` events.
",3y3,jkrems
677,2015-06-26 13:20:25,"@jkrems , the output for your example (`throw err;` changed to `console.log(err);`):
Also you can see that you use wrong options object (`pathname` instead of `path`)

![output-network](https://cloud.githubusercontent.com/assets/3931155/8378031/e872f6c8-1c1e-11e5-83dd-ab09169dd8f8.png)
![output-console](https://cloud.githubusercontent.com/assets/3931155/8378033/eadcd73a-1c1e-11e5-874e-b1a47bc828d7.png)

Is this result acceptable, or I need fix something here?
",3y3,jkrems
671,2015-07-14 02:31:19,"I get the same probelm as @andyburke with 



in the console.  I tried ""sudo node-inspector && sudo node --debug-brk port 5858 -p 9362"" but that does the same.
",sadtaco,andyburke
671,2016-02-12 13:19:06,"Same as @datanotion for me. Everything was working fine and now I'm seeing:

`Assertion failed: Unknown experiment canvasInspectionRuntime._assert @ Runtime.js:358`

**Update 22nd Feb 2016**:

My issue was caused because I was using the wrong url... not sure when this was updated. I was previously using a url like this:



Because it was saved in my browser history I just kept using that, and didn't realise the console was now spitting out a different url:



With the new url node-inspector loads fine.
",awolski,datanotion
662,2015-06-05 21:52:08,"Thanks @xErik this workaround fixed my problem also.
",jlazerus,xErik
662,2015-06-10 11:51:28,"@jcollum , is `sudo npm install -g node-inspector --unsafe-perm` helpful for you?
",3y3,jcollum
657,2015-05-28 06:56:05,"Hello @shama , you can do the following:
1. Run `node-inspector` in first shell and `node --debug-brk test` in second.
Is there any errors in first shell?
2. If there is no error in first step, can you please follow [this instruction](https://github.com/node-inspector/node-inspector/wiki/Developer%27s-Guide#reverse-engineering-the-front-end)
3. How long app starts up on 0.10.38?
",3y3,shama
657,2015-06-10 12:31:13,"@jmm , do you have `fiddler` enabled permanently?
I know one shadow issue about `fiddler + web sockets`.
",3y3,jmm
657,2015-06-10 13:29:56,"@3y3 Thanks very much for your help. It sounds like the same symptoms, but in case the cause of my problem is different I don't want to squat on @shama's issue, so I opened #671 to pursue mine further. I started with a recap of the basic info I posted here and I'll be posting additional information.
",jmm,shama
655,2015-05-27 07:30:53,"@jkrems , great job!

After fast review I have one idea:



If this code was called before wrapping, we can't handle this requests, because user already has closure on original `request` func.
It may be reasonable to wrap something more private. Maybe [http.ClientRequest](https://github.com/joyent/node/blob/master/lib/http.js#L48)
",3y3,jkrems
655,2015-05-29 02:31:18,"@GingerBear Thanks for giving it a spin! Will look into those issues!
",jkrems,GingerBear
655,2015-05-31 04:26:46,"Quick update: Pushed an update that adds the missing string cast for the headers. Also included a change to explicitly remove the instrumentation on disconnect, hoping that will fix the doubling issue. Unfortunately I wasn't able to reproduce it myself.

@GingerBear Do you have an example for the `options` object where the url is messed up? I'm assuming it's caused by the `host`/`hostname` weirdness in `url.format`. But I can't recall exactly how to trigger it.
",jkrems,GingerBear
655,2015-06-01 00:15:28,"@jkrems sure, here is an example. May not be the best one, but you can see only www.google.com show in the network tab when you go to http://localhost:4000/intl/en/about/ . Btw, it seems to be fine using [request](https://github.com/request/request) to send request. 
I am still seeing the double logs. For the same example, refresh the inspector couple times and load the web page again, I was able to see the doubling in the network tab.


",GingerBear,jkrems
655,2015-06-01 06:39:50,"> I am still seeing the double logs.

@jkrems , don't worry about this. This is out of scope of your pr.

Your `.on('close')` handling is reasonable.
",3y3,jkrems
655,2015-06-08 04:47:20,"@GingerBear Thanks! The code wasn't handling that `protocol` is optional. Pushed an update that should fix this.

Sorry for the slow reaction time. Busy week.
",jkrems,GingerBear
654,2015-06-10 11:38:22,"@marcominetti , I made some changes before merging:
- removed `Click here to inspect.` from message
- removed `title = 'Debugger paused';`
- added `tag` option to prevent messages duplication.

Landed as ca58013de3579665812dbeef403aae461ce7c08b

Great thanks for contribution!
",3y3,marcominetti
648,2015-05-19 14:06:04,"Ok. At current step I like my changes in `ScriptFileStorage` and your changes in `front-end`.
Next step - discussion about renaming files...
I think that all renamings is out of scope of node-inspector.
We can't solve existed situation correctly (this is an issue for babel), but we also can't to add dirty fix.

If we leave only changes in `ScriptFileStorage` and in `front-end` this would work for correct sourcemaps. @marcominetti , are you agree?



One other thing. There are inlined sources. So at current time we prevent requiring of inline sourcemap, but we can also prevent requiring of inline sources which stored in inline sourcemap (or it already works?).

[Source Map Revision 3 Proposal](https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.hval2vfopveu)
",3y3,marcominetti
648,2015-05-19 14:20:17,"`If we leave only changes in ScriptFileStorage and in front-end this would work for correct sourcemaps. @marcominetti , are you agree?`

I do agree. ;)

`One other thing. There are inlined sources. So at current time we prevent requiring of inline sourcemap, but we can also prevent requiring of inline sources which stored in inline sourcemap (or it already works?).`

I've not tested specifically but it should already work... I use babel and uglify to build an app boot pack for node and front-end resource tree correctly lists original (virtual) source code... with not-inlined sourcemap the code is read from sourcemap sourcesContent property...
",marcominetti,marcominetti
648,2015-05-23 17:24:04,"@marcominetti , read also https://github.com/babel/babel/pull/1587
",3y3,marcominetti
648,2015-06-02 13:52:59,"@marcominetti , sorry for pending this. I don't have a time to work on source maps on this week, but I follow the work.
We also discussed about this bug with Bajtos in gitter chat, so I need to fix and extend my part of commits.

Don't worry about this now. I'll rebase and merge all important parts and I'll present it for your review.
",3y3,marcominetti
648,2015-06-14 20:25:48,"@marcominetti , I landed it as be64d801ea8bbf418ba316a23610b16ad1a4f1cb with some minor changes.

Thank you for contribution!
",3y3,marcominetti
646,2015-08-07 12:21:14,"@galblank , this is actual solution for NI 0.12.2 ?
I'm discouraged by step 1...
",3y3,galblank
644,2015-06-01 17:55:54,"@ritch What are your Node and Node Inspector versions?
",bajtos,ritch
643,2015-05-13 21:16:25,"@ritch , I released 0.10.1 just now. Can you reproduce this on new version?
",3y3,ritch
638,2015-05-15 21:26:15,"ping @i5ting 
ping @mrgamer
",3y3,i5ting
634,2015-05-05 20:59:40,"@adambiggs , thanks for bug report and pr.
Now my turn to lose some time trying to override this using `front-end-node` folder =)
Anyway solution will be very hackly...
I'll return to review from some time.
",3y3,adambiggs
634,2015-05-06 20:22:54,"@adambiggs , great thanks for contribution. :beers: 
",3y3,adambiggs
632,2015-05-14 06:53:29,"@emburns , if your problem doesn't solved please read https://github.com/node-inspector/node-inspector/issues/631
",3y3,emburns
632,2016-05-26 13:38:33,"+1 for @mschipperheyn .. same here:

node-v11-darwin-x64 found, node-v47-darwin-x64 expected

node 5.5.0
",wzr1337,mschipperheyn
631,2015-05-08 18:27:40,"@bobpappas , this is a right place for discussion about your problem. So I see that `node-pre-gyp` tries to download wrong prebuild version.
Please give me a result of next command executed in the same shell in which you tried to install node-inspector.



Also I wonder to see



and


",3y3,bobpappas
631,2015-05-11 16:39:47,"@bobpappas , I think it's ready to go.
Try `npm install -g node-inspector --target=1.6.3` now.
At current time builds prebuild binary for `v8-profiler` - this also can be reasonable for you.
",3y3,bobpappas
631,2015-05-11 21:08:15,"@bobpappas , this is an epic hoodoo! I don't know why, but 5.2.6 was corrupted in npm. I published 5.2.7, and already tested what it installs correctly. At current time CI servers prepares prebuild binaries.

Thank you for your patience and help in debugging.
",3y3,bobpappas
631,2015-05-15 20:40:38,"I close this, because @bobpappas confirm issue resolving.
@jamespacileo , feel free to reopen this issue, if original problem doesn't solved.
",3y3,jamespacileo
631,2015-05-15 20:40:38,"I close this, because @bobpappas confirm issue resolving.
@jamespacileo , feel free to reopen this issue, if original problem doesn't solved.
",3y3,bobpappas
631,2015-05-18 15:03:19,"@RandScullard , I see that you have a problem with downloading prebuild binaries
 **( do you work behind a proxy? )**.
In your case npm tries to build v8-debug from source and tries to download node sources for building.
Unfortunately cdn for iojs sources is different from nodejs.
I know a complicated solution how to build it for iojs, but before we go by this way, I prefer to understand, why prebuild binaries doesn't works for you.

So... Do you work behind a proxy?
",3y3,RandScullard
631,2015-05-20 08:04:00,"@RandScullard , I confirm your issue.This is an issue specially for electron. 
I opened new issue for this https://github.com/node-inspector/node-inspector/issues/649
",3y3,RandScullard
628,2015-05-15 09:09:16,"Thanks @cr0cK... I'll investigate during the we...
",marcominetti,cr0cK
628,2015-05-15 09:52:05,"@marcominetti , I already have in plans to test front-end update (with new front-end system, this promises to be simple), so, if you want it soon, I'll make it on this evening or on weekend.
",3y3,marcominetti
628,2015-05-15 10:25:58,"@marcominetti , can you open a pr to look on progress?
",3y3,marcominetti
627,2015-05-25 08:53:06,"@3y3 could you please add a new section to README.md explaining how to use plugins? It would be great to have some documentation for plugin authors too, I think it's better to move the docs to a different place (either a new md file or perhaps a wiki page).

I don't have enough time to review this PR in detail. If it works for you and for @marcominetti, then I am fine with merging it as it is.
",bajtos,marcominetti
627,2015-05-25 09:11:09,"@bajtos , there is one wrong place:
`InspectorBackendCommands.js` and `SupportedCSSProperties.js` moved to `front-end-node` folder (you requested this movement some prs ago). But it doesn't work as expected.
Will be it acceptable to add new express `get` statement like this:



Or you see more elegant way?
",3y3,bajtos
627,2015-05-25 09:58:54,"@auchenberg ,

> Question: Is the idea to Fork the DevTools front-end in order to support
> node-inspector specific plug ins?

No, we won't to design our own plugins system for DevTools.

This is a first step of complex plugin system for Node Inspector.
We have three levels, where we want to inject code: frontend, inspector's backend, application.
This PR implements entry point to be able to load plugins to frontend.
So you have full access to DevTools sources, i.e. you can use `chrome extension APIs` or modify internal devtools methods.
",3y3,auchenberg
627,2015-05-25 10:08:38,"@bajtos ,

We use `front-end-node` as a folder with all overrides, but we store all overrides relative to `/node` path.

Main reason to remove `InspectorBackendCommands` from `front-end` - cleanup this folder from any changes. After this step there will no files, which we need to copy to `front-end` folder using `update-front-end` script.

But if we simple move `InspectorBackendCommands` to `front-end-node` folder, this doen't work, because it will be resolved as `/node/InspectorBackendCommands.js`, but we expect `/InspectorBackendCommands.js`
",3y3,bajtos
626,2015-04-30 11:38:20,"Hi,

so there seems to be a bug in https://github.com/benderjs/browser-launcher2 but I also have to probably wrap the call with a try-catch to avoid the error.

@LegendaryTom can you do the following in your shell and paste your output?


",jakub-g,LegendaryTom
626,2015-05-04 15:33:19,"Thanks @jakub-g for looking into this.  Here's the shell output:



I tried uninstall/reinstall of node-inspector and got the same result.  I also tried the alternative method:


",LegendaryTom,jakub-g
626,2015-05-04 16:03:56,"@LegendaryTom try removing the cached browser list at `%USERPROFILE%/.config/browser-launcher2/config.json`. Otherwise, the new win-detect-browsers is never called (I suspect).
",vweevers,LegendaryTom
626,2015-07-31 21:41:21,"@vweevers I am getting same error on Windows 7 machine. My default browser is FF. Is there work around for this?
",reyou,vweevers
626,2015-07-31 22:01:30,"@reyou Have you tried the above (reinstalling or updating, then removing the cache file)?
",vweevers,reyou
625,2015-04-29 18:36:22,"@david-knipe-hp , thanks for bug report. I pushed a commit that fixes this small bug, so this will be completely fixed in 0.10.1.

As a workaround you can use link that printed in node-inspector terminal on startup.
",3y3,david-knipe-hp
624,2015-04-27 20:22:13,"This fucking situation, when iojs works better on Windows...

@iliakan , you can reproduce this on every script or on some special?
I tested iojs 1.8.1 on Windows in `debug` and `debug-brk` mode - all works fine.
I used `node-inspector` command because on Windows `node-debug` doesn't work correctly with iojs.

I know a line where this error happens, but I can't explain this situation.
",3y3,iliakan
621,2015-05-12 08:11:09,"@marcominetti , sorry for pending of your features, but there is a lot of bugs, which I need to fix and release before review.
",3y3,marcominetti
621,2015-05-14 13:21:28,"Hello, @marcominetti , I target you from Plugin system pr. Also you can look on [0.10.2 milestone](https://github.com/node-inspector/node-inspector/milestones/0.10.2), here are bugs and features with hight priority. It is not necessary, what all this bugs needs to be fixed, in some situations we need only to describe solution. For example #566 - you are friendly with new front-end, so you can target man to entry point for this feature (or implement it by yourself).
So look at list, and if you ready to fix something - notify me.
",3y3,marcominetti
621,2015-07-01 11:57:25,"hi @a7madgamal @3y3  I've successfully implemented the feature but there is a huge memory consumption cause I need to cache/preempt source files in arrays because search feature generates very huge number of getScriptSourceById/getResourceContent requests to the debugger through DebuggerClient and everything crashes... I could cache source in /tmp/ filesystem (but it's not so clever in cloud environments for the I/O)...

Solutions:
1. fix debugger client or debugger backend crash on huge requests (best)
2. implement an ordered queue at getScriptSourceById and getResourceContent (@3y3?)
3. keep this implementation and/or move cache on disk (worst)

You can try implementation with ljve-inspector module available on npm (I use it actually).
",marcominetti,a7madgamal
621,2015-07-01 14:28:19,"@marcominetti , I'm not familiar with search API in DevTools, but if I understand right main problem - we receive lot of parallel requests like `searchInContent` and we try to require sources for each `scriptId` also in parallel mode. So, we need to review strategy of original DevTools, when there exists a linked local folder:
- If in this case DevTools tries to search in all files (not only in loaded to front-end), then we need to completely avoid `getScriptSourceById` and use `fs` (this makes some problems for generated scripts, but I prefer to ignore this problems in initial implementation)
- Otherwise we can move search logic to app (look at injection example in `ConsoleAgent`)

In all this cases we need to completely avoid caching.

So, main question on current step - are we need to search in preloaded resources?
",3y3,marcominetti
621,2015-07-01 15:00:21,"@marcominetti I installed your fork and its working greatly but when i search and click on a line it always highlight the NEXT line!
I want you to confirm this and if it turns out to be a bug I think I can help you fix it quickly 
HINT:check the function `getLine(doc, n)` `return chunk.lines[n];` in the ""codemerror.js"" file should be n-1 if n > 0

@3y3 I think it's ok for the search process to be a little bit slower and works like 10 files at a time then next 10 etc. for a basic fix. After all it's better than nothing!
",a7madgamal,marcominetti
621,2015-07-01 15:02:40,"@a7madgamal , I agree that we must sacrifice performance for stability
",3y3,a7madgamal
621,2015-07-01 16:00:36,"@a7madgamal yep the bug of next line is fixed within an unpublished version... I'll publish it after some cleanup...
",marcominetti,a7madgamal
621,2015-07-15 07:03:14,"Hello @marcominetti , sorry for ignoring your previous comment - I'm very busy at this time. I'll review your changes as soon as possible. I'm not sure that this will happen today, but definitely on this week.
",3y3,marcominetti
621,2016-01-12 13:05:08,"Hi @grsabreu, in the weekend I'll check the status against latest commits to the master branch... are you experiencing specific problems?
",marcominetti,grsabreu
621,2016-01-13 05:49:29,"@marcominetti , please don't miss time at current weekend. I'll release ""Node Inspector Next"" at this month (I hope) with new frontend and completely reimplemented server. So it's not reasonable to rebase at current master.

Node Inspector Next breaks compatibility with oldest node versions (compatibility starts with 4.*), but implements lot of new features.

I'm sorry that I pending this pr, but each time then I start to review it, there happens new broken node release.
",3y3,marcominetti
619,2015-04-27 07:50:24,"@scitecwri thank you for reporting the issue. I am afraid I don't understand the problem you are experiencing. Can you please add more details and describe steps how to reproduce the problem?
",bajtos,scitecwri
618,2015-05-29 09:42:58,"@marcominetti let's not wait for @auchenberg and move this patch forward. Could you please rework the code to serve the debugger at the root url, as discussed above?
",bajtos,marcominetti
618,2015-05-29 10:04:56,"@bajtos Yep, I should have time this afternoon or evening to carry out all ni related tasks... (CEST)
",marcominetti,bajtos
618,2015-05-29 10:28:32,"Looks good. I don't have any problem with removing /debug, as long it won't
cause problems with /json or future endpoints.
On May 29, 2015 6:04 PM, ""Marco Minetti"" notifications@github.com wrote:

> @bajtos https://github.com/bajtos Yep, I should have time this
> afternoon or evening to carry out all ni related tasks... (CEST)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/node-inspector/node-inspector/pull/618#issuecomment-106763336
> .
",auchenberg,bajtos
618,2015-05-30 15:14:08,"done @bajtos 
",marcominetti,bajtos
614,2015-04-17 12:15:55,"Hello @iliakan .

So, today I merged new frontend and I wait some small changes from @marcominetti .
Now then we have new frontend, it is reasonable to extend our functionality by debugging promises, getters/setters and more other. This is a next big step. #450

From small steps:
There is a #560 , that fixes #597, and I hope, it will be merged on next week. (Can you test it and submit what it works?)

Released 0.12.0 with new debugger system is a big problem not only for node inspector, but also for node (iojs/io.js/issues/858, iojs/io.js/issues/781). We have some native features `v8-debug` and `v8-profiler` that already compatible with `iojs` on compilation stage, but breaks compatibility on running from `node-debug` command on windows (iojs/io.js/issues/751)

So I very wait for iojs/io.js/issues/751 it blocks lot of my work on iojs.
",3y3,iliakan
613,2015-04-17 07:08:08,"Hello, @cdaringe , thanks for verbose description.
At first glance your first experiment is related with #597
The second looks like a node problem. Can you reproduce it on 0.10._?
Or maybe using `node debug` command on 0.12._?

I inspect the same problem at current time - `TypeError: undefined is not a function` in place where it is impossible, but I can't prepare a small bug sample to retarget this problem to nodejs.
",3y3,cdaringe
611,2015-04-16 17:32:55,"hi @johnmarkos, i posted one unreliable condition which produces this in the #613 thread.  the code that leads to that condition above isn't open-sourced yet, otherwise I would have slapped up a gist!  however, i will spend some more time trying to reproduce its conditions if #613 isn't sufficient
",cdaringe,johnmarkos
608,2015-04-07 22:18:26,"@exceptDefeat try to update your node version and npm . 
take a look at [n](https://www.npmjs.com/package/n) or [nvm](https://github.com/creationix/nvm)
",fernandoneto,exceptDefeat
603,2015-04-06 18:27:55,"+1 @ApolloTang Found a workaround for this? Google doesn't instantly help
",kureus,ApolloTang
603,2015-04-27 06:48:49,"@akirattii , this looking like a problem with v8-debug submodule. I saw this problem then change my node version from 0.12.0 to 0.12.2. Can you try to completely reinstall node-inspector:


",3y3,akirattii
603,2015-04-29 18:28:38,"@kureus , I wonder to look on your install log.
",3y3,kureus
603,2015-04-30 13:48:29,"@kureus , thanks. Your problem confirmed as bug. I need to update `v8-debug` and `v8-profiler` bundled `node-pre-gyp` version to 0.6.5. This version knows about node 0.12.2.
",3y3,kureus
603,2015-05-05 15:35:03,"@ashelley , thanks for verbose description. At first glance this is a problem with `ws` module. I wonder to see your install log. 
You also can try to update `ws` module



Next information that can be useful is [debug logs](https://github.com/node-inspector/node-inspector/wiki/Debug-logs)
",3y3,ashelley
603,2015-05-05 17:07:12,"@ashelley , no problem. You can also use `--no-preload` flag, if you want to work in directory without `package.json`
",3y3,ashelley
603,2015-05-06 08:19:22,"I close issue because work on 0.12.2 confirmed by @ashelley .
If original problem wasn't resolved, call me to reopen this issue.
",3y3,ashelley
603,2015-05-08 18:19:44,"@bobpappas , you have `iojs` installed anywhere?
",3y3,bobpappas
600,2015-04-24 17:19:22,"@3y3 does v8-debug support Node v0.8?

@jfromaniello what is your npm version? Can you reproduce the problem using `npm@1.4` too?
",bajtos,jfromaniello
600,2015-04-24 17:39:06,"@bajtos 


",jfromaniello,bajtos
600,2015-04-27 07:23:50,"> @3y3 v8-debug has engine: >=0.10. It may be reasonable to update node-inspector engine. Or we need to support 0.8?

How much work is needed to support Node v0.8?

If it's too much work and/or you don't have time to maintain support for Node v0.8, then we should drop support for Node v0.8 in Node Inspector indeed.

@jfromaniello I believe `node-inspector@0.7` supports Node v0.8 well, can you please give it a try?
",bajtos,jfromaniello
599,2015-09-07 15:46:51,"@jakub-g Thanks for the hints. Never got around to looking into this before (haven't been using NI much lately). Will try to spend some time investigating in the next few weeks.
",medington,jakub-g
594,2015-03-30 21:30:37,"Merged. Thanks @marcominetti .
Sorry for delayed review - lot of work on node-inspector internals.
",3y3,marcominetti
583,2015-06-16 19:48:37,"@rbaprado , have you tried `npm cache clean`?
",3y3,rbaprado
582,2015-03-10 11:09:43,"Hello, @marcominetti . I'm not sure that making `babel` a part of `node-inspector` is a right thing.
But this is a good point to start extended discussion about plugins.
For example, we have [one other](https://github.com/node-inspector/node-inspector/issues/502) feature issue, about highlighting `debug` module colors in console, but this is useful only for users that use `debug` module in their projects, so this can't be implemented as main part of node-inspector.

I'd like to provide to users simple way to extend `ni` by plugins.
This is a work on two-three fronts:
1. frontend extension
2. inspector backend extension
3. [app extension]

Your current pr takes only first part. So, how I see frontend extension mechanism:
1. We can store all plugins in subdirectory with same name. Example:


1. Each plugin has name in npm `node-inspector-<plugin name>`. Example `node-inspector-babel`
2. Each plugin has `module.json`, like [this](https://github.com/3y3/node-inspector/blob/frontend/front-end-node/module.json), [inspector.json](https://github.com/3y3/node-inspector/blob/frontend/front-end-node/inspector.json) and optionally [protocol.json](https://github.com/3y3/node-inspector/blob/frontend/front-end-node/protocol.json). We need to compile extension structure on node-inspector startup, or for each new [ws session](https://github.com/node-inspector/node-inspector/blob/master/lib/debug-server.js#L20-L23)
3. Add new paths to [express router](https://github.com/3y3/node-inspector/blob/frontend/lib/debug-server.js#L61-L64), like



Where `compiled_in_memory_inspectorjson` is the result of something like this:



So for example if we have `babel` plugin:
`cd node-inspector/plugins/babel`
`echo module.json`



`BabelPlugin.js` is your current diff for overrides.

`echo inspector.json`



`echo protocol.json`



And `compiled_in_memory_inspectorjson` is equal to:



We need to compile same way `protocol.json`.

So, @marcominetti , are you ready to implement plugin system? This work is relative to `frontend` pr. Unfortunately in current time I work on other `ni` issues, and can't finish `frontend` pr at soon, but I'm ready to review prs relative to it.
So keep in mind that this is a discussion about plugins, and your thoughts are important.
Welcome to discussion on [gitter](https://gitter.im/node-inspector/node-inspector)

/cc @bajtos 
",3y3,marcominetti
582,2015-03-11 11:21:42,"> Ok, I can do develop the plugin system.

@marcominetti , good news!

Feature request already exists (#180). I'll update information.

> why are you defining npm naming convention?
> 
> Is it related to your next startup system proposal (ni install)?

Yes. But it's out of scope of current feature. 
Current `install` solution - clone repo into plugins folder =)
",3y3,marcominetti
582,2015-03-11 19:26:56,"> Current install solution - clone repo into plugins folder =)
> 
> > IMO that pretty much sucks

@bajtos , I'm agree. Please read my thoughts in `install` part of #578
",3y3,bajtos
582,2015-03-12 17:20:48,"@3y3 @bajtos ...a solution could be integrate npm (through npm link instead of having it in ni deps) and just look for every node module - installed locally (cwd) and globally - that matches node-inspector-plugin-xxx name.

IMO the naming convention could be:
- node-inspector-xxx: custom inspector bundled with plugins (out of scope for the plugin system feature
- node-inspector-plugin-xxx: plugin that extends ni and contains the module.json, protocol.json and inspector.json and related files

At load time, ni will find the matching node-inspector-plugin-xxx modules, read jsons and create proper static express paths for frontend files. In this case I would suggest to define a dedicated frontend/backend folders within the xxx plugin to avoid security concers of serving backend files to the frontend.

To sum up:



The same for npm installed modules:



In case of naming conflicts (same plugin embedded in ni /plugins folder and available as npm installed pkg), the ni embedded wins (cause npm installed pkg could update and break currently installed ni).

In module.json could be useful to add - by specification - a property for supported ni version(s). This property could be checked with semver during load phase.

Any thoughts? 
",marcominetti,bajtos
582,2015-03-12 20:59:51,"@bajtos mmm... is it really reliable to use keywords for discoverability? I mean composition of node-inspector and plugin could be not directly related to the plugin system of node-inspector...

What about

> ni-plugin-xxx

Could be shorter then loopback-connector-xxx... ;)

Is node-inspector already published as ""ni""?
",marcominetti,bajtos
574,2015-04-27 09:32:20,"@allthetime  , can you completely reinstall node-inspector



Say me if it will help you.
",3y3,allthetime
574,2015-06-17 18:10:17,"Getting the same as @elmasse.

Reproduced with `node-debug gulp` using:
- Mac OS X v10.10.3 (Yosemite)
- Chrome 42.0.2311.90 (64-bit)
- `node-inspector` - v0.10.2
- `node` - v0.12.2, v0.12.4

If it helps, I noticed that if you refresh the page you can continue debugging and the ""Profiles"" page goes back to it's original state.
",KylePDavis,elmasse
574,2015-06-17 19:03:34,"+1. Same setup as @KylePDavis 
",docksteaderluke,KylePDavis
574,2015-06-26 19:48:53,"Also +1, same setup as @KylePDavis. 
",tysonstewart,KylePDavis
574,2015-06-26 19:57:54,"@tysonstewart , can you please confirm issue on node 0.12.5?
",3y3,tysonstewart
574,2015-07-22 22:52:24,"@dillonkrug , thank you for information!
Waiting feedback from issue starter or other subscribers.
",3y3,dillonkrug
574,2015-09-04 22:12:03,"@elmasse have you found a way to collect a cpu profile? I'm running into the same issues as you, I assumed collecting the profile would start the script but I just get profiling data related to node-inspector, nothing about my script
",mbroadst,elmasse
574,2015-09-04 23:28:01,"@mbroadst I have been using the v8-profiler and save it to a file manually, then load it on chrome. Still, it doesn't work well all the time. 

This seems to be related to Chrome Dev Tools. I tried iron-node and experiencing the exact same issue.
",elmasse,mbroadst
573,2015-03-04 09:54:46,"Landed as 88fb962, thank you for the contribution.

I had to fix line endings to unix style. @jakub-g please consider configuring your GIT client to convert Windows EOLs to Unix EOLs for you automatically - see https://help.github.com/articles/dealing-with-line-endings/#platform-windows

@3y3 Yeah, I did not appreciate the direct emails either. I guess you can always ignore them if you or setup a (spam) filter to delete them automatically. I'd rather keep the README in a positive tone.
",bajtos,jakub-g
573,2015-03-04 10:18:50,"@bajtos , it was a joke =)
",3y3,bajtos
570,2015-03-03 08:50:34,"@briandela I had the exact same problem. I can't debug with node v0.12 and node-inspector v0.9.1.
However node v0.10.x and node-inspector v0.9.1 works well.

+1
",arielschiavoni,briandela
569,2015-03-04 09:20:39,"@jakub-g what is the status of this issue? I can see that the linked commit has been already released, can we close this issue as resolved?
",bajtos,jakub-g
567,2015-02-24 07:03:29,"I will investigate ASAP.

@roysG can you tell the following:
1. Version of ubuntu
2. Version of node
3. What is your default web browser?

For 3 it would be actually useful if you run this in the console and tell the output:


",jakub-g,roysG
567,2015-02-25 08:26:01,"Well the issue in biased-opener is  silly one, simply that I didn't check for an error and assumed there would be no error.

@roysG I opened a follow-up issue on my own repo to not clutter here too much
https://github.com/jakub-g/x-default-browser/issues/1
can you please have a look to help me understand the issue better?
",jakub-g,roysG
567,2015-03-04 09:14:55,"Closing as a duplicate of https://github.com/jakub-g/x-default-browser/issues/1. Thank you @jakub-g for taking care of this.
",bajtos,jakub-g
566,2015-03-04 09:23:12,"Hi @wdbacker, I am not familiar with Chrome extensions and tabs API enough to provide any meaningful advice. I am willing to accept this feature if somebody contributes the implementation though.
",bajtos,wdbacker
566,2015-03-04 10:35:25,"Hi @bajtos, I just tried out some possible solutions for this feature. I came across a very obvious solution: if the node-inspector page encounters an active breakpoint, the node-inspector's javascript code can just do an alert('breakpoint encountered'); in the javascript code, and the Chrome browser will automatically switch to the node-inspector tab!

Btw, it would be handy if you can enable/disable this alert with a config option e.g. in the settings.
",wdbacker,bajtos
566,2015-03-05 10:06:47,"Hi @bajtos @3y3, I found a much more elegant solution. As node-inspector needs only works on Chrome or Opera, we can use the new desktop notification API.

See https://developer.mozilla.org/en-US/docs/Web/API/Notification/Using_Web_Notifications

Advantages:
- notification is much more discrete (no alert neede anymore)
- the old alert() blocks the javascript event loop, the new notification doesn't
- no configuration needed in node-inspector, user can simply (dis)allow notification once in node-inspector

I made a small demo page with script code that can be used immediately for node-inspector too.

To see how this works, go to http://srm.stabe.be/ and click on the button. After 5 seconds, Chrome will ask once if you want to allow desktop notifications for this ""website"". If you press ""allow"", the notification will be displayed bottom-right.

Now push the same button a second time and immediately switch to another window/tab in Chrome. After 5 seconds, you'll see the notification bottom-right and you can click on it. You'll be taken immediately to the node-inspector tab!

Btw, the notification script on the demo page is browser independent (the script uses feature checking). You just need Chrome 32 or later, Opera 25 or later for this new feature to work seamlessly, see 
https://developer.mozilla.org/en-US/docs/Web/API/Notification#Browser_compatibility

You'll see the code needed for node-inspector in the page source of my demo page.
What do you think?
",wdbacker,bajtos
566,2015-03-05 10:26:14,"Notification API will be best solution! :+1: 

I saw it in work on Gitter - it's very useful.

@bajtos ?
",3y3,bajtos
566,2015-03-12 13:03:42,"@bajtos @3y3 Can you point me in the right direction in the Node Inspector's source code so that I can prepare a pull request for this notification functionality? Thx!
",wdbacker,bajtos
560,2015-04-14 07:07:50,"@bajtos , this partially ready to review.

Strategy of this pr:
1. Refactor session module. Inherit it from EventEmitter.
2. Restructure all modules to receive `session` object instead of `debuggerClient, frontendClient etc.`
3. Fix test after refactoring
4. Fix test for 0.12 - to be sure that we work on 0.12 with new changes (there are some speculative changes. I need help to understand how they work)
5. Emit `resource-tree` event from session instead of PageAgent. Rename to `resource-tree-resolved`
6. Add new tests for `resource-tree-resolved` feature

About fixes for 0.12:
Ok, I can understand why we need to resume debugger after injections [like there](https://github.com/3y3/node-inspector/commit/c95736904bdf37987c4115710bbb381ac17937c0#diff-78792a5f176ac27c2f69d3b51e9c0b1bR200) - this is related to new isolated debugger with his own event loop.
But that happens [here](https://github.com/3y3/node-inspector/commit/c95736904bdf37987c4115710bbb381ac17937c0#diff-e26d3be456d1f6213df7d90212089743R165), how it's possible what `fn` is undefined?
I inspect this situation long time:
- If you try to pass all tests without this change - failure any time
- If you try to pass only tests for InjectorClient without this change - failure some time
- If you try to pass only failing test without this change - all works. WTF?!

It may be that we need help of core node developers here. Unfortunately I can't reproduce this problem in isolated sample.
",3y3,bajtos
560,2015-04-21 10:52:16,"@bajtos , I'm really sorry for my English =) You feel free to correct me any time.
",3y3,bajtos
559,2015-03-24 03:48:37,"same problem described by @cookch10
",ghsamm,cookch10
559,2015-07-30 11:39:08,"@simonvizzini I'm getting similar errors on my machine.

> This time no more python errors, but instead a wall of red text, which seem to be C++ compiler errors.



Regardless the errors **node-inspector** seems to be working fine.

---


",stefek99,simonvizzini
559,2015-09-20 02:38:06,"@jamietre: passing `--no-optional` alone didn't work. I had also installed Python 2.7.10.

The error included this:

> Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
> MSBUILD : error MSB3428: Could not load the Visual C++ component ""VCBuild.exe"". To fix this, 1) install the .NET Framework 2.0 SD K, 2) install Microsoft Visual Studio 2005 or 3) add the location of the component to the system path if it is installed elsewher e.  [C:\Users\A\AppData\Roaming\npm\node_modules\node-inspector\node_modules\ws\node_modules\bufferutil\build\binding.sln]

and

> npm ERR! Failed at the v8-profiler@5.3.1 install script 'node-pre-gyp install --fallback-to-build'.

Hey @node-inspector, what are the actual prerequisites for Windows? That should be listed in the README.
",dandv,jamietre
559,2015-09-20 12:30:57,"@dandv I was getting the same error.  Installing VS should fix that one.  In addition I had to install node-gyp, python and a C++ compiler (I didn't have one.)  Following post from a fellow user described the steps to install all the necessary requisites.  Hope it helps.

> Please see the [node-gyp installation](https://github.com/nodejs/node-gyp#installation). Some other helpful resources include [this comment](https://github.com/nodejs/node-gyp/issues/736#issuecomment-141640079) and [this comment](https://github.com/ncb000gt/node.bcrypt.js/issues/340#issuecomment-141660762). Also, if you install VS, you may not have a C++ compiler, in which case you may get an error about ""CL.exe"" not being found. To fix that, open VS, create a ""New Project"", choose something under the Visual C++ category, and then you'll see options to install a C++ compiler (which you should go with). After all of that, you might as well just do a full reboot, and then it should all work like a charm.
",maityarkodeb,dandv
553,2015-03-04 09:39:12,"Thank you for the pull request, this is a good thing to have in Node Inspector. I am afraid both me and @3y3 are busy working on other things and don't have time to review this now :( There is also a pending pull request #492 to update the front-end, I am afraid it will invalidate your work made here.

I am proposing to wait until #492 is landed and then kindly ask you to rework your pull request on top of that. @3y3 thoughts?

I know this is not great for you @marcominetti, I am sorry.
",bajtos,marcominetti
553,2015-03-04 19:09:20,"Hi @bajtos , sounds perfect. I keep my fork continously updated with the master branch here so reworking my pr is not a problem (it's an opportunity to refactor the pr ;) and merge directly on top of the @3y3 pr).

Out of scope: I've planned to implement support for cluster too and I've seen you did the same, are you still on that? (I've seen some commits based on iframes, in terms of UX I'd try to hack the protocol/frontend internals).
",marcominetti,bajtos
552,2015-03-04 09:40:46,"@dillonkrug can you reproduce the problem using the latest Node Inspector version on Node v0.12 or io.js 1.x?
",bajtos,dillonkrug
551,2015-02-11 23:51:16,"@jldec Thank you for the new pull request. Could you please also include a short note in the README explaining the situation? ""No"" is an acceptable answer ;-)
",bajtos,jldec
551,2015-02-12 01:01:23,"@bajtos 
README note added. hth

(b.t.w. i think the Travis CI failure is the same timeout you tried to mitigate before)
",jldec,bajtos
550,2015-02-05 09:03:08,"Hi @jldec, thank you for the pull request. 

In https://github.com/node-inspector/node-inspector/issues/498#issuecomment-72928660, you write:

> The issue in my case came from giant glob results (cost ~40s) and subseqent filtering (cost ~2 min!) on the backend.

And here you say

> delays on deep symlinked projects are now acceptable (~5s instead of ~5min).

I'd like to understand better how did we arrive at 5 seconds. Is it because you run node-debug with symlinks disabled? Or is it because the new glob version with `**/**/*` is faster than the old glob version following all symlinks?

What is the breakdown of glob + filtering times in your project with this patch applied and when symlinks are and are not followed?

In general, I try to make Node Inspector work out of the box for as many projects as possible and keep the number of configuration options low. If we can get a similar improvement by fixing the filtering algorithm instead of disabling symlink follows, then I would much more prefer that solution.

---

Another important fact related to symlinks and `findAllApplicationScripts`: The only reason why we try to find all scripts at the beginning is to allow NI users to set breakpoints in files that are not loaded in V8. However, when you have symlinks in your project, these breakpoints don't work anyway, because UI shows a symlink while V8 uses the resolved real path - see #370.

If you don't need to set breakpoints in files that are not loaded in V8 yet, then you can run Node Inspector with `--no-preload`: it disables `findAllApplicationScripts` and thus the startup should be pretty quick.
",bajtos,jldec
550,2015-02-05 13:35:25,"Hi @bajtos 
simply using the latest 'glob' module stops symlink exploration and there is no way to re-enable it. This is probably fine for most users of NI. With just that change i am able to start NI in under a second on my project, but i can't see files in directories below modules which are local via `npm link`. 

the `/**/**/*` pattern is a slightly hackish solution which tells glob to search one extra level of directories (even inside symlinked modules) but it does slow things down. Most NI users won't need it, so i thought it would be best to make it optional with the `-s` option.

this PR also adds a little debug instrumentation under the name `node-inspector:ScriptFileStorage`. Here is a example of the output without `-s`.



The glob took ~614ms and the filter ~135ms

With `-s` the output looks like this:



In this case the glob took ~4s and the filter 279ms
",jldec,bajtos
550,2015-02-06 08:49:33,"@jldec I am still not convinced that the root cause is in symlinks. In my opinion, the problem is in the high number of files in node_modules dependencies.

What happens if you `npm pack && npm install` your dependencies instead of `npm link`? Will this pull request fix the startup time for you? My guess is that it won't.

I would like to improve the current `--preload`/`--no-preload` config option to take a glob pattern specifying which files to preload. This pattern can be `!node_modules/**/**/*` by default.

> So until #370 is fixed, i would suggest simply updating NI to use the latest glob and leave it at that. This would at least protect against the circular symlink trap.

Circular symlink trap - is that the reason why the current version of `glob` takes so long in your project?

Let's implement your proposal then - update to the latest glob and stop following symlinks. While I am concerned that such solution may bite us in the future, it is improving the situation in the short term, thus it's worth the risk.

Just make sure the commit message clearly describes the breaking change it introduces.
",bajtos,jldec
550,2015-02-06 13:54:26,"@bajtos - Yes, circular symlinks was the main cause of the long delays in my case.

I agree that given #370, bumping the glob version which disables symlink following is the right solution for now. I will post a separate PR for that.

Hopefully having an up-to-date glob version is another small incentive for some NI user to contribute fixes (a) to enable glob to return realpaths  and (b) to enable symlink following in glob (with cycle detection)

I also like your suggestion of using a glob pattern for the NI preload option
",jldec,bajtos
548,2015-03-03 18:28:45,"@sudhir-jabong , any example of code?
",3y3,sudhir-jabong
546,2015-02-15 14:08:42,"@ide What about the very old (0.4.32 vs 0.7.1) version of `websocket` (ws)? The build errors I'm getting are related to it when I try to install `node-inspector`. I guess it's only the first error in the chain of things that needs to be fixed (and you manually changed that dependency in your package.json)?
",tomzx,ide
546,2015-02-15 16:45:45,"@mrgamer , @tomzx , hey wait sometime =) I prepare the release pr.
",3y3,tomzx
546,2015-03-04 23:01:01,"@bajtos I'm assuming you mean duplicate of #523?
",jimthedev,bajtos
546,2015-03-06 10:00:54,"@jimthedev Of course, thank you for correcting me!
",bajtos,jimthedev
545,2015-10-27 19:10:54,"Having the same issue, and the syntax suggested by @MetaMemoryT  doesn't fix it.


",chuckweinberger,MetaMemoryT
545,2016-06-03 07:04:14,"@chuckweinberger  - Did you find a fix?!
",jamesone,chuckweinberger
545,2016-06-06 16:48:14,"@jamesone.  Nope.
",chuckweinberger,jamesone
544,2015-03-16 14:28:38,"@3y3, @bajtos, I can confirm this issue exists using 0.9.2.  Do you want to reopen this issue, or should I create a new issue?

I am currently using node v0.10.32.  I created test.js and test2.js as below for an easier test:

## test.js



## test2.js



Then I run `node-debug test.js --hidden 'test2'`.  The debugger loads with script execution paused, I switch to test2.js, add a breakpoint on the console.log line, resume execution, and the debugger breaks on my breakpoint in test2.js, even though that file should be ignored because of `--hidden`.
",zacronos,bajtos
544,2015-03-16 15:28:11,"@zacronos Can you reproduce the problem on 0.7.x version too? What is your platform?
",bajtos,zacronos
544,2015-03-16 15:40:06,"@bajtos, I see the same behavior on 0.7.4 of node-inspector.

I am using node v0.10.32 on OS X 10.9.5 with Chrome 41.0.2272.89 (64-bit).  If there is any other information you'd like or scenarios you'd like me to test, let me know.

Thanks for the fast response!
",zacronos,bajtos
544,2015-06-10 13:08:25,"@zacronos , you start debugger with wrong command line:
your - `node-debug test.js --hidden 'test2'`
expected - `node-debug --hidden 'test2' test.js`

With correct commant line I can't reproduce your issue.
",3y3,zacronos
544,2015-06-10 13:09:51,"@zwhitchcox , same as @zacronos 

I close this issue. You feel free to reopen it if I'm wrong here.
",3y3,zacronos
544,2015-06-10 13:09:51,"@zwhitchcox , same as @zacronos 

I close this issue. You feel free to reopen it if I'm wrong here.
",3y3,zwhitchcox
541,2015-03-04 09:34:15,"@alarre could you please submit a pull request fixing the issue?
",bajtos,alarre
538,2016-02-16 23:42:34,"@tejasmanohar , listening on 0.0.0.0 should work by design. Maybe it breaks somewhere in latest releases.
Can you submit that when you use



Node Inspector is not accessible on any host?
Can you also log for me `port` and `host` here https://github.com/node-inspector/node-inspector/blob/master/lib/debug-server.js#L135 ?
",3y3,tejasmanohar
536,2017-03-03 20:50:27,"@leonidasKap and @3y3, I was able to reproduce this with node-inspector 0.12.8 and NodeJS v6.3.1. I was connected via devtools and when I closed the Chrome tab, the Node application I was profiling died with the following exception -


Can we re-open this?",eyz,leonidasKap
535,2015-02-20 22:47:21,"I get the exact same output as @brijrajsingh

![image](https://cloud.githubusercontent.com/assets/1049204/6310805/7ee6b8f6-b928-11e4-8c9c-e8c030b1ab24.png)
",slang800,brijrajsingh
535,2015-02-22 19:17:26,"Had exactly the same problem as in @slang800 's screenshot. So I uninstalled node-inspector, cleared the cache and installed again. Now I don't get any warnings or errors.

However, the other problem still persists - not being able to debug the first time - but after setting breakpoints, and restarting it works perfectly.
",mrotaru,slang800
535,2015-02-26 16:28:03,"@mrotaru how did you clear the cache? Thanks!
",mikemaccana,mrotaru
535,2015-02-26 19:56:14,"@mikemaccana just `npm cache clean`
",mrotaru,mikemaccana
535,2015-02-26 21:05:39,"Thanks @mrotaru 
",mikemaccana,mrotaru
535,2015-02-26 22:56:24,"@briandela since breakpoints are persisted across debugging sessions and the issue seems to be only with the initial (automatic) break, you can manually place a breakpoint at the start of the script on the first run, and then re-start node-inspector, and it sould break.
",mrotaru,briandela
535,2015-03-05 02:51:47,"@bajtos Yes i am still seeing this issue.
I have tried with node versions: 0.11.13, 0.11.16 and 0.12

$ node-debug --version
Node Inspector v0.9.1

$ node --version
v0.11.16

Javascript console output:
Your Node version (undefined) has a partial support of profiler.
The stack frames tree doesn't show all stack frames due to low sampling rate.
The profiling data is incomplete and may show misleading results.
Update Node to 0.11.13 or newer to get full support.
",Zysen,bajtos
535,2015-03-05 05:10:35,"@bajtos , this issue can be reproduced on machines with low and medium performance.
This is inconsistency of debugger's connection states.

If anybody wants to fix this issue, look at `DebuggerClient.isConnected` option.
",3y3,bajtos
535,2015-04-07 12:26:49,"There appear to be two issues mentioned here. The version warning check everyone mentions, and the error loading a module that @brijrajsingh @slang800 @mrotaru mention, this seems to be the issue here https://github.com/node-inspector/node-inspector/issues/603. Do we have a known workaround or fix coming for this?
",kureus,brijrajsingh
535,2015-04-07 12:26:49,"There appear to be two issues mentioned here. The version warning check everyone mentions, and the error loading a module that @brijrajsingh @slang800 @mrotaru mention, this seems to be the issue here https://github.com/node-inspector/node-inspector/issues/603. Do we have a known workaround or fix coming for this?
",kureus,mrotaru
535,2015-04-07 12:26:49,"There appear to be two issues mentioned here. The version warning check everyone mentions, and the error loading a module that @brijrajsingh @slang800 @mrotaru mention, this seems to be the issue here https://github.com/node-inspector/node-inspector/issues/603. Do we have a known workaround or fix coming for this?
",kureus,slang800
535,2015-05-11 16:37:54,"@KrishnaPG , move to #631, and look at discussion. I wonder to see information about your 


",3y3,KrishnaPG
535,2015-05-11 16:42:44,"@KrishnaPG , what about debugged process? Is it possible that it uses other version of node?
",3y3,KrishnaPG
535,2015-05-12 06:36:42,"@KrishnaPG , `--target_arch=ia32`. For other options look at `node-pre-gyp` project.
",3y3,KrishnaPG
534,2015-01-27 15:10:06,"Ok. We selected first way.

@ELLIOTTCABLE , @oliverzy , @iliakan , are you want to fix this or this is job for me?
",3y3,ELLIOTTCABLE
534,2015-01-27 15:10:06,"Ok. We selected first way.

@ELLIOTTCABLE , @oliverzy , @iliakan , are you want to fix this or this is job for me?
",3y3,iliakan
534,2015-01-27 15:10:06,"Ok. We selected first way.

@ELLIOTTCABLE , @oliverzy , @iliakan , are you want to fix this or this is job for me?
",3y3,oliverzy
534,2015-02-19 12:38:23,"@ChrisRus Try `npm install -g node-inspector@0.7`. That version has less native dependencies at the cost of missing profiler tabs.
",bajtos,ChrisRus
534,2015-03-06 17:50:10,"@MetaMemoryT , look at my pr https://github.com/3y3/node-inspector/commit/702542e7dbf3f05439a07760a2f37e6d59f77360
",3y3,MetaMemoryT
534,2015-03-06 18:08:03,"@MetaMemoryT , feedback will be useful, thanks =)
",3y3,MetaMemoryT
534,2015-03-10 14:41:51,"Great information, @rjgotten 

Trying to find the code handling unknown breakpoints:

https://nodejstools.codeplex.com/SourceControl/latest#Nodejs/Product/Nodejs/Debugger/DebugEngine/AD7MemoryAddress.cs

https://nodejstools.codeplex.com/SourceControl/latest#Nodejs/Product/Nodejs/Debugger/DebugEngine/AD7BreakpointResolution.cs

Would this require changes to https://github.com/node-inspector/v8-debug ?
",MetaMemoryT,rjgotten
534,2015-03-21 11:09:43,"@rafis node-inspector 0.9.1 and node 0.11.13 is working for me.
",aparajita,rafis
534,2015-03-21 20:04:58,"@iliakan , you can try to fork from #560 
",3y3,iliakan
534,2015-03-21 20:06:50,"@iliakan , so if you'll do it, send me email, if this pr doesn't work for you correctly.
",3y3,iliakan
534,2015-04-02 14:02:48,"+1 @harindaka 
",mattkime,harindaka
534,2015-04-03 20:58:11,"@dpwolfe if your statement is accurate then it should be added to README.md

@bajtos can you weigh in?
",mattkime,dpwolfe
534,2015-04-03 20:58:11,"@dpwolfe if your statement is accurate then it should be added to README.md

@bajtos can you weigh in?
",mattkime,bajtos
534,2015-04-11 01:58:56,"+1 :( also thanks for the work around @dpwolfe
",williscool,dpwolfe
534,2015-08-25 15:33:24,"@Alex-Nabu When you say Windows 10, I'm assuming you are using the new IE Edge browser.  Is that correct?  If so, have you tried IE (not Edge) in Windows 10 or any other browsers and had different results?
",dpwolfe,Alex-Nabu
534,2015-08-26 22:07:19,"@dpwolfe No I meant chome. I actually have to downgrade my nodejs version to get it working again. downgraded to 0.12.4
",Alex-Nabu,dpwolfe
529,2015-01-18 14:41:26,"Hello, @zwhitchcox , are you sure that you don't have any problems with `node-debug ... --hidden=... app` ?
This question is relative to #498
",3y3,zwhitchcox
527,2015-02-17 09:33:34,"@zwhitchcox , can this issue to be closed?
",3y3,zwhitchcox
523,2015-02-20 11:28:20,"thanks @bajtos, works like a charm until everything is fixed
",colthreepv,bajtos
523,2015-04-01 09:22:15,"> @jlukanta I can't see the content of arrays or objects using the old version. Any idea why?

See https://github.com/node-inspector/node-inspector/pull/492#issuecomment-87848516
",bajtos,jlukanta
521,2015-01-12 19:11:06,"@bajtos , I prefer to also add `.gitattributes` file to project with `* text eol=lf`
",3y3,bajtos
521,2015-01-12 20:17:11,"@aars , can you check 0.8.3 please
",3y3,aars
520,2015-01-12 20:51:27,"@neonstalwart , please submit that 0.8.3 will work correctly.
Preferrable to use 


",3y3,neonstalwart
516,2015-01-10 13:29:15,"@Tiendq , google says that this is not a problem only of `v8-debug`.

#### Update:

I missed a [link](https://www.google.ru/#newwindow=1&q=npm+shasum+check+failed)
",3y3,Tiendq
515,2015-01-06 05:40:04,"@bajtos , please join to discussion.

@auchenberg , thanks for contribution. This is interesting feature.

>  Is there any reason why 127.0.0.1/0.0.0.0 currently is used?

From time to time I know why we use `0.0.0.0` in `NODE_INSPECTOR_MODE` and `127.0.0.1` in `NODE_DEBUG_MODE`, but unfortunately now I can't remember this.

> I had to change the default web-host to the local IP instead of 127.0.0.1, as the IP is needed in order to enable other clients to connect.

Can you explain me more verbose this part. At first glance new IP detecting opens weak security risk. I prefer to have minimal network area in default configuration, but it's discussable.
",3y3,auchenberg
515,2015-01-06 16:19:21,"Good points @bajtos. 

My intention is to enable the MDNS broadcasting out of the box, in order to minimize the workflow, but I understand the added security risk of binding to a addressable IP. 

Alternatively we could add a command-line flag that would enable MDNS broadcasting, the user could flip when running `node-debug` and `node-inspector`? That way it's explicit. 

Flag enabled: `web-host` is set to the local addressable IP, and MDNS broadcasting is enabled
",auchenberg,bajtos
514,2015-01-06 05:47:16,"@DeTeam , thanks for contribution. 
LGTM.
I'll merge this pr in my next merge phase.
",3y3,DeTeam
513,2015-01-13 19:15:49,"What you said was correct, @bajtos - I was trying to access it over an SSH tunnel, and I think that was the URL. 

I actually eventually came to a way to get in without using an SSH tunnel, so I think I could close this issue now. I had to forward some ports on each level and I forgot to do it on one of them, so I was unsure of why the connection was failing, seemingly at random.

Sorry to open an issue over something silly!
",seiyria,bajtos
509,2015-01-01 00:30:43,"@bajtos , I added a pr that fixes this bug (#512)
",3y3,bajtos
506,2015-01-06 15:51:51,"@3y3 Yes I'm proposing to have a ""generic"" DevTool app, that is able to work with multiple targets, ex. chrome, firefox, node-inspector, PonyDebugger, etc.  The point here is that each ""back-end provider"" shouldn't include their own front-end, but focus on providing a backend that is compliant to the Chrome Remote Debugging protocol.

What are the special needs of the node-inspector front-end? It's my understanding that you are using a pull of DevTools from blink, where you are overriding a few configurations, like toggling certain tabs. We should be able to find a way to avoid these overrides.

@bajtos That's a good point. With the latest pull of DevTools from blink master, I'm seeing a few ""unsupported errors"" exceptions being thrown, but that should be solvable too.
",auchenberg,bajtos
506,2015-01-13 08:41:08,"@3y3 I think you misunderstood the intent of this issue. AFAIU, @auchenberg wants to allow both usages: to run the UI shipped inside Node Inspector, but also to use chrome-devtools-app as the front-end. Nobody is asking to remove the front-end folder from Node Inspector, at least not yet.
",bajtos,auchenberg
506,2015-01-13 14:27:43,"@bajtos , on my question

> Are you propose to completely deprecate frontend folder in Node Inspector project?

response

> @3y3 Yes I'm proposing to have a ""generic"" DevTool app, that is able to work with multiple targets, ex. chrome, firefox, node-inspector, PonyDebugger, etc. The point here is that each ""back-end provider"" shouldn't include their own front-end, but focus on providing a backend that is compliant to the Chrome Remote Debugging protocol.

This misinformed me.

So, looking on some parts of `chrome-devtools-app` I think we can be fully compatible, but it needs to introduce extending API. @auchenberg please look at #492 in folder `front-end-node`. Here are some changes that we need to dinamically inject in `chrome-devtools-app` to be compatible.
",3y3,bajtos
506,2015-01-13 14:27:43,"@bajtos , on my question

> Are you propose to completely deprecate frontend folder in Node Inspector project?

response

> @3y3 Yes I'm proposing to have a ""generic"" DevTool app, that is able to work with multiple targets, ex. chrome, firefox, node-inspector, PonyDebugger, etc. The point here is that each ""back-end provider"" shouldn't include their own front-end, but focus on providing a backend that is compliant to the Chrome Remote Debugging protocol.

This misinformed me.

So, looking on some parts of `chrome-devtools-app` I think we can be fully compatible, but it needs to introduce extending API. @auchenberg please look at #492 in folder `front-end-node`. Here are some changes that we need to dinamically inject in `chrome-devtools-app` to be compatible.
",3y3,auchenberg
506,2015-01-14 16:05:30,"Ah, it seems I misunderstood @auchenberg intent. @3y3 you were right in your previous [comment](#issuecomment-69647731). I agree with you that the time to remove front-end from Node Inspector has not come yet.

However, until that time comes, I am personally ok with landing small tweaks that will allow chrome-devtools-app to debug Node apps via Node Inspector backend. That way @auchenberg can explore the concept and refine the implementation, so that when we decide to make the switch, the new solution will be already battle-tested.
",bajtos,auchenberg
502,2015-07-18 10:16:47,":+1: I'm using `bunyan`+`chalk` for nice console colored output, and log messages are unfortunately barely readable with node-inspector. I do agree with @bajtos, Striping ANSI control codes would be at least a good start (eg. drop coloring output).
",mgcrea,bajtos
501,2014-12-28 17:48:23,"@maxgurewitz , thank for targeting this issue.
This is an easy to pick, so I prefer to wait the pr from someone.
Are you ready to implement it?
",3y3,maxgurewitz
501,2015-01-05 11:49:22,"@3y3, @maxgurewitz  check out a PR please: https://github.com/node-inspector/node-inspector/pull/514
",DeTeam,maxgurewitz
499,2014-12-18 20:01:17,"@adonomay for windows node-gyp stuff you will want to do this
https://github.com/TooTallNate/node-gyp/issues/506#issuecomment-56591221

but like @3y3 said it should default you to use the prebuild bins ... building v8 take hours just FYI
",samccone,adonomay
499,2014-12-18 21:11:47,"Thanks @samccone . I've got Visual Studio 2013 Professional, with Update 3, but I'm a node amateur. Where should I run `npm i --msvs_version=2013` from? When I run it from C:\ (trying to install node-inspector globally) it complains that there's no `package.json` file in that directory.  I also don't see a package.json file at `C:\Users\adonome\node-gyp\0.10.34`
",adonomay,samccone
496,2015-01-23 06:01:37,"@arbixy thanks for verifying the fix, I am closing this issue as resolved.
",bajtos,arbixy
495,2014-12-15 13:58:09,"@bajtos , I ignore all current fixes in frontend. You are free to land it any time.
",3y3,bajtos
492,2015-03-05 13:14:31,"Rebased to master.

@jakub-g , can you please look at this pr. There exists bug for you.
Now our inspector link is `http://examlpe.com:8080/debug?port=5858&ws=example.com:8080`
This link doesn't work on Windows with `node-debug` command for reason of unescaped `&`.
Original issue in `opener` https://github.com/domenic/opener/issues/9 (It will be nice, if you fix also this issue)

But current issue for you - unhandled error event:



@bajtos , now I will work on `saveLiveEdit`. Will be nice if you provide me some failure test.
(But in current time I can live without it)

@marcominetti, @auchenberg , I see that you already rebased to this pr. Any thoughts about `saveLiveEdit`?
",3y3,bajtos
492,2015-03-19 20:50:33,"Ok. I finish inspection of live edit. There is no new problems with this feature, i.e. it works for me on some scripts. But for some other (for example `periodicConsoleLog`) it doesn't work correctly (I can reproduce this behavior on 0.7.4), so this problem is out of scope of this pr (and maybe out of scope of node-inspector).

So, I rebased pr to master. I also added fix for `repeatMessageCounter`.

@bajtos , please review.

> I started working on cleaning the UI from useless and not-working stuff

@marcominetti , you can prepare this as next pr after frontend will be merged.
So I think that `frontend` is ready to merge and we'll do it soon.
",3y3,bajtos
492,2015-03-19 20:50:33,"Ok. I finish inspection of live edit. There is no new problems with this feature, i.e. it works for me on some scripts. But for some other (for example `periodicConsoleLog`) it doesn't work correctly (I can reproduce this behavior on 0.7.4), so this problem is out of scope of this pr (and maybe out of scope of node-inspector).

So, I rebased pr to master. I also added fix for `repeatMessageCounter`.

@bajtos , please review.

> I started working on cleaning the UI from useless and not-working stuff

@marcominetti , you can prepare this as next pr after frontend will be merged.
So I think that `frontend` is ready to merge and we'll do it soon.
",3y3,marcominetti
492,2015-03-24 12:45:51,"@jakub-g , good news thank you!
",3y3,jakub-g
492,2015-04-07 15:50:40,"hi @3y3, any news on latest feedback from @bajtos? 
",marcominetti,bajtos
492,2015-04-12 21:29:16,"@bajtos , so I rebased lot of commits for

> This is very weird. extedModulesBy is reading ./front-end/inspector.json and here you are overwriting that file.

All other changes I maked in fixups:

> 1. Same messages are no longer grouped together. Is this because the front-end performs grouping now?
> 2. clearMessages is no longer cleaning the cache. I am wondering why we cannot clear the cache? Is there a way how to access a cleared message from the UI? My concern is that the cache can grow too much during a longer debugging session.

The second case was a bug - fixed in 71cb859

Last two fixups is for

> Is it worth adding a new method for this? IMO it's ok to define these overrides directly in the constructor.

I'll squash fixups after review (or, if you want, before it).
",3y3,bajtos
492,2015-04-14 07:13:57,"@bajtos , ok I'll fix test for console API and merge this pr.
",3y3,bajtos
492,2015-04-17 11:42:09,"@marcominetti , I merged this pr. You are free to open your prs now! Please start from smaller =)
",3y3,marcominetti
492,2015-04-17 11:51:47,"@marcominetti , you can try next:
If `node-inspector/node-inspector` is your `upstream` remote



There you receive a list of your commits ahead of master. Comment all that is not a part of your changes



So, you are synced with my outdated `frontend` and there can be some small conflicts during rebase that you'll need to fix manually.
",3y3,marcominetti
490,2014-12-11 12:04:38,"@bajtos , all fixed.
",3y3,bajtos
489,2014-12-12 11:46:41,"Ok. We need to escape `&` by `^`



@bblack , please replace this part in `bin/node-debug`:


",3y3,bblack
485,2014-12-08 12:46:23,"@bajtos , Hm... Releasing fails for me on `git-changelog`



How I can see, the script don't create `/tmp/changelog`

I use `tools/release.sh 0.8.1` from windows git-bash
",3y3,bajtos
485,2014-12-08 14:01:37,"@bajtos , please make this release. I see in `git-changelog` also `/dev/null`.. I'm not ready to replace it now =)
",3y3,bajtos
484,2014-12-07 01:19:34,"@abenhamdine , @Volox , I work on prebuild binaries for Windows. YOu can wait some time (one or two days) instead of trying to install full build enviroment.
",3y3,Volox
484,2014-12-07 01:19:34,"@abenhamdine , @Volox , I work on prebuild binaries for Windows. YOu can wait some time (one or two days) instead of trying to install full build enviroment.
",3y3,abenhamdine
484,2014-12-07 01:26:20,"@abenhamdine , if you are interesting to install build enviroment you can also try https://github.com/TooTallNate/node-gyp/wiki/Visual-Studio-2010-Setup
",3y3,abenhamdine
484,2014-12-07 14:37:04,"@abenhamdine , can you please reinstall node-inspector now. I think we ready to test prebuild binaries.
I will wait your result.
",3y3,abenhamdine
484,2014-12-07 14:41:36,"> @abenhamdine , can you please reinstall node-inspector now. I think we ready to test prebuild binaries.
> I will wait your result.

@Volox , you are also welcome to test.
",3y3,Volox
484,2014-12-07 14:41:36,"> @abenhamdine , can you please reinstall node-inspector now. I think we ready to test prebuild binaries.
> I will wait your result.

@Volox , you are also welcome to test.
",3y3,abenhamdine
484,2014-12-07 20:44:50,"@Volox , ok. I see that the problem is in outdated v8-profiler dependency. If you need node-inspector 0.8.0 at soon, I can recomend to fork it, fix package.json like in #485 and after this run `npm install`.
Or, you can wait 0.8.1 release.
",3y3,Volox
484,2014-12-08 06:57:49,"@Volox , @abenhamdine , thanks for feedback. I like to see in your logs this part:

> v8-debug@0.3.1 install C:\Program Files\nodejs\node_modules\node-inspector\nod
> e_modules\v8-debug
> node-pre-gyp install --fallback-to-build
> [v8-debug] Success: ""C:\Program Files\nodejs\node_modules\node-inspector\node_mo
> dules\v8-debug\build\debug\v0.3.1\node-v11-win32-x64\debug.node"" is installed vi
> a remote

So, after releasing of 0.8.1 the problem with v8-profiler also will be resolved.
",3y3,Volox
484,2014-12-08 06:57:49,"@Volox , @abenhamdine , thanks for feedback. I like to see in your logs this part:

> v8-debug@0.3.1 install C:\Program Files\nodejs\node_modules\node-inspector\nod
> e_modules\v8-debug
> node-pre-gyp install --fallback-to-build
> [v8-debug] Success: ""C:\Program Files\nodejs\node_modules\node-inspector\node_mo
> dules\v8-debug\build\debug\v0.3.1\node-v11-win32-x64\debug.node"" is installed vi
> a remote

So, after releasing of 0.8.1 the problem with v8-profiler also will be resolved.
",3y3,abenhamdine
484,2014-12-08 15:18:38,"@Volox , @abenhamdine , released 0.8.1. Please try to install it.
",3y3,Volox
484,2014-12-08 15:18:38,"@Volox , @abenhamdine , released 0.8.1. Please try to install it.
",3y3,abenhamdine
484,2015-01-08 09:03:14,"@ekulabuhov it works!  thanks a lot!
",josietam,ekulabuhov
484,2015-01-23 06:02:45,"@ekulabuhov could you please try to install the latest v0.8 version (v0.8.3 or later)? The comments in #496 makes me believe that the issue should be resolved there.
",bajtos,ekulabuhov
484,2015-06-10 12:20:48,"I've got same error as @abenhamdine, so installed python27 and now I got error message according to VCBuild.
Installing with ""npm install node-inspector --save"" command

gyp ERR! build error
gyp ERR! stack Error: `C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe
` failed with exit code: 1
gyp ERR! stack     at ChildProcess.onExit (C:\Program Files\nodejs\node_modules\
npm\node_modules\node-gyp\lib\build.js:269:23)
gyp ERR! stack     at ChildProcess.emit (events.js:110:17)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (child_process.js:1074
:12)
gyp ERR! System Windows_NT 6.3.9600
gyp ERR! command ""node"" ""C:\Program Files\nodejs\node_modules\npm\node_modu
les\node-gyp\bin\node-gyp.js"" ""rebuild""
gyp ERR! cwd C:\Users\me\WebstormProjects\iphonic\node_modules\node-inspector\
node_modules\ws\node_modules\bufferutil
gyp ERR! node -v v0.12.2
gyp ERR! node-gyp -v v1.0.3
gyp ERR! not ok
npm WARN optional dep failed, continuing utf-8-validate@1.1.0

> v8-profiler@5.2.9 install C:\Users\me\WebstormProjects\iphonic\node_modules\
> node-inspector\node_modules\v8-profiler
> node-pre-gyp install --fallback-to-build

[v8-profiler] Success: ""C:\Users\me\WebstormProjects\iphonic\node_modules\node
-inspector\node_modules\v8-profiler\build\profiler\v5.2.9\node-v14-win32-x64\pro
filer.node"" is installed via remote
npm WARN optional dep failed, continuing bufferutil@1.1.0

> v8-debug@0.4.6 install C:\Users\me\WebstormProjects\iphonic\node_modules\nod
> e-inspector\node_modules\v8-debug
> node-pre-gyp install --fallback-to-build

[v8-debug] Success: ""C:\Users\me\WebstormProjects\iphonic\node_modules\node-in
spector\node_modules\v8-debug\build\debug\v0.4.6\node-v14-win32-x64\debug.node""
is installed via remote
node-inspector@0.10.1 node_modules\node-inspector
├── async@0.9.2
├── semver@4.3.6
├── rc@1.0.3 (ini@1.3.4, strip-json-comments@0.1.3, deep-extend@0.2.11, minim
ist@0.0.10)
├── strong-data-uri@1.0.1 (truncate@1.0.4)
├── which@1.1.1 (is-absolute@0.1.7)
├── glob@5.0.10 (path-is-absolute@1.0.0, inherits@2.0.1, inflight@1.0.4, once
@1.3.2, minimatch@2.0.8)
├── yargs@3.10.0 (decamelize@1.0.0, camelcase@1.1.0, window-size@0.1.0, cliui
@2.1.0)
├── biased-opener@0.2.6 (minimist@1.1.0, x-default-browser@0.3.0, browser-lau
ncher2@0.4.5)
├── ws@0.7.2 (options@0.0.6, ultron@1.0.1)
├── v8-profiler@5.2.9 (nan@1.8.4, node-pre-gyp@0.6.7)
└── v8-debug@0.4.6 (nan@1.8.4, node-pre-gyp@0.6.7)
",verybigdog,abenhamdine
484,2015-06-10 12:40:34,"@verybigdog , but from your log I see what you have succesefully installed node-inspector (ignore unimportant error from ws module)
",3y3,verybigdog
483,2014-12-07 14:57:14,"@adviner , try to reinstall node-inspector now. I added prebuild binaries for v8-profiler and v8-debug. So, now you can yse node-inspector without building tools.
",3y3,adviner
483,2014-12-07 15:16:23,"Awesome. Thank you 

Thanks
Eric Advincula

-------- Original Message --------
From: 3y3 notifications@github.com
Sent: Sunday, December 7, 2014 07:57 AM
To: node-inspector/node-inspector node-inspector@noreply.github.com
Subject: Re: [node-inspector] Installing on windows 7 (#483)
CC: adviner eric.advincula@gmail.com

> @adviner , try to reinstall node-inspector now. I added prebuild binaries for v8-profiler and v8-debug. So, now you can yse node-inspector without building tools.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/node-inspector/node-inspector/issues/483#issuecomment-65939770
",adviner,adviner
479,2014-12-03 00:41:49,"@chevex  I know that's such a total pain right? :wink: 

For a quick fix, you could replace your local `treeoutline.js` with the latest one from the repo. On mac it should be located under `/usr/local/lib/node_modules`
",coodoo,chevex
478,2014-12-01 10:07:02,"@coodoo , please open Dev Tools in `node-inspector` frontend and check any errors in console.

If console don't contains errors, we will switch to next step.
",3y3,coodoo
475,2014-12-01 15:21:14,"@bajtos , fixed. I'm ready to merging it and releasing.
",3y3,bajtos
472,2014-11-28 16:13:11,"@bblack would you mind contributing this feature yourself?
",bajtos,bblack
470,2016-12-10 10:52:20,"@yamsellem 

How do you run `node-inspector` with `nodemon`? 
Doesn't work in my machine. `node-inspector` is running ok, but doesn't display anything in Devtool. Screenshot:

![127 0 0 1_8088__port 5859 - google chrome 2016-12-10 18 32 30](https://cloud.githubusercontent.com/assets/3880497/21072730/5d73cb6e-bf07-11e6-98dc-cb9749760152.png)

My steps how I start them both:
1. At first I start `node-inspector` in a separate terminal window:

2. Then I start `nodemon` with `--debug` option in a separate terminal window:


3. Then I open UI for `node-inspector` in Chrome `http://127.0.0.1:8088/?port=5859`. 
And there is nothing in Chrome console. Devtools are empty, see a screenshot above.

My config for `nodemon`:


Config for `node-inspector`:

",wzup,yamsellem
463,2014-11-14 08:15:22,"@clintwood , thanks for information.

How I can understand, the new version of DevTools frontend not contains this code, so when we start to update frontend, it will be fixed
",3y3,clintwood
461,2014-11-14 08:17:45,"@WeeJeWel , this is a known issue.
You can watch the progress here #450
",3y3,WeeJeWel
461,2014-12-20 13:03:35,"@pflannery , this is a completely different issue, can you post small example of code to reproduce this?
",3y3,pflannery
461,2014-12-29 22:09:51,"@sbrinkmann , @thedug , @dotnetCarpenter , @ekmartin , @acarl , @jkmuka , @Malet , @line23 , @ASh-Yezz , @pflannery please subscribe on [related node issue](https://github.com/joyent/node/issues/8948) to push up his priority.
",3y3,acarl
461,2014-12-29 22:09:51,"@sbrinkmann , @thedug , @dotnetCarpenter , @ekmartin , @acarl , @jkmuka , @Malet , @line23 , @ASh-Yezz , @pflannery please subscribe on [related node issue](https://github.com/joyent/node/issues/8948) to push up his priority.
",3y3,ekmartin
461,2014-12-29 22:09:51,"@sbrinkmann , @thedug , @dotnetCarpenter , @ekmartin , @acarl , @jkmuka , @Malet , @line23 , @ASh-Yezz , @pflannery please subscribe on [related node issue](https://github.com/joyent/node/issues/8948) to push up his priority.
",3y3,Malet
461,2014-12-29 22:09:51,"@sbrinkmann , @thedug , @dotnetCarpenter , @ekmartin , @acarl , @jkmuka , @Malet , @line23 , @ASh-Yezz , @pflannery please subscribe on [related node issue](https://github.com/joyent/node/issues/8948) to push up his priority.
",3y3,ASh-Yezz
461,2014-12-29 22:09:51,"@sbrinkmann , @thedug , @dotnetCarpenter , @ekmartin , @acarl , @jkmuka , @Malet , @line23 , @ASh-Yezz , @pflannery please subscribe on [related node issue](https://github.com/joyent/node/issues/8948) to push up his priority.
",3y3,sbrinkmann
461,2014-12-29 22:09:51,"@sbrinkmann , @thedug , @dotnetCarpenter , @ekmartin , @acarl , @jkmuka , @Malet , @line23 , @ASh-Yezz , @pflannery please subscribe on [related node issue](https://github.com/joyent/node/issues/8948) to push up his priority.
",3y3,line23
461,2014-12-29 22:09:51,"@sbrinkmann , @thedug , @dotnetCarpenter , @ekmartin , @acarl , @jkmuka , @Malet , @line23 , @ASh-Yezz , @pflannery please subscribe on [related node issue](https://github.com/joyent/node/issues/8948) to push up his priority.
",3y3,dotnetCarpenter
461,2014-12-29 22:09:51,"@sbrinkmann , @thedug , @dotnetCarpenter , @ekmartin , @acarl , @jkmuka , @Malet , @line23 , @ASh-Yezz , @pflannery please subscribe on [related node issue](https://github.com/joyent/node/issues/8948) to push up his priority.
",3y3,pflannery
461,2014-12-29 22:09:51,"@sbrinkmann , @thedug , @dotnetCarpenter , @ekmartin , @acarl , @jkmuka , @Malet , @line23 , @ASh-Yezz , @pflannery please subscribe on [related node issue](https://github.com/joyent/node/issues/8948) to push up his priority.
",3y3,jkmuka
461,2014-12-29 22:09:51,"@sbrinkmann , @thedug , @dotnetCarpenter , @ekmartin , @acarl , @jkmuka , @Malet , @line23 , @ASh-Yezz , @pflannery please subscribe on [related node issue](https://github.com/joyent/node/issues/8948) to push up his priority.
",3y3,thedug
458,2014-10-23 09:21:20,"@the1mills , you have a problem with your building environment. 
`ws` module, that has some native parts, fails on build. 
By documentation `ws` module can work without building, but in current time this is not true. We need to inspect this question and to open issue [here](https://github.com/einaros/ws/issues).

I'm very interesting to figure out this issue and describe it with your help.
",3y3,the1mills
458,2014-10-23 19:17:32,"Ok thanks, so what is the next step?

Alex

On Thu, Oct 23, 2014 at 2:21 AM, 3y3 notifications@github.com wrote:

> @the1mills https://github.com/the1mills , you have a problem with your
> building environment.
> ws module, that has some native parts, fails on build.
> By documentation ws module can work without building, but in current time
> this is not true. We need to inspect this question and to open issue here
> https://github.com/einaros/ws/issues.
> 
> I'm very interesting to figure out this issue and describe it with your
> help.
> 
> ## 
> 
> Reply to this email directly or view it on GitHub
> https://github.com/node-inspector/node-inspector/issues/458#issuecomment-60212902
> .

## 

Alexander D. Mills
(650)269-9502
preferred email address: alexander.d.mills@gmail.com
- www.linkedin.com/pub/alexander-mills/b/7a5/418/
",the1mills,the1mills
458,2014-12-18 17:36:43,"@the1mills your comments are missing images (screenshots), please re-attach them via the web interface.
",bajtos,the1mills
452,2014-10-06 20:43:02,"Hello @stevenvachon , I'm currently work on implementation of console tracing #219. This pr is very outdated now, but it is a milestone for Node Inspector 0.8.0 release. Also here exist other pr, that grant the access to one important part of webkit (not v8) protocol - serialization and caching of objects #450. 
So, I need to finish second pr to update `Console API`.

If you want to joke with WebKit DevTools protocol, I can recomend you latest v8-debug version, that contains `runInDebugContext` method. In 450 pr I use it to inject some parts of webkit sources to debugging process.
",3y3,stevenvachon
452,2015-01-05 09:52:37,"@stevenvachon AFAIK, we there isn't going to be any ""Node 0.12 release of node-inspector"".

The discussion above seems to have two threads:
- a request for assistance with using node-inspector in nodecon
- a question about changes in Node debugger protocol

Your comment makes me believe you are referring to the debugger protocol changes.

First of all, there are no concrete plans for the new debugger protocol as far as I know. The development in joyent/node is pretty stale, most of the new stuff is happening in [iojs/io.js](https://github.com/iojs/io.js). You can read TC meeting minutes [here](https://github.com/iojs/io.js/tree/261706e2ef9f12131ddcf8ff40fd4c7823693e8d/doc/tc-meetings), there is no mention about reworking the debugger protocol.

Until there is a concrete plan for replacing the current V8 debugger protocol with something else, I am reluctant to worry about that in Node Inspector.
",bajtos,stevenvachon
451,2014-10-02 18:22:22,"@Actimator , Heap Profiler is not a part of node-inspector now. Work in progress here #338. This pr is stable and needs some last reviews to merge in master, you can fork it and test, if you need heap profiler now.

About high delay. Where you store your project? (Are you trying start node-inspector with `--no-preload` option?)
",3y3,Actimator
449,2014-09-29 20:29:25,"@bajtos , unfortunately this is a timing issue - I restarted test and now it passed.
I'm very interesting why 5 seconds are not enough to pass this test...
What application does after printing `debugger listening on port ...` and before responding on `evaluate 'process.version'` event for 5 seconds and above?!
",3y3,bajtos
447,2014-09-29 11:34:38,"Hi @MadLittleMods, I am glad you figured it out yourself. Would you mind submitting a patch to update the documentation in README.md and describe how to debug `gulp` builds?

> I misunderstood Node Inspector's capabilities and thought `console.log` calls showed up in the node-inspector console. I now now that it is only a REPL client and doesn't output the CMD prints.

Redirecting `console.log` messages to the GUI is actually in our backlog - see #219.
",bajtos,MadLittleMods
447,2014-09-29 15:39:11,"Made a [pull request](https://github.com/node-inspector/node-inspector/pull/448) to add the documentation for Gulp. @bajtos 

I can't wait for the `console.log` messages to be added! I would be highly interested in contributing to get this working as well but seeing that you have not done it yet, I am not sure on the complexity (`STDOUT` and `STDERR`, :P) - Edit: It looks like the pull you linked covers it already.
",MadLittleMods,bajtos
446,2015-01-04 03:01:07,"@bajtos ,Hi , I can not debug too, It just said: `$ debugger listening on port 5858`, but actually nothing happened and the chrome not opened when I run `$ coffee --nodejs --debug app.coffee`



I use Node Inspector v0.8.1, Nodejs v0.10.35, CoffeeScript version 1.8.0.
",TangMonk,bajtos
446,2015-01-05 11:02:39,"@TangMonk of course the chrome was not opened.

Steps to debug:
1. `$ node-inspector &`
2. `$ coffee --nodejs --debug app.coffee`
3. Manually load `http://127.0.0.1:8080/debug?port=5858` in your Chrome browser.

Note that you will see the transpiled javascript, not the original coffeescript sources - see #224.
",bajtos,TangMonk
446,2015-01-05 11:20:07,"@bajtos thanks ! :+1: 
",TangMonk,bajtos
446,2015-03-15 19:08:08,"@bajtos thanks a lot!
",webzepter,bajtos
445,2014-09-24 08:27:52,"@bajtos you were right, the problem is gone as of node v0.11.13.

Do you think we should close this bug or keep it open for reference until 0.11 becomes stable?
",jakub-g,bajtos
444,2014-09-18 07:22:23,"Hello @shirsatsandeep ,
this is a known issue and it was fixed in last version (not released yet). I recommend you to ignore this error message, because it's not related to your application code - this error was thrown and was caught by node-inspector itself.
",3y3,shirsatsandeep
442,2014-12-18 17:30:51,"@Lujaw could you please provide us with a simple app to reproduce the problem on our machines? That would help us a lot to identify the problem, which is the first step towards getting it fixed.
",bajtos,Lujaw
441,2014-09-18 16:42:31,"I’ll incorporate the requested changes and recommit.  I have one day every two weeks to work on stuff like this.  Tomorrow is the day.

On Sep 18, 2014, at 9:40 AM, Miroslav Bajtoš notifications@github.com wrote:

> @bajtos , please confirm that you are ready to approve https support
> 
> Sure, no problem with that. It's probably better to wait with landing this PR until the config-changes are done (#436).
> 
> —
> Reply to this email directly or view it on GitHub.
",aikimcr,bajtos
441,2014-09-22 12:04:59,"@aikimcr , I merge your commit with #436 with some fixes. Now I wait last reviews for my pr to merge this all to the master.
",3y3,aikimcr
441,2014-09-22 21:56:33,"Landed as e73332b4138980a6e0c9e4a663478446ea10abe3

@aikimcr , great thanks for contribution.
",3y3,aikimcr
440,2014-09-09 18:52:14,"Hello, @aikimcr , thanks for your contribution.
Before I can start to review your commit, you need to fix some problems:
1. Leave only related changes
2. Fix test passing
3. In your case I also recommend to squash the changes to one commit
",3y3,aikimcr
440,2014-09-09 18:54:36,"@aikimcr , I miss one important detail: in current time I work on config refactoring in #436
",3y3,aikimcr
440,2014-09-09 18:58:24,"Thanks. In point of fact, I think I need to refactor my change.  The change as it exists works functionally, but I was unable to get the tests to pass.  My fumbling with it was because test I thought were running were not in fact running.  I’m seeing some test failures on my machine that are unrelated to my changes.  I don’t know what’s wrong with my environment, but I’ll need to get these things taken care of before I can finish the pull request.

At this point, it would probably be best for you to simply reject the existing pull request and I’ll create new one when I actually have it working with passing tests.

On Sep 9, 2014, at 11:54 AM, 3y3 notifications@github.com wrote:

> @aikimcr , I miss one important detail: in current time I work on config refactoring in #436
> 
> —
> Reply to this email directly or view it on GitHub.
",aikimcr,aikimcr
440,2014-09-09 20:02:17,"@aikimcr , we have some problems with test on machines with low performance (or slow hard drive for example). On my machine the tests go to failure when I switch to energy saving mode.
I recomend you to enable `only` (`describe.only('test')`) syntax for mocha in your debugging process. After pushing commit, check that all tests pass in Travis on v0.10
",3y3,aikimcr
436,2014-09-05 13:28:37,"@bajtos ,

> `node-inspector` accepts the same options as node-debug now, even though some of them are used by node-debug only.

I can solve this by using [Config.filterNodeDebugOptions](https://github.com/3y3/node-inspector/blob/config/lib/config.js#L188-L201), but I specially allow to node-inspector to see full configuration, bacause now I work on GUI configuration system (I'll add new tab to Settings Screen) that needs to know about all options. I'll open discussion pr about GUI configuration on weekend with start small example.

> Before this change, node-debug added some extra text to the help message (The [script] argument is resolved relative to the current working directory (etc.)). It is important to preserve it.

It is preserved. Help information [is different for node-debug and node-inspector](https://github.com/3y3/node-inspector/blob/config/lib/config.js#L264-L276)

I will try to divide it on parts on weekend, but I'm not sure what it's possible:

Main target of commit ""Collect configuration in one place"", this place is `config.js`, therefore I removed configuration part from `node-debug`. Sinchronously I need to add this part to `config` and handle this options. [I need to collect script options for `node-debug` in one place](https://github.com/3y3/node-inspector/blob/config/bin/node-debug.js#L72), for this reason I add [script](https://github.com/3y3/node-inspector/blob/config/lib/config.js#L109-L119) option to configuration. Also for reason ""I need handle optins of `node-debug`"" I uses `yargs` in `config` and check the defaults for `node-debug`.

Only `new help` can be excluded.

I can divide it only on no working but logically isolated parts.
",3y3,bajtos
436,2014-09-16 13:39:54,"@bajtos , it's ready to review
",3y3,bajtos
436,2014-09-22 10:11:20,"@bajtos , it's ready to review.
",3y3,bajtos
436,2014-09-22 16:45:29,"> @bajtos , it's ready to review.

What have you changed since the last review? I can't afford to review the whole patch after every change. In the future, could you please fix things in new commits and defer rebase/squash until the very end?
",bajtos,bajtos
432,2014-08-26 18:35:26,"Damage! I used 4pt line instead of 8pt.
@dannycoates , @bajtos, please look that is best:
![favicon](https://cloud.githubusercontent.com/assets/3931155/4049660/9f3795f4-2d4f-11e4-888d-a02ec328160d.png)

![](https://cloud.githubusercontent.com/assets/3931155/4044569/e0b3d3e0-2d21-11e4-99fd-e0ff631934f7.png)
",3y3,dannycoates
432,2014-08-28 09:42:07,"@dannycoates , I also vote for version with thicker line. Sorry to trouble you, but could you switch the logo again.
",3y3,dannycoates
424,2014-08-22 18:07:59,"Hi @jamesmortensen, I am afraid `node-debug` specifies the port explicitly and thus overrides any setting in `.node-inspectorrc`.

You can change the port using `--web-port`, `--port` or `-p` option on the command line, e.g.



Here is what can be done here:
- improve the documentation in README to mention which options are overridden by `node-debug`
- and/or modify `node-debug` to get default values from `.node-inspectorrc` files (they are hard-coded at the moment).
",bajtos,jamesmortensen
424,2014-08-22 19:44:39,"Thanks for the explanation, @bajtos. If I have time I may take a look at the code and see if this is something I can do as a pull request.
",jamesmortensen,bajtos
416,2014-12-23 09:40:32,"@bajtos 

> > We need a sample program to reproduce the issue on our machine.

Any program does

> > Also try a recent Node v0.11 version and/or io.js v0.12 from github. It is very likely that the problem is V8-related and that it has been fixed in newer versions of V8.

It worked in previous node-inspector versions, so it seems not V8-related?
",cristiano-belloni,bajtos
414,2014-08-18 20:26:27,"@Fodi69 , thanks for commit, it is reasonable. I'll merge at soon.
",3y3,Fodi69
413,2014-08-09 12:43:01,"@unbornchikken , can you post example of code?
",3y3,unbornchikken
413,2014-08-09 12:44:10,"@iliakan , I forked you commit and try to find the problem.
",3y3,iliakan
413,2014-09-01 10:44:31,"@iliakan , can you confirm, that your project also has problems by reason of `Proxy`? (I forked your commit, but I can't start it - npm install fails on `javascript-parser`, but I see what you use `--harmony` flag)

About fixing: I have in plans switch to Blink object serialization algorithm, in other words - rewrite current place that emit this error. But it's not a small fix - is's a big job.
Also Node Inspector current target is ""work same as Blink Dev Tools"", but not ""work better than Blink Dev Tools"", therefore this fix has low priority for me.
",3y3,iliakan
413,2015-03-12 01:33:23,"Thanks for that info @metamatt 
I guess our only hope is to wait for a V8 fix. However, even when that happens, we will need node-inspector to support io.js so we can get at the newest v8. Looks like that may come just in time (https://github.com/node-inspector/node-inspector/issues/523)!
",MeanwhileMedia,metamatt
412,2014-08-18 06:53:07,"@Jon889 , can I see example of failing code anywhere?
",3y3,Jon889
412,2014-08-18 06:54:03,"@draschke , have you other projects without this error, but with installed express?
",3y3,draschke
412,2014-08-18 09:13:45,"@draschke,  Are you working with this [express_example](https://github.com/shapeshed/express_example)?
",3y3,draschke
412,2014-08-18 11:33:12,"@Jon889 , have you same problem or different?
",3y3,Jon889
411,2014-08-14 13:39:18,"Hi @basarat, thank you for reporting the issue, the new URL is http://docs.strongloop.com/display/SLC/Debugging+with+Node+Inspector
",bajtos,basarat
404,2014-07-13 04:57:41,"Was struggling with the same issue, thankes @ryanseys 
",fforres,ryanseys
402,2014-07-03 08:52:19,"@chi-e I your main process has debug enabled (listening on port 5858), the child process will not be able to listen on the port 5858 too. 

See [Debugging Clustered Apps with Node-Inspector](http://strongloop.com/strongblog/whats-new-nodejs-v0-12-debugging-clusters/) for more information. The most important part is the code snippet showing how to tell your Node child process to use a different debug port:


",bajtos,chi-e
401,2015-09-27 05:13:50,"@michaelBenin inline sourcemaps are already in babel and @ericvw has said that this works with node-inspector.

Unless i'm missing your meaning?
",DylanPiercey,michaelBenin
401,2015-09-27 05:13:50,"@michaelBenin inline sourcemaps are already in babel and @ericvw has said that this works with node-inspector.

Unless i'm missing your meaning?
",DylanPiercey,ericvw
401,2015-12-02 13:17:57,"I am also encountering the same (similar) issue as @michaelBenin i.e. the above image is exactly the same for me. Node Inspector 0.12.3, same result for Babel 5 and Babel 6.

The only thing I can think of is that the code is using `babel-core/register` rather than generating ES5 files. Is this likely to make a difference?
",damonmcminn,michaelBenin
401,2015-12-22 14:01:53,"@damonmcminn I get the same thing running a similar setup.
",amcdnl,damonmcminn
398,2014-06-26 18:35:26,"@dannycoates , thank you!
",3y3,dannycoates
398,2014-06-27 06:07:56,"@bajtos , updating start delay for child processes to 500 makes tests more stable.
",3y3,bajtos
398,2014-06-27 08:37:21,"@bajtos , Ok. Can I notify watchers of #126 for testing full stack (Injector + Profiler + Heap Profiler) after I'll finish it, but before your review? (Is this good idea?)
",3y3,bajtos
398,2014-06-30 07:48:34,"Ok. My progress for this weekend:
1. Injector API is stable, it works fine in Profiler API pr
2. Profiler API pr is also ready to a review
3. HeapProfiler API works fine, but here is not implemented `getObjectByHeapObjectId`.
(This command works as `lookup` in context of heap snapshot).
HeapProfiler can work without this command, but I prefer to implement it.
Simplest implementation of this command can crash node process if HeapObjectId is link to internal v8 structure, therefor I need to inspect all valid value types that can be returned.
After this pr will be done.
4. @bajtos , if you understand that is `objectGroup` in terminology of V8, can you explain me? 
If no - I need to start big research for this issue. 
Next version of `v8-debug` will contain `mirror` method. It's a very simple way to get mirror object (70% of Console API will be deleted).
In other words I solve one problem of Console pr, but get other one - `releaseObject` and `releaseObjectGroup` needs to be implemented, because now it needs to store objects in app scope instead of inspector scope.
5. `v8-debug` works fine when app is paused, and have very simple API. It allow to resolve #396, #341, #340, (Maybe) #327, #222
",3y3,bajtos
398,2014-07-09 16:00:25,"> 1. @bajtos , if you understand that is objectGroup in terminology of V8, can you explain me? 
>    If no - I need to start big research for this issue. 
>    Next version of v8-debug will contain mirror method. It's a very simple way to get mirror object (70% of Console API will be deleted).

This is my understanding: to work around the mirror cache being cleared every time the debugger resumes execution, the front-end is manually keeping track of which mirror objects are used by the front-end. When you dump DevTools protocol communication in Chrome, you'll see messages like `releaseObjectGroup` - that's a signal to the back-end to release all mirror objects associated with the given object group. Requests like `evaluate` and `evaluateOnCallFrame` include an option `objectGroup` to indicate which object group should be used to store the mirror objects from the response. The object group is a sort of an instance of mirror cache, except there can be multiple instances and their life-time is managed by front-end.

There is also `releaseObject` method that can be used to release an individual object that is not associated with any object group.

Does it makes sense? Let me know if you have more questions.
",bajtos,bajtos
398,2014-07-13 13:19:53,"> This is my understanding: to work around the mirror cache being cleared every time the debugger resumes execution, the front-end is manually keeping track of which mirror objects are used by the front-end. When you dump DevTools protocol communication in Chrome, you'll see messages like releaseObjectGroup - that's a signal to the back-end to release all mirror objects associated with the given object group. Requests like evaluate and evaluateOnCallFrame include an option objectGroup to indicate which object group should be used to store the mirror objects from the response. The object group is a sort of an instance of mirror cache, except there can be multiple instances and their life-time is managed by front-end.

@bajtos , thanks for response, I also inspected this question and now I have a crazy idea to add to the project `InjectedScript` from webkit. But this is very complex issue, it deprecate the big part of code of current node-inspector `DebuggerClient` and `DebuggerAgent`. I'll open the new issue for this discussion. In any cases, after this commit, Profler API and HEAPProfiler API will ready to review.
",3y3,bajtos
395,2014-09-18 08:27:33,"@bajtos Yes, with 1x1 picture node-inspector works well.

This means, that the problem is in large Buffer variable. It hangs even when I am not trying to inspect the Buffer's internals, but when I only have this Buffer in the current scope. Is it the expected behaviour of node-inspector?
",strelga,bajtos
389,2014-07-02 06:17:36,"@dantman , thanks for this research. I'll fix it in soon.
",3y3,dantman
388,2014-06-16 15:34:07,"Hi @Slava, thank you for reporting the issue.

Could you please try and reproduce the problem in Chrome DevTools? I suspect it's the front-end that is suppose to resolve the paths and merge `aaa/../aaa` to `aaa`.
",bajtos,Slava
385,2014-06-16 15:37:12,"Hi @UltCombo, thank you for creating the issue, I can see how annoying this must be.

I'd say the auto-detection would be better than configuration, I can imagine different projects use different line endings.

If you can find some time to contribute this feature, here is the place to start: [lib/ScriptFileStorage.js](https://github.com/node-inspector/node-inspector/blob/master/lib/ScriptFileStorage.js)
",bajtos,UltCombo
385,2014-06-16 17:35:34,"@bajtos Thanks for the pointer!

I'm not familiar with the project but I'll take a look once I finish reading the wiki pages and have some more free time.
",UltCombo,bajtos
385,2014-06-20 00:31:07,"My thoughts:
- Should not give much thought about inconsistent line separators, they will have to be normalized as it is impossible to map each line separator between old source and new source code, seeing as line separators can be inserted and deleted via node inspector editor.
- When the line separator style can't be determined (e.g. no line separators in old content or mixed line separators), Could default to [`os.EOL`](http://nodejs.org/api/os.html#os_os_eol). Another (slightly crazy) idea would be to use an [EditorConfig](http://editorconfig.org/) file's `end_of_line` setting, though supporting only a single property of EditorConfig seems rather unorthodox, and I wouldn't consider node inspector as an actual code editor. It would be more plausible to have a RC option which overrides the auto-detection.
- Side-effects of taking an approach similar to @3y3's: I can't think of any possible side-effect seeing as literal line separators cannot appear inside string/regex literals (and [CR/LF/CRLF are normalized to LF in ES6 template strings](https://github.com/rwaldron/tc39-notes/blob/d5ac441f29812ee269c173c277ea34be88efa02a/es6/2013-09/sept-17.md#58-line-terminators-in-template-strings-should-they-be-normalized)). Correct me if I'm wrong.

I would opt to not overcomplicate this, @3y3's solution seems sufficiently good for most use cases. Any thoughts, @bajtos?
",UltCombo,bajtos
385,2014-12-18 17:09:07,"@UltCombo @3y3 what's the status of this issue? Are any of you willing to contribute the fix?
",bajtos,UltCombo
385,2014-12-18 17:15:53,"@bajtos I'm on a late deadline working nearly 24/7 atm. Looks like I won't have time to contribute on GitHub until finishing this project.
",UltCombo,bajtos
384,2014-08-12 19:36:30,"@xazeng , can you confirm this on v0.7.4?
",3y3,xazeng
380,2014-12-18 17:07:12,"Hi @davehorton, can you reproduce the problem using the latest version of Node Inspector?

Can you reproduce it using the [simple server app](https://github.com/node-inspector/node-debug-samples/blob/master/simple-server/index.js)? If not, can you share a (minimal) app that will allow me to reproduce your problem on my machine?
",bajtos,davehorton
377,2014-05-22 12:40:02,"Hi @apla, thank you for the pull request.

I run your patch on my machine and it fixes one of the problems in Safari. However, Node Inspector still does not work, I am getting the following errors in the console:



What version of Safari do you have? Do you have any plugins or extensions that can explain this difference?
",bajtos,apla
374,2014-05-19 14:14:26,"@dminkovsky , I unsuccessfully try to reproduce your problem.
First of all you can help me by describing your enviroment (OS, node version...)
The second that you can do - try reproduce this problem on [simple server](https://github.com/node-inspector/node-debug-samples)
The third that can help is research - [debugging protocol](https://github.com/node-inspector/node-inspector/wiki/Developer%27s-Guide#reverse-engineering-the-front-end)

For me third point is very interesting
",3y3,dminkovsky
374,2014-05-19 16:07:58,"Re-opening because @shortstuffsushi's comment is still not addressed.
",dminkovsky,shortstuffsushi
371,2014-06-05 07:01:22,"@Patrick64 , try v0.7.4, this can solve your problem
",3y3,Patrick64
371,2014-06-16 13:37:28,"@Patrick64 , can you submit issue with latest Node Inspector version?
",3y3,Patrick64
371,2014-06-16 14:16:25,"@Patrick64 , pull request is outdatet (now it is a part of 0.7.4). Ok... Please read Node Inspector wiki about ""debugging the debugger"", will be very helpful to get debug log for this issue.
",3y3,Patrick64
371,2014-08-12 19:18:12,"@Patrick64 , is this resolved?
",3y3,Patrick64
370,2014-11-29 09:13:30,"@sonewman thank you for linking to related glob issues. I don't think isaacs/node-glob#139 is going to solve our problem, this is what we need instead: https://github.com/isaacs/node-glob/issues/142.

Note that node-inspector is still using glob 3.x, therefore we are not affected by isaacs/node-glob#135.
",bajtos,sonewman
370,2014-12-01 09:51:34,"> @sonewman Basically in this case we need glob to return the resolved symlink paths, which would need to be an additional setting for Glob as it is veers from any expected behaviour.

Exactly.

Could you contribute the feature to glob? Issacs says in isaacs/node-glob#142 that such patch is welcome. I am afraid I won't have time to work on this anytime soon.
",bajtos,sonewman
368,2014-05-22 11:41:47,"@bajtos , all fixed.
",3y3,bajtos
366,2014-05-09 18:12:14,"Hi @jdarling, I am afraid this is completely out of scope of Node Inspector. To be honest, I don't know myself where to start if I wanted to implement this feature. Try to ask in node mailing list: https://groups.google.com/forum/#!forum/nodejs
",bajtos,jdarling
361,2014-04-24 11:32:41,"@dandv , you can inspect `process.env.HOME` to see the result
",3y3,dandv
358,2014-04-22 07:23:00,"Hi @nzakas, thank you for reporting the issue.

> To reproduce:
> 
> 

Where can I find the Express app to reproduce the problem?

Are you able to reproduce the problem with the [sample server](https://github.com/node-inspector/node-debug-samples/blob/master/simple-server/index.js) too?
",bajtos,nzakas
353,2014-04-15 14:05:18,"Well, both options are correct - you can use `node --debug={port}` or `node --debug-port={port} --debug`. Since `node --debug-port` was introduced in Node v0.11 AFAIK, I'd rather use the more widespread option `--debug` in the README.

> @machty 
> I believe that's setting up args for some subprocess; the line before demonstrates that it reads --debug-port from the command line.

I am afraid I don't understand you. The README describes an option you can pass to Node Inspector (`--debug-port={port}`) and hints that you should pass it the same value you would pass to `node --debug={port}`. Does it make sense now? If you can come up with a way how to make this more clear in the README, I am happy to accept another pull request.
",bajtos,machty
351,2014-04-19 14:16:23,"@bajtos , please see the build history on travis for this PR. It's very unstable.
",3y3,bajtos
351,2014-04-22 12:08:23,"> @bajtos , please see the build history on travis for this PR. It's very unstable.

It takes quite long time to download the nodewebkit binary, that's probably the reason why the build sometimes fails.

Few more thoughts:
1. It seems the debugged process is not correctly terminated when node-webkit executable is not found. When I run node-debug multiple times, I started to get `Failed to open socket on port 5858, waiting 1000 ms before retrying`, which means there was another node process already listening on 5858.
2. The path to node-webkit executable is wrong. This is what works for me: 
   
   
3. Command-line option `-nw` is not user friendly. node-debug should either:
   1. Always use node webkit when it is present. Use `open` when it was not found and print a warning, so that user knows there is a problem.
   2. Or provide a configuration file where the user can set what browser he wants to use (`open`, `nw`, path-to-Opera, etc.)
4. Since the nodewebkit is such a big module, it seems like a bad idea to make it a required dependency. Perhaps we can check if there is `nodewebkit` or `nw` executable available and print instructions how to install node webkit if it is not?

What's your opinion? What looks like the best solution to _you_?
",bajtos,bajtos
351,2014-04-23 10:26:03,"@bajtos , please see this implementation.
I deleted `nodewebkit` from dependencies and added dialog to install it to default directory.
",3y3,bajtos
351,2014-05-22 14:13:19,"@bajtos , please see current realisation.
I don't include `nodewebkit` as dependence, instead of this I added `npm` dependence.
If user want it can install `nodewebkit` with help of node-inspector.
If this is good way, I will continue to work on it.
",3y3,bajtos
350,2014-04-11 07:46:47,"Hello @ubershmekel, thank you for reporting the issue. There is already an older issue reported for you problem - see #334. I am closing this one as a duplicate.
",bajtos,ubershmekel
349,2014-04-22 17:30:26,"Hi @ben-powers, thank you for reporting the issue.

I am afraid I am not able to reproduce your problem (Chrome 34, Mac OSX 10.9, Node v0.10.25). Is there anything special about your local environment?
",bajtos,ben-powers
349,2014-06-16 13:34:14,"@ben-powers , have you any firewall?
",3y3,ben-powers
349,2014-06-16 15:46:24,"@3y3 @bajtos Thanks for bringing this to mind to me gentleman.  Looks like it is related to software on my machine (x3watch).  
",benawabe896,bajtos
348,2016-01-15 05:37:03,"@chicoxyzzy's solution works for me. Thanks for that!
",aroc,chicoxyzzy
348,2016-07-29 02:20:51,"@chicoxyzzy's solution works for me as well, but unfortunately if I `ctrl-c` while the browser was still at a breakpoint, the gulp process will hang _forever_ and I'll have to `ps aux | grep gulp` `kill -9 <p_id>`
",k-funk,chicoxyzzy
347,2014-04-10 07:28:49,"Hi @veyselsahin, what version of Node Inspector are you running? How can I recreate your setup on my local machine and reproduce the issue?
",bajtos,veyselsahin
347,2014-04-11 23:27:47,"Hi @bajtos 
node-inspector@0.7.3
Thanks
",veyselsahin,bajtos
346,2014-04-09 18:22:54,"@bajtos , also there is third way - integrate node-inspector with node-webkit ;-)
",3y3,bajtos
346,2014-05-27 06:06:01,"@lijunle not yet. We we most likely change node-debug to use node-webkit instead - see #351.
",bajtos,lijunle
345,2014-09-01 09:52:16,"@loonytoon thanks for sharing the solution :thumbsup: here
",bajtos,loonytoon
344,2014-08-09 07:10:15,"@bajtos It would be great if you had some time to review my comments in https://github.com/joyent/node/issues/7439 about this problem. Thank you!
",misterdjules,bajtos
344,2014-08-09 18:25:33,"> @bajtos It would be great if you had some time to review my comments in
> joyent/node#7439 about this problem.

I'm on vacation now, I will review your comments early next week. Thank you
for looking into this issue!
",bajtos,bajtos
344,2014-08-09 20:57:12,"The issue reason is:



in [lib/BreakEventHandler](https://github.com/node-inspector/node-inspector/blob/master/lib/BreakEventHandler.js#L63-L66). We don't have this source (`natives runtime.js`), therefor we call continue.

I think that the best way to resolve this issue is a new strategy for receiving a scripts:
After debuggerClient connection we call



Now we have scripts list without sources. When frontend will request source of any script, we will send to app:



This way is reasonable for #289.
@misterdjules , are you ready to release it, or you leave it for me?
",3y3,misterdjules
344,2014-08-10 06:31:41,"@bajtos Sorry for that and enjoy your vacation :) There's no hurry, I just wanted to make sure that the result of my investigation don't get lost in another issue. Thank you!
",misterdjules,bajtos
342,2014-04-08 07:22:04,"@bajtos , ready to merge.
",3y3,bajtos
341,2015-06-02 10:33:24,"Hi @jkrems,

I was building a web scraper and I have a read world scenario to try this out. Can you please help me how to merge your code with my copy of module to try this? (I'm assuming I can't do a git cherry-pick or something like that because the module itself is not a git repo)

Alternatively, the repo where I want to try this is here (I know my code sucks) https://github.com/atif089/RandomActsOfTech/tree/master/InstaUserScraper
",atif089,jkrems
340,2014-04-19 14:19:15,"@alFReD-NSH , good luck. Are you ready to work with C++? :-)
",3y3,alFReD-NSH
340,2014-04-19 16:39:28,"@alFReD-NSH , How I can understand your plan B is `c` function of this small example?


",3y3,alFReD-NSH
340,2014-04-22 05:57:54,"@alFReD-NSH 

> If you guys don't mind, I'll be working on this.

Great! Don't hesitate to ask for help if you get stuck.

> Whenever an error is created after when the callback of that async function is called, I'll attach previous stack trace to that error.

Beware:

> The stack trace mechanism used for built-in errors is implemented using a general stack trace collection API that is also available to user scripts. The function
> 
> 
> 
> adds a stack property to the given error object that will yield the stack trace at the time captureStackTrace was called. **The reason for not just returning the formatted stack trace directly is that this way we can postpone the formatting of the stack trace until the stack property is accessed and avoid formatting completely if it never is.**

Source: https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi. Emphasis is mine.

I remember reading somewhere that formatting of the stack trace is rather expensive. You should probably keep a list of errors instead of a list of stack traces.
",bajtos,alFReD-NSH
339,2014-04-02 18:38:51,"@bajtos Thanks. I'm updating right now after finding the cause of the issue: https://github.com/npm/npm/issues/4587#issuecomment-39183795

I'll close this issue in a few moments, once I have confirmed that updating `node >= v.0.10.16` & `npm > v1.3.6` fixes the problem.
",rickhuizinga,bajtos
338,2014-04-02 14:03:33,"@bajtos , Keep in mind what v8-profiler has js API and PR needs only .cc files from him.
",3y3,bajtos
338,2014-04-02 14:12:17,"@bajtos , also is important:
V8 less that v3.22 has uncompatible API with node-inspector front-end. This stops me from support NodeJS v0.10
",3y3,bajtos
338,2014-10-16 12:33:28,"@bajtos , ready to review
",3y3,bajtos
337,2014-06-16 10:24:58,"@bajtos , ready to review.
",3y3,bajtos
337,2014-06-17 09:51:02,"Ok... Rebased.
@bajtos , I restarted Travis testing 4 times and now it pass - this discouraging. (previous commit I restarted over 20 times)
This is ready.
",3y3,bajtos
337,2014-07-19 21:07:41,"@bajtos , the problem is in node version. I need to fix v8-profiler for node 0.10.*
",3y3,bajtos
337,2014-07-21 00:16:26,"@bajtos , all rebased. Fixed error message. Some small cleanups. Ready to next step of review.

In any cases full supporting of 0.10.\* is an issue of v8-profiler, but not of this commit. Now I don't know can I fix this problem or not. I prefer to find answer in future if it is possible, because 0.10.\* is a great part of node community and also because the next version of node debugger will be moved to another isolate, and this issue maybe will block profiling in 0.13.*. 
I tried to manually switch to related Isolate, but it does not give me positive result. After some other small researches I'll start to search more experienced v8 developer for solving this issue or for closing it as unresolved.
",3y3,bajtos
337,2014-08-12 18:07:19,"@bajtos ,
I inspected v0.10 issue and can concluse what it's a v8 or node specific:

This is a simple test. Here I start profiling, do something in timeout loop, stop profiling and print resulted profiling tree. I don't use debug (other isolate) here, but tree is different for v0.11, v0.10 and **v0.10 with different start parameters (SAMPLING_RATE=10, REPEAT_COUNT=100)**

#### TEST



#### v0.10 OUTPUT



#### v0.10 OUTPUT (WITH SAMPLING_RATE=10, REPEAT_COUNT=100)



#### v0.11 OUTPUT



I think we need to add something like this to README:

---

## Profiling

Node Inspector support profiling for node version at least 0.10.
Be careful, node v0.10.\* can miss part of profiling information. See (issue with description here).

---

Also we can call node team to help us describe this problem.
",3y3,bajtos
337,2014-09-05 07:53:05,"@bajtos, which is a correct style for single line `if` statement in node-inspector:







?
",3y3,bajtos
336,2014-04-07 14:13:41,"@bajtos , I add fixes. Please see [BreakEventHandler L52](https://github.com/3y3/node-inspector/blob/94d97c4c9b44aa7993deec7172416f5d9ef98f5c/lib/BreakEventHandler.js#L52)
I think this part is a big problem, I'll prefer to create something like this:


",3y3,bajtos
336,2014-04-16 14:14:44,"@bajtos , Is there a progress in discussion with Bradley Meck?
",3y3,bajtos
336,2014-04-21 07:49:08,"@bajtos , all was fixed. We wait for 7473 or continue this review without node changes?
I added small changes in `BreakEventHandler` part - now I do not see a way to get the indeterminate state.
",3y3,bajtos
336,2014-04-22 13:50:24,"> @bajtos , all was fixed. We wait for 7473 or continue this review without node changes?

I'd rather not wait for Node core changes, as it may take long time until they are landed.
",bajtos,bajtos
336,2014-04-22 22:09:13,"@bajtos , all fixed and ready to next round
",3y3,bajtos
335,2014-04-01 07:24:27,"Hello @csbrandt, thank you for reporting the issue.

If content has not method `replace` then it is not a string, which means `fs.readFile` returned an unexpected result. 

Could you please add a log statement and post the output here?


",bajtos,csbrandt
335,2014-04-07 21:36:45,"I think I'm getting this same error on Node 0.8 on OSX 10.9.  I tried adding a console log but I'm having issues with console (unrelated to this issue).  So can someone else add this log and get some info for @bajtos ?
",dmgreene,bajtos
335,2014-04-07 22:03:45,"@dmgreene if you comment out line 67 in ScriptFileStorage.js where node-inspector is installed globally on your system, that resolved the issue for me.


",csbrandt,dmgreene
335,2014-04-07 22:06:22,"Thanks @csbrandt but that seems like a temporary fix.
",dmgreene,csbrandt
335,2014-04-08 06:56:22,"Thank you @csbrandt for the log, it helped me to track down the problem. The fix is waiting for code review - see #342.
",bajtos,csbrandt
333,2014-03-27 09:41:11,"Thank you @shingo-nakanishi for reporting the issue.

Are you able to reproduce it using the [sample server](https://github.com/node-inspector/node-debug-samples/blob/master/simple-server/index.js)? (I am not.)

Please start the node-inspector using the following command:



This will tell node-inspector to dump all communication to stderr. Please post the last twenty-thirty messages here, hopefully they will contain enough information to pin down the source of the problem.
",bajtos,shingo-nakanishi
333,2014-06-05 07:10:20,"@patrickhempel , @shingo-nakanishi , please test 0.7.4, it can fix your problem
",3y3,shingo-nakanishi
333,2014-06-05 07:10:20,"@patrickhempel , @shingo-nakanishi , please test 0.7.4, it can fix your problem
",3y3,patrickhempel
333,2016-09-01 16:07:30,"@njappboy You need to downgrade your node to 6.3, and it should work. 
",gotoAndBliss,njappboy
332,2014-03-24 10:22:41,"Hi @bbroeksema, thank you for reporting the issue.

First of all, 0.2.0 betas are over a year old now and no longer supported. Please open an issue in eclipse orion to upgrade to a more recent version.

When I inspected data in the public registry, there are both ""0.2.0-beta4"" and ""0.2.0beta4"" versions, seems that ""0.2.0beta4"" is automatically redirected to ""0.2.0-beta4"". 

I tried to install the Node Inspector myself and it worked well:



What version is your npm client? Mine is `1.4.6`.


",bajtos,bbroeksema
332,2014-03-24 13:00:42,"Hi @bajtos, thanks for the quick heads up. I looked up my npm version and it was at 1.2.18 on ubuntu (no more recent version provided). After upgrading it using npm install -g npm and removing the ubuntu provided one I didn't get this issue anymore. So it seemed to have been an npm issue.

After updating npm I was able to install orion with any manual fiddling or other problems. Closing the issue.
",bbroeksema,bajtos
331,2014-03-21 16:44:51,"@bajtos , updated. Anything else?
",3y3,bajtos
330,2014-03-20 19:30:25,"Hi @dininski, thank you for the bug report and the pull request.

The patch is going in the right direction, please see my line comments above for issues to fix.
",bajtos,dininski
328,2014-03-17 06:41:54,"@wentingliu , it will be available after Blink Developer Tools starts to support ECMAScript 6
",3y3,wentingliu
328,2014-03-17 09:24:59,"> For now, you can debug your ES6 application by starting all components manually:

@bajtos , And frontend will parse scripts?
",3y3,bajtos
328,2014-03-17 09:38:34,"> > For now, you can debug your ES6 application by starting all components manually:
> 
> @bajtos , And frontend will parse scripts?

It looks so. At least the `let` keyword works fine in the DevTools in the latest stable version of the Chrome browser.

> `node-debug test.js --harmony`
> The same construction is not working?

No, it does not work. Options after the script are passed as script arguments, not node arguments.

Your code is will execute `node --debug=5858 --debug-brk test.js --harmony`.

See the implementation of [node-debug](https://github.com/node-inspector/node-inspector/blob/bbf989ca5cf9bc8e979d4af4a0df3155553f8253/bin/node-debug.js) for more details.
",bajtos,bajtos
328,2014-03-17 10:10:58,"@bajtos , if you start to create PR please see also this [typo](https://github.com/node-inspector/node-inspector/blob/master/bin/node-debug.js#L187-L189)
",3y3,bajtos
327,2014-03-16 21:35:46,"@MurWade , the [get/set properties](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Defining_getters_and_setters)

The project reference was enough.

`session_state` creates as `get/set` [here](https://github.com/mozilla/node-client-sessions/blob/dd7bd46007ea71bcfe96580310288d7ef84c89d3/lib/client-sessions.js#L582)
At this moment node-inspector cannot display get/set properties, it's an issue of node, see [Issue 7139](https://github.com/joyent/node/issues/7139)
",3y3,MurWade
326,2014-03-21 08:24:04,"@bajtos , Hm... Usage of yargs don't help in this situation. `rc` and `yargs` uses `minimist` as args parser and `--no` prefix is his feature.
How about replace `--no-preload` to `preload` and etc. And update the documentation (describe usage of `no` prefix) and files that uses this options?
Also I can add `yargs` as args parser this provide an access to aliases.
What you think?
",3y3,bajtos
326,2014-04-07 13:18:32,"@bajtos , The problem with current documentation and new config option `preload=true`:
- terminal `node-inspector no-preload` works fine. Configuration is `{preload: false}`
- .rcconfig or ENV variable `no-preload=true` bad. Configuration is `{noPreload: true}`
",3y3,bajtos
326,2014-04-09 09:00:18,"> @bajtos , The problem with current documentation and new config option `preload=true`:
> - terminal `node-inspector no-preload` works fine. Configuration is `{preload: false}`
> - .rcconfig or ENV variable `no-preload=true` bad. Configuration is `{noPreload: true}`

I see your point. Let's rename `no-preload` to `preload` completely, as you suggested earlier.

The rc file should still support `noPreload` or `no-preload` for backwards compatibility (I am not sure which one is used). A warning could be printed when old key is encountered, to let users know they should use `preload` instead. That will allow us to remove the support of the old key (`no-preload` or `noPreload`) at some point in the future.

It would be nice to describe the possibility of using `--no-preload` instead of `--preload=false` in the help, but I can live without that.

Is this a reasonable solution?
",bajtos,bajtos
326,2014-04-10 19:59:53,"@bajtos , PR was updated. Please review.
Also I see one strange point - why we need `config.isScriptHidden` but not `ScriptFileStorage.prototype.isScriptHidden`?
",3y3,bajtos
326,2014-04-13 10:02:58,"@bajtos , I removed all unrelated changes and changed tests.
The next PR will be 'config cleanup'.
",3y3,bajtos
326,2014-04-22 20:20:28,"@bajtos , I checked your comments. Also I updated `README.md` and squashed all.
",3y3,bajtos
323,2014-03-13 15:00:16,"Hi @jchannon,

Thank you for reporting the issue, I am glad you found a workaround.

On Unix, the `_mocha` script file starts with a [shebang](http://en.wikipedia.org/wiki/Shebang_%28Unix%29) that is ignored by Node and thus you can execute the file as if it was a regular javascript file.

On Windows, the `_mocha` script is apparently not a valid javascript, thus it cannot be started via `node _mocha`.

I suppose we need to fix the part of `startDebuggedProcess` that handles the case when the script is not a local javascript and make it detect Windows CMD files: https://github.com/node-inspector/node-inspector/blob/4a8b957435bf8d7e8cfefcef96b14e7d72bb1125/bin/node-debug.js#L243-L249
",bajtos,jchannon
322,2014-03-14 06:40:49,"@bajtos , I planned that this will be my last commit before updating information on the 'Console Implementation' PR, but I think that JSHint is important. On next week you can wait first update for 'Console Implementation' and also for 'JSHint'.

PR updated.
",3y3,bajtos
309,2014-02-19 18:34:10,"@bajtos , now this is a complex PR for #218.
",3y3,bajtos
309,2014-02-20 15:29:30,"@bajtos , how can i handle `ownProperties: false`.
I use [this solution](http://src.chromium.org/blink/branches/chromium/1625/Source/core/inspector/InjectedScriptSource.js) for realisation. Where i go out of algorithm in context of node-inspector
",3y3,bajtos
309,2014-02-21 11:25:53,"@bajtos , all is ready, I also add some fixes.
Subtype used to autoformatting in DevTools. Now in console arrays displayed inline.
",3y3,bajtos
309,2014-03-03 07:51:58,"@bajtos , can I wait review on this week?
",3y3,bajtos
309,2014-03-03 12:46:51,"> It's ok to add subtype: undefined, it will be discarded during JSON serialisation.

@bajtos , It was my first solution, but it needs to multiple changes of tests where used `deep.equal`. If you are ready to approve this solution, I will change the tests and code.
",3y3,bajtos
309,2014-03-03 14:33:02,"> > It's ok to add subtype: undefined, it will be discarded during JSON serialisation.
> 
> @bajtos , It was my first solution, but it needs to multiple changes of tests where used `deep.equal`. If you are ready to approve this solution, I will change the tests and code.

That's fine, at least it's clear that the subtype property is expected to exist (even if `undefined`).
",bajtos,bajtos
309,2014-03-04 13:54:32,"@bajtos , all fixed and ready to next review.
",3y3,bajtos
309,2014-03-05 19:46:56,"> How about displaying the prototype as a regular object? That way you can expand it and see all Date methods, etc. In the future will work `console.dir`

@bajtos , I prefer to leave it as is. We can expand it in scope or watch window.

Rebased.
",3y3,bajtos
309,2014-03-10 17:09:14,"@bajtos , is it ready, or anything else
",3y3,bajtos
305,2014-02-18 08:21:32,"@sidorares Debugging mocha tests is easy:



Supporting coffee script is more difficult, definitely out of scope of this pull request. Can you use `coffee -c -w` as a workaround for now?

@sam-github Thanks for review. I have added a couple of commits and replied to the rest of the comments. Anything else to improve?
",bajtos,sidorares
305,2014-02-18 18:55:27,"@sidorares let's move the coffee-script conversation to a new GH issue: #308.
",bajtos,sidorares
303,2014-02-17 10:02:27,"Hi @linjianzao, thank you for the bug report. How can I reproduce the issue on my machine? Please provide more details.
",bajtos,linjianzao
299,2014-02-11 07:43:29,"Hi @kzahel, thank you for the bug report.

The issue is fixed, please install node-inspector from master until a new version is published to npmjs:


",bajtos,kzahel
296,2014-01-30 14:05:15,"@auchenberg Thank you for the pull request. The change looks generally good, see my line comment about a possible regression.
",bajtos,auchenberg
295,2014-01-29 06:11:03,"@bajtos  actually this happen just after updating to the latest version of node inspector prior to that it was working fine.
wonder if the latest update break something causing this as this issue not happening on other instances.
",burhanfarooq,bajtos
294,2014-03-03 07:13:46,"@bajtos tried with v0.7.0 . Still nothing. Don't think this is a node-inspector issue though...
",anlawande,bajtos
293,2014-01-24 09:46:51,"Hello @pritambaral, thank you for the pull request. Please simplify the code in front-end-node/Overrides.js per my comment above and reword the commit message to follow [50/72 rule](https://github.com/node-inspector/node-inspector/wiki/Contributing#git-commitspatches). Note you should not create a new pull request for these changes, keep them in the current one instead (see [Addressing code review issues](https://github.com/node-inspector/node-inspector/wiki/Contributing#addressing-code-review-issues)).
",bajtos,pritambaral
290,2014-01-22 08:06:49,"Hello @jkrems, thank you for submitting the issue. I don't mind dropping socket.io in favour of plain websockets, as long as it doesn't break anything. (Related issue: #274 Websockets connection not working.)

Honestly, this has a very low priority for me. Node Inspector is shipping it's own snapshot of DevTools front-end and I don't plan to support other front-ends, thus the communication protocol is an implementation detail. At least until [RemoteDebug](http://remotedebug.org/) gets more traction, but that's a different story.
",bajtos,jkrems
288,2014-01-21 16:28:07,"Hello @websailor, thank you for reporting the issue here.

The error messages says that npm was not able to compile the native module `ws`. This could be a bug in the `ws` module, or a misconfiguration of your machine.

Either way, please fill an issue in the ws project: https://github.com/einaros/ws
",bajtos,websailor
286,2014-01-20 10:02:45,"Hi @ChrisWren,

Thank you for the pull request.
1. Files in front-end/ directory are coming from Chrome Developer Tools and they are completely replaced every time we upgrade to a newer version. All front-end patches are kept in a special file - [front-end-node/Overrides.js](https://github.com/node-inspector/node-inspector/blob/master/front-end-node/Overrides.js). You need to find a way how to implemented the reload there.
2. Please add a short timeout before calling `location.reload()` to give the debugged application some time to (re)start. I would go for a value between 50ms to 200ms.
",bajtos,ChrisWren
286,2014-01-29 08:19:52,"@ChrisWren , you can also test #289 - it realises other solution of reloading:
1) Backend waits to reconnecting of app
2) Backend sends to frontend 'reloadInspector'
In other words we don't have infinite reloading of page.
",3y3,ChrisWren
286,2014-01-30 08:06:46,"@ChrisWren the new commit looks better. There is one more thing to improve - your new `WebInspector.detached` should call he original function, so that the black overlay informing user about the problem is displayed until the page is reloaded.
",bajtos,ChrisWren
285,2014-01-20 09:56:37,"Hello @focusaurus, thank you for the pull request. Please improve the commit message to better describe the change, e.g. `Fixed typo in docs/embedding.md`.

See also [Contributing Guide](https://github.com/node-inspector/node-inspector/wiki/Contributing#git-commitspatches).
",bajtos,focusaurus
282,2014-01-16 10:21:33,"@bajtos, no, isn't correct - how you can see in chnges, I removed `'Date: '` prefix .
In last commit I update test
",3y3,bajtos
280,2014-01-16 10:53:58,"@bajtos Sorry for unrelated changes but this is work of gjslint.
",3y3,bajtos
274,2014-01-10 21:23:09,"@gcochard . I was having the same problem and the fix you suggested in your first post worked.  Interestingly enough, node-inspector used to work for me, and then my company switched to Trend Micro OfficeScan from McAfee.

My websockets test seems fine: http://websocketstest.com/result/285252

I'm using Chrome on Windows to access node-inspector running on an Archlinux VM configured with a host-only adapter (so I access it on 192.168.56.101).
",gdw2,gcochard
273,2014-01-09 20:52:44,"@bajtos Looking at this now... DebuggerAgent. _doSetVariableValue in master no longer makes the call to `setVariable` that you reference in your comment. I see:



Has this been fixed in master?
",asalant,bajtos
273,2014-02-06 07:58:18,"@aldencs,  

> One final note, that I think is particularly interesting... when you follow the example provided by rather than trying to do that variable assignment in the console you edit the variable's value in the ""Scope Variables"" section of node-inspector the change does actually work...

Good note, I will start to create pull-request in soon.
",3y3,aldencs
272,2014-01-07 23:28:55,"@pflannery @bajtos  I've been anticipating this fix for a bit so I patched the files manually on my local by looking at pflannery's commit. (Thanks for the fix :) )
1. npm installed the latest v0.7.0-1 
2. added the 1 line in lib/DebuggerClient.js and the 1 change in lib/Convert.js. based on 127955f6005c8cbd1c872d01e69149d54b9863ad

It was running great (showing longer strings on the console) and then 30 min or so later I noticed it crashed with:



So apparently there are situation(s) where args is not passed to DebuggerClient.prototype.request?
will update if I can encounter this again. Perhaps we need:



But I'm not running master, I'm running npm's v0.7.0-1 hand patched with 127955f, if that could make a difference. (looks probably the same to me)
",bf0,pflannery
272,2014-01-07 23:28:55,"@pflannery @bajtos  I've been anticipating this fix for a bit so I patched the files manually on my local by looking at pflannery's commit. (Thanks for the fix :) )
1. npm installed the latest v0.7.0-1 
2. added the 1 line in lib/DebuggerClient.js and the 1 change in lib/Convert.js. based on 127955f6005c8cbd1c872d01e69149d54b9863ad

It was running great (showing longer strings on the console) and then 30 min or so later I noticed it crashed with:



So apparently there are situation(s) where args is not passed to DebuggerClient.prototype.request?
will update if I can encounter this again. Perhaps we need:



But I'm not running master, I'm running npm's v0.7.0-1 hand patched with 127955f, if that could make a difference. (looks probably the same to me)
",bf0,bajtos
268,2013-12-18 10:49:54,"Hi @MurWade, thank you for reporting the issue.

It looks like a bug in Node Inspector to me, the first screen shot should have looked same as the second one.

Please provide a minimal sample where the problem can be reproduced. What version of Node are you running? What platform (Linux/Mac/Windows/etc.)?
",bajtos,MurWade
268,2014-02-20 18:02:06,"The problem was most likely caused by incorrect conversion of error objects received from V8 and should have been fixed by 739a578.

@MurWade please upgrade to v0.7.0. Feel free to reopen the issue if you encounter the problem again.
",bajtos,MurWade
266,2014-01-17 20:06:53,"Would love to see this implemented. @pmariano let me know if you don't have time to implement, otherwise I will watch this thread.
",ChrisWren,pmariano
266,2014-01-20 20:33:06,"> Would love to see this implemented. @pmariano let me know if you don't have time to implement, otherwise I will watch this thread.

@ChrisWren I'm kind o busy this week, so I'll just have some time to implement on next week. Feel free to implement it, just let me know if you get the task.
",pmariano,ChrisWren
266,2014-01-20 20:33:06,"> Would love to see this implemented. @pmariano let me know if you don't have time to implement, otherwise I will watch this thread.

@ChrisWren I'm kind o busy this week, so I'll just have some time to implement on next week. Feel free to implement it, just let me know if you get the task.
",pmariano,pmariano
266,2014-01-23 11:43:23,"@pmariano,  @coodoo , if you have time you can test one of pull requests that fixes this issue (#289, #286) 
",3y3,coodoo
266,2014-01-23 11:43:23,"@pmariano,  @coodoo , if you have time you can test one of pull requests that fixes this issue (#289, #286) 
",3y3,pmariano
265,2013-12-17 10:12:56,"Hello @popomore, I am afraid I don't understand what you are asking for.

If you would like to automatically restart the debugged process, then you have to use another tool for that, e.g. forever, nodemon, etc. (see our [blog post](http://strongloop.com/strongblog/comparison-tools-to-automate-restarting-node-js-server-after-code-changes-forever-nodemon-nodesupervisor-nodedev/) comparing the alternatives).

If you would like to automatically reload the browser GUI after the process is restarted, checkout the following StackOverflow entry: http://stackoverflow.com/q/18853443/69868.

I am closing this issue, feel free to reopen if you have more questions.
",bajtos,popomore
264,2013-12-16 19:44:52,"Hi @dickhardt, 

regarding unit-tests - what have you tried so far? Look at `it('excludes files to hide')`, you want to write a very similar test - just pass your new config option instead of the hidden files filter.

See also [Contributing wiki](https://github.com/node-inspector/node-inspector/wiki/Contributing#testing).

BTW, please don't open multiple pull requests for the same feature/patch. It's ok to add more commits and comments to the same pull request.
",bajtos,dickhardt
264,2013-12-17 18:09:54,"@dickhardt I apologise for confusing you. The point of my comments was to show some possible future directions, not adding more ""requirements"".

What I am asking from you before accepting this pull request:
1. Rename `--fast-load` to `--no-preload`, you seem to agree it's a good idea.
2. Add a unit-test for this new feature as discussed earlier. The automated tests prevent regressions in the future (among other benefits).

I truly appreciate the effort you have made by submitting this pull request. Let me know if you need more help on writing the unit-test.
",bajtos,dickhardt
264,2013-12-17 18:15:19,"I was not confused. I was wondering if I was fixing the right problem, or
if there is an issue in how Node Inspector is preloading files. Is crawling
my entire drive for *.js the desired behavior?

On Tue, Dec 17, 2013 at 10:10 AM, Miroslav Bajtoš
notifications@github.comwrote:

> @dickhardt https://github.com/dickhardt I apologise for confusing you.
> The point of my comments was to show some possible future directions, not
> adding more ""requirements"".
> 
> What I am asking from you before accepting this pull request:
> 1. Rename --fast-load to --no-preload, you seem to agree it's a good idea.
> 2. Add a unit-test for this new feature as discussed earlier. The
> automated tests prevent regressions in the future (among other benefits).
> 
> I truly appreciate the effort you have made by submitting this pull
> request. Let me know if you need more help on writing the unit-test.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/node-inspector/node-inspector/pull/264#issuecomment-30775322
> .
",dickhardt,dickhardt
261,2013-12-16 14:55:10,"Hello @sergkr, thank you for reporting the issue.

If you feel like hacking on this yourself, you can start by looking at `convert.v8RefToInspectorObject` in [lib/convert.js](https://github.com/node-inspector/node-inspector/blob/master/lib/convert.js#L69) to see if there is enough information coming from the V8 debugger.
",bajtos,sergkr
261,2013-12-17 04:44:24,"@bajtos, I'll be happy to contribute, but I need a bit of help getting set up.

I was able to clone the repo and get it up and running (and I verified that all existing tests pass).  Now I'd like to figure out how I can use node-inspector to debug node-inspector (so that ideally, I could set a breakpoint in the convert.v8RefToInspectorObject function and investigate what information I have available to me when converting a Date).

I'm going through the [Debugging the Debugger](https://github.com/node-inspector/node-inspector/wiki/Debugging-the-debugger) wiki article, which is generally great, but I'm having trouble with some of the steps in the ""Debugging the back-end"" section - and ultimately, I wasn't able to get the second node-inspector instance up and running.  I'm confused where some of those port numbers are coming from, and suspect the article might be a little out of date.

Here are the parts I'm confused about:

> 1. browse to (1) http://localhost:8124

I'm assuming port 8124 is the port that test/hello.js is running on?  So this step is basically just running the original app, correct?  If so, I'm good so far.

> 1. browse to (2) http://localhost:8080

If I go to localhost:8000 directly, I just see a message that says ""Cannot GET /"".  Should this actually be: `localhost:8080/debug?port=5858`?  If so, I'm good so far.

> 1. browse to (3) http://localhost:9090

All right, so this is where I'm stuck.  Again, going to localhost:9090 just gets me ""Cannot GET /"", so I'm again assuming that should be `localhost:9090/debug?port=5858`.  However, when I go there, I get this:

![9090](https://f.cloud.github.com/assets/766698/1761552/4bd78740-66d3-11e3-97c7-4232c6a08543.png)

Well, there _is_ in fact another debugger client attached to port 5858 - that would be (2), which was started in step 3.  I thought I might try running (3) on another port instead, using the `--debug-port` command line option, so I tried doing a revised version of step 5:



However, that doesn't seem to work - going to `http://127.0.0.1:9090/debug?port=5959` results in this:

![5959](https://f.cloud.github.com/assets/766698/1761570/99893b22-66d4-11e3-808e-584f2de03677.png)

What am I doing wrong?
",sergkr,bajtos
260,2014-08-12 19:15:29,"@aplib, is this resolved?
",3y3,aplib
260,2014-08-19 14:40:39,"> debugger listening on port 5858
> ue}}Content-Length: 101

@bajtos , looks like ""Non ASCII characters problem"", I think this is resolved...
",3y3,bajtos
260,2014-08-19 16:34:43,"@3y3 makes sense, let's close this issue as resolved.

@aplib please reopen if you are encountering the problem in the latest version too.
",bajtos,aplib
259,2013-12-11 14:23:06,"@bajtos Thanks for pointing out the native browser API to me. I added details about both `localStorage.clear()` and `localStorage.removeItem(item)`.
",charandas,bajtos
259,2013-12-11 14:57:17,"@bajtos Travis build failed on my last commit. The [log](https://travis-ci.org/node-inspector/node-inspector/jobs/15287071) doesn't show anything interesting related to the readme changes?
",charandas,bajtos
256,2013-12-03 01:31:41,"Thanks! @bajtos 
",CatTail,bajtos
255,2013-11-29 19:39:57,"@bajtos It's confusing because If I were to console.log `x` inside of `setTimeout`, it would print 5 because of the lexical scope.

Why would the debugger also not traverse into the functions containing context when looking for a variable?
",andrewjmead,bajtos
254,2013-11-29 16:31:38,"Hello @CatTail, thank you for reporting a problem and submitting a fix. I am afraid the fix is not solving the root cause, possibly even creating new problems.

First of all, take a look at the discussion in #191, especially this [comment](https://github.com/node-inspector/node-inspector/pull/191#discussion_r5660174):

> (the naming scheme)
> - config.json uses camel-case names only (this preserves compatibility with older installations)
> - command-line arguments and RC files use dashed names only (this is the new way for the future)

Looking at the current implementation, it seems like you should change `collectDefaultsFromDefinitions` to use dash-style keys, which is the style returned by `collectDefaultsFromJSONConfig()` and expected down the line in `rc()` defaults. Instead of changing `collectDefaultsFromJSONConfig()` to return camel-case keys.

Back to your issue:

> the order of key appear is unknow and I experience that my own configuration file in $HOME will be override by the global one.

If I understand your change correctly, then your change will completely disable default values from config.json. It fixes the problem only because there will be no merging anymore.

It would be very helpful if you could describe how to reproduce your problem. An automated unit-test would be even better.
",bajtos,CatTail
254,2013-12-02 13:48:52,"@bajtos Yeah, I just send another pull request :)
",CatTail,bajtos
251,2013-11-26 07:42:17,"Hello @MatAtBread, could you please add a sample code? I have difficulties to understand what you are asking for. How is the feature different from ""Step Over""?
",bajtos,MatAtBread
249,2013-11-29 19:52:15,"Hello @dandv, thank you for the bug report and great instructions for reproducing the issue.

The problem can be rephrased like this: ""Continue to here"" does not work for scripts that are not loaded into the V8 runtime yet. It can be reproduced in the latest Canary version of Chrome Developer Tools too.

I have filled a Chromium [bug #324524](https://code.google.com/p/chromium/issues/detail?id=324524), since Node Inspector GUI is a copy of DevTools front-end.
",bajtos,dandv
248,2013-11-18 16:27:39,"Hi @magwitch, thank you for reporting the issue.

Is your node-inspector running on the same machine as the process you are debugging? You can connect to Node Inspector from a browser running on a different computer, but Node Inspector and the debugged process must be on the same machine.
",bajtos,magwitch
248,2014-08-12 19:34:55,"@magwitch , please confirm this issue on v0.7.4. I think it was fixed by 39fe73b
",3y3,magwitch
248,2014-08-13 16:45:29,"@magwitch 

> I can find an alternative method then I just go with the alternative.

I am curious, what alternative did you choose?
",bajtos,magwitch
247,2013-11-28 18:46:00,"Hi @ElliotChong, I am glad you find Node Inspector as a useful tool.

As for setting breakpoints in coffee script files that are not loaded yet, it's a limitation of Chrome Developer Tools we are using for the front-end. The sourcemap information (which is needed to find coffee files) is passed to DevTools when a script is loaded into V8. AFAIK the protocol does not support passing this info sooner.

You should be able to reproduce this issue in Chrome browser too (create index.html referencing mod.js transpiled from mod.coffee).

Fortunately for you, there is a workaround: you can set the breakpoint in the transpiled javascript file (that is not loaded yet). When the breakpoint is hit, Node Inspector will open the coffee script source on the correct line.

I am afraid we can't fix the problem in Node Inspector at the moment, but feel free to report it to Chrome DevTools team (see [Contributing to Chrome DevTools](https://developers.google.com/chrome-developer-tools/docs/contributing))
",bajtos,ElliotChong
246,2013-12-26 09:22:44,"Hi @awiss, thank you for reporting the issue.

Could you please provide links to the issues you mean by ""all other threads""?

Most likely you have another process listening on port 5858. Try to run `node --debug=5000 app.js` instead (try to pick another port if 5000 is taken too).

Once you get your process running, you have to change the port used by Node Inspector too (see `debug-port` in [docs](https://github.com/node-inspector/node-inspector#inspector-options)).
",bajtos,awiss
245,2013-11-16 02:17:54,"@bajtos  Thanks for you reply...

I had opened the URL `http://localhost:8080/debug?port=5858`  for the first time. and my chrome says `Error: connect ECONNREFUSED. Is node running with --debug port 5858?`

then I change the default port in  `node-inspector\config.json` into `12023` (random number), but it make no sense.

so I don't know where is my mistake.
",freestyle21,bajtos
243,2013-11-13 15:08:49,"@bajtos Approved.
",Schoonology,bajtos
242,2013-11-13 19:30:30,"Hi @ChrisWren,

thank you for submitting a pull request. Unfortunately your change breaks existing code that is using functions exported in `index.js`.

To run a Node Inspector instance in a new process, use



The main file (`index.js`) is reserved for people that want to embed Node Inspector inside an existing Node process or access utility functions like URL builder. (Support for the former is not implemented yet, the idea is to export `lib/debug-server.js` and possibly `lib/config.js` too.)
",bajtos,ChrisWren
240,2013-11-12 09:47:28,"Hello @aexmachina, thanks for submitting your request.

I can see two possible ways how to implement this:
1. Modify Node core and/or V8 engine to support what you are asking for. Beware that the current behaviour, where `debugger;` statements are skipped when there is no debugger connected, is most likely intentional and there may be good reasons why it should stay that way.
2. Modify Node Inspector to resume execution of the debugged process. This will require a new flag, probably as a URL query parameter. You will still have to run your application using `--debug-brk`, but instead of clicking on resume button, you will modify the URL the first time you open debugger, and then reload this modified URL every time you restart your application (which you have to do anyway).

While I am not opposed to have this feature implemented, it's has a very low priority for me and thus I won't have time to implement it. However, I am happy to help you if you decided to work on it yourself.
",bajtos,aexmachina
237,2013-10-30 15:26:42,"Hey @agebrock, thank you for spending the time & effort investigating the problem.

Few thoughts & questions:
1. When you hacked `findAllApplicationScripts` to return an empty list, was the performance of Node Inspector good enough? There is another person having a similar problem (see #238). Perhaps adding a config option for disabling  `findAllApplicationScripts` would be a good start?
2. `Debugger.scriptParsed` is called for every source file loaded into V8/Node via `require()`.  Do I understand correctly that when you disabled dispatch of this event in the front-end, the performance was good enough?
3. There is a concept of hidden scripts that are ignored by the debugger, maybe we can change [ScriptManager](https://github.com/node-inspector/node-inspector/blob/master/lib/ScriptManager.js#L86) to not send hidden files to the UI. There is a drawback in using hidden scripts - you won't be able to set breakpoints in such hidden scripts.
4. Another possible reason for the slowness of `Debugger.scriptParsed` is parsing of source-maps URLs - Node Inspector requests content of every script loaded in V8 to look for a source-map URL - see  [ScriptManager. _getSourceMapUrl()](https://github.com/node-inspector/node-inspector/blob/master/lib/ScriptManager.js#L148)
5. I am surprised that `Debugger.getScriptSource` and `Debugger.setBreakpointByUrl` take so much time. Maybe there is a performance issue in Chrome Developer Tools? If you can afford to spend some more time on this issue, you can create a HTML page including similar amount of dummy script files as you have in your application and open this page in Chrome Developer Tools (ideally in the latest [Canary](https://www.google.com/intl/en/chrome/browser/canary.html) build). This way we will know whether the issue is in Node Inspector backend or Developer Tools frontend.
",bajtos,agebrock
237,2013-12-03 09:00:04,"@newmanw Not sure if this is a _clear_ workaround, but at least it is something...
1. disable findAllApplicationScripts - modify [lib/ScriptFileStorage.js](https://github.com/node-inspector/node-inspector/blob/master/lib/ScriptFileStorage.js#L174)
   
   
2. disable sourceMap detection - modify [lib/ScriptManager.js](https://github.com/node-inspector/node-inspector/blob/master/lib/ScriptManager.js#L144)
   
   
",bajtos,newmanw
237,2014-03-14 06:16:26,"@totty90 Is it still slow with `--no-preload`? 

Can you provide me with an example where I can reproduce the problem?

If not, then please enable protocol logging (`set DEBUG=node-inspector:protocol*`) before starting the Node Inspector, start debugging and upload the debug log as gist or file somewhere, so that I can investigate timing. Note: some of the protocol messages contain full source of the debugged app, you may want to strip the source text out.
",bajtos,totty90
237,2014-03-14 14:54:01,"@totty90 you are welcome. Please create a new github issue and post the results there.
",bajtos,totty90
237,2014-03-15 23:05:17,"@pdufour , please try `--no-preload=true` see #325 
Send if it will be helpful.
",3y3,pdufour
237,2014-03-16 19:34:57,"@totty90 , `set DEBUG=node-ispector:protocol*` sets enviroment variable.
try:
`> set DEBUG=node-ispector:protocol*`
`> node-inspector --no-preload`
",3y3,totty90
237,2015-02-18 09:54:24,"@voidcode doesn't help much, I also use that trick, but is still not as fast as I like.
",totty90,voidcode
237,2015-09-01 19:09:52,"@bajtos 
With `node-inspector@0.12.2` / `node@0.10.32` on Linux, it takes a long time to load initially, then takes _forever_ to proceed (after resuming from being paused on the first line), while logging these entries:



(To get that output I had to hack one of the files as described in https://github.com/node-inspector/node-inspector/issues/671#issuecomment-114200212.)

How do I:

> [[disable] dispatch of this event in the front-end](https://github.com/node-inspector/node-inspector/issues/237#issuecomment-27399120)

? And what consequences will that have?

Is that what this [reference to `front-end/InspectorBackend.js`](https://github.com/node-inspector/node-inspector/issues/237#issuecomment-27286308) line 44 and 45 relates to? Please always make links like that to the permalink URL.
",jmm,bajtos
237,2015-09-24 00:37:04,"@bajtos Thanks, sorry for the delay replying. I'll have to poke around sometime. So that's probably just going to identify a bottleneck, but not actually work around it I guess.
",jmm,bajtos
237,2015-09-29 22:10:13,"@danielmanesku , how about `--debug-brk` option?
",3y3,danielmanesku
236,2013-10-29 08:34:51,"Hi @badave, thank you for submitting a pull request. Please reword your commit messages to past tense - that's the style we use in Node Inspector.
",bajtos,badave
234,2015-03-10 10:23:46,"Hi @bajtos, I can definitely implement it in my weekends. :+1: 
",marcominetti,bajtos
234,2015-05-11 04:29:37,"@marcominetti Is this already implemented ? I'm getting the same error message.
",yoshiokatsuneo,marcominetti
234,2015-05-11 05:11:51,"@yoshiokatsuneo yep but it's not yet landed in master branch... You can try it from pr #621... 
",marcominetti,yoshiokatsuneo
234,2015-05-11 05:20:20,"@marcominetti Ah, I see. I'm looking forward to be merged to master.
",yoshiokatsuneo,marcominetti
233,2014-08-19 14:16:39,"@nikmartin , @Siyfion , is this actually for v0.7.4 and Node v0.10.30?
Or I can close this?
",3y3,Siyfion
233,2014-08-19 14:16:39,"@nikmartin , @Siyfion , is this actually for v0.7.4 and Node v0.10.30?
Or I can close this?
",3y3,nikmartin
231,2013-10-23 20:29:31,"@DavidandTracyWhittington I am still not able to reproduce your problem. 

This is what I did:
1. Run https://github.com/node-inspector/node-debug-samples/blob/master/simple-server/index.js
2. Set a breakpoint in http request handler 
3. Set watch to `var v = { tablename: "" "" };`
4. The watch reports an `undefined` value, Node Inspector works without any problems.

Please provide us an example and step-by-step instructions that will allow us reproduce the problem. Otherwise I'll have to close this issue.
",bajtos,DavidandTracyWhittington
231,2014-08-12 19:37:16,"@DavidandTracyWhittington , any progress here?
",3y3,DavidandTracyWhittington
229,2013-10-13 08:11:03,"Hi @ChrisWren, thank you for submitting your pull request.

I like your Grunt module, it looks like a useful addition to Grunt workflow.

However, Node Inspector's README is not the right place for documenting other modules like grunt-node-inspector. I would suggest you to copy the relevant part of Node Inspector's README to grunt-node-inspector's README and make the change there.

As far as my understanding of Grunt and grunt-node-inspector goes, users cannot use commad-line arguments to configure Node Inspector started by grunt-node-inspector, they have to use grunt config object instead. In which case your proposed change would result in an misleading documentation.
",bajtos,ChrisWren
228,2013-10-13 10:08:14,"Hi @pete-the-pete, thank you for reporting the issue.

How did the superfish.com script get included to your Node Inspector page? It looks like you have a chrome extension that is messing up the content of inspector.html. Can you try to run node-inspector will all chrome extensions disabled to verify this assumption?

This is possibly related to #220.
",bajtos,pete-the-pete
228,2014-10-07 06:53:38,"@pete-the-pete it is a PC virus. Run some antivirus software will fix this.
",nilveryboring,pete-the-pete
227,2013-10-10 08:52:08,"Hello @ping-liang, thank you for reporting the issue.

My impression is that the problem is caused by one of the modules that node-inspector depends on.
Please try to run `npm install which`, if it works then `npm install socket.io`. I suspect one of these commands will fail, in which case is better to ask authors of the failing module.

Probably the best option is to ask on [Node.js mailing list](https://groups.google.com/forum/#!forum/nodejs), as this looks like a general ""cannot build native modules on windows"" problem. If you get the solution from the mailing list, please do cross-post it here.
",bajtos,ping-liang
226,2013-10-02 18:37:33,"Hi @gkatsev, thank you for submitting your pull request. 

Note we use past tense in commit messages, please fix your commit.

Other than that, the change looks good.
",bajtos,gkatsev
225,2013-10-09 08:31:27,"Hello @sowdri, thank you for reporting the issue.

I am afraid I can't reproduce this myself. Please send me a sample project (ideally a URL to public github repo) with instructions on how to reproduce the issue.
",bajtos,sowdri
224,2013-10-09 08:37:18,"Hi @aseemk, it's okay to ask here on Github.

> Btw, I've noticed other source map declarations of the form:
> 
> 
> 
>  (Is one right and the other wrong? Or are they both valid?)

`//#` is valid per sourcemap specification, however Node Inspector support both forms.

I am not able to reproduce your problem, source-maps work well for me. Please send a sample project (ideally as a URL to a public github repo) where the issue can be reproduced.
",bajtos,aseemk
224,2014-02-19 17:28:45,"@aseemk are you still experiencing this problem? Could this be a duplicate of #271?
",bajtos,aseemk
224,2014-03-25 07:53:46,"@jansegre can you reproduce the problem with the [sample app](https://github.com/node-inspector/node-debug-samples/tree/master/sourcemap)? What version of Node Inspector are you running?
",bajtos,jansegre
224,2014-03-25 10:13:24,"@bajtos, yes. This is what I get:

![screen shot 2014-03-25 at 07 06 58](https://f.cloud.github.com/assets/729870/2510341/52751f8e-b405-11e3-9876-6d2db7ec25b4.png)

These info might help:


",jansegre,bajtos
223,2013-09-24 07:42:21,"Hi @ssafejava, thank you for the pull request.

Your implementation goes in the right direction. There are few things to improve, see my comments above.

Please update the commit message to the 50/72 format and use a past tense (see [wiki](https://github.com/node-inspector/node-inspector/wiki/Contributing#git-commitspatches) for details).

Also add a unit-test verifying the new behaviour (hint: start by looking at `test/CallFramesProvider.js`). You can run the tests via `npm test`.
",bajtos,ssafejava
223,2013-09-24 08:04:48,"@bajtos Thanks for the pointers, I removed the `config` import & passed it down the chain to the CallFramesProvider. An extra test is in `CallFramesProvider.js`.
",ssafejava,bajtos
223,2013-09-24 17:22:39,"@ssafejava Thanks for addressing my comments. I am afraid I won't be able to finish the review until next week. Sorry for the delay.
",bajtos,ssafejava
222,2014-04-18 13:46:11,"@bajtos , I saw [this question](http://stackoverflow.com/questions/22360652/can-node-inspector-debug-an-app-without-pausing-it) on StackOverflow - can you target me to source file of webkit, where it injects this custom javascript code?
",3y3,bajtos
220,2013-09-23 06:41:00,"Hi @soliton4, Node Inspector works well with node v0.10.

Please provide more details on what does it mean ""nothing seems to work"". Check Developer Toolbar's Console in Chrome for error messages.

Note that Node Inspector works in Chrome and Opera at the moment, other browsers like Safari or Firefox are not supported.
",bajtos,soliton4
220,2014-08-12 19:43:43,"@bajtos , we can fix it by renaming `front-end/Popover.js` to `front-end/Popovers.js`. But I don't like to do changes in frontend...
",3y3,bajtos
220,2014-08-13 06:44:28,"@3y3 now that's interesting. What adblock did you test with?

@soliton4 @gkatsev could you confirm that renaming solves the issue?

> But I don't like to do changes in frontend...

I don't like that either. But it's not that bad since it is only a file rename. If we keep it documented to make sure we don't forget to do the rename when we upgrade the front-end the next time, then I can live with that.
",bajtos,soliton4
220,2014-08-13 06:44:28,"@3y3 now that's interesting. What adblock did you test with?

@soliton4 @gkatsev could you confirm that renaming solves the issue?

> But I don't like to do changes in frontend...

I don't like that either. But it's not that bad since it is only a file rename. If we keep it documented to make sure we don't forget to do the rename when we upgrade the front-end the next time, then I can live with that.
",bajtos,gkatsev
219,2014-01-03 04:09:08,"@bajtos, sorry for long absence.
This is a simplest version.
I'm ready to discussion. If this method of injection will be approved, I will fix issues in complex version. Then I will commit for new overview and finally I will write tests for pull request
",3y3,bajtos
219,2014-03-14 15:17:15,"@bajtos , now simple implimentation is one of unei tests of this commit ('Connect in debug-brk mode').
You can start to overview this or wait some time. On weekend I will commit second part.
Injector will be useful also in realisation of Heap profiler.
",3y3,bajtos
219,2014-11-15 16:14:49,"@bajtos , ready to review.

For memory cleanup use `clearMessages` button. Can you propose other way to control memory?
",3y3,bajtos
219,2014-11-18 12:48:38,"> @bajtos , ready to review.

Cool. I did a superficial review, the code looks good. Feel free to land it as it is.

>  For memory cleanup use `clearMessages` button. Can you propose other way to control memory?

You can limit the size of the cache to let's say 100 last items, but I don't think it's worth the effort.

Is the cache cleared when Node Inspector detaches from the running process?
",bajtos,bajtos
217,2013-09-19 16:02:22,"Hello @mrkafk, thank you for reporting the issue. I am afraid Node Inspector does not officially support Node versions older than 0.8. I'l try to check how much work it would require to support v0.4, but it's not a priority.
",bajtos,mrkafk
217,2013-09-19 16:14:07,"-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

OK I understand. Thanks!

Regards,
Marcin Krol

W dniu 2013-09-19 18:02, Miroslav Bajtoš pisze:

> Hello @mrkafk https://github.com/mrkafk, thank you for reporting
> the issue. I am afraid Node Inspector does not officially support
> Node versions older than 0.8. I'l try to check how much work it
> would require to support v0.4, but it's not a priority.
> 
> — Reply to this email directly or view it on GitHub 
> https://github.com/node-inspector/node-inspector/issues/217#issuecomment-24750745.
> 
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2.0.20 (MingW32)
> Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJSOyLIAAoJEFMgHzhQQ7hOmjYH+wUNIX3i9lPQo8SeLEKbJzjP
3B3vNm5sYIFHfpZRD/clGMuxi4I6BlokLmM/egFXiLsyZOwITute11Q0z8r+EZfG
i0Fkvt+SxFc6HGqNJRCKxwD9rDa/Irlt4BqoucIwAhjGCqKGKe6+Juwz91PenYSP
X2n/DfmfUrtTL1OG774cV8wfbFiGJITOCMWk/Jxd0J+SKd7Rt+Y00JHw5Nmdpqb0
1Aodhfn2cJH3LFiJCjEc7Ssm8M7Xo1tHjqo+KX2wtSlJDz19k3CxSPMFN7sNQU8d
h0XV2Di738QTnCiWVke2EKie3VkF9maVCXWnTgwH7MhLoZw3JQ6G8r4pYmnootM=
=MEUV
-----END PGP SIGNATURE-----
",mrkafk,mrkafk
208,2013-09-16 07:56:08,"Hello @mproy007, thank you for reporting the issue.

Please open Developer Tools, select tab Console and post the messages displayed there (there should be two messages according to your screenshot - see bottom right part).

Also try to clear settings saved by Node Inspector in the HTML5 local storage by running the following command in Developer Tools Console:



After you have removed the local settings, reload the page to see if the problem persists.
",bajtos,mproy007
206,2013-09-14 02:58:08,"@bajtos Thanks for the input, I will wait for your fix before supporting --hidden in [grunt-node-inspector](https://github.com/ChrisWren/grunt-node-inspector)!
",ChrisWren,bajtos
204,2013-09-06 17:18:03,"Hello @wwoods, thank you for reporting the issue.

I probably won't have time to investigate it in the next week or so. If you feel like taking a look yourself: start with 95b68be and look at `ScriptManager. _parseSourceMapUrlFromScriptSource`. Find out whether your `data:` URL is parsed and forwarded to front-end.
",bajtos,wwoods
202,2013-08-26 07:14:54,"@StrictlySkyler What version of Node Inspector are you using? Can you reproduce the issue with the latest version v0.3.4? 

What is your OS and Node.js version?
",bajtos,StrictlySkyler
201,2014-01-15 23:29:48,":thumbsup: as @sergkr describes
",doublerebel,sergkr
198,2013-08-20 11:23:41,"The test repo was incredibly helpful, thank you @jasonrm! I was able to reproduce the problem, the pull request with the bug-fix is waiting for a review by my colleague.
",bajtos,jasonrm
197,2014-12-09 14:24:12,"@abhay-github , can you describe your situation more verbose, bacause I don't see any problems with performance on my machine
",3y3,abhay-github
197,2014-12-09 16:11:59,"@3y3 IIRC `--noinject` can be used as a quick workaround, is that still true?

Having said that, it would be still nice to find out what's the problem and fix any performance issue(s). @abhay-github please provide steps how to reproduce your problem. Also what is your OS (Win/Linux/Mac) and what Node version do you use?
",bajtos,abhay-github
197,2014-12-11 11:19:58,"@3y3 I guess we may need to improve the code forwarding the messages to batch them? I.e. send a batch of all captured console messages once every 50ms, instead of sending individual messages immediately.

@abhay-github could you please open a new github issue to track this problem? It would be even better if you could include a simple program to reproduce the issue.
",bajtos,abhay-github
193,2013-08-14 17:42:55,"Hi @nirmelamoud, thank you for reporting the problem. I am afraid I can't tell what might be the problem based on your description.

Please try the following three things and let me know the results.
1. Run your node application on your Mac. Does the problem persist?
2. Trigger the break explicitly by adding `debugger;` statement to your code. (Run the application inside the Linux VM).
3. Debug this simple application instead, try to set a breakpoint and also watch for breaking on `debugger;` statement. (Note you have to open http://localhost:3000/ in your browser to have the request handler executed.)


",bajtos,nirmelamoud
193,2013-09-11 00:53:58,"Okay, this is a bit phantom-tastic, but here's how I fixed this on my stack...

1) Remove node-inspector 0.4.0 on the server
2) In Chrome go to the History panel (cmd-Y), search for the url of your server's node-inspector instance
3) Check all of the history items and click the 'Remove All Selected' button to flush them out of cache
4) Re-install node-inspector 0.4.0 on the server
5) Re-run your server stack with --debug(-brk) and the re-installed node-inspector 0.4.0
6) Hit your node-inspector URL and wait for it to fully reload
7) Option-Menu over an existing breakpoint in the Breakpoint accordion view on the right panel and choose 'Remove All Breakpoints""
8) Add breakpoints back in and they start working again...

Sucks if you have a big stack of breakpoints, but does get debugging working again.

I sifted through a few logs and saw that sometime earlier today there was an error reported with the following:



In my node instance's std-out log... not sure what exactly was going on when those fired but thought I'd mention them as they occurred right around when I started experiencing this zombie-breakpoint issue.

@nirmelamoud, could you give the above process a shot and see if it resolves the issue for you?

If I experience this again, I be more diligent about seeing I can capture an err.log on the server side.

Cheers,
Etienne
",JELaVallee,nirmelamoud
193,2013-09-11 15:01:51,"Thank you @JELaVallee for investigating the problem more.

I am still not sure what's the source of the problem, but I have few ideas to try:
1. If the problem is in the way how node-inspector front-end files are cached by the browser, then it should be enough to flush the cache and reload Node Inspector's page (i.e. do the steps steps 2, 3, 5 and 6 only).
2. On the other hand, if the problem is caused by data stored locally in the browser, it should be enough to clear the local HTML5 storage (this makes Node Inspector forget all breakpoints), restart the debugged process and reload Node Inspector's page.

How to clear the local storage: Load Node Inspector page, Open Developer Tools Console and run the following command:



In any case, it should be possible to fix the problem without reinstalling Node Inspector.
",bajtos,JELaVallee
193,2013-09-11 15:37:11,"@bajtos: No problem, glad to give a hand for such a valuable tool!

I'll definitely give window.localStorage a look the next this should happen.  A friend suggested that this might occur if two browsers were simultaneously hitting the node-inspector server at the same time for the same running node instance when I mentioned the 104 Error message to him.  But I haven't been able to reproduce the behavior from such.

Keep up the great work!
",JELaVallee,bajtos
193,2014-10-07 11:35:53,"@rainabba how can I reproduce your problem on my machine?
",bajtos,rainabba
192,2013-08-07 07:43:04,"Hi @chenjie-cnooc,

Could you please post the full error (stack-trace) you received? Also where was the error reported - was it in node-inspector process output, in node-inspector console tab, or in Developer Toolbars console tab?

What happens when you run grunt without node-inspector, do you get the same error?


",bajtos,chenjie-cnooc
190,2013-08-05 15:18:58,"@iliakan I was able to reproduce the problem. Running this command in DevTools console should fix it:



I suspect this is related to #188.
",bajtos,iliakan
190,2015-08-22 07:30:50,"@rainabba IIRC, the support for stopping on unhandled exceptions in Node.js is rather fragile and may be broken in certain versions. Also keep in mind that unhandled exception = exception that crashes your process. If you catch unhandled exceptions e.g. via domains, they are no longer considered as uncaught (IIRC).

In order to help you more, I need an example app reproducing the problem that I can run on my machine.
",bajtos,rainabba
189,2014-05-05 14:40:04,"Hi @wyattbiker, you post #364 Issue, please switch to #189 for discussion.

> Would be nice to have an optional -title=
> or if no title use the app name as the title.

I think that best strategy will be grab name from package.json

> I already located the opener.js as the file that opens up Chrome. I wonder if Chrome has a command line option to force a title.

Opener is only one of ways to open Node Inspector. 
For example I use the old style way `node-inspector app.js`. For this reason I think that best solution:
- Add new command to [FrontendClient](https://github.com/node-inspector/node-inspector/blob/master/lib/FrontendClient.js) (like `updateTitle`)
- Add handler for this command to [Overrides](https://github.com/node-inspector/node-inspector/blob/master/front-end-node/Overrides.js)

How you can see it's not a difficult problem. I leave it for novice in Node Inspector. Are you want to be this novice and fix this issue? ;-)

In any cases @bajtos is boss and you can wait his extended comment, but how I understand, it went on vacation.
",3y3,bajtos
187,2014-06-30 15:33:04,"@aexmachina not too difficult, that's why there is the `easy pick` label on this issue :)

Take a look at our [Developer's Guide](https://github.com/node-inspector/node-inspector/wiki/Developer%27s-Guide) to get started.
",bajtos,aexmachina
187,2014-11-06 00:52:38,"I'm interested in working on this. @bajtos, Any suggestions on where to start?
",fakewaffle,bajtos
187,2014-11-06 07:22:38,"@fakewaffle see [DebuggerAgent.setBreakpointByUrl](https://github.com/node-inspector/node-inspector/blob/90d699202dc2d5dc44c9493e89da1bea3e1c3671/lib/DebuggerAgent.js#L322-L349) and V8's [setbreakpoint](https://code.google.com/p/v8-wiki/wiki/DebuggerProtocol#Request_setbreakpoint).
",bajtos,fakewaffle
187,2015-07-08 11:30:22,"@EricSmekens I think it is still an easy pick, the code in `DebuggerAgent.setBreakpointByUrl` hasn't changed much.
",bajtos,EricSmekens
185,2013-09-26 01:48:25,"Hey @bajtos, what could I do to start work on this apart from just digging into all the prior art? 
",ThisIsMissEm,bajtos
185,2013-11-07 09:45:50,"@shepheb It makes me sad to say this, but anyway. Until the profiler is implemented, you can try [bugger](https://npmjs.org/package/bugger). It should have both the debugger and the profiler.
",bajtos,shepheb
184,2013-07-30 16:35:08,"Hi @pflannery, thanks for a bug report.

I don't have bandwidth to deal with it now, I'll look at the issue later this week or next week.

Miroslav
",bajtos,pflannery
183,2013-07-30 16:38:13,"Hi @ChrisCinelli,

thank you for a bug report. Could you please provide a complete (and minimal) source code to reproduce the problem?

Thanks,
Miroslav
",bajtos,ChrisCinelli
181,2013-08-01 07:27:27,"@ChrisCinelli I am afraid this is the way how Javascript is designed (see e.g. [this article on MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Closures)) and we can't do anything about it in node-inspector.

I am closing the issue.
",bajtos,ChrisCinelli
176,2013-08-14 18:02:39,"@jandrieu Have you had any success with my work-around?
",bajtos,jandrieu
175,2013-07-24 05:41:00,"Hi @jots,

Thank you for your feedback.

> I can edit and save javascript files 
> (after setting ""saveLiveEdit"": true, in config.json). Is it possible to do the same with coffeescript?

It is not possible to save non-javascript sources, it's a limitation of Google's DevTools front-end :(

> also, is there a better place to set saveLiveEdit to true other than the global file for node-inspector?

Not yet. What location would work well for you? I am thinking about adding a command-line option or perhaps adding local config files: per-user (`~/.node-inspector.json`) or even per-project (`src/myapp/.node-inspector.json`).
",bajtos,jots
175,2013-07-24 06:44:55,"Thanks for the info @bajtos .
I like ~/node-inspector.json overridden by src/myapp/.node-inspector.json overridden by command line.

hopefully devtools front-end will allow for saving of non .js in the near future.

speaking of which, I had an idea which i'm guessing you already have had:
it would be neat if chrome devtools had a ""tab"" for node-inspector, so don't have
to open up a new window.  just shift-ctrl-j and there is the node inspector ""tab"" in
the devtools, similar to how gruntjs devtools tab works:
https://github.com/vladikoff/grunt-devtools

thanks again for your work on node-inspector, it's awesome.
",jots,bajtos
173,2013-07-22 13:44:19,"Hello @nirmelamoud,

What version of node-inspector are you running? Make sure you have a recent one (0.3.x).

Can you open ""file navigator"" sidebar? You should see at least node.js internal files there (e.g. `module.js`, `node.js`, etc.). Please see [the manual from Google](https://developers.google.com/chrome-developer-tools/docs/javascript-debugging#sources-panel) for a screenshot describing various UI controls. File navigator is the first button from the left.

You can also try to run your node with `--debug-brk` option to make it stop at the first line. Does it make any difference?

Are there any (error) messages logged to console? Check also console of Chrome Developers Tool (you have to open Developer Tools from your browser to access that console).
",bajtos,nirmelamoud
173,2013-07-22 14:57:09,"thank you for answering so promptly 

I installed it today so I have the latest one (0.3)

yes I can see the node.js internal files (at least names I see nothing on the left side (source) - only when run with debug-brk

I can open the file navigator see the sources / content etc tabs but no file appear on the sources tab it is just empty 

I started with debug-brk and  it stop somewhere,  in module.js but I see an empty file on the left side

no errors on the console (terminal)

I'm working with safari, how do I access the console from the browser or do I have to use chrom to make node inspector work ?

thanks

From: Miroslav Bajtoš [mailto:notifications@github.com] 
Sent: Monday, July 22, 2013 9:44 AM
To: node-inspector/node-inspector
Cc: nirmelamoud
Subject: Re: [node-inspector] cant see any js code on MacOS (#173)

Hello @nirmelamoud https://github.com/nirmelamoud ,

What version of node-inspector are you running? Make sure you have a recent one (0.3.x).

Can you open ""file navigator"" sidebar? You should see at least node.js internal files there (e.g. module.js, node.js, etc.). Please see the manual from Google https://developers.google.com/chrome-developer-tools/docs/javascript-debugging#sources-panel  for a screenshot describing various UI controls. File navigator is the first button from the left.

You can also try to run your node with --debug-brk option to make it stop at the first line. Does it make any difference?

Are there any (error) messages logged to console? Check also console of Chrome Developers Tool (you have to open Developer Tools from your browser to access that console).

—
Reply to this email directly or view it on GitHub https://github.com/node-inspector/node-inspector/issues/173#issuecomment-21344643 .  https://github.com/notifications/beacon/zgJeLf2qNSX-HU-CsjNSIj1fGTe62fC-BlvIDZ_q_xZlURp97VHWiknw_Lg-WH3H.gif 
",nirmelamoud,nirmelamoud
171,2013-07-18 08:29:40,"@jsdevel: Could you please attach a (minimal) test-case that I can run myself to reproduce the problem?
",bajtos,jsdevel
171,2013-07-23 08:40:44,"Hi @jsdevel, thank you for investigating the issue and describing a solution. 

I like the idea of using source maps to let V8 know what file you are debugging, it's very elegant.

Still, you should be able to debug eval-ed code out of the box, even without source maps.

In the screenshot below, you can see how my node-inspector looks like after stepping into `eval(code)`. Notice the yellow background - it's a sign that the code has no file associated with it and it lives in V8 VM only.

![image](https://f.cloud.github.com/assets/1140553/840440/b92f863c-f372-11e2-8ad1-a8d0b5aec3cf.png)

In both cases (with and without sourceMap), the debugger and inspector remained very responsive, I didn't have to wait at all.

What version of node are you running? Is there anything else in your setup/environment that could explain the difference?
",bajtos,jsdevel
170,2013-07-18 09:39:11,"Hi @ashimaathri, 

Internal node.js source files have to be loaded into V8 (via `require()`) before node-inspector can display them. Once they are loaded, you will find them listed in the Navigator panel in `(no domain)` section.

Please let me know if works for you so that I can close the issue.

Miroslav

P.S. There was a new version released this week, make sure you are not using an older version from 0.2.x series.
",bajtos,ashimaathri
170,2013-07-23 06:20:35,"@ashimaathri Node uses it's internal modules for starting your application (`module.js`, `fs.js`, etc.). So even if you don't require any module, some of them are loaded during startup.

The internal modules are compiled into the node executable and loaded into V8 engine at runtime. Node Inspector is picking the source code from V8 engine. This way we have always the correct version of the code.
",bajtos,ashimaathri
170,2013-07-23 12:53:51,"@bajtos Thanks for the information.
",ashimaathri,bajtos
168,2013-07-17 08:07:31,"Hi @mpderbec,

Thank you for the pull requests, I appreciate your effort.

We have updated node-inspector to use the latest DevTools front-end from Blink (Google's fork of WebKit), Ctrl+B now works out-of-the-box.

Please upgrade to the latest version (0.3.1) and let me know if it works correctly for you.

Miroslav
",bajtos,mpderbec
164,2013-06-07 06:59:33,"Hi @tjlahr,

I am working on a new version of node-inspector that uses the latest front-end from Google Blink (clone of WebKit). Your test-case works correctly in my version. Could you please try it yourself and let me know if it works for you too?

Link to my node-inspector version: [strongloop/node-inspector](/strongloop/node-inspector)
",bajtos,tjlahr
164,2013-06-10 15:39:18,"@bajtos node-inspector pauses normally for me in your fork
",tjlahr,bajtos
161,2013-05-28 23:13:09,"@luv2code - Also getting this. Profiling/heap snapshots don't work at all because of them
",contra,luv2code
161,2013-08-02 06:19:36,"@jezell It seems that your install/update have not installed the latest (0.3.x) version of node-inspector. The stack trace shown above contains code that does not exist in the current version.


",bajtos,jezell
161,2013-11-13 19:13:49,"@huntw999 Please fill a new issue and include following details:
- What version of Node Inspector are you using? 
- Can you reproduce the issue in Node v0.8 or with Node Inspector v0.3.x?
",bajtos,huntw999
154,2013-07-24 17:51:36,"@Zammy 
You should be able to restart the debugged process without restarting node-inspector in the new 0.3 version.

As you mentioned in other comments, there are already modules that implements your suggestions. I believe it's better to have multiple smaller modules; each module doing one thing and doing it well. It's better to leave the (re)starting job to them.

> @williamxhero Is this project alive?

Yes :)

StrongLoop took up the challenge and got Danny's permission to maintain the project further on.

Our first contribution was an upgrade to the latest Blink version of Developer Tools. See our blogpost for more information on the new features.
",bajtos,Zammy
154,2013-07-24 17:51:36,"@Zammy 
You should be able to restart the debugged process without restarting node-inspector in the new 0.3 version.

As you mentioned in other comments, there are already modules that implements your suggestions. I believe it's better to have multiple smaller modules; each module doing one thing and doing it well. It's better to leave the (re)starting job to them.

> @williamxhero Is this project alive?

Yes :)

StrongLoop took up the challenge and got Danny's permission to maintain the project further on.

Our first contribution was an upgrade to the latest Blink version of Developer Tools. See our blogpost for more information on the new features.
",bajtos,williamxhero
152,2013-03-28 16:20:34,"@Bijender What version of NodeJS are you using (`node --version` will tell you) and then which version of node-inspector?
",Siyfion,Bijender
152,2013-03-28 20:33:01,"@Bijender Okay, you've got a little muddled up.. 

Go to a directory that you are happy to install node-inspector in, then call:
`git clone https://github.com/dannycoates/node-inspector.git`

then to debug you `cd .\node-inspector` and then `node .\bin\inspector.js`
",Siyfion,Bijender
152,2013-03-28 21:37:45,"@Bijender No problem, glad I could help.
",Siyfion,Bijender
151,2013-04-04 15:59:46,"@Niggler skip step 2. If you pass `--debug`, node will run in debug mode and listen for connections on port 5858. USR1 is only needed if you start node _without_ `--debug` and want to have a running node process start debug mode without restarting the process. On my machine if I send USR1 to a node process already in debug mode, the process exits, thus your error.
",focusaurus,Niggler
151,2013-04-04 16:40:09,"Ah that appears to work @focusaurus 
",Niggler,focusaurus
150,2013-07-24 10:04:21,"@bajtos, great news! Thank you.
",denys,bajtos
150,2013-07-24 13:06:59,"@bajtos, thank you!
",sylvain-hamel,bajtos
150,2013-07-24 14:51:15,"@bajtos: agreed, freaking awesome, thank you!!
",aseemk,bajtos
146,2013-07-24 09:53:58,"@nvlbg This is a know problem that's rather difficult to solve, because it requires support from V8 debugger. Is it a major obstacle in your debugging workflow?
",bajtos,nvlbg
143,2013-07-24 09:59:25,"@mayurdabhi Firefox is not supported, you have to use a Blink browser like Chrome or Opera.
",bajtos,mayurdabhi
142,2013-07-24 17:40:02,"Hi @mongris, thank you for submitting a pull request.

First of all, most of node-inspector's code was rewritten in 0.3 after upgrading to Blink fork of WebKit. I am afraid you will have to port your changes to the new codebase.

Secondly, I don't really like the idea of adding such vendor-specific features into node-inspector. However I am happy to add few customisation hooks that will allow you to bend node-inspector for your needs.

This is how I envision you can integrate node-inspector into CloudFoundry:
1. Create a new application, put `app.js` and `manifest.yml` into this application.
2. Add `node-inspector` as an npm dependency (`npm install --save node-inspector`).
3. Node-inspector's `index.js` (the file that is loaded when you require node-inspector from your code) should export methods for starting up a node-inspector server/back-end. The method should accept an options object with all settings. `bin/inspector.js` should fill this options object from command-line arguments, your application can fill whatever values make sense for CloudFoundry.
",bajtos,mongris
138,2013-07-24 10:14:40,"@draco2003 Thank you for your pull request. I have already made the change in 85871680 before I learned about this request. Sorry for that.
",bajtos,draco2003
134,2013-07-24 10:04:52,"@trusktr This feature is not implemented. See strongloop/node-inspector#29 for a related discussion.
",bajtos,trusktr
134,2013-08-15 04:02:30,"@bajtos Such a feature would be extremely nice (i've no time to code it though). Just on my wish list. Maybe something exists since posting this...
",trusktr,bajtos
130,2013-03-30 20:50:12,"Hi @dannycoates,

Why this issue is closed now? is there a fix for this already? 

@ravi sending the USR1 signal does not work, that was my first guess. Option #2 really not an option.
",mexpolk,ravi
130,2013-03-30 21:08:48,"Sorry, this isn't fixed, and probably won't ever be. I closed a bunch of issues without comment because I needed to declare ""issue bankruptcy"".

I've seen @ravi's suggestion work, but it's fragile. There certainly should be an easy way to debug child processes, but I think its out of scope for node-inspector.
",dannycoates,ravi
130,2014-07-03 16:13:29,"@chi-e You have to put that line in the source code of your child process.

Example:


",bajtos,chi-e
126,2013-05-01 13:21:22,"Hey @dannycoates, how much money do you need to continue to support this project? If you setup a crowd-sourcing campaign I'd happily chip in. https://www.bountysource.com/ seems to work great for coding projects.

For rewards you could do something like:
- $50 get your name in the Backers.md file
- $150 get your name in the Backers.md file, plus a shirt
- $250 get your name and url in the Backers.md file, plus a shirt
- $500 get your name, url, and a 140 char description in the Backers.md file, plus a shirt
- $1000 get your logo as a link in the Backers.md file, plus a shirt

Just spit-balling with the rewards, whatever works.
",balupton,dannycoates
126,2013-05-17 18:10:58,"@dannycoates :+1: not a bad idea! I'm from the Bountysource team, we also offer merchandise fulfillment. If you went with @balupton's reward suggestions, we could print the shirts and mail em for you too.
",ccverg,dannycoates
126,2013-05-17 18:10:58,"@dannycoates :+1: not a bad idea! I'm from the Bountysource team, we also offer merchandise fulfillment. If you went with @balupton's reward suggestions, we could print the shirts and mail em for you too.
",ccverg,balupton
126,2013-05-17 18:20:05,"+1

On Fri, May 17, 2013 at 1:10 PM, ccvergara notifications@github.com wrote:

> @dannycoates https://github.com/dannycoates [image: :+1:] not a bad
> idea! I'm from the Bountysource team, we also offer merchandise
> fulfillment. If you went with @balupton https://github.com/balupton's
> reward suggestions, we could print the shirts and mail em for you too.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/dannycoates/node-inspector/issues/126#issuecomment-18077319
> .

## 

Martin Murphy
Whiteboard-IT
http://whiteboard-it.com
w: (205) 588-7102
",soitgoes,dannycoates
126,2013-05-17 18:20:05,"+1

On Fri, May 17, 2013 at 1:10 PM, ccvergara notifications@github.com wrote:

> @dannycoates https://github.com/dannycoates [image: :+1:] not a bad
> idea! I'm from the Bountysource team, we also offer merchandise
> fulfillment. If you went with @balupton https://github.com/balupton's
> reward suggestions, we could print the shirts and mail em for you too.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/dannycoates/node-inspector/issues/126#issuecomment-18077319
> .

## 

Martin Murphy
Whiteboard-IT
http://whiteboard-it.com
w: (205) 588-7102
",soitgoes,balupton
126,2013-07-24 11:19:58,"@bajtos I've just taken a look and it looks awesome what you guys have done.. My only question is, why not release it on NPM? I have nothing against StrongLoop, but I definitely don't want to use their pre-packaged version of node.js, sorry!

EDIT: I stand corrected; you have updated the NPM version! Gratz! :smile: 
",Siyfion,bajtos
121,2012-07-26 12:32:38,"@rhythmicdevil No, it starts the node debugger that node-inspector will connect to.
",drudge,rhythmicdevil
116,2013-07-24 17:26:37,"@georgesnelling Hi George, thank you for the pull request. The new version (0.3.x) of node inspector saves breakpoints in browser's local storage and restores them automatically.

Please let me know if this feature solves your problem. If you still need to put `debugger;` statements into your code, then it makes sense to update FAQ. However, the answer should state when the breakpoints are restored by node inspector and in which cases it's necessary to use `debugger;` statement.
",bajtos,georgesnelling
113,2012-06-29 16:16:50,"@Mirodil Your latest error might be Windows/NPM specific. As suggested in the following thread, maybe using Git Bash will help?

https://github.com/isaacs/npm/pull/2479

Possibly related:

https://github.com/isaacs/npm/issues/search?q=CreateProcessW:
",memcap,Mirodil
113,2012-06-30 08:28:25,"@memcap i did not think so. when i tried to install with node version 0.6 it worked, but when i tried to install node version 0.8 it could not be installed.
",Mirodil,memcap
113,2012-09-18 06:45:53,"thank you, @memcap , your fork worked for me
",adamschmideg,memcap
108,2013-09-02 12:43:56,"@spikebrehm node-inspector cannot detect that the server was restarted. AFAIK Blink Developer Tools do not support that either, which means it's very unlikely we are going to implement this feature.

Note that it's not necessary to restart node-inspector to attach to a new process, all you need to do is to reload the page in the browser.

What's the problem with reloading the page? As of v0.3.x, node-inspector preserves most settings in browser's local storage and restores them when you reload the page.
",bajtos,spikebrehm
106,2013-09-17 21:02:04,"@bajtos could you expand on usage?

I believe I've gotten the PID of a running node process (started without debug) via:

`tasklist /FI ""IMAGENAME eq node.exe""`

which returns , say `8196`

I then launch the node REPL, and issue `process._debugProcess(8196)`

I exit the REPL (can node-inspector be run from w/in the REPL? I haven't used the REPL enough to get it to work) and launch `node-inspector &`

Then, launch Chrome with the URL.

Is there an easier list of steps (the write-up could be shorter).
",MichaelPaulukonis,bajtos
106,2013-09-18 14:08:23,"@MichaelPaulukonis The only shortcut I can think of is to call



instead of launching a REPL session.

I have updated the README file (see pull request #212). Does the README make it clear now how to start a debugging session of a running process?
",bajtos,MichaelPaulukonis
100,2013-08-10 12:43:46,"@bajtos and its working flawless, thank you for this feature!

If anyone is interested in a quick-start project that uses source maps with node-inspector(optionally with coffeescript files), checkout this [grunt task](https://github.com/tarruda/grunt-coffee-build) I just wrote.
",tarruda,bajtos
96,2013-08-27 08:58:25,"@bajtos it means it's still not really usable. I hope there's a way to fix it.
",medikoo,bajtos
85,2012-04-13 12:37:42,"@kilianc @jenner @Jimbly check out https://github.com/c4milo/node-webkit-agent I've got working cpu and heap profiling.
",c4milo,Jimbly
85,2012-04-13 12:37:42,"@kilianc @jenner @Jimbly check out https://github.com/c4milo/node-webkit-agent I've got working cpu and heap profiling.
",c4milo,kilianc
85,2012-04-13 12:37:42,"@kilianc @jenner @Jimbly check out https://github.com/c4milo/node-webkit-agent I've got working cpu and heap profiling.
",c4milo,jenner
85,2012-04-13 19:21:04,"@c4milo awesome, thanks
",jenner,c4milo
83,2012-05-30 16:44:44,"@Filirom1: Thanks. I actually _read_ this thread, but I don't know how I missed c4milo's comment! A bit tired, maybe...
",pooriaazimi,Filirom1
73,2012-04-15 21:32:05,"I have no issues, but I'd like to clarify:

Are @brandonhall and @OrangeDog having the same issue? @OrangeDog talks about breakpoints not working at all and redirecting to the ""enable debugging"" notice, @brandonhall mentions ""sessions"" having the ""enable debugging"" window by default. Doesn't sound like the same issue to me. @sethwoodworth doesn't provide enough detail to describe any issue in particular.

@brandonhall: If you refresh your browser after seeing the ""enable debugging"" notice (using the refresh button, keyboard shortcut doesn't work for me), do you have any issues debugging? Do your breakpoints magically redirect you to the ""enable debugging page""?

Just trying to sort out whether this is the same issue. :)

I do see the ""enable debugging"" window, every time my server restarts, but I don't expect the chrome dev tools to maintain a debugging session with my server while the server restarts. A simple page refresh using the refresh button ""solves"" this.
",rdrey,OrangeDog
73,2012-04-15 21:32:05,"I have no issues, but I'd like to clarify:

Are @brandonhall and @OrangeDog having the same issue? @OrangeDog talks about breakpoints not working at all and redirecting to the ""enable debugging"" notice, @brandonhall mentions ""sessions"" having the ""enable debugging"" window by default. Doesn't sound like the same issue to me. @sethwoodworth doesn't provide enough detail to describe any issue in particular.

@brandonhall: If you refresh your browser after seeing the ""enable debugging"" notice (using the refresh button, keyboard shortcut doesn't work for me), do you have any issues debugging? Do your breakpoints magically redirect you to the ""enable debugging page""?

Just trying to sort out whether this is the same issue. :)

I do see the ""enable debugging"" window, every time my server restarts, but I don't expect the chrome dev tools to maintain a debugging session with my server while the server restarts. A simple page refresh using the refresh button ""solves"" this.
",rdrey,sethwoodworth
73,2012-04-15 21:32:05,"I have no issues, but I'd like to clarify:

Are @brandonhall and @OrangeDog having the same issue? @OrangeDog talks about breakpoints not working at all and redirecting to the ""enable debugging"" notice, @brandonhall mentions ""sessions"" having the ""enable debugging"" window by default. Doesn't sound like the same issue to me. @sethwoodworth doesn't provide enough detail to describe any issue in particular.

@brandonhall: If you refresh your browser after seeing the ""enable debugging"" notice (using the refresh button, keyboard shortcut doesn't work for me), do you have any issues debugging? Do your breakpoints magically redirect you to the ""enable debugging page""?

Just trying to sort out whether this is the same issue. :)

I do see the ""enable debugging"" window, every time my server restarts, but I don't expect the chrome dev tools to maintain a debugging session with my server while the server restarts. A simple page refresh using the refresh button ""solves"" this.
",rdrey,brandonhall
73,2012-04-16 03:59:32,"@rdrey Technically, they are separate issues but with the same error message. Thankfully, I haven't seen the message in a long time now. It was incredibly hard to repro then because it would happen randomly. I suspect it was due to an older version of Chrome. I have no data to support that, but it's my only guess. 
",brandonhall,rdrey
73,2012-04-30 10:44:53,"Using Chrome 18 now and my issue no longer presents itself.
I see the same behaviour as @rdrey describes.
",OrangeDog,rdrey
66,2013-04-25 14:33:10,"@jbrooksuk You really should check out [Node Monkey](https://github.com/jwarkentin/node-monkey) if you want this feature. Just do `npm install node-monkey` and then in your app:



Go to `http://0.0.0.0:50500` in your web browser and open the javascript console to see console output.
",jwarkentin,jbrooksuk
66,2014-01-09 08:53:41,"Thanks @jwarkentin!
",jbrooksuk,jwarkentin
62,2011-09-07 19:20:14,"@fprijate awesome thanks! Hopefully @felixge will land your patch from https://github.com/felixge/node-paperboy/pull/13#issuecomment-1990519
",dannycoates,fprijate
42,2011-07-24 02:25:51,"Could this be a firewall issue? I'm able to use a remote browser, but both node-inspector and the process you're debugging must be run on the same machine.

@ligaard yes, thats a separate issue
",dannycoates,ligaard
30,2011-01-31 13:34:50,"@dannycoates Ahh, thanks for the tips!  You've built a wonderful debugging tool.  I can't thank you enough.
",xavi-,dannycoates
29,2013-12-27 08:01:50,"@STRML Node Inspector tries to match the behaviour of Chrome Developer Tools in most cases. If the GUI can handle long values (which seems to be the case), then removing the limit entirely is a very good solution indeed.
",bajtos,STRML
29,2013-12-30 21:52:47,"@bajtos It appears that the code in `/lib/convert.js` actually has nothing to do with it. After changing the limit to 1000 and generating a long string:

![truncation](http://i.imgur.com/Po2dwM7.png)

The same result occurs when removing the limit entirely.

It appears as though some code deep inside the inspector itself is performing the truncation at 80 characters. I found [some reference to this in DebuggerClient](https://github.com/node-inspector/node-inspector/blob/master/lib/DebuggerClient.js#L127) when using `JSON.stringify`. Perhaps somebody who knows more about the inspector could help.
",STRML,bajtos
29,2013-12-31 05:48:54,"It looks like this is due to a default limitation in the v8 debugger. The default max string length is defined [here](https://github.com/v8/v8/blob/a3216d885fcfcb38a6eae301fe9680b82ccc3269/src/mirror-debugger.js#L164) which limits all String type response messages to 80 characters. The formatted message we see in the console is produced by v8 [here](https://github.com/v8/v8/blob/a3216d885fcfcb38a6eae301fe9680b82ccc3269/src/mirror-debugger.js#L564)

Luckily there is a way to pass an option in the request message which can extend the message response length for Strings.

I believe the change in Node inspector requires two things 
1. We need to add a maxStringLength property value to this [object](https://github.com/node-inspector/node-inspector/blob/01cb658ce253bfbc4bedd8e72dc1ffe9c13ffa05/lib/DebuggerAgent.js#L366-L369)
   ( V8 side of things handles this [here](https://github.com/v8/v8/blob/a3216d885fcfcb38a6eae301fe9680b82ccc3269/src/debug-debugger.js#L1429) )
   Not sure what the max length should be set to but something like 1000 would be good enough and maybe a option in the config?
2. we also need to change this [line](https://github.com/node-inspector/node-inspector/blob/01cb658ce253bfbc4bedd8e72dc1ffe9c13ffa05/lib/convert.js#L137) to become `description: String(result.value)` otherwise it will still output the limited text

I tested this with my local node inspector and it worked :) 

@bajtos I wanted to discuss point 2 above as I'm not sure what impact on other dependencies that change will have?
",pflannery,bajtos
29,2013-12-31 12:51:50,"@pflannery Thanks for your deep investigation. The proposed solutions looks good, I'd prefer to set maxStringLength to a higher value (10k or 100k) and do not add a new config option for now.

As for the second point, the change should be fine. Just verify that the content of `result.value` indicates that the value is incomplete when V8 truncates the string, ideally in a new unit-test.

This issue affects `RuntimeAgent` methods calling `evaluate` request too, the pull request should fix those too. Please consider extracting the shared code into a new method in `DebuggerClient` to prevent further code duplication.
",bajtos,pflannery
28,2011-07-21 12:55:48,"@shimondoodkin: What does mean? Do you want the oppertunity to pause the program and then click on some line and then when you un-pause, the program should (try to) continue execution from the line you chose..?

PS: Out of curiosity, which use cases did you have for requireing this feature?
",ligaard,shimondoodkin
26,2014-07-25 21:23:28,"@dannycoates is there no way to set a conditional breakpoint then, without the user changing their os bindings so that control key doesn't cause a right-click in OSX?
",laurelnaiad,dannycoates
22,2011-07-21 12:57:45,"@shimondoodkin: Please explain the problem a bit further :-)
",ligaard,shimondoodkin
21,2015-03-04 09:11:12,"> @zwhitchcox how do you hide the core modules?

Please open a new issue to discuss that.
",bajtos,zwhitchcox
983,2017-03-10 10:12:04,@3y3  @bajtos @dannycoates ,hustxiaoc,bajtos
983,2017-03-10 10:12:04,@3y3  @bajtos @dannycoates ,hustxiaoc,dannycoates
977,2017-02-23 20:37:25,"Now that there's `node --inspect`,  do you still plan to maintain this tool?
I'm seeing a lot of confused people because everybody is talking about `node --inspect` but new people accidentally check out `node-inspector`, which is a completely different tool and has a few issues.

So what's the current state?
It would be nice to have a deprecation messagein the readme and maybe a link to a tutorial with `node --inspect`. e.g. https://medium.com/@paul_irish/debugging-node-js-nightlies-with-chrome-devtools-7c4a1b95ae27#.jtswxc8y7",marcbachmann,paul
976,2017-02-23 20:30:27,"Is there a reason you don't use `node --inspect`?
https://medium.com/@paul_irish/debugging-node-js-nightlies-with-chrome-devtools-7c4a1b95ae27#.ppj8ktisc",marcbachmann,paul
974,2017-02-11 17:44:27,"Development of this seems to be a constant struggle. Every time I've used it, I've given up after facing bugs. There are significant issues reported right now, e.g. [Unable install on mac OS](https://github.com/node-inspector/node-inspector/issues/966) and [Cannot Install node-inspector in Windows 10](https://github.com/node-inspector/node-inspector/issues/965).

As of node `v6.3.0`, Chrome Devtools can debug node. See [Debugging Node.js with Chrome DevTools](https://medium.com/@paul_irish/debugging-node-js-nightlies-with-chrome-devtools-7c4a1b95ae27#.g9zxav79h).

Perhaps it's time to point people to the Chrome Devtools debugger and retire this project?

I also use the Jetbrains Webstorm debugger. I'm not sure what others exist.",jcrben,paul
956,2016-12-12 02:33:21,"@bajtos  Ready for review. If you have any concerns, please let me know.  :)
",sparkleholic,bajtos
938,2016-10-19 02:15:28,"Despite the console log ""Error: No NativeModule in target scope"", which still needs addressing, this patch does enable it to work, with latest (nodejs 6.9.0)
many others to recognize for this @Virtual-Machine @asi-jmasson @dbreese
",MasterJames,dbreese
938,2016-10-19 02:15:28,"Despite the console log ""Error: No NativeModule in target scope"", which still needs addressing, this patch does enable it to work, with latest (nodejs 6.9.0)
many others to recognize for this @Virtual-Machine @asi-jmasson @dbreese
",MasterJames,asi-jmasson
938,2016-10-19 02:15:28,"Despite the console log ""Error: No NativeModule in target scope"", which still needs addressing, this patch does enable it to work, with latest (nodejs 6.9.0)
many others to recognize for this @Virtual-Machine @asi-jmasson @dbreese
",MasterJames,Virtual-Machine
930,2016-09-26 05:55:32,"@bajtos, @3y3
First of all, thank you for this brilliant project which is very useful for developing node.js app.
But it seems to be no changes over 6 months since Apr.
I'm curious if this repo is not maintained anymore ?
",sparkleholic,bajtos
928,2016-10-27 08:37:22,"The situation is, that with Node v6 point something, you don't need all this:
https://medium.com/@paul_irish/debugging-node-js-nightlies-with-chrome-devtools-7c4a1b95ae27#.hkrhparu1
",mightyiam,paul
914,2017-01-17 10:25:56,"By the way, @3y3, @bajtos, @dannycoates, is the project is abandoned? Any alternatives/forks? Any plans to transfer maintenance?",Kreozot,bajtos
914,2017-01-17 10:25:56,"By the way, @3y3, @bajtos, @dannycoates, is the project is abandoned? Any alternatives/forks? Any plans to transfer maintenance?",Kreozot,dannycoates
907,2016-12-08 21:00:29,"@elliotatRetireup I can't see code either, it's just, blank. Did you figure anything out?",scniro,elliotatRetireup
907,2016-12-19 23:29:27,"@Elliott128 I have the issue with built in debugger (no code in chrome) and I haven't remapped localhost.

How is anyone debugging Node with both of these problems??? 

Switching node versions constantly is not practical",replete,Elliott128
905,2016-08-30 06:18:18,"Strangely, I see this with Node `v6.2.1`?

Meanwhile, has anybody tried @lynx1983's [patch](https://github.com/lynx1983/node-inspector/commit/3a26df74) referenced above?

*_Edit_: Nope, no such luck. /= I just get the expected “No NativeModule in target scope” instead of an actual crash; but that's not more helpful. Agh!

Well, thank god for `nvm`: `nvm install v6.3.1`, problem solved. For now.
",ELLIOTTCABLE,lynx1983
893,2016-06-24 00:35:15,"In front-end/ui/FilterBar.js on line 62:
`this._stateSetting = WebInspector.settings.createSetting(""filterBar-"" + name + ""-toggled"", false);`

Looking at front-end/common/Settings.js, we see on line 104:

`WebInspector.Settings.prototype = {
    /**
     * @param {string} key
     * @param {*} defaultValue
     * @return {!WebInspector.Setting}
     */
    createSetting: function(key, defaultValue)
    {
        if (!this._registry[key])
            this._registry[key] = new WebInspector.Setting(key, defaultValue, this._eventSupport, window.localStorage);
        return this._registry[key];
    },`

As you can see, node-inspector is adding 'Settings' to WebInspector, and not 'settings'.

So, front-end/ui/FilterBar.js line 62 should be:
`this._stateSetting = WebInspector.Settings.createSetting(""filterBar-"" + name + ""-toggled"", false);`
",kwitzel,return
893,2016-06-24 00:35:15,"In front-end/ui/FilterBar.js on line 62:
`this._stateSetting = WebInspector.settings.createSetting(""filterBar-"" + name + ""-toggled"", false);`

Looking at front-end/common/Settings.js, we see on line 104:

`WebInspector.Settings.prototype = {
    /**
     * @param {string} key
     * @param {*} defaultValue
     * @return {!WebInspector.Setting}
     */
    createSetting: function(key, defaultValue)
    {
        if (!this._registry[key])
            this._registry[key] = new WebInspector.Setting(key, defaultValue, this._eventSupport, window.localStorage);
        return this._registry[key];
    },`

As you can see, node-inspector is adding 'Settings' to WebInspector, and not 'settings'.

So, front-end/ui/FilterBar.js line 62 should be:
`this._stateSetting = WebInspector.Settings.createSetting(""filterBar-"" + name + ""-toggled"", false);`
",kwitzel,param
835,2016-03-04 14:24:17,"Hello @dannycoates , can you grant me owner rights in `node-inspector` organization.
I will intentionally add new sub projects in organization after releasing of plugin system, so it will be not reasonable to take you each time when I want to add new project.
",3y3,dannycoates
771,2016-01-05 16:34:19,"@CrabDude any updates? been fighting this, have a good repo case here: https://github.com/amcdnl/debug-hell
",amcdnl,CrabDude
767,2016-04-15 17:25:48,"@all version 0.12.8 is available on npm now, and should fix the Windows installation problem
",asselin,all
754,2015-09-24 18:26:39,"Looks like a problem on level below.
@rvagg, if this isn't problem on nan, can you retarget it to node team.

If I understand right in this case problem happens with prebuilt binaries builded on Ubuntu (TravisCI uses Ubuntu?). This can be a source of problems?
",3y3,rvagg
750,2015-11-14 03:34:00,"@zanemcca would this speed up load times?

@3y3 @bajtos or someone can this be looked at?
",DylanPiercey,bajtos
748,2016-02-05 02:53:27,"So, from what I've observed, consistent with @bajtos 's comment [here](https://github.com/nodejs/node/issues/2546#issuecomment-135666573) (emphasis added):

> I also think it's a waste of everybody's time when every debugger [...] has to reimplement (and keep maintaining) the same **DevTools->V8 protocol bridge**.

`node-inspector` doesn't actually expose the WebKit / DevTools ""Remote Debugging API"". I've tried listening for events and sending commands with `chrome-remote-interface`, and neither worked (it did connect), I can only assume because it's only exposing the necessary APIs and then bridging them to the V8 Debugging Protocol.

My best (ignorant) guess is that right now, `node-inspector`'s ""front-end"" is mimicking the actual WebKit Remote Debugging Protocol calls (e.g., when a breakpoint is set in the UI) with V8 Debugging Protocol calls, which is why it is impossible to set a breakpoint in the source mapped file (since it's purely a UI abstraction and has no parallel in the V8 Debugging Protocol).

Thoughts?
",CrabDude,bajtos
706,2015-07-29 09:27:44,"`node-debug --no-preload myapp.js` has the same bad behavior, but with
`node-debug --hidden node_modules myapp.js` the app starts fast, like
`node-debug myapp.js` @v0.11.0 does.
",chk-,v0
705,2015-07-28 07:41:25,"@ackalker , thank you for contribution.
PR is ready to merge, but I need @auchenberg feedback.

@auchenberg , is this change sensible for you?
",3y3,auchenberg
703,2015-10-10 01:13:21,"@AdityaManohar  I have not been able to investigate enough to give details to the aws team, but I believe this is an aws-sdk-js issue. I have not forked to run all tests with an aws-sdk change which works for me.

The nodejs.org stream document for [readable.read([size])](https://nodejs.org/api/stream.html#stream_readable_read_size) states: 'This method should _only_ be called in paused mode', yet code inspection of [aws-sdk lib/event_listeners.js line 192](https://github.com/aws/aws-sdk-js/blob/master/lib/event_listeners.js#L192) shows this `read()` call. When placing a `isPaused()` check at line 190, my logs show the stream is _never_ in paused mode. So, I interpret this to mean that a ['data' event handler](https://nodejs.org/api/stream.html#stream_event_data) should be used instead of read().

This is my local code change which I have not fully tested for all cases. Though have been using successfully to solve this debugging with node-inspector issue, and still fine when not debugging. I have made this change to my local `node_modules/aws-sdk/lib/event_listeners.js` by adding `httpResp.isPaused()` at line 190 on debian and OSX.


",glennschler,AdityaManohar
696,2015-07-20 18:32:19,"@bajtos , I think this is important feature also in context of `*.es6`
I vote up for configuration option.
",3y3,bajtos
694,2015-07-22 22:45:13,"@jakub-g , any thoughts?
",3y3,jakub-g
690,2015-06-30 13:13:54,"@bajtos , please review
",3y3,bajtos
683,2015-06-18 18:47:54,"@jarthorn , all files in `front-end` folder is copy-paste from webkit sources. So, I think this question should be retargetted to blink source. Anyway I'm not friendly with licensing theory (I know MIT and GPL, but I don't know what is the difference between them :smile: )
@bajtos , any thoughts here?
",3y3,bajtos
677,2015-06-14 23:21:42,"@jkrems , thanks to your experience in #655 I added full network tab implementation.
Here I solve some problems of your pr:
- We can wrap code in `--debug` and `--debug-brk` mode
- We wrap only one function
- We send finished requests to frontend
- Added different identifiers for `requestId`, `connectionId`, `loaderId`.
- We collect stack trace closest to func called by user
- POST data captured

What is implemented:
- Basic http request support
- Request timings
- Request data capturing and cleaning (we store data in node-inspector)
- Backported `String.prototype.toBase64` from latest DevTools. This solves problem with inspection of data with non ascii caracters

What doesn't solved in this pr:
- [TODO](https://github.com/node-inspector/node-inspector/blob/master/lib/FrontendCommandHandler.js#L48-L51) not fixed. So we can't use `XHR breakpoint` section in source panel.
- I don't know that happens if anyone will use not default encoding in `req.write`
- I don't test keep alive requests
- Not implemented `Network + Console` behavior.
",3y3,jkrems
677,2015-06-17 00:35:40,"@jkrems ,
@marcominetti ,
@bajtos ,

please review this. This is a full implementaton of Network panel.
",3y3,bajtos
677,2015-06-17 00:35:40,"@jkrems ,
@marcominetti ,
@bajtos ,

please review this. This is a full implementaton of Network panel.
",3y3,marcominetti
677,2015-06-17 00:35:40,"@jkrems ,
@marcominetti ,
@bajtos ,

please review this. This is a full implementaton of Network panel.
",3y3,jkrems
677,2015-06-18 23:43:21,"@bajtos , I fixed targetted issues. Unfortunately changes history was vwry dirty, so I prefer to squash all fixups.

What happened here:
- added `debug.convert`
- `response.push` used to handle `dataReceived` and `finishLoading` events.

@bajtos , @jkrems all your issues are fixed. It's ready to next round of review. First round was very useful.
",3y3,jkrems
675,2015-06-12 00:17:56,"@bajtos , ready to review.
",3y3,bajtos
670,2015-06-10 12:57:44,"@bajtos , please review.
",3y3,bajtos
669,2015-06-10 12:43:30,"@bajtos , please review
",3y3,bajtos
647,2015-05-25 15:00:22,"@bajtos , work in progress. This is not ready to review.
Big part of this pr will be deprecated.

Thanks for targetting to `strong-data-uri`
",3y3,bajtos
647,2015-05-26 10:54:11,"@3y3 @bajtos is reasonable to include browserified version of strong-data-uri or any replacement at front-end too for the https://github.com/marcominetti/node-inspector/blob/fix-sourcemaps-alternative/front-end-node/main/MainOverrides.js#L48?
",marcominetti,bajtos
644,2015-05-13 21:25:15,"![screen shot 2015-05-13 at 2 19 30 pm](https://cloud.githubusercontent.com/assets/462228/7621420/9efcadec-f97b-11e4-99db-7579110f277f.png)

I'm not really sure what is going on here. Also I am not 100% convinced this is a node-inspector problem. I figured I'd post this issue and someone can help determine that because it is really annoying:

As you can see in the screen shot we have a breakpoint on 548 and inspector is paused on line 554. This is after hitting the play button when starting with `mocha --debug-brk`.

@bajtos 
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/14720061-breaking-on-incorrect-line?utm_campaign=plugin&utm_content=tracker%2F195817&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F195817&utm_medium=issues&utm_source=github).
</bountysource-plugin>
",ritch,bajtos
643,2015-05-13 21:14:27,"

I'm not sure how to reproduce this exactly, but these are the steps I took when the error occured:
1. `mocha --debug-brk`
2. `node-inspector`
3. opened inspector in chrome
4. set several break points
5. ctrl+c on the mocha tab
6. `mocha --debug-brk`
7. refreshed inspector in chrome (blank screen for almost a minute)
8. saw error (above) in node-inspector tab in terminal

@bajtos 
",ritch,bajtos
638,2015-05-15 21:26:15,"ping @i5ting 
ping @mrgamer
",3y3,mrgamer
638,2015-06-15 18:14:20,"@mrgamer , thank you for screencast. I can work with this issue now.
",3y3,mrgamer
638,2015-06-19 13:33:33,"@mrgamer thanks
",i5ting,mrgamer
637,2015-05-07 22:31:49,"@bajtos , looking on node 0.12 I found real reason why we can't previously pause on first line.
This is because we don't receive `afterCompile` event, that registers scripts in ScriptManager.
Isntead of this we receive `compileError` event every time.

So in this pr I deprecate event caching feature in BreakEventHandler. 
I implemented `_onBreak` as an async function, this provide more powerful control flow and allow me to asynchronously receive script source (if it needed) directly from `_onBreak`
",3y3,bajtos
637,2015-05-13 08:05:37,"Ping @bajtos . Is it possible to review it on this week and release 0.10.1?
",3y3,bajtos
630,2015-05-06 20:15:52,"I can't reproduce this behavior on Win8.1 with 0.12.2
@bajtos , can you confirm this as bug on your Mac?
",3y3,bajtos
627,2015-05-14 13:02:49,"Ready to review. @bajtos .

@marcominetti , your help in review is also interesting.
",3y3,bajtos
627,2015-05-14 13:02:49,"Ready to review. @bajtos .

@marcominetti , your help in review is also interesting.
",3y3,marcominetti
626,2015-04-29 19:41:10,"Retargetted to @jakub-g.
",3y3,jakub-g
622,2015-04-22 08:39:38,"On node 0.12 we can't use any custom commands (like 'Console.enable') if we stopped on first line.
This is a bug that can be fixed only in node source code.

Here I delete complicated console wrapping - we don't need to send 'Console.enable' to wrap console now.

This doesn't fixes initial problem. For example on 0.12 we can't get snapshot if we paused on first line. We need to send `continue` before using any custom command.

@bajtos , please review.
",3y3,bajtos
618,2015-04-27 07:21:16,"I am proposing to drop `/debug` path from the URL and server the debugger UI directly on the root URL.



@3y3 @auchenberg What's your opinion? Are you aware of any reason why the root URL may not work?
",bajtos,auchenberg
618,2015-04-27 09:47:14,"If @auchenberg agrees, I change this pr to drop it
",marcominetti,auchenberg
618,2015-05-29 09:42:58,"@marcominetti let's not wait for @auchenberg and move this patch forward. Could you please rework the code to serve the debugger at the root url, as discussed above?
",bajtos,auchenberg
614,2015-04-17 12:15:55,"Hello @iliakan .

So, today I merged new frontend and I wait some small changes from @marcominetti .
Now then we have new frontend, it is reasonable to extend our functionality by debugging promises, getters/setters and more other. This is a next big step. #450

From small steps:
There is a #560 , that fixes #597, and I hope, it will be merged on next week. (Can you test it and submit what it works?)

Released 0.12.0 with new debugger system is a big problem not only for node inspector, but also for node (iojs/io.js/issues/858, iojs/io.js/issues/781). We have some native features `v8-debug` and `v8-profiler` that already compatible with `iojs` on compilation stage, but breaks compatibility on running from `node-debug` command on windows (iojs/io.js/issues/751)

So I very wait for iojs/io.js/issues/751 it blocks lot of my work on iojs.
",3y3,marcominetti
614,2015-04-17 12:37:46,"Also we started discussion about new cli api and plugin system. #578 
We communicate with @marcominetti in plugin system feature. Long time we were blocked for new features by `updating frontend` pr.

In other words I work on node-inspector so intensively as it is possible - this is my main os project. Sometimes it has a higher priority than my main job =)
",3y3,marcominetti
610,2015-04-13 14:19:22,"As requested by @bajtos and noted by @dpwolfe in #534.
",ELLIOTTCABLE,dpwolfe
610,2015-04-13 14:19:22,"As requested by @bajtos and noted by @dpwolfe in #534.
",ELLIOTTCABLE,bajtos
608,2015-04-07 21:58:33,"Not sure if I should file this against npm or not, even though the output clearly say to.

MacBook-Pro:web_rtc joey$ npm install node-inspector
npm http GET https://registry.npmjs.org/node-inspector
npm http 304 https://registry.npmjs.org/node-inspector
npm http GET https://registry.npmjs.org/serve-favicon
npm http GET https://registry.npmjs.org/express
npm http GET https://registry.npmjs.org/async
npm http GET https://registry.npmjs.org/glob
npm http GET https://registry.npmjs.org/rc
npm http GET https://registry.npmjs.org/strong-data-uri
npm http GET https://registry.npmjs.org/debug
npm http GET https://registry.npmjs.org/ws
npm http GET https://registry.npmjs.org/biased-opener
npm http GET https://registry.npmjs.org/yargs
npm http GET https://registry.npmjs.org/which
npm http GET https://registry.npmjs.org/v8-profiler
npm http GET https://registry.npmjs.org/v8-debug
npm http GET https://registry.npmjs.org/semver
npm http 304 https://registry.npmjs.org/serve-favicon
npm http 304 https://registry.npmjs.org/express
npm http 304 https://registry.npmjs.org/async
npm http 304 https://registry.npmjs.org/glob
npm http 304 https://registry.npmjs.org/rc
npm http 304 https://registry.npmjs.org/strong-data-uri
npm http 304 https://registry.npmjs.org/debug
npm http 304 https://registry.npmjs.org/ws
npm http 304 https://registry.npmjs.org/biased-opener
npm ERR! Error: No compatible version found: serve-favicon@'^2.1.1'
npm ERR! Valid install targets:
npm ERR! [""2.0.0"",""2.0.1"",""2.1.0"",""2.1.1"",""2.1.2"",""2.1.3"",""2.1.4"",""2.1.5"",""2.1.6"",""2.1.7"",""2.2.0""]
npm ERR!     at installTargetsError (/usr/local/Cellar/node/0.10.12/lib/node_modules/npm/lib/cache.js:719:10)
npm ERR!     at /usr/local/Cellar/node/0.10.12/lib/node_modules/npm/lib/cache.js:641:10
npm ERR!     at saved (/usr/local/Cellar/node/0.10.12/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:138:7)
npm ERR!     at Object.oncomplete (fs.js:107:15)
npm ERR! If you need help, you may report this log at:
npm ERR!     http://github.com/isaacs/npm/issues
npm ERR! or email it to:
npm ERR!     npm-@googlegroups.com

npm ERR! System Darwin 14.0.0
npm ERR! command ""/usr/local/Cellar/node/0.10.12/bin/node"" ""/usr/local/bin/npm"" ""install"" ""node-inspector""
npm ERR! cwd /absolute/path/to/web_rtc
npm ERR! node -v v0.10.12
npm ERR! npm -v 1.2.32
npm http 304 https://registry.npmjs.org/which
npm http 304 https://registry.npmjs.org/v8-profiler
npm http 304 https://registry.npmjs.org/v8-debug
npm http 304 https://registry.npmjs.org/semver
npm http 200 https://registry.npmjs.org/yargs
npm ERR! 
npm ERR! Additional logging details can be found in:
npm ERR!  /absolute/path/to/web_rtc/npm-debug.log
npm ERR! not ok code 0
",exceptDefeat,googlegroups
587,2015-03-13 16:35:04,"**I'm opening this issue for reference (maybe someone will face the same problem soon - feel free to close it immediately)**

I followed the advice from README on debugging mocha - I run `node-debug _mocha` for that

However there was a really weird issue happening for me (I used node 0.10.37 or 0.12 via nodist, npm 1.4.6, Windows 7)

Node Inspector works with mocha 2.1.0 but not 2.2.0 and it's really strange.
##  **TL;DR if you're on Windows, update npm (using cmd, not git bash!) with `npm install -g npm`** 

With 2.2.0 I get the following error:



Let's run the following commands to see the difference:





<pre><b>
@IF EXIST ""%~dp0\node.exe"" (
  ""%~dp0\node.exe""  ""%~dp0\node_modules\mocha\bin\_mocha"" %*
) ELSE (
  node  ""%~dp0\node_modules\mocha\bin\_mocha"" %*
)
</b></pre>




<pre><b>
""%~dp0\node_modules\mocha\bin\_mocha""   %*
</b></pre>


It seems to be a weird bug of old npm versions in work. I updated to latest as of today, reinstalled mocha and it solved the issue.
",jakub-g,IF
582,2015-03-09 17:39:42,"Hi there,
I added ECMAScript 6/7 experimental support through https://github.com/babel/babel project (@sebmck).

To enable it, append &babel=7 to the node-inspector URL. The babel param value can be 5, 6 or 7 to enable specific ECMAScript version.

The code is transpiled only if babel param is >5 and only whether ECMAScript 6 or 7 code is detected. ECMAScript detection is carried out through acorn-babel parsing exceptions.

It requires to manually load babel/polyfill with require('babel/polyfill').

TODO: automatic build/loading from latest babel and acorn-babel, proper handling of Promise returned values (resolve to console/reject to error), automatically inject babel/polyfill, write documentation, choose to migrate transformation back to the backend (prior versions)
",marcominetti,sebmck
582,2015-03-10 11:09:43,"Hello, @marcominetti . I'm not sure that making `babel` a part of `node-inspector` is a right thing.
But this is a good point to start extended discussion about plugins.
For example, we have [one other](https://github.com/node-inspector/node-inspector/issues/502) feature issue, about highlighting `debug` module colors in console, but this is useful only for users that use `debug` module in their projects, so this can't be implemented as main part of node-inspector.

I'd like to provide to users simple way to extend `ni` by plugins.
This is a work on two-three fronts:
1. frontend extension
2. inspector backend extension
3. [app extension]

Your current pr takes only first part. So, how I see frontend extension mechanism:
1. We can store all plugins in subdirectory with same name. Example:


1. Each plugin has name in npm `node-inspector-<plugin name>`. Example `node-inspector-babel`
2. Each plugin has `module.json`, like [this](https://github.com/3y3/node-inspector/blob/frontend/front-end-node/module.json), [inspector.json](https://github.com/3y3/node-inspector/blob/frontend/front-end-node/inspector.json) and optionally [protocol.json](https://github.com/3y3/node-inspector/blob/frontend/front-end-node/protocol.json). We need to compile extension structure on node-inspector startup, or for each new [ws session](https://github.com/node-inspector/node-inspector/blob/master/lib/debug-server.js#L20-L23)
3. Add new paths to [express router](https://github.com/3y3/node-inspector/blob/frontend/lib/debug-server.js#L61-L64), like



Where `compiled_in_memory_inspectorjson` is the result of something like this:



So for example if we have `babel` plugin:
`cd node-inspector/plugins/babel`
`echo module.json`



`BabelPlugin.js` is your current diff for overrides.

`echo inspector.json`



`echo protocol.json`



And `compiled_in_memory_inspectorjson` is equal to:



We need to compile same way `protocol.json`.

So, @marcominetti , are you ready to implement plugin system? This work is relative to `frontend` pr. Unfortunately in current time I work on other `ni` issues, and can't finish `frontend` pr at soon, but I'm ready to review prs relative to it.
So keep in mind that this is a discussion about plugins, and your thoughts are important.
Welcome to discussion on [gitter](https://gitter.im/node-inspector/node-inspector)

/cc @bajtos 
",3y3,bajtos
582,2015-03-10 14:18:39,"@metaford , shut up fucking bot.
",3y3,metaford
582,2015-03-10 16:08:24,"> @metaford , shut up fucking bot.

@3y3 you can report an abuse using this link: https://github.com/contact?report=metaford I already did that myself.
",bajtos,metaford
573,2015-02-28 22:10:24,"I vote up for this!
@bajtos , thoughts?

P.S. for last month I also want to add big banner on top of readme.md. Something like

## PLEASE DON'T SEND ME EMAIL IF NODE-INSPECTOR DOESN'T WORK FOR YOU!!!
",3y3,bajtos
567,2015-02-23 23:27:25,"This is bug in `biased-opener`
/cc @jakub-g 
",3y3,jakub-g
562,2015-02-19 13:51:52,"@bajtos, how about this?
",3y3,bajtos
560,2015-02-15 18:13:31,"We are not full compatible, but can use old features.

@bajtos , please review.
",3y3,bajtos
559,2015-09-20 02:38:06,"@jamietre: passing `--no-optional` alone didn't work. I had also installed Python 2.7.10.

The error included this:

> Building the projects in this solution one at a time. To enable parallel build, please add the ""/m"" switch.
> MSBUILD : error MSB3428: Could not load the Visual C++ component ""VCBuild.exe"". To fix this, 1) install the .NET Framework 2.0 SD K, 2) install Microsoft Visual Studio 2005 or 3) add the location of the component to the system path if it is installed elsewher e.  [C:\Users\A\AppData\Roaming\npm\node_modules\node-inspector\node_modules\ws\node_modules\bufferutil\build\binding.sln]

and

> npm ERR! Failed at the v8-profiler@5.3.1 install script 'node-pre-gyp install --fallback-to-build'.

Hey @node-inspector, what are the actual prerequisites for Windows? That should be listed in the README.
",dandv,node-inspector
546,2015-02-15 16:45:45,"@mrgamer , @tomzx , hey wait sometime =) I prepare the release pr.
",3y3,mrgamer
534,2015-01-25 16:23:14,"Thanks for targetting node version. I can confirm the probem with 0.11.15.

To @bajtos :
The current problem - now we receive `debug` event when app started with `--debug-brk` flag, previously we only check that the application is paused. But the initial problem - we can receive a `debug` event before all sources have been downloaded, in this situation [BreakEventHandler._onBreak](https://github.com/node-inspector/node-inspector/blob/master/lib/BreakEventHandler.js#L66-L68) works incorrectly.

I see two ways to fix this problem:
1) Cache all incoming events from app, before all sources will loaded in ScriptManager. We already do same thing with all incoming from frontend. In this way I prefer to emit `resource-tree` event not from `PageAgent` but from `process`.
2) Make `BreakEventHandler._onBreak` async and try to request source from app on the fly (with caching the response)

Are you see the third?
",3y3,bajtos
528,2015-01-23 06:59:09,"Sorry for delay in review.
This is a good stuff, I want to see it in node-inspector. I'm worried about stability of `biased-opener`, but how I can see `opener` itself also hasn't test coverage, so this replacement is equivalent in this context.

/cc @bajtos 
",3y3,bajtos
520,2015-01-12 17:26:23,"Please try to reinstall. For me 0.8.2 was installed succesefully.

@bajtos , please confirm.
",3y3,bajtos
517,2015-01-10 03:32:15,"This was first discovered in here https://github.com/nodeschool/austin/issues/4#.

Reproduced on:-
- Node v0.11.13
- Node Inspector v0.8.1
- Chrome 39.02(64bit)
- Ubuntu 14.04
- More env tested on the [above link](https://github.com/nodeschool/austin/issues/4#issuecomment-65733435) by @dcbartlett 

From my first impression I initially thought this had to do with `lodash` not playing well with `node-inspector` but upon my further investigation I could reproduce this issue on simple `forEach` as well. e.g.



So basically, node-inspector crashes whenever it sees `console` in a callback.
I also did the following to keep the code simple with no logics and loops.



At the moment using `util.log` is an alternative solution as discussed in the original issue tracker but would love for this to be resolved too. 
",shri3k,dcbartlett
517,2015-01-10 04:18:55,"@sinkingshriek , I commited fixup just now. You can fork master HEAD or wait for releasing 0.8.2
",3y3,sinkingshriek
515,2015-01-06 05:40:04,"@bajtos , please join to discussion.

@auchenberg , thanks for contribution. This is interesting feature.

>  Is there any reason why 127.0.0.1/0.0.0.0 currently is used?

From time to time I know why we use `0.0.0.0` in `NODE_INSPECTOR_MODE` and `127.0.0.1` in `NODE_DEBUG_MODE`, but unfortunately now I can't remember this.

> I had to change the default web-host to the local IP instead of 127.0.0.1, as the IP is needed in order to enable other clients to connect.

Can you explain me more verbose this part. At first glance new IP detecting opens weak security risk. I prefer to have minimal network area in default configuration, but it's discussable.
",3y3,bajtos
510,2015-01-10 06:17:34,"@bajtos , I'm ready to merge this one and release 0.8.2

Also I'm glad to notice that now we have prebuild binaries for Linux and OSX x64 (I'm ready to add x32 atoreleasing if it's needed)
",3y3,bajtos
499,2014-12-23 22:40:20,"Found the fix in another NPM-on-windows issue: https://github.com/brianmcd/contextify/issues/129#issuecomment-58168568.  Thanks @blowsie!
",adonomay,blowsie
493,2014-12-11 14:45:27,"@bajtos , please review.
",3y3,bajtos
492,2015-01-10 14:56:26,"@bajtos , tt's ready to test and review. I added `for tests` commit, because travis switch to 0.11.14 version by default, and we have prebuild binaries only for uncompatible 0.11.13 (I can't publish binaries for 0.11.14 automatically, because there is no win x64 release version). Also we wait 0.10.36.
",3y3,bajtos
492,2015-03-05 13:14:31,"Rebased to master.

@jakub-g , can you please look at this pr. There exists bug for you.
Now our inspector link is `http://examlpe.com:8080/debug?port=5858&ws=example.com:8080`
This link doesn't work on Windows with `node-debug` command for reason of unescaped `&`.
Original issue in `opener` https://github.com/domenic/opener/issues/9 (It will be nice, if you fix also this issue)

But current issue for you - unhandled error event:



@bajtos , now I will work on `saveLiveEdit`. Will be nice if you provide me some failure test.
(But in current time I can live without it)

@marcominetti, @auchenberg , I see that you already rebased to this pr. Any thoughts about `saveLiveEdit`?
",3y3,jakub-g
492,2015-03-05 13:14:31,"Rebased to master.

@jakub-g , can you please look at this pr. There exists bug for you.
Now our inspector link is `http://examlpe.com:8080/debug?port=5858&ws=example.com:8080`
This link doesn't work on Windows with `node-debug` command for reason of unescaped `&`.
Original issue in `opener` https://github.com/domenic/opener/issues/9 (It will be nice, if you fix also this issue)

But current issue for you - unhandled error event:



@bajtos , now I will work on `saveLiveEdit`. Will be nice if you provide me some failure test.
(But in current time I can live without it)

@marcominetti, @auchenberg , I see that you already rebased to this pr. Any thoughts about `saveLiveEdit`?
",3y3,marcominetti
492,2015-03-05 13:14:31,"Rebased to master.

@jakub-g , can you please look at this pr. There exists bug for you.
Now our inspector link is `http://examlpe.com:8080/debug?port=5858&ws=example.com:8080`
This link doesn't work on Windows with `node-debug` command for reason of unescaped `&`.
Original issue in `opener` https://github.com/domenic/opener/issues/9 (It will be nice, if you fix also this issue)

But current issue for you - unhandled error event:



@bajtos , now I will work on `saveLiveEdit`. Will be nice if you provide me some failure test.
(But in current time I can live without it)

@marcominetti, @auchenberg , I see that you already rebased to this pr. Any thoughts about `saveLiveEdit`?
",3y3,auchenberg
491,2014-12-10 10:13:26,"@bajtos , please review.
",3y3,bajtos
490,2014-12-10 10:09:03,"@bajtos , please review
",3y3,bajtos
489,2014-12-12 11:00:25,"I found a problem here: `opener` module doesn't work correctly with & symbol.
So `http://127.0.0.1:8080/debug?port=5858&autoclose=true` will be replaced with `http://127.0.0.1:8080/debug?port=5858`

@bajtos, please check this.
",3y3,bajtos
485,2014-12-07 23:11:31,"@bajtos , I added windows prebuild binaries in v8-profiler 5.2.1.
We need to update this dependency and release node-inspector 0.8.1
",3y3,bajtos
484,2014-12-07 23:57:43,"@3y3, just reinstalled, seem to be the same problem as @volox,

Here the console [log](https://gist.github.com/abenhamdine/0997aa784df939c707de) 
",abenhamdine,volox
475,2014-11-29 10:29:56,"Unfortunately I can't add test for `_lookupHeapObjectId` because I can't find in snapshot heapObjectId targetted to real object with properties.

@bajtos , please review
",3y3,bajtos
465,2014-11-10 09:49:35,"Stop increasing the version in `package.json` after a release, do the change just before the next release.

Add a shell script for making the release in one step.

/to @3y3 please review
/cc @sam-github This is addressing your [comment from Jun 19](https://github.com/node-inspector/node-inspector/commit/79b1d60270e8b2364c2b45510928c442c4c41b78#commitcomment-6737390).
",bajtos,sam-github
450,2014-10-02 09:28:20,"@bajtos , please look at this. This is not ready to review, but I need a discussion here.

What happens here:
- I copy `InjectedScriptSource` and `DebuggerScript` from Blink sources (branch 1625).
  This is two main files which implements debugging protocol.
- I add `InjectedScriptHost.js`, this is implementation of some functions stored in `V8InjectedScriptHostCustom.cpp` and used by `injectedScript`
- Next step - I reimplement Runtime agent and some functions in Debugger agent to fix some issues:
  - Now we can inspect:
    - global variables when process not paused
    - get/set properties
    - big arrays (I don't test buffers)
    - function raw scopes
  - RegExp inspection info show `/abc/g` instead of `/abc/`

I use something like this to debug this all:


# ...but this commit has two problems
## 1. It is very big

I can try to divide it on parts like `Implemented Debugger.getBacktrace`, `Implemented Runtime.callFunctionOn`, `...`. But I'm not sure about that.
## 2. It deprecates big part of tests

This is a first in big series of pull requests, where I'll reimplement all agents to use WebKit protocol (this is relative to mail discussion, where Brandon Meck promises to implement this protocol in node)
How you can see I deleted some incompatible tests, I would like to see on their place autogenerated tests based on `tools/protocol.json`

Is there something with which you are disagree? Any ideas about changing structure of this commit, which can help you in review?
",3y3,bajtos
443,2014-09-17 23:32:19,"It throws an error during installation:

npm http 304 http://registry.npmjs.org/cookie-signature/1.0.3
npm ERR! error rolling back Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/node-inspector/node_modules'
npm ERR! error rolling back  node-inspector@0.7.4 { [Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/node-inspector/node_modules']
npm ERR! error rolling back   errno: 53,
npm ERR! error rolling back   code: 'ENOTEMPTY',
npm ERR! error rolling back   path: '/usr/local/lib/node_modules/node-inspector/node_modules' }
npm ERR! Error: No compatible version found: minimist@'^0.1.0'
npm ERR! Valid install targets:
npm ERR! [""0.0.0"",""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.0.7"",""0.0.8"",""0.0.9"",""0.0.10"",""0.1.0"",""0.2.0"",""1.0.0"",""1.1.0""]
npm ERR!     at installTargetsError (/usr/local/lib/node_modules/npm/lib/cache.js:564:10)
npm ERR!     at /usr/local/lib/node_modules/npm/lib/cache.js:479:10
npm ERR!     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:138:7)
npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:218:7
npm ERR!     at Object.oncomplete (fs.js:297:15)
npm ERR! If you need help, you may report this log at:
npm ERR!     http://github.com/isaacs/npm/issues
npm ERR! or email it to:
npm ERR!     npm-@googlegroups.com

npm ERR! System Darwin 13.2.0
npm ERR! command ""node"" ""/usr/local/bin/npm"" ""install"" ""-g"" ""node-inspector""
",igorpavlov,googlegroups
441,2014-09-10 07:53:45,"@bajtos , please confirm that you are ready to approve https support
",3y3,bajtos
441,2014-09-18 16:39:58,"> @bajtos , please confirm that you are ready to approve https support

Sure, no problem with that. It's probably better to wait with landing this PR until the config-changes are done (#436).
",bajtos,bajtos
437,2014-09-05 08:35:22,"@bajtos , I'll merge this without review.
",3y3,bajtos
436,2014-09-03 21:19:21,"@bajtos , ready to review
",3y3,bajtos
436,2014-09-19 09:51:53,"All fixed and rebased.
`README.MD` needs to be updated
Also I can rebase this to #441 - this will save @aikimcr from inspecting new changes in config system
",3y3,aikimcr
436,2014-09-19 16:54:23,"> Also I can rebase this to #441 - this will save @aikimcr from inspecting new changes in config system

Sure, that's a good idea. Please leave a comment when it is done, I'll wait with my final review until then.
",bajtos,aikimcr
432,2014-08-26 13:09:40,"Hello @dannycoates , please change logo of Node Inspector organization to

![favicon](https://cloud.githubusercontent.com/assets/3931155/4044569/e0b3d3e0-2d21-11e4-99fd-e0ff631934f7.png)
",3y3,dannycoates
432,2014-08-26 18:35:26,"Damage! I used 4pt line instead of 8pt.
@dannycoates , @bajtos, please look that is best:
![favicon](https://cloud.githubusercontent.com/assets/3931155/4049660/9f3795f4-2d4f-11e4-888d-a02ec328160d.png)

![](https://cloud.githubusercontent.com/assets/3931155/4044569/e0b3d3e0-2d21-11e4-99fd-e0ff631934f7.png)
",3y3,bajtos
431,2014-08-26 09:15:20,"The problem is [here](https://github.com/node-inspector/node-inspector/blob/master/lib/session.js#L62)

@bajtos, at first sight this is a small fix, but I can't imagine the regression test.
",3y3,bajtos
426,2014-08-26 08:39:08,"> Thanks. How about add icon to Node Inspector organisation?

That would be great. Can you make a larger version (420x420 pixels) of the logo?

Please open a new issue and assign it to @dannycoates, as only organization owners can change the logo.
",bajtos,dannycoates
413,2014-09-01 11:29:15,"I would guess so. The error message looks like Proxy error.
I've reported an issue to koa-passport, that's the only place in the project which uses Proxy, hopefully @rkusa will fix it.
",iliakan,rkusa
400,2014-07-01 20:06:33,"Application crashes when trying to inspect global.process.
win8.1 x64, node 0.11.13 (for 0.10.\* all works fine)
@bajtos , can you confirm this for Linux?
",3y3,bajtos
398,2014-06-26 12:53:58,"@bajtos , it's a very important pr, I need to finish cleanup at soon, but I have one problem - after I moved [v8-debug]() to node-inspector namespace, I missed potention to manegi it, I can't understand how it's happem ;-( Can you help me please.
",3y3,bajtos
398,2014-06-26 13:08:13,"> after I moved v8-debug to node-inspector namespace, I missed potention to manegi it, I can't understand how it's happem ;-( Can you help me please.

That happens when you move the repo between github org. I am not an owner of node-inspector org thus I can't fix the permissions for you.

@dannycoates could you please look into this? If I remember correctly, it's necessary to either fix security settings of `node-inspector` organization, or the `v8-debug` repository.
",bajtos,dannycoates
394,2014-10-15 13:13:38,"A temporary solution:
- Grab last version from https://github.com/node-inspector/node-inspector/releases
- Unzip the folder in your npm global modules, in my case is: ""C:\Users\Totty.js\AppData\Roaming\npm\node_modules\""
- Create a file in ""C:\Users\Totty.js\AppData\Roaming\npm\"" named ""node-inspector.cmd"" and fill it with this data:
  
  @IF EXIST ""%~dp0\node.exe"" (
    ""%~dp0\node.exe""  ""%~dp0\node_modules\node-inspector\bin\inspector.js"" %*
  ) ELSE (
    node  ""%~dp0\node_modules\node-inspector\bin\inspector.js"" %*
  )
- Cd into the node-inspector folder ""C:\Users\Totty.js\AppData\Roaming\npm\node_modules\node-inspector"" and run `npm install`. It should install all the deps of node-inspector.
- Run `node-inspector` now works!
",totty90,IF
389,2014-06-17 19:11:30,"@bajtos , I need help here - I can't test this in OSX shell (is there other parsing rules for args?)
",3y3,bajtos
386,2014-06-16 15:28:23,"Hi @martensms, I don't understand what you are asking for. Can you provide a simple example and instructions to reproduce the problem on my computer?
",bajtos,martensms
382,2014-06-04 15:30:31,"Clean up of #359.

/to @3y3 please review
/cc @junecoder 

Close #214.
",bajtos,junecoder
373,2014-05-15 15:11:36,"Hi @chocstarfish, thank you for reporting the issue.

First of all, WebStorm does not use Node Inspector, you should fill an issue in their bug tracker: 
http://youtrack.jetbrains.com/issues/WEB

The crash is most likely caused by #214. You can try the code in #359 to see if that pull request fixes your problem.
",bajtos,chocstarfish
373,2014-06-16 13:36:20,"@chocstarfish , can you submit this issue with latest version of Node Inspector?
",3y3,chocstarfish
371,2014-06-16 14:52:58,"Thanks @y3y I'll give it a go and see if anything pops up.
",Patrick64,y3y
368,2014-05-22 10:52:29,"@bajtos , 
All fixed.
Rebased to HEAD.
I get `/[A-Z].test(key)` reccomendation, `process.argv.indexOf(key)` don't work as expected
I refactored `--nodejs`, but also add [Issue](https://github.com/chevex/yargs/issues/17) to yargs.

Any comments about `Detecting Windows CMD files` ?
",3y3,bajtos
367,2014-05-12 13:04:09,"@bajtos , please mark it as bug or not. I'm ready to fix it in one minute in [this](https://github.com/node-inspector/node-inspector/pull/368) pr (Travis CI build fails - see the [reason](https://github.com/node-inspector/node-inspector/issues/369))
",3y3,bajtos
361,2014-04-24 10:22:52,"@bajtos , possible duplication of #327
",3y3,bajtos
360,2014-04-24 11:15:01,"@bajtos , Ready to review
",3y3,bajtos
360,2014-05-21 11:26:05,"@bajtos , 
default `web-host` changes removed.
Indentation fixed.
`createScriptFileStorage` added
rebased to HEAD
",3y3,bajtos
351,2014-04-18 13:47:36,"@bajtos , any comments?
",3y3,bajtos
345,2014-04-09 14:44:33,"Hi @dotnetwise, thank you for reporting the issue.

Could you please try the following?
1. Open your terminal app
2. Run `open https://github.com`

If the URL is opened in Chrome, then there is indeed a problem in Node Inspector. We are using the [opener](https://github.com/domenic/opener) module for launching the browser, please fill an issue there.

If the URL is opened in Safari, then I am afraid Chrome is not correctly configured as the default browser.
",bajtos,dotnetwise
340,2014-04-04 14:09:27,"Hi @pearlchen, thank you for opening the issue. Your article was great, I shared it myself too :)

For the record, here are the two Chrome pull requests implementing the feature in DevTools:

  https://codereview.chromium.org/74063002/
  https://codereview.chromium.org/80383004/

There are two tasks needed to get this working in Node Inspector:
1. Pull front-end changes from Chromium, that should be easy.
2. Collect async (long) stack traces in the debugged Node.js process and send them to the Node Inspector process on break event. I looked at the DevTools changes and don't see how to reuse their code in Node Inspector. There are Node modules like [longjohn](https://github.com/mattinsler/longjohn) that can collect long stack traces, which is good. The hard part is getting the long stack trace from the debugged process, I don't think the V8 debugger protocol can be extended to do this.

Since I won't have bandwidth to implement this anytime soon, the answer is this: the feature should be doable, but won't be implemented in the near feature.
",bajtos,pearlchen
337,2014-04-02 10:54:11,"@bajtos , I missed one correction - it works on v 0.11.
I add checker at soon.
",3y3,bajtos
337,2014-06-14 07:48:45,"Hi @martensms, this patch depends on #336 ""Injector API"", which is rather large change and I did not manage to find time to finish the review :( I would like to see this landed too, I'll try to get #336 reviewed soon.
",bajtos,martensms
336,2014-04-02 10:43:30,"@bajtos , how you can see, I pushed some commits. Please start review from this, the second - Profiler API, and finally HeapProfiler API. Also you can review Console API. After first review and fixes I add tests.
",3y3,bajtos
323,2014-03-13 14:12:17,"@bajtos, how about add `.cmd` execution to node-debug?
",3y3,bajtos
323,2014-03-13 14:13:32,"@bajtos , L189 of node-debug.js is a typo?
",3y3,bajtos
321,2014-03-13 07:32:52,"@bajtos , updated. Travis fails 1st test on npm install.
",3y3,bajtos
310,2014-02-19 14:15:43,"Refactor lib/config and bin/inspector, split printHelpAndExit into
two parts. The first part is building the help message and stays in
lib/config as `config._describeOptions`. The second part (print and
exit) is moved to bin/inspector.

/to @sam-github Please review. Node Inspector uses ""rc"" for argv parsing, therefore we can't use optimist's ""alias"".
/cc @3y3
",bajtos,sam-github
308,2014-02-18 18:54:51,"Follow-up for the conversation started in #305.

It would be nice to have a way how to start a debugging session of coffee-script application, i.e. to use `coffee --nodejs` instead of `node` to start the debugged process.

A possible solution:
- refactor `bin/node-debug` to allow customisation of `startDebuggedProcess`
- add a new script `coffee-debug` that will change `startDebuggedProcess` to execute `coffee --nodejs` instead of `node`

/cc @sidorares
## <bountysource-plugin>

Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/1415824-coffee-debug?utm_campaign=plugin&utm_content=tracker%2F195817&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F195817&utm_medium=issues&utm_source=github).
</bountysource-plugin>
",bajtos,sidorares
305,2014-02-17 19:06:15,"Add a CLI script `node-debug` that:
1. Runs node-inspector.
2. Runs the supplied script in debug mode or starts a REPL session
3. Opens the user's browser, pointing it at the inspector.

Add a CLI script `run-repl` (used by `node-debug`) that will load
the module in CWD and start a REPL session.

The script `node-debug` is friendly to embedders, error messages use the value of the env variable ""CMD"" when referring to $0.

/to: @sam-github please review. I'll submit the documentation changes in a standalone pull request.

The file node-debug.js is based on [strong-cli/lib/commands/debug.js](https://github.com/strongloop/strong-cli/blob/master/lib/commands/debug.js). The most notable difference is the naming of command-line arguments. I have decided to use the names that are already used by Node and Node Inspector (e.g. `--web-port` instead of `--port`, `--debug-brk` instead of `--suspend`). I have added aliases to keep backwards compatibility with `slc debug`.

/cc: @sidorares @Krxtopher @jfirebaugh
The script `node-debug` added by this pull request is replacing your modules [ni](https://github.com/sidorares/ni), [node-ndebug](https://github.com/resource/node-ndebug) and [node-debug](https://github.com/jfirebaugh/node-debug). Is there any feature that is implemented in your module and missing in node-inspector's node-debug?
",bajtos,sidorares
305,2014-02-17 19:06:15,"Add a CLI script `node-debug` that:
1. Runs node-inspector.
2. Runs the supplied script in debug mode or starts a REPL session
3. Opens the user's browser, pointing it at the inspector.

Add a CLI script `run-repl` (used by `node-debug`) that will load
the module in CWD and start a REPL session.

The script `node-debug` is friendly to embedders, error messages use the value of the env variable ""CMD"" when referring to $0.

/to: @sam-github please review. I'll submit the documentation changes in a standalone pull request.

The file node-debug.js is based on [strong-cli/lib/commands/debug.js](https://github.com/strongloop/strong-cli/blob/master/lib/commands/debug.js). The most notable difference is the naming of command-line arguments. I have decided to use the names that are already used by Node and Node Inspector (e.g. `--web-port` instead of `--port`, `--debug-brk` instead of `--suspend`). I have added aliases to keep backwards compatibility with `slc debug`.

/cc: @sidorares @Krxtopher @jfirebaugh
The script `node-debug` added by this pull request is replacing your modules [ni](https://github.com/sidorares/ni), [node-ndebug](https://github.com/resource/node-ndebug) and [node-debug](https://github.com/jfirebaugh/node-debug). Is there any feature that is implemented in your module and missing in node-inspector's node-debug?
",bajtos,sam-github
305,2014-02-17 19:06:15,"Add a CLI script `node-debug` that:
1. Runs node-inspector.
2. Runs the supplied script in debug mode or starts a REPL session
3. Opens the user's browser, pointing it at the inspector.

Add a CLI script `run-repl` (used by `node-debug`) that will load
the module in CWD and start a REPL session.

The script `node-debug` is friendly to embedders, error messages use the value of the env variable ""CMD"" when referring to $0.

/to: @sam-github please review. I'll submit the documentation changes in a standalone pull request.

The file node-debug.js is based on [strong-cli/lib/commands/debug.js](https://github.com/strongloop/strong-cli/blob/master/lib/commands/debug.js). The most notable difference is the naming of command-line arguments. I have decided to use the names that are already used by Node and Node Inspector (e.g. `--web-port` instead of `--port`, `--debug-brk` instead of `--suspend`). I have added aliases to keep backwards compatibility with `slc debug`.

/cc: @sidorares @Krxtopher @jfirebaugh
The script `node-debug` added by this pull request is replacing your modules [ni](https://github.com/sidorares/ni), [node-ndebug](https://github.com/resource/node-ndebug) and [node-debug](https://github.com/jfirebaugh/node-debug). Is there any feature that is implemented in your module and missing in node-inspector's node-debug?
",bajtos,Krxtopher
305,2014-02-17 19:06:15,"Add a CLI script `node-debug` that:
1. Runs node-inspector.
2. Runs the supplied script in debug mode or starts a REPL session
3. Opens the user's browser, pointing it at the inspector.

Add a CLI script `run-repl` (used by `node-debug`) that will load
the module in CWD and start a REPL session.

The script `node-debug` is friendly to embedders, error messages use the value of the env variable ""CMD"" when referring to $0.

/to: @sam-github please review. I'll submit the documentation changes in a standalone pull request.

The file node-debug.js is based on [strong-cli/lib/commands/debug.js](https://github.com/strongloop/strong-cli/blob/master/lib/commands/debug.js). The most notable difference is the naming of command-line arguments. I have decided to use the names that are already used by Node and Node Inspector (e.g. `--web-port` instead of `--port`, `--debug-brk` instead of `--suspend`). I have added aliases to keep backwards compatibility with `slc debug`.

/cc: @sidorares @Krxtopher @jfirebaugh
The script `node-debug` added by this pull request is replacing your modules [ni](https://github.com/sidorares/ni), [node-ndebug](https://github.com/resource/node-ndebug) and [node-debug](https://github.com/jfirebaugh/node-debug). Is there any feature that is implemented in your module and missing in node-inspector's node-debug?
",bajtos,jfirebaugh
305,2014-02-18 08:21:32,"@sidorares Debugging mocha tests is easy:



Supporting coffee script is more difficult, definitely out of scope of this pull request. Can you use `coffee -c -w` as a workaround for now?

@sam-github Thanks for review. I have added a couple of commits and replied to the rest of the comments. Anything else to improve?
",bajtos,sam-github
296,2014-01-30 14:03:56,"@pritambaral Could you please check that this pull request is not breaking your use case?

@gcochard @gdw2 Could you please check if this pull request fixes your problem?
",bajtos,gdw2
296,2014-01-30 14:03:56,"@pritambaral Could you please check that this pull request is not breaking your use case?

@gcochard @gdw2 Could you please check if this pull request fixes your problem?
",bajtos,gcochard
296,2014-01-30 14:03:56,"@pritambaral Could you please check that this pull request is not breaking your use case?

@gcochard @gdw2 Could you please check if this pull request fixes your problem?
",bajtos,pritambaral
296,2014-01-30 18:33:47,"@bajitos It fixes my problem. Thanks!
",gcochard,bajitos
289,2014-01-22 10:16:03,"@bajtos , I know that this realisation isn't so simple how described in #266, but this leaves opportunity to create in future a new dialog with list of processes able to connect 
",3y3,bajtos
275,2014-01-08 00:42:45,"@pflannery can you advise on your test ? Having trouble understanding why it passed previously and now fails because the string gets a ""...(length: 9999)"" suffix. https://travis-ci.org/node-inspector/node-inspector/builds/16561627

Unless there was something else added to master the only difference should be 


",bf0,pflannery
259,2013-12-11 08:37:47,"Hello @kbdaitch, thank you very much for the pull request.

Could you please extend the answer with instructions on how to clear all local settings with the tools already available in Chrome? Feel free to reword the text below to fit into the answer.

> You can clear all settings saved by Node Inspector in the HTML5 local storage by running the following command in Developer Tools Console:
> 
> 
> 
> After you have removed the local settings, reload the page to apply the change.
",bajtos,kbdaitch
258,2013-12-02 14:45:47,"Added a simple algorithm to decide what scriptId is expected depending
on Node version.

@Schoonology please review.
",bajtos,Schoonology
246,2014-01-15 15:00:58,"Hi @fpotgieter, could you please post the command lines you used to start the debugged applications, the command line you used to start Node Inspector, and the two URLs you are loading in the browser?

Example:



Can you reproduce the same problem using the [example server](https://github.com/node-inspector/node-debug-samples/blob/master/simple-server/index.js)? Note you have to change the port number to something else than 3300 for the second server instance.
",bajtos,fpotgieter
246,2014-01-16 07:28:13,"Good morning.

No. I am not experiencing slow start up. And I tested it on the example server in the link you provided yesterday and it works perfectly. Node-inspector runs fine when I get that error, it just does not load all my files into the sources tab in node-inspector.

I saw this now:
https://github.com/node-inspector/node-inspector/issues/199
It looks like the same issue or very similar to the one I have and @techmachine wrote that is was a problem in a run.js file. So do you think it is something in my index.js file? If it is do you have any idea what might cause this?

Thank you.
",faniepotgieter,techmachine
246,2014-01-16 09:38:07,"@fpotgieter at least we are getting somewhere :)

Let's move the discussion to #199 then.
",bajtos,fpotgieter
243,2013-11-13 08:09:18,"Added debug logs for devtools protocol and V8 debugger protocol.

Set DEBUG=node-inspector:protocol:\* to enable.

@Schoonology Please review. I am going to use these logs in my talk about internal architecture of Node Inspector.
",bajtos,Schoonology
241,2013-11-12 09:30:21,"Hello @bunnycode, thank you for reporting the problem.

> It appears that node-inspector is wrapping all source files in functions defined as:
> 
> 

To clarify: source files are wrapped by Node.js module system, not by Node Inspector. Node Inspector is aware of this and un-wraps the content in some places like live-edit. Sourcemap support should not be affected by wrapping - see [lib/ScriptManager.js#L6](https://github.com/node-inspector/node-inspector/blob/bc1834a8120d92bce8972f729ab5b170222b47fc/lib/ScriptManager.js#L6) and [lib/ScriptManager.js#L157](https://github.com/node-inspector/node-inspector/blob/bc1834a8120d92bce8972f729ab5b170222b47fc/lib/ScriptManager.js#L157).

I am using this simple application to test sourcemap support: [node-inspector/node-debug-samples > sourcemap](https://github.com/node-inspector/node-debug-samples/tree/master/sourcemap). 

Are you able to reproduce your problem with my sample application too?

What does it mean ""source maps are not working""? Please be more specific, describe what you have expected and what happened instead. How did you start your application in debug mode?

See also #224, the person may be experiencing the the same problem as you are.
",bajtos,bunnycode
235,2013-10-23 18:52:33,"Fixed debugger launcher to ignore ECONNRESET error when shutting down the
session.

@Schoonology  please review.
",bajtos,Schoonology
216,2013-09-19 15:28:23,"The upgraded front-end sends two requests to get a list of object properties,
each request asking for a different set of variables. Because our back-end was
ignoring request parameters, the same set of variables was returned twice.

This commit fixes the immediate problem, without providing the full
implementation of the new front-end feature.

See node-inspector/node-inspector#213.

@Schoonology please review. I'll fill a new issue (Enhancement) to get the proper implementation of getProperties & getInternalProperties.
",bajtos,Schoonology
212,2013-09-18 14:04:56,"Added a short description how to enable debugger in a running process
on Windows.

Related issue: #106

@Schoonology please review.
",bajtos,Schoonology
211,2013-09-18 13:50:32,"Fixed `config.hidden` that was not working correctly.

See also #206.

@Schoonology please review.
",bajtos,Schoonology
207,2013-09-12 10:12:03,"Implemented support for data scheme URLs. This allows sourcemap files to be embedded in the sourceMappingURL in the generated js file.

Fixes #204.

@Schoonology Please review.
",bajtos,Schoonology
200,2013-08-20 11:21:57,"Fixed the bug #198 where Node Inspector crashed when a breakpoint was hit in a code
run by eval(). This is happening in two cases:
- Node Inspector calls eval() to get more information about the debugged
  process. In certain circumstances it was possible that the debugger stopped
  inside this code.
- User types `debugger;` in the console panel.

BreakEventHandler was changed to resume the execution in both cases, as if
the sources were hidden.

@Schoonology please review.
",bajtos,Schoonology
199,2014-01-16 07:33:10,"Hi there @techmachine.

Can you remember what in your run.js file caused this error?

Thank you.
",faniepotgieter,techmachine
199,2014-01-16 09:39:43,"@fpotgieter 

The message ""Failed to open socket on port 5858, waiting 1000 ms before retrying"" usually means there is another node process having the debugger listening on the same port. You can verify this assumption by running `ps ax | grep node`.

Such situation typically happens when you start a child node process and forward all command-line arguments to it. As the result, there are multiple node instances started via `node --debug` and only one of them is lucky enough to grab the debugger port. Node's cluster API used to be vulnerable to this problem too, until my patch (joyent/node#5397) was landed.
",bajtos,fpotgieter
198,2013-08-19 08:41:55,"Hi @newleafdigital, the issue you are seeing is not caused by running Node Inspector in background.

The exception is caused by a breakpoint being hit before Node Inspector was notified about the source file where the debugger stopped. (It's possible that running Node Inspector in background changes the timing, which may cause the issue to disappear.)
1. What version of Node Inspector and node are you running? (If you are using different node version for Node Inspector and the debugged process then report both of them.)
2. Can you post a sample project where the issue can be reproduced?
",bajtos,newleafdigital
189,2014-05-05 14:40:04,"Hi @wyattbiker, you post #364 Issue, please switch to #189 for discussion.

> Would be nice to have an optional -title=
> or if no title use the app name as the title.

I think that best strategy will be grab name from package.json

> I already located the opener.js as the file that opens up Chrome. I wonder if Chrome has a command line option to force a title.

Opener is only one of ways to open Node Inspector. 
For example I use the old style way `node-inspector app.js`. For this reason I think that best solution:
- Add new command to [FrontendClient](https://github.com/node-inspector/node-inspector/blob/master/lib/FrontendClient.js) (like `updateTitle`)
- Add handler for this command to [Overrides](https://github.com/node-inspector/node-inspector/blob/master/front-end-node/Overrides.js)

How you can see it's not a difficult problem. I leave it for novice in Node Inspector. Are you want to be this novice and fix this issue? ;-)

In any cases @bajtos is boss and you can wait his extended comment, but how I understand, it went on vacation.
",3y3,wyattbiker
185,2013-09-27 15:22:33,"Hey @miksago, thanks for reaching out. I'd start with the CPU profiler, here are some resources you may find helpful:
- Node Inspector's [Developer's Guide](https://github.com/node-inspector/node-inspector/wiki/Developer%27s-Guide)
- Node API for V8 CPU profiler: [strong-cpu-profiler](https://github.com/strongloop/strong-cpu-profiler)
- Implementation in the old version of Node Inspector: start at [lib/session.js line 784](https://github.com/node-inspector/node-inspector/blob/v0.1.10/lib/session.js#L784).
- Bugger's implementation: [Profiler.js](https://github.com/jkrems/bugger/blob/master/lib/domains/Profiler.js) and [probes/profiler.js](https://github.com/jkrems/bugger/blob/master/lib/bug-script/probes/profiler.js), alternatively CoffeeScript sources [Profiler.coffee](https://github.com/jkrems/bugger/blob/master/src/domains/Profiler.coffee) and [probes/profiler.js](https://github.com/jkrems/bugger/blob/master/src/bug-script/probes/profiler.coffee)

FYI: I'll be mostly offline until end of next week and won't be responding on comments/e-mails until I get back.
",bajtos,miksago
185,2013-11-06 20:47:38,"@miksago has there been any progress here? A profiler would make my life a lot easier, and having to juggle between node-inspector for debugging, and the less-convenient node-webkit-agent is frustrating. I can probably shake loose some time to help, if you need it.
",shepheb,miksago
174,2013-07-23 08:50:58,"Fixed the way how we detect the main application file for two cases:
  `node .` (run the local application)
  `node --debug` (start an interactive REPL session)

Fixed also other issues that prevented debugging of REPL sessions.

@Schoonology please review
",bajtos,Schoonology
172,2013-07-22 08:01:06,"Added a startup hook that shows the main application file in case no files are opened.

Created a public API for embedders, added function buildInspectorUrl().

/cc: @Schoonology please review.

Note: the first implementation was based on `#show={fileUrl}` parameter, therefore it was highly desirable to add a public API for embedders. After I have reworked the feature to always open the main file, the API is not that important, but it's still nice to have it.
",bajtos,Schoonology
148,2013-02-18 20:23:32,"I guess this is an ongoing issue, but I too can't install this module due to the connect dependency version.

Just for completeness, here's my error output.

% sudo npm install -g node-inspector
Password:
npm http GET https://registry.npmjs.org/node-inspector
npm http 304 https://registry.npmjs.org/node-inspector
npm http GET https://registry.npmjs.org/socket.io
npm http GET https://registry.npmjs.org/async
npm http GET https://registry.npmjs.org/connect
npm http 304 https://registry.npmjs.org/async
npm http 304 https://registry.npmjs.org/connect

npm ERR! Error: No compatible version found: connect@'>=1.8.5- <1.9.0-'
npm ERR! Valid install targets:
npm ERR! [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4"",""2.3.5"",""2.3.6"",""2.3.7"",""1.9.2"",""2.3.8"",""2.3.9"",""2.4.0"",""2.4.1"",""2.4.2"",""2.4.3"",""2.4.4"",""2.4.5"",""2.4.6"",""2.5.0"",""2.6.0"",""2.6.1"",""2.6.2"",""2.7.0"",""2.7.1"",""2.7.2""]
npm ERR!     at installTargetsError (/usr/local/lib/node_modules/npm/lib/cache.js:486:10)
npm ERR!     at next_ (/usr/local/lib/node_modules/npm/lib/cache.js:436:17)
npm ERR!     at next (/usr/local/lib/node_modules/npm/lib/cache.js:413:44)
npm ERR!     at /usr/local/lib/node_modules/npm/lib/cache.js:406:5
npm ERR!     at saved (/usr/local/lib/node_modules/npm/lib/utils/npm-registry-client/get.js:150:7)
npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:230:7
npm ERR!     at Object.oncomplete (fs.js:297:15)
npm ERR! You may report this log at:
npm ERR!     <http://github.com/isaacs/npm/issues>
npm ERR! or email it to:
npm ERR!     npm-@googlegroups.com
npm ERR! 
npm ERR! System Darwin 12.2.0
npm ERR! command ""node"" ""/usr/local/bin/npm"" ""install"" ""-g"" ""node-inspector""
npm ERR! cwd /Users/michael
npm ERR! node -v v0.8.20
npm ERR! npm -v 1.1.12
npm ERR! message No compatible version found: connect@'>=1.8.5- <1.9.0-'
npm ERR! message Valid install targets:
npm ERR! message [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4"",""2.3.5"",""2.3.6"",""2.3.7"",""1.9.2"",""2.3.8"",""2.3.9"",""2.4.0"",""2.4.1"",""2.4.2"",""2.4.3"",""2.4.4"",""2.4.5"",""2.4.6"",""2.5.0"",""2.6.0"",""2.6.1"",""2.6.2"",""2.7.0"",""2.7.1"",""2.7.2""]
npm ERR! 
npm ERR! Additional logging details can be found in:
npm ERR!     /Users/michael/npm-debug.log
npm not ok

and that log file: 

info it worked if it ends with ok
verbose cli [ 'node', '/usr/local/bin/npm', 'install', '-g', 'node-inspector' ]
info using npm@1.1.12
info using node@v0.8.20
verbose config file /Users/michael/.npmrc
verbose config file /opt/local/etc/npmrc
verbose config file /usr/local/lib/node_modules/npm/npmrc
silly exec /opt/local/bin/node ""/usr/local/lib/node_modules/npm/bin/npm-get-uid-gid.js"" ""nobody"" 20
silly spawning [ '/opt/local/bin/node',
silly spawning   [ '/usr/local/lib/node_modules/npm/bin/npm-get-uid-gid.js',
silly spawning     'nobody',
silly spawning     20 ],
silly spawning   null ]
silly output from getuid/gid {""uid"":-2,""gid"":20}
silly output from getuid/gid 
verbose cache add [ 'node-inspector', null ]
silly cache add: name, spec, args [ undefined, 'node-inspector', [ 'node-inspector', null ] ]
verbose parsed url { pathname: 'node-inspector',
verbose parsed url   path: 'node-inspector',
verbose parsed url   href: 'node-inspector' }
verbose addNamed [ 'node-inspector', '' ]
verbose addNamed [ null, '' ]
silly name, range, hasData [ 'node-inspector', '', false ]
verbose raw, before any munging node-inspector
verbose url resolving [ 'https://registry.npmjs.org/', './node-inspector' ]
verbose url resolved https://registry.npmjs.org/node-inspector
verbose etag ""BGCOVMG94NL7DY63FOUE4BCVG""
http GET https://registry.npmjs.org/node-inspector
http 304 https://registry.npmjs.org/node-inspector
silly get cb [ 304,
silly get cb   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
silly get cb     etag: '""BGCOVMG94NL7DY63FOUE4BCVG""',
silly get cb     date: 'Mon, 18 Feb 2013 20:14:41 GMT',
silly get cb     'content-length': '0' } ]
verbose etag node-inspector from cache
silly name, range, hasData 2 [ 'node-inspector', '', true ]
silly versions [ 'node-inspector',
silly versions   [ '0.0.1',
silly versions     '0.0.2',
silly versions     '0.0.3',
silly versions     '0.0.4',
silly versions     '0.1.0',
silly versions     '0.1.1',
silly versions     '0.1.2',
silly versions     '0.1.3',
silly versions     '0.1.4',
silly versions     '0.1.5',
silly versions     '0.1.6',
silly versions     '0.1.7',
silly versions     '0.1.8',
silly versions     '0.1.9',
silly versions     '0.1.10',
silly versions     '0.2.0beta1',
silly versions     '0.2.0beta2',
silly versions     '0.2.0beta3' ] ]
verbose bin dist [ '0.8-ares1.7.5-DEV-evundefined-openssl1.0.1e-v83.11.10.25-darwin-x64-12.2.0',
verbose bin dist   { shasum: '2adb552da7757ff3d4ec549f5570799355952d20',
verbose bin dist     tarball: 'http://registry.npmjs.org/node-inspector/-/node-inspector-0.2.0beta3.tgz' } ]
verbose caching /Users/michael/.npm/node-inspector/0.2.0beta3/package/package.json
verbose loadDefaults node-inspector@0.2.0beta3
silly resolved [ { name: 'node-inspector',
silly resolved     version: '0.2.0beta3',
silly resolved     description: 'Web Inspector based nodeJS debugger',
silly resolved     homepage: 'http://github.com/dannycoates/node-inspector',
silly resolved     author: { name: 'Danny Coates', email: 'dannycoates@gmail.com' },
silly resolved     keywords: [ 'debug', 'debugger', 'inspector', 'profiler' ],
silly resolved     repository: 
silly resolved      { type: 'git',
silly resolved        url: 'git://github.com/dannycoates/node-inspector.git' },
silly resolved     engines: { node: '>=0.6.0' },
silly resolved     bin: { 'node-inspector': './bin/inspector.js' },
silly resolved     dependencies: { 'socket.io': '~0.9', connect: '~1.8.5', async: '~0.1' },
silly resolved     preferGlobal: true,
silly resolved     _id: 'node-inspector@0.2.0beta3',
silly resolved     devDependencies: {},
silly resolved     optionalDependencies: {},
silly resolved     _engineSupported: true,
silly resolved     _npmVersion: '1.1.12',
silly resolved     _nodeVersion: 'v0.8.20',
silly resolved     _defaultsLoaded: true,
silly resolved     _from: 'node-inspector',
silly resolved     scripts: {} } ]
info into /opt/local/lib node-inspector@0.2.0beta3
info installOne node-inspector@0.2.0beta3
verbose from cache /Users/michael/.npm/node-inspector/0.2.0beta3/package/package.json
info unbuild /opt/local/lib/node_modules/node-inspector
verbose mkdir (expected) error ENOENT, stat '/opt/local/lib/node_modules/node-inspector'
verbose mkdir done: /opt/local/lib/node_modules/node-inspector 755
verbose unpack_ uid, gid [ -2, 20 ]
verbose unpackTarget /opt/local/lib/node_modules/node-inspector
silly gunzTarPerm modes [ '755', '644' ]
verbose gunzed /opt/local/lib/node_modules/node-inspector
verbose caching /opt/local/lib/node_modules/node-inspector/package.json
verbose loadDefaults node-inspector@0.2.0beta3
info preinstall node-inspector@0.2.0beta3
verbose from cache /opt/local/lib/node_modules/node-inspector/package.json
verbose readDependencies: using package.json deps
verbose from cache /opt/local/lib/node_modules/node-inspector/package.json
verbose readDependencies: using package.json deps
verbose cache add [ 'socket.io@~0.9', null ]
silly cache add: name, spec, args [ undefined, 'socket.io@~0.9', [ 'socket.io@~0.9', null ] ]
verbose parsed url { pathname: 'socket.io@~0.9',
verbose parsed url   path: 'socket.io@~0.9',
verbose parsed url   href: 'socket.io@~0.9' }
silly cache add: name, spec, args [ 'socket.io', '~0.9', [ 'socket.io', '~0.9' ] ]
verbose parsed url { pathname: '~0.9', path: '~0.9', href: '~0.9' }
verbose addNamed [ 'socket.io', '~0.9' ]
verbose addNamed [ null, '>=0.9.0- <0.10.0-' ]
silly name, range, hasData [ 'socket.io', '>=0.9.0- <0.10.0-', false ]
verbose cache add [ 'connect@~1.8.5', null ]
silly cache add: name, spec, args [ undefined, 'connect@~1.8.5', [ 'connect@~1.8.5', null ] ]
verbose parsed url { pathname: 'connect@~1.8.5',
verbose parsed url   path: 'connect@~1.8.5',
verbose parsed url   href: 'connect@~1.8.5' }
silly cache add: name, spec, args [ 'connect', '~1.8.5', [ 'connect', '~1.8.5' ] ]
verbose parsed url { pathname: '~1.8.5', path: '~1.8.5', href: '~1.8.5' }
verbose addNamed [ 'connect', '~1.8.5' ]
verbose addNamed [ null, '>=1.8.5- <1.9.0-' ]
silly name, range, hasData [ 'connect', '>=1.8.5- <1.9.0-', false ]
verbose cache add [ 'async@~0.1', null ]
silly cache add: name, spec, args [ undefined, 'async@~0.1', [ 'async@~0.1', null ] ]
verbose parsed url { pathname: 'async@~0.1',
verbose parsed url   path: 'async@~0.1',
verbose parsed url   href: 'async@~0.1' }
silly cache add: name, spec, args [ 'async', '~0.1', [ 'async', '~0.1' ] ]
verbose parsed url { pathname: '~0.1', path: '~0.1', href: '~0.1' }
verbose addNamed [ 'async', '~0.1' ]
verbose addNamed [ null, '>=0.1.0- <0.2.0-' ]
silly name, range, hasData [ 'async', '>=0.1.0- <0.2.0-', false ]
verbose raw, before any munging socket.io
verbose url resolving [ 'https://registry.npmjs.org/', './socket.io' ]
verbose url resolved https://registry.npmjs.org/socket.io
verbose etag ""37WMPQLBFXOQQAMBLT3G6G7SD""
http GET https://registry.npmjs.org/socket.io
verbose raw, before any munging async
verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
verbose url resolved https://registry.npmjs.org/async
verbose etag ""46KJDQ5G12NE7ZO6Y3YLG3GH3""
http GET https://registry.npmjs.org/async
verbose raw, before any munging connect
verbose url resolving [ 'https://registry.npmjs.org/', './connect' ]
verbose url resolved https://registry.npmjs.org/connect
verbose etag ""E1GCUUCR5OTN2JSC7O41NLCVX""
http GET https://registry.npmjs.org/connect
http 304 https://registry.npmjs.org/async
silly get cb [ 304,
silly get cb   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
silly get cb     etag: '""46KJDQ5G12NE7ZO6Y3YLG3GH3""',
silly get cb     date: 'Mon, 18 Feb 2013 20:14:43 GMT',
silly get cb     'content-length': '0' } ]
verbose etag async from cache
silly name, range, hasData 2 [ 'async', '>=0.1.0- <0.2.0-', true ]
silly versions [ 'async',
silly versions   [ '0.1.0',
silly versions     '0.1.1',
silly versions     '0.1.2',
silly versions     '0.1.3',
silly versions     '0.1.4',
silly versions     '0.1.5',
silly versions     '0.1.6',
silly versions     '0.1.7',
silly versions     '0.1.8',
silly versions     '0.1.9',
silly versions     '0.1.10',
silly versions     '0.1.11',
silly versions     '0.1.12',
silly versions     '0.1.13',
silly versions     '0.1.14',
silly versions     '0.1.15',
silly versions     '0.1.16',
silly versions     '0.1.17',
silly versions     '0.1.18',
silly versions     '0.1.19',
silly versions     '0.1.20',
silly versions     '0.1.21',
silly versions     '0.1.22',
silly versions     '0.2.0',
silly versions     '0.2.1',
silly versions     '0.2.2',
silly versions     '0.2.3',
silly versions     '0.2.4',
silly versions     '0.2.5' ] ]
verbose bin dist [ '0.8-ares1.7.5-DEV-evundefined-openssl1.0.1e-v83.11.10.25-darwin-x64-12.2.0',
verbose bin dist   { shasum: '0fc1aaa088a0e3ef0ebe2d8831bab0dcf8845061',
verbose bin dist     tarball: 'http://registry.npmjs.org/async/-/async-0.1.22.tgz' } ]
verbose caching /Users/michael/.npm/async/0.1.22/package/package.json
verbose loadDefaults async@0.1.22
http 304 https://registry.npmjs.org/connect
silly get cb [ 304,
silly get cb   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
silly get cb     etag: '""E1GCUUCR5OTN2JSC7O41NLCVX""',
silly get cb     date: 'Mon, 18 Feb 2013 20:14:43 GMT',
silly get cb     'content-length': '0' } ]
verbose etag connect from cache
silly name, range, hasData 2 [ 'connect', '>=1.8.5- <1.9.0-', true ]
silly versions [ 'connect',
silly versions   [ '0.0.1',
silly versions     '0.0.2',
silly versions     '0.0.3',
silly versions     '0.0.4',
silly versions     '0.0.5',
silly versions     '0.0.6',
silly versions     '0.1.0',
silly versions     '0.2.0',
silly versions     '0.2.1',
silly versions     '0.2.2',
silly versions     '0.2.3',
silly versions     '0.2.4',
silly versions     '0.2.5',
silly versions     '0.2.6',
silly versions     '0.2.7',
silly versions     '0.3.0',
silly versions     '0.4.0',
silly versions     '0.5.0',
silly versions     '0.5.1',
silly versions     '0.5.2',
silly versions     '0.5.3',
silly versions     '0.5.4',
silly versions     '0.5.5',
silly versions     '0.5.6',
silly versions     '0.5.7',
silly versions     '0.5.8',
silly versions     '0.5.9',
silly versions     '0.5.10',
silly versions     '1.0.0',
silly versions     '1.0.1',
silly versions     '2.2.2',
silly versions     '2.3.0',
silly versions     '2.3.1',
silly versions     '2.3.2',
silly versions     '2.3.3',
silly versions     '1.9.1',
silly versions     '2.3.4',
silly versions     '2.3.5',
silly versions     '2.3.6',
silly versions     '2.3.7',
silly versions     '1.9.2',
silly versions     '2.3.8',
silly versions     '2.3.9',
silly versions     '2.4.0',
silly versions     '2.4.1',
silly versions     '2.4.2',
silly versions     '2.4.3',
silly versions     '2.4.4',
silly versions     '2.4.5',
silly versions     '2.4.6',
silly versions     '2.5.0',
silly versions     '2.6.0',
silly versions     '2.6.1',
silly versions     '2.6.2',
silly versions     '2.7.0',
silly versions     '2.7.1',
silly versions     '2.7.2' ] ]
verbose about to build /opt/local/lib/node_modules/node-inspector
info unbuild /opt/local/lib/node_modules/node-inspector
verbose from cache /opt/local/lib/node_modules/node-inspector/package.json
info preuninstall node-inspector@0.2.0beta3
info uninstall node-inspector@0.2.0beta3
verbose unbuild node-inspector@0.2.0beta3 [ true,
verbose unbuild node-inspector@0.2.0beta3   '/opt/local/lib/node_modules',
verbose unbuild node-inspector@0.2.0beta3   '/opt/local/lib/node_modules' ]
verbose binRoot [ '/opt/local/bin', { 'node-inspector': './bin/inspector.js' } ]
info postuninstall node-inspector@0.2.0beta3
ERR! Error: No compatible version found: connect@'>=1.8.5- <1.9.0-'
ERR! Valid install targets:
ERR! [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4"",""2.3.5"",""2.3.6"",""2.3.7"",""1.9.2"",""2.3.8"",""2.3.9"",""2.4.0"",""2.4.1"",""2.4.2"",""2.4.3"",""2.4.4"",""2.4.5"",""2.4.6"",""2.5.0"",""2.6.0"",""2.6.1"",""2.6.2"",""2.7.0"",""2.7.1"",""2.7.2""]
ERR!     at installTargetsError (/usr/local/lib/node_modules/npm/lib/cache.js:486:10)
ERR!     at next_ (/usr/local/lib/node_modules/npm/lib/cache.js:436:17)
ERR!     at next (/usr/local/lib/node_modules/npm/lib/cache.js:413:44)
ERR!     at /usr/local/lib/node_modules/npm/lib/cache.js:406:5
ERR!     at saved (/usr/local/lib/node_modules/npm/lib/utils/npm-registry-client/get.js:150:7)
ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:230:7
ERR!     at Object.oncomplete (fs.js:297:15)
ERR! You may report this log at:
ERR!     <http://github.com/isaacs/npm/issues>
ERR! or email it to:
ERR!     npm-@googlegroups.com
ERR! 
ERR! System Darwin 12.2.0
ERR! command ""node"" ""/usr/local/bin/npm"" ""install"" ""-g"" ""node-inspector""
ERR! cwd /Users/michael
ERR! node -v v0.8.20
ERR! npm -v 1.1.12
ERR! message No compatible version found: connect@'>=1.8.5- <1.9.0-'
ERR! message Valid install targets:
ERR! message [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4"",""2.3.5"",""2.3.6"",""2.3.7"",""1.9.2"",""2.3.8"",""2.3.9"",""2.4.0"",""2.4.1"",""2.4.2"",""2.4.3"",""2.4.4"",""2.4.5"",""2.4.6"",""2.5.0"",""2.6.0"",""2.6.1"",""2.6.2"",""2.7.0"",""2.7.1"",""2.7.2""]
verbose exit [ 1, true ]
",michaelhodgins,googlegroups
145,2013-01-11 16:19:32,"I am running meteor on Windows, I modified the meteor.bat file under C:\Program Files (x86)\Meteor to included --debug as mentioned in other posts:

@echo off&&""%METEOR_PATH%\bin\node.exe"" --debug ""%METEOR_PATH%\app\meteor\meteor.js"" %*
I started my node-inspector and received an instruction to visit http://0.0.0.0:8080/debug?port=5858 to start debugging

I then started my meteor application, but when I go to http://127.0.0.1:8080/debug?port=5858 I saw two squares: one for Scripts, and one for console. Nothing came up when selecting Scripts.

When I brought up meteor I can see that node-inspector attached to it correctly, ""debugger listening on port 5858"" and confirmed that I brought up Meteor in the debugger mode. I noticed that when I started meteor it started two processes as well, just like in Linux. When I killed the second process it automatically started it again. When I killed the first process the application just exited. But unlike in Linux by killing the second process doesn't make it to show the server side scripts in node-inspector. I am using Firefox.
",jghuang6038,echo
137,2012-10-16 14:09:37,"Version:  v0.8.12
OS : Windows Vista

Problem : Can't installed node-inspector via npm

Stack trace:

info it worked if it ends with ok
verbose cli [ 'C:\node\\node.exe',
verbose cli   'C:\node\node_modules\npm\bin\npm-cli.js',
verbose cli   'install',
verbose cli   '-g',
verbose cli   'node-inspector' ]
info using npm@1.1.9
info using node@v0.8.12
verbose C:\node\node.exe node symlink
verbose config file C:\Users\tmnuwan12.npmrc
verbose config file C:\node\etc\npmrc
verbose config file C:\node\node_modules\npm\npmrc
verbose mkdir done: C:\node 755
verbose cache add [ 'node-inspector', null ]
silly cache add: name, spec, args [ undefined, 'node-inspector', [ 'node-inspector', null ] ]
verbose parsed url { pathname: 'node-inspector',
verbose parsed url   path: 'node-inspector',
verbose parsed url   href: 'node-inspector' }
verbose addNamed [ 'node-inspector', '' ]
verbose addNamed [ null, '' ]
silly name, range, hasData [ 'node-inspector', '', false ]
verbose raw, before any munging node-inspector
verbose url resolving [ 'https://registry.npmjs.org/', './node-inspector' ]
verbose url resolved https://registry.npmjs.org/node-inspector
verbose etag ""APU3VT6Z43RTVQFALL1NN988Z""
http GET https://registry.npmjs.org/node-inspector
http 304 https://registry.npmjs.org/node-inspector
silly get cb [ 304,
silly get cb   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
silly get cb     etag: '""APU3VT6Z43RTVQFALL1NN988Z""',
silly get cb     date: 'Tue, 16 Oct 2012 14:01:12 GMT',
silly get cb     'content-length': '0' } ]
verbose etag node-inspector from cache
verbose mkdir done: C:\Users\tmnuwan12\AppData\Roaming\npm-cache\node-inspector 755
silly name, range, hasData 2 [ 'node-inspector', '', true ]
silly versions [ 'node-inspector',
silly versions   [ '0.0.1',
silly versions     '0.0.2',
silly versions     '0.0.3',
silly versions     '0.0.4',
silly versions     '0.1.0',
silly versions     '0.1.1',
silly versions     '0.1.2',
silly versions     '0.1.3',
silly versions     '0.1.4',
silly versions     '0.1.5',
silly versions     '0.1.6',
silly versions     '0.1.7',
silly versions     '0.1.8',
silly versions     '0.1.9',
silly versions     '0.1.10',
silly versions     '0.2.0beta1',
silly versions     '0.2.0beta2',
silly versions     '0.2.0beta3' ] ]
verbose bin dist [ '0.8-ares1.7.5-DEV-evundefined-openssl1.0.0f-v83.11.10.22-win32-ia32-6.0.6001',
verbose bin dist   { shasum: '2adb552da7757ff3d4ec549f5570799355952d20',
verbose bin dist     tarball: 'http://registry.npmjs.org/node-inspector/-/node-inspector-0.2.0beta3.tgz' } ]
verbose caching C:\Users\tmnuwan12\AppData\Roaming\npm-cache\node-inspector\0.2.0beta3\package\package.json
verbose loadDefaults node-inspector@0.2.0beta3
silly resolved [ { name: 'node-inspector',
silly resolved     version: '0.2.0beta3',
silly resolved     description: 'Web Inspector based nodeJS debugger',
silly resolved     homepage: 'http://github.com/dannycoates/node-inspector',
silly resolved     author: { name: 'Danny Coates', email: 'dannycoates@gmail.com' },
silly resolved     keywords: [ 'debug', 'debugger', 'inspector', 'profiler' ],
silly resolved     repository: 
silly resolved      { type: 'git',
silly resolved        url: 'git://github.com/dannycoates/node-inspector.git' },
silly resolved     engines: { node: '>=0.6.0' },
silly resolved     bin: { 'node-inspector': './bin/inspector.js' },
silly resolved     dependencies: { 'socket.io': '~0.9', connect: '~1.8.5', async: '~0.1' },
silly resolved     preferGlobal: true,
silly resolved     _id: 'node-inspector@0.2.0beta3',
silly resolved     devDependencies: {},
silly resolved     optionalDependencies: {},
silly resolved     _engineSupported: true,
silly resolved     _npmVersion: '1.1.9',
silly resolved     _nodeVersion: 'v0.8.12',
silly resolved     _defaultsLoaded: true,
silly resolved     _from: 'node-inspector',
silly resolved     scripts: {} } ]
info into C:\node node-inspector@0.2.0beta3
info installOne node-inspector@0.2.0beta3
verbose from cache C:\Users\tmnuwan12\AppData\Roaming\npm-cache\node-inspector\0.2.0beta3\package\package.json
info unbuild C:\node\node_modules\node-inspector
verbose mkdir (expected) error ENOENT, stat 'C:\node\node_modules\node-inspector'
verbose mkdir done: C:\node\node_modules\node-inspector 755
verbose unpack_ uid, gid [ undefined, undefined ]
verbose unpackTarget C:\node\node_modules\node-inspector
silly gunzTarPerm modes [ '755', '644' ]
silly modified mode [ '.npmignore', 438, 420 ]
silly modified mode [ 'bin/', 438, 493 ]
silly modified mode [ 'bin/inspector.js', 438, 420 ]
silly modified mode [ 'ChangeLog', 438, 420 ]
silly modified mode [ 'config.json', 438, 420 ]
silly modified mode [ 'front-end/', 438, 493 ]
silly modified mode [ 'front-end/devtools.css', 438, 420 ]
silly modified mode [ 'front-end/devtools.js', 438, 420 ]
silly modified mode [ 'front-end/helpScreen.css', 438, 420 ]
silly modified mode [ 'front-end/Images/', 438, 493 ]
silly modified mode [ 'front-end/Images/applicationCache.png', 438, 420 ]
silly modified mode [ 'front-end/Images/auditsIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/back.png', 438, 420 ]
silly modified mode [ 'front-end/Images/breakpointBorder.png', 438, 420 ]
silly modified mode [ 'front-end/Images/breakpointConditionalBorder.png', 438, 420 ]
silly modified mode [ 'front-end/Images/breakpointConditionalCounterBorder.png',
silly modified mode   438,
silly modified mode   420 ]
silly modified mode [ 'front-end/Images/breakpointCounterBorder.png', 438, 420 ]
silly modified mode [ 'front-end/Images/breakpointsActivateButtonGlyph.png',
silly modified mode   438,
silly modified mode   420 ]
silly modified mode [ 'front-end/Images/breakpointsDeactivateButtonGlyph.png',
silly modified mode   438,
silly modified mode   420 ]
silly modified mode [ 'front-end/Images/checker.png', 438, 420 ]
silly modified mode [ 'front-end/Images/clearConsoleButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/closeButtons.png', 438, 420 ]
silly modified mode [ 'front-end/Images/consoleButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/consoleIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/cookie.png', 438, 420 ]
silly modified mode [ 'front-end/Images/database.png', 438, 420 ]
silly modified mode [ 'front-end/Images/databaseTable.png', 438, 420 ]
silly modified mode [ 'front-end/Images/debuggerContinue.png', 438, 420 ]
silly modified mode [ 'front-end/Images/debuggerPause.png', 438, 420 ]
silly modified mode [ 'front-end/Images/debuggerStepInto.png', 438, 420 ]
silly modified mode [ 'front-end/Images/debuggerStepOut.png', 438, 420 ]
silly modified mode [ 'front-end/Images/debuggerStepOver.png', 438, 420 ]
silly modified mode [ 'front-end/Images/deleteIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/disclosureTriangleSmallDown.png', 438, 420 ]
silly modified mode [ 'front-end/Images/disclosureTriangleSmallDownBlack.png',
silly modified mode   438,
silly modified mode   420 ]
silly modified mode [ 'front-end/Images/disclosureTriangleSmallDownWhite.png',
silly modified mode   438,
silly modified mode   420 ]
silly modified mode [ 'front-end/Images/disclosureTriangleSmallRight.png', 438, 420 ]
silly modified mode [ 'front-end/Images/disclosureTriangleSmallRightBlack.png',
silly modified mode   438,
silly modified mode   420 ]
silly modified mode [ 'front-end/Images/disclosureTriangleSmallRightDown.png',
silly modified mode   438,
silly modified mode   420 ]
silly modified mode [ 'front-end/Images/disclosureTriangleSmallRightDownBlack.png',
silly modified mode   438,
silly modified mode   420 ]
silly modified mode [ 'front-end/Images/disclosureTriangleSmallRightDownWhite.png',
silly modified mode   438,
silly modified mode   420 ]
silly modified mode [ 'front-end/Images/disclosureTriangleSmallRightWhite.png',
silly modified mode   438,
silly modified mode   420 ]
silly modified mode [ 'front-end/Images/dockButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/elementsIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/enableOutlineButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/enableSolidButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/errorIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/errorMediumIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/errorRedDot.png', 438, 420 ]
silly modified mode [ 'front-end/Images/excludeButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/focusButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/forward.png', 438, 420 ]
silly modified mode [ 'front-end/Images/frame.png', 438, 420 ]
silly modified mode [ 'front-end/Images/gearButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/glossyHeader.png', 438, 420 ]
silly modified mode [ 'front-end/Images/glossyHeaderPressed.png', 438, 420 ]
silly modified mode [ 'front-end/Images/glossyHeaderSelected.png', 438, 420 ]
silly modified mode [ 'front-end/Images/glossyHeaderSelectedPressed.png', 438, 420 ]
silly modified mode [ 'front-end/Images/goArrow.png', 438, 420 ]
silly modified mode [ 'front-end/Images/graphLabelCalloutLeft.png', 438, 420 ]
silly modified mode [ 'front-end/Images/graphLabelCalloutRight.png', 438, 420 ]
silly modified mode [ 'front-end/Images/largerResourcesButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/localStorage.png', 438, 420 ]
silly modified mode [ 'front-end/Images/navigatorShowHideButton.png', 438, 420 ]
silly modified mode [ 'front-end/Images/networkIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/nodeSearchButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/paneAddButtons.png', 438, 420 ]
silly modified mode [ 'front-end/Images/paneBottomGrow.png', 438, 420 ]
silly modified mode [ 'front-end/Images/paneBottomGrowActive.png', 438, 420 ]
silly modified mode [ 'front-end/Images/paneElementStateButtons.png', 438, 420 ]
silly modified mode [ 'front-end/Images/paneFilterButtons.png', 438, 420 ]
silly modified mode [ 'front-end/Images/paneGrowHandleLine.png', 438, 420 ]
silly modified mode [ 'front-end/Images/paneRefreshButtons.png', 438, 420 ]
silly modified mode [ 'front-end/Images/paneSettingsButtons.png', 438, 420 ]
silly modified mode [ 'front-end/Images/pauseOnExceptionButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/percentButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/popoverArrows.png', 438, 420 ]
silly modified mode [ 'front-end/Images/popoverBackground.png', 438, 420 ]
silly modified mode [ 'front-end/Images/profileGroupIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/profileIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/profilesIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/profileSmallIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/profilesSilhouette.png', 438, 420 ]
silly modified mode [ 'front-end/Images/programCounterBorder.png', 438, 420 ]
silly modified mode [ 'front-end/Images/radioDot.png', 438, 420 ]
silly modified mode [ 'front-end/Images/recordButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/recordToggledButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/reloadButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/resourceCSSIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/resourceDocumentIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/resourceDocumentIconSmall.png', 438, 420 ]
silly modified mode [ 'front-end/Images/resourceJSIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/resourcePlainIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/resourcePlainIconSmall.png', 438, 420 ]
silly modified mode [ 'front-end/Images/resourcesIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/resourcesSizeGraphIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/resourcesTimeGraphIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/scriptsIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/scriptsSilhouette.png', 438, 420 ]
silly modified mode [ 'front-end/Images/searchSmallBlue.png', 438, 420 ]
silly modified mode [ 'front-end/Images/searchSmallBrightBlue.png', 438, 420 ]
silly modified mode [ 'front-end/Images/searchSmallGray.png', 438, 420 ]
silly modified mode [ 'front-end/Images/searchSmallWhite.png', 438, 420 ]
silly modified mode [ 'front-end/Images/segment.png', 438, 420 ]
silly modified mode [ 'front-end/Images/segmentEnd.png', 438, 420 ]
silly modified mode [ 'front-end/Images/segmentHover.png', 438, 420 ]
silly modified mode [ 'front-end/Images/segmentHoverEnd.png', 438, 420 ]
silly modified mode [ 'front-end/Images/segmentSelected.png', 438, 420 ]
silly modified mode [ 'front-end/Images/segmentSelectedEnd.png', 438, 420 ]
silly modified mode [ 'front-end/Images/sessionStorage.png', 438, 420 ]
silly modified mode [ 'front-end/Images/spinner.gif', 438, 420 ]
silly modified mode [ 'front-end/Images/spinnerActive.gif', 438, 420 ]
silly modified mode [ 'front-end/Images/spinnerActiveSelected.gif', 438, 420 ]
silly modified mode [ 'front-end/Images/spinnerInactive.gif', 438, 420 ]
silly modified mode [ 'front-end/Images/spinnerInactiveSelected.gif', 438, 420 ]
silly modified mode [ 'front-end/Images/splitviewDimple.png', 438, 420 ]
silly modified mode [ 'front-end/Images/splitviewDividerBackground.png', 438, 420 ]
silly modified mode [ 'front-end/Images/statusbarBackground.png', 438, 420 ]
silly modified mode [ 'front-end/Images/statusbarBackgroundChromium.png', 438, 420 ]
silly modified mode [ 'front-end/Images/statusbarBottomBackground.png', 438, 420 ]
silly modified mode [ 'front-end/Images/statusbarBottomBackgroundChromium.png',
silly modified mode   438,
silly modified mode   420 ]
silly modified mode [ 'front-end/Images/statusbarButtonGlyphs.png', 438, 420 ]
silly modified mode [ 'front-end/Images/statusbarButtons.png', 438, 420 ]
silly modified mode [ 'front-end/Images/statusbarButtonsChromium.png', 438, 420 ]
silly modified mode [ 'front-end/Images/statusbarMenuButton.png', 438, 420 ]
silly modified mode [ 'front-end/Images/statusbarMenuButtonChromium.png', 438, 420 ]
silly modified mode [ 'front-end/Images/statusbarMenuButtonSelected.png', 438, 420 ]
silly modified mode [ 'front-end/Images/statusbarMenuButtonSelectedChromium.png',
silly modified mode   438,
silly modified mode   420 ]
silly modified mode [ 'front-end/Images/statusbarResizerHorizontal.png', 438, 420 ]
silly modified mode [ 'front-end/Images/statusbarResizerVertical.png', 438, 420 ]
silly modified mode [ 'front-end/Images/successGreenDot.png', 438, 420 ]
silly modified mode [ 'front-end/Images/thumbActiveHoriz.png', 438, 420 ]
silly modified mode [ 'front-end/Images/thumbActiveVert.png', 438, 420 ]
silly modified mode [ 'front-end/Images/thumbHoriz.png', 438, 420 ]
silly modified mode [ 'front-end/Images/thumbHoverHoriz.png', 438, 420 ]
silly modified mode [ 'front-end/Images/thumbHoverVert.png', 438, 420 ]
silly modified mode [ 'front-end/Images/thumbVert.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineBarBlue.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineBarGray.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineBarGreen.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineBarOrange.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineBarPurple.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineBarRed.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineBarYellow.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineCheckmarks.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineDots.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineHollowPillBlue.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineHollowPillGray.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineHollowPillGreen.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineHollowPillOrange.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineHollowPillPurple.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineHollowPillRed.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineHollowPillYellow.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelineIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelinePillBlue.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelinePillGray.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelinePillGreen.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelinePillOrange.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelinePillPurple.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelinePillRed.png', 438, 420 ]
silly modified mode [ 'front-end/Images/timelinePillYellow.png', 438, 420 ]
silly modified mode [ 'front-end/Images/toolbarIcons.png', 438, 420 ]
silly modified mode [ 'front-end/Images/toolbarIconsSmall.png', 438, 420 ]
silly modified mode [ 'front-end/Images/toolbarItemSelected.png', 438, 420 ]
silly modified mode [ 'front-end/Images/trackHoriz.png', 438, 420 ]
silly modified mode [ 'front-end/Images/trackVert.png', 438, 420 ]
silly modified mode [ 'front-end/Images/treeDownTriangleBlack.png', 438, 420 ]
silly modified mode [ 'front-end/Images/treeDownTriangleWhite.png', 438, 420 ]
silly modified mode [ 'front-end/Images/treeRightTriangleBlack.png', 438, 420 ]
silly modified mode [ 'front-end/Images/treeRightTriangleWhite.png', 438, 420 ]
silly modified mode [ 'front-end/Images/treeUpTriangleBlack.png', 438, 420 ]
silly modified mode [ 'front-end/Images/treeUpTriangleWhite.png', 438, 420 ]
silly modified mode [ 'front-end/Images/undockButtonGlyph.png', 438, 420 ]
silly modified mode [ 'front-end/Images/userInputIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/userInputPreviousIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/userInputResultIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/warningIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/warningMediumIcon.png', 438, 420 ]
silly modified mode [ 'front-end/Images/warningOrangeDot.png', 438, 420 ]
silly modified mode [ 'front-end/Images/warningsErrors.png', 438, 420 ]
silly modified mode [ 'front-end/index.html', 438, 420 ]
silly modified mode [ 'front-end/navigatorView.css', 438, 420 ]
silly modified mode [ 'front-end/node/', 438, 493 ]
silly modified mode [ 'front-end/node/InspectorBackendStub.js', 438, 420 ]
silly modified mode [ 'front-end/node/InspectorFrontendHostStub.js', 438, 420 ]
silly modified mode [ 'front-end/node/Overrides.js', 438, 420 ]
silly modified mode [ 'front-end/scriptsPanel.css', 438, 420 ]
silly modified mode [ 'front-end/splitView.css', 438, 420 ]
silly modified mode [ 'front-end/tabbedPane.css', 438, 420 ]
silly modified mode [ 'front-end/textPrompt.css', 438, 420 ]
silly modified mode [ 'front-end/textViewer.css', 438, 420 ]
silly modified mode [ 'lib/', 438, 493 ]
silly modified mode [ 'lib/callback.js', 438, 420 ]
silly modified mode [ 'lib/client.js', 438, 420 ]
silly modified mode [ 'lib/debug-server.js', 438, 420 ]
silly modified mode [ 'lib/front-end/', 438, 493 ]
silly modified mode [ 'lib/front-end/browser.js', 438, 420 ]
silly modified mode [ 'lib/front-end/callframe.js', 438, 420 ]
silly modified mode [ 'lib/front-end/console.js', 438, 420 ]
silly modified mode [ 'lib/front-end/debugger.js', 438, 420 ]
silly modified mode [ 'lib/front-end/location.js', 438, 420 ]
silly modified mode [ 'lib/front-end/remote-object.js', 438, 420 ]
silly modified mode [ 'lib/front-end/runtime.js', 438, 420 ]
silly modified mode [ 'lib/front-end/scope.js', 438, 420 ]
silly modified mode [ 'lib/protocol.js', 438, 420 ]
silly modified mode [ 'lib/session2.js', 438, 420 ]
silly modified mode [ 'lib/v2w.js', 438, 420 ]
silly modified mode [ 'LICENSE', 438, 420 ]
silly modified mode [ 'package.json', 438, 420 ]
silly modified mode [ 'readme.md', 438, 420 ]
silly modified mode [ 'test/', 438, 493 ]
silly modified mode [ 'test/hello.js', 438, 420 ]
verbose gunzed C:\node\node_modules\node-inspector
verbose caching C:\node\node_modules\node-inspector\package.json
verbose loadDefaults node-inspector@0.2.0beta3
info preinstall node-inspector@0.2.0beta3
verbose from cache C:\node\node_modules\node-inspector\package.json
verbose readDependencies: using package.json deps
verbose from cache C:\node\node_modules\node-inspector\package.json
verbose readDependencies: using package.json deps
verbose cache add [ 'socket.io@~0.9', null ]
silly cache add: name, spec, args [ undefined, 'socket.io@~0.9', [ 'socket.io@~0.9', null ] ]
verbose parsed url { pathname: 'socket.io@~0.9',
verbose parsed url   path: 'socket.io@~0.9',
verbose parsed url   href: 'socket.io@~0.9' }
silly cache add: name, spec, args [ 'socket.io', '~0.9', [ 'socket.io', '~0.9' ] ]
verbose parsed url { pathname: '~0.9', path: '~0.9', href: '~0.9' }
verbose addNamed [ 'socket.io', '~0.9' ]
verbose addNamed [ null, '>=0.9.0- <0.10.0-' ]
silly name, range, hasData [ 'socket.io', '>=0.9.0- <0.10.0-', false ]
verbose cache add [ 'connect@~1.8.5', null ]
silly cache add: name, spec, args [ undefined, 'connect@~1.8.5', [ 'connect@~1.8.5', null ] ]
verbose parsed url { pathname: 'connect@~1.8.5',
verbose parsed url   path: 'connect@~1.8.5',
verbose parsed url   href: 'connect@~1.8.5' }
silly cache add: name, spec, args [ 'connect', '~1.8.5', [ 'connect', '~1.8.5' ] ]
verbose parsed url { pathname: '~1.8.5', path: '~1.8.5', href: '~1.8.5' }
verbose addNamed [ 'connect', '~1.8.5' ]
verbose addNamed [ null, '>=1.8.5- <1.9.0-' ]
silly name, range, hasData [ 'connect', '>=1.8.5- <1.9.0-', false ]
verbose cache add [ 'async@~0.1', null ]
silly cache add: name, spec, args [ undefined, 'async@~0.1', [ 'async@~0.1', null ] ]
verbose parsed url { pathname: 'async@~0.1',
verbose parsed url   path: 'async@~0.1',
verbose parsed url   href: 'async@~0.1' }
silly cache add: name, spec, args [ 'async', '~0.1', [ 'async', '~0.1' ] ]
verbose parsed url { pathname: '~0.1', path: '~0.1', href: '~0.1' }
verbose addNamed [ 'async', '~0.1' ]
verbose addNamed [ null, '>=0.1.0- <0.2.0-' ]
silly name, range, hasData [ 'async', '>=0.1.0- <0.2.0-', false ]
verbose raw, before any munging async
verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
verbose url resolved https://registry.npmjs.org/async
http GET https://registry.npmjs.org/async
verbose raw, before any munging connect
verbose url resolving [ 'https://registry.npmjs.org/', './connect' ]
verbose url resolved https://registry.npmjs.org/connect
verbose etag ""DLU4RWIBQ5VB1HYSEOGG521JP""
http GET https://registry.npmjs.org/connect
verbose raw, before any munging socket.io
verbose url resolving [ 'https://registry.npmjs.org/', './socket.io' ]
verbose url resolved https://registry.npmjs.org/socket.io
verbose etag ""1LBMLXQFNNK4Y979ZKCV65760""
http GET https://registry.npmjs.org/socket.io
http 304 https://registry.npmjs.org/socket.io
silly get cb [ 304,
silly get cb   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
silly get cb     etag: '""1LBMLXQFNNK4Y979ZKCV65760""',
silly get cb     date: 'Tue, 16 Oct 2012 14:01:19 GMT',
silly get cb     'content-length': '0' } ]
verbose etag socket.io from cache
verbose mkdir done: C:\Users\tmnuwan12\AppData\Roaming\npm-cache\socket.io 755
http 304 https://registry.npmjs.org/connect
silly get cb [ 304,
silly get cb   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
silly get cb     etag: '""DLU4RWIBQ5VB1HYSEOGG521JP""',
silly get cb     date: 'Tue, 16 Oct 2012 14:01:19 GMT',
silly get cb     'content-length': '0' } ]
verbose etag connect from cache
verbose mkdir done: C:\Users\tmnuwan12\AppData\Roaming\npm-cache\connect 755
silly name, range, hasData 2 [ 'socket.io', '>=0.9.0- <0.10.0-', true ]
silly versions [ 'socket.io',
silly versions   [ '0.3.8',
silly versions     '0.4.0',
silly versions     '0.4.1',
silly versions     '0.5.1',
silly versions     '0.5.3',
silly versions     '0.6.0',
silly versions     '0.6.1',
silly versions     '0.6.3',
silly versions     '0.6.4',
silly versions     '0.6.5',
silly versions     '0.6.6',
silly versions     '0.6.7',
silly versions     '0.6.8',
silly versions     '0.6.9',
silly versions     '0.6.10',
silly versions     '0.6.11',
silly versions     '0.6.12',
silly versions     '0.6.14',
silly versions     '0.6.15',
silly versions     '0.6.16',
silly versions     '0.6.17',
silly versions     '0.6.18',
silly versions     '0.7.0',
silly versions     '0.7.1',
silly versions     '0.7.2',
silly versions     '0.7.3',
silly versions     '0.7.4',
silly versions     '0.7.5',
silly versions     '0.7.6',
silly versions     '0.7.7',
silly versions     '0.7.8',
silly versions     '0.7.9',
silly versions     '0.7.10',
silly versions     '0.7.11',
silly versions     '0.8.0',
silly versions     '0.8.1',
silly versions     '0.8.2',
silly versions     '0.8.3',
silly versions     '0.8.4',
silly versions     '0.8.5',
silly versions     '0.8.6',
silly versions     '0.8.7',
silly versions     '0.9.0',
silly versions     '0.9.1',
silly versions     '0.9.1-1',
silly versions     '0.9.2',
silly versions     '0.9.3',
silly versions     '0.9.4',
silly versions     '0.9.5',
silly versions     '0.9.6',
silly versions     '0.9.7',
silly versions     '0.9.8',
silly versions     '0.9.9',
silly versions     '0.9.10' ] ]
verbose bin dist [ '0.8-ares1.7.5-DEV-evundefined-openssl1.0.0f-v83.11.10.22-win32-ia32-6.0.6001',
verbose bin dist   { shasum: '20aff51bdfd33066aacdd5df7a44f244e7d2cc6a',
verbose bin dist     tarball: 'http://registry.npmjs.org/socket.io/-/socket.io-0.9.10.tgz' } ]
verbose addRemoteTarball [ 'https://registry.npmjs.org/socket.io/-/socket.io-0.9.10.tgz',
verbose addRemoteTarball   '20aff51bdfd33066aacdd5df7a44f244e7d2cc6a' ]
silly name, range, hasData 2 [ 'connect', '>=1.8.5- <1.9.0-', true ]
silly versions [ 'connect',
silly versions   [ '0.0.1',
silly versions     '0.0.2',
silly versions     '0.0.3',
silly versions     '0.0.4',
silly versions     '0.0.5',
silly versions     '0.0.6',
silly versions     '0.1.0',
silly versions     '0.2.0',
silly versions     '0.2.1',
silly versions     '0.2.2',
silly versions     '0.2.3',
silly versions     '0.2.4',
silly versions     '0.2.5',
silly versions     '0.2.6',
silly versions     '0.2.7',
silly versions     '0.3.0',
silly versions     '0.4.0',
silly versions     '0.5.0',
silly versions     '0.5.1',
silly versions     '0.5.2',
silly versions     '0.5.3',
silly versions     '0.5.4',
silly versions     '0.5.5',
silly versions     '0.5.6',
silly versions     '0.5.7',
silly versions     '0.5.8',
silly versions     '0.5.9',
silly versions     '0.5.10',
silly versions     '1.0.0',
silly versions     '1.0.1',
silly versions     '2.2.2',
silly versions     '2.3.0',
silly versions     '2.3.1',
silly versions     '2.3.2',
silly versions     '2.3.3',
silly versions     '1.9.1',
silly versions     '2.3.4',
silly versions     '2.3.5',
silly versions     '2.3.6',
silly versions     '2.3.7',
silly versions     '1.9.2',
silly versions     '2.3.8',
silly versions     '2.3.9',
silly versions     '2.4.0',
silly versions     '2.4.1',
silly versions     '2.4.2',
silly versions     '2.4.3',
silly versions     '2.4.4',
silly versions     '2.4.5',
silly versions     '2.4.6',
silly versions     '2.5.0',
silly versions     '2.6.0' ] ]
verbose about to build C:\node\node_modules\node-inspector
info unbuild C:\node\node_modules\node-inspector
verbose from cache C:\node\node_modules\node-inspector\package.json
info preuninstall node-inspector@0.2.0beta3
info uninstall node-inspector@0.2.0beta3
verbose unbuild node-inspector@0.2.0beta3 [ true, 'C:\\node\\node_modules', 'C:\\node\\node_modules' ]
verbose binRoot [ 'C:\\node', { 'node-inspector': './bin/inspector.js' } ]
info postuninstall node-inspector@0.2.0beta3
verbose mkdir (expected) error ENOENT, stat 'C:\Users\TMNUWA~1\AppData\Local\Temp\npm-1350396038472'
verbose mkdir (expected) error ENOENT, stat 'C:\Users\TMNUWA~1\AppData\Local\Temp\npm-1350396038472\1350396038472-0.1267407638952136'
verbose mkdir done: C:\Users\TMNUWA~1\AppData\Local\Temp\npm-1350396038472\1350396038472-0.1267407638952136 755
verbose fetch to C:\Users\TMNUWA~1\AppData\Local\Temp\npm-1350396038472\1350396038472-0.1267407638952136\tmp.tgz
verbose mkdir done: C:\Users\TMNUWA~1\AppData\Local\Temp\npm-1350396038472\1350396038472-0.1267407638952136 755
http GET https://registry.npmjs.org/socket.io/-/socket.io-0.9.10.tgz
ERR! Error: No compatible version found: connect@'>=1.8.5- <1.9.0-'
ERR! Valid install targets:
ERR! [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4"",""2.3.5"",""2.3.6"",""2.3.7"",""1.9.2"",""2.3.8"",""2.3.9"",""2.4.0"",""2.4.1"",""2.4.2"",""2.4.3"",""2.4.4"",""2.4.5"",""2.4.6"",""2.5.0"",""2.6.0""]
ERR!     at installTargetsError (C:\node\node_modules\npm\lib\cache.js:488:10)
ERR!     at next_ (C:\node\node_modules\npm\lib\cache.js:438:17)
ERR!     at next (C:\node\node_modules\npm\lib\cache.js:415:44)
ERR!     at C:\node\node_modules\npm\lib\cache.js:408:5
ERR!     at saved (C:\node\node_modules\npm\lib\utils\npm-registry-client\get.js:150:7)
ERR!     at C:\node\node_modules\npm\node_modules\graceful-fs\graceful-fs.js:231:7
ERR!     at Object.oncomplete (fs.js:297:15)
ERR! You may report this log at:
ERR!     <http://github.com/isaacs/npm/issues>
ERR! or email it to:
ERR!     npm-@googlegroups.com
ERR! 
ERR! System Windows_NT 6.0.6001
ERR! command ""C:\node\\node.exe"" ""C:\node\node_modules\npm\bin\npm-cli.js"" ""install"" ""-g"" ""node-inspector""
ERR! cwd C:\node\dev
ERR! node -v v0.8.12
ERR! npm -v 1.1.9
ERR! message No compatible version found: connect@'>=1.8.5- <1.9.0-'
ERR! message Valid install targets:
ERR! message [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4"",""2.3.5"",""2.3.6"",""2.3.7"",""1.9.2"",""2.3.8"",""2.3.9"",""2.4.0"",""2.4.1"",""2.4.2"",""2.4.3"",""2.4.4"",""2.4.5"",""2.4.6"",""2.5.0"",""2.6.0""]
verbose exit [ 1, true ]
",tmnuwan12,googlegroups
130,2013-03-30 20:50:12,"Hi @dannycoates,

Why this issue is closed now? is there a fix for this already? 

@ravi sending the USR1 signal does not work, that was my first guess. Option #2 really not an option.
",mexpolk,dannycoates
130,2014-05-02 04:13:03,"In which, @bnoordhuis posted a temporary workaround: https://github.com/joyent/node/issues/5318#issuecomment-16702390
",jpillora,bnoordhuis
126,2012-11-29 09:37:50,"Any comments? @dannycoates
",corpix,dannycoates
126,2013-03-22 09:36:02,"I wonder whether @isaacs or @piscisaureus might be able to think of someone that could take the project over; this is one of the best debugging tools for NodeJS, it'd be a massive shame to see it die.
",Siyfion,piscisaureus
126,2013-03-22 09:36:02,"I wonder whether @isaacs or @piscisaureus might be able to think of someone that could take the project over; this is one of the best debugging tools for NodeJS, it'd be a massive shame to see it die.
",Siyfion,isaacs
115,2012-07-02 07:25:00,"@sdolard I've tried with `sudo npm install -g connect async`, but got no luck, the debug page just shows nothing, however that node thread seems stay as been hooked up.
",imcotton,sdolard
115,2012-07-02 07:53:12,"@sdolard That's exactly the order I've been following, I think it's might be caused by this new version of Chrome? Right now the debugging page only shows blank with one odd search bar on top of it.
",imcotton,sdolard
115,2012-07-09 22:03:57,"Not working on Ubuntu 10.04, gives the following:
npm http GET https://registry.npmjs.org/node-inspector
npm http 200 https://registry.npmjs.org/node-inspector
npm http GET https://registry.npmjs.org/node-inspector/-/node-inspector-0.2.0beta3.tgz
npm http GET https://registry.npmjs.org/connect
npm http GET https://registry.npmjs.org/async
npm http GET https://registry.npmjs.org/socket.io
npm http 304 https://registry.npmjs.org/connect
npm http 304 https://registry.npmjs.org/async
npm ERR! Error: No compatible version found: connect@'>=1.8.5- <1.9.0-'
npm ERR! Valid install targets:
npm ERR! [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4"",""2.3.5"",""2.3.6"",""2.3.7"",""1.9.2""]
npm ERR!     at installTargetsError (/usr/local/lib/node_modules/npm/lib/cache.js:506:10)
npm ERR!     at next_ (/usr/local/lib/node_modules/npm/lib/cache.js:452:17)
npm ERR!     at next (/usr/local/lib/node_modules/npm/lib/cache.js:427:44)
npm ERR!     at /usr/local/lib/node_modules/npm/lib/cache.js:419:5
npm ERR!     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:136:7)
npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:230:7
npm ERR!     at Object.oncomplete (fs.js:297:15)
npm ERR!  [Error: No compatible version found: connect@'>=1.8.5- <1.9.0-'
npm ERR! Valid install targets:
npm ERR! [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4"",""2.3.5"",""2.3.6"",""2.3.7"",""1.9.2""]]
npm ERR! You may report this log at:
npm ERR!     <http://github.com/isaacs/npm/issues>
npm ERR! or email it to:
npm ERR!     npm-@googlegroups.com

npm ERR! System Linux 3.0.0-16-virtual
npm ERR! command ""/usr/local/bin/node"" ""/usr/local/bin/npm"" ""install"" ""node-inspector""
npm ERR! cwd /portico/node/mqtt-broker
npm ERR! node -v v0.8.0
npm ERR! npm -v 1.1.32
npm ERR! message No compatible version found: connect@'>=1.8.5- <1.9.0-'
npm ERR! message Valid install targets:
npm ERR! message [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4"",""2.3.5"",""2.3.6"",""2.3.7"",""1.9.2""]
npm http 200 https://registry.npmjs.org/socket.io
npm ERR! 
npm ERR! Additional logging details can be found in:
npm ERR!     /portico/node/mqtt-broker/npm-debug.log
npm ERR! not ok code 0
ubuntu@ip-10-226-90-239:/portico/node/mqtt-broker$ sudo npm install -g node-inspector
npm http GET https://registry.npmjs.org/node-inspector
npm http 304 https://registry.npmjs.org/node-inspector
npm http GET https://registry.npmjs.org/socket.io
npm http GET https://registry.npmjs.org/connect
npm http GET https://registry.npmjs.org/async
npm http 304 https://registry.npmjs.org/socket.io
npm http 304 https://registry.npmjs.org/connect
npm http 304 https://registry.npmjs.org/async
npm ERR! Error: No compatible version found: connect@'>=1.8.5- <1.9.0-'
npm ERR! Valid install targets:
npm ERR! [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4"",""2.3.5"",""2.3.6"",""2.3.7"",""1.9.2""]
npm ERR!     at installTargetsError (/usr/local/lib/node_modules/npm/lib/cache.js:506:10)
npm ERR!     at next_ (/usr/local/lib/node_modules/npm/lib/cache.js:452:17)
npm ERR!     at next (/usr/local/lib/node_modules/npm/lib/cache.js:427:44)
npm ERR!     at /usr/local/lib/node_modules/npm/lib/cache.js:419:5
npm ERR!     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:136:7)
npm ERR!     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:230:7
npm ERR!     at Object.oncomplete (fs.js:297:15)
npm ERR!  [Error: No compatible version found: connect@'>=1.8.5- <1.9.0-'
npm ERR! Valid install targets:
npm ERR! [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4"",""2.3.5"",""2.3.6"",""2.3.7"",""1.9.2""]]
npm ERR! You may report this log at:
npm ERR!     <http://github.com/isaacs/npm/issues>
npm ERR! or email it to:
npm ERR!     npm-@googlegroups.com

npm ERR! System Linux 3.0.0-16-virtual
npm ERR! command ""/usr/local/bin/node"" ""/usr/local/bin/npm"" ""install"" ""-g"" ""node-inspector""
npm ERR! cwd /portico/node/mqtt-broker
npm ERR! node -v v0.8.0
npm ERR! npm -v 1.1.32
npm ERR! message No compatible version found: connect@'>=1.8.5- <1.9.0-'
npm ERR! message Valid install targets:
npm ERR! message [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4"",""2.3.5"",""2.3.6"",""2.3.7"",""1.9.2""]
npm ERR! 
npm ERR! Additional logging details can be found in:
npm ERR!     /portico/node/mqtt-broker/npm-debug.log
npm ERR! not ok code 0
",radekg,googlegroups
113,2012-06-28 11:21:31,"c:\Program Files\nodejs>npm install -g node-inspector
npm http GET https://registry.npmjs.org/node-inspector
npm http 200 https://registry.npmjs.org/node-inspector
npm http GET https://registry.npmjs.org/node-inspector/-/node-inspector-0.2.0bet
a3.tgz
npm http GET https://registry.npmjs.org/socket.io
npm http GET https://registry.npmjs.org/async
npm http GET https://registry.npmjs.org/connect
npm http 304 https://registry.npmjs.org/connect
npm ERR! Error: No compatible version found: connect@'>=1.8.5- <1.9.0-'
npm ERR! Valid install targets:
npm ERR! [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1
"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1
"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.
0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4""]
npm ERR!     at installTargetsError (c:\Program Files\nodejs\node_modules\npm\li
b\cache.js:506:10)
npm ERR!     at next_ (c:\Program Files\nodejs\node_modules\npm\lib\cache.js:452
:17)
npm ERR!     at next (c:\Program Files\nodejs\node_modules\npm\lib\cache.js:427:
44)
npm ERR!     at c:\Program Files\nodejs\node_modules\npm\lib\cache.js:419:5
npm ERR!     at saved (c:\Program Files\nodejs\node_modules\npm\node_modules\npm
-registry-client\lib\get.js:136:7)
npm ERR!     at c:\Program Files\nodejs\node_modules\npm\node_modules\graceful-f
s\graceful-fs.js:230:7
npm ERR!     at Object.oncomplete (fs.js:297:15)
npm ERR!  [Error: No compatible version found: connect@'>=1.8.5- <1.9.0-'
npm ERR! Valid install targets:
npm ERR! [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0"",""0.2.1
"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0"",""0.5.1
"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.10"",""1.0.
0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4""]]
npm ERR! You may report this log at:
npm ERR!     <http://github.com/isaacs/npm/issues>
npm ERR! or email it to:
npm ERR!     npm-@googlegroups.com

npm ERR! System Windows_NT 6.1.7600
npm ERR! command ""c:\Program Files\nodejs\\node.exe"" ""c:\Program Files\nod
ejs\node_modules\npm\bin\npm-cli.js"" ""install"" ""-g"" ""node-inspector""
npm ERR! cwd c:\Program Files\nodejs
npm ERR! node -v v0.8.0
npm ERR! npm -v 1.1.32
npm ERR! message No compatible version found: connect@'>=1.8.5- <1.9.0-'
npm ERR! message Valid install targets:
npm ERR! message [""0.0.1"",""0.0.2"",""0.0.3"",""0.0.4"",""0.0.5"",""0.0.6"",""0.1.0"",""0.2.0
"",""0.2.1"",""0.2.2"",""0.2.3"",""0.2.4"",""0.2.5"",""0.2.6"",""0.2.7"",""0.3.0"",""0.4.0"",""0.5.0
"",""0.5.1"",""0.5.2"",""0.5.3"",""0.5.4"",""0.5.5"",""0.5.6"",""0.5.7"",""0.5.8"",""0.5.9"",""0.5.1
0"",""1.0.0"",""1.0.1"",""2.2.2"",""2.3.0"",""2.3.1"",""2.3.2"",""2.3.3"",""1.9.1"",""2.3.4""]
npm http 200 https://registry.npmjs.org/socket.io
npm http GET https://registry.npmjs.org/socket.io/-/socket.io-0.9.6.tgz
npm http 200 https://registry.npmjs.org/async
npm http GET https://registry.npmjs.org/async/-/async-0.1.22.tgz
npm ERR!
npm ERR! Additional logging details can be found in:
npm ERR!     c:\Program Files\nodejs\npm-debug.log
npm ERR! not ok code 0

c:\Program Files\nodejs>

I'm using node version ""0.8.0"" on windows box.
",Mirodil,googlegroups
113,2012-06-29 11:17:07,"if i use command 

npm install -g git://github.com/memcap/node-inspector.git

 than i get the following:

C:\Program Files\nodejs>npm install -g git://github.com/memcap/node-inspector.gi
t
npm ERR! git clone git://github.com/memcap/node-inspector.git CreateProcessW: ??
 ??????? ????? ????????? ????.
npm ERR! Error: `git ""clone"" ""git://github.com/memcap/node-inspector.git"" ""C:\\U
sers\\JSERVER2\\AppData\\Local\\Temp\\npm-1340968555875\\1340968555875-0.0164812
39814311266""` failed with 127
npm ERR!     at ChildProcess.<anonymous> (C:\Program Files\nodejs\node_modules\n
pm\lib\utils\exec.js:56:20)
npm ERR!     at ChildProcess.EventEmitter.emit (events.js:91:17)
npm ERR!     at Process._handle.onexit (child_process.js:674:10)
npm ERR!  [Error: `git ""clone"" ""git://github.com/memcap/node-inspector.git"" ""C:\
\Users\\JSERVER2\\AppData\\Local\\Temp\\npm-1340968555875\\1340968555875-0.01648
1239814311266""` failed with 127]
npm ERR! You may report this log at:
npm ERR!     http://github.com/isaacs/npm/issues
npm ERR! or email it to:
npm ERR!     npm-@googlegroups.com

npm ERR! System Windows_NT 6.1.7600
npm ERR! command ""C:\Program Files\nodejs\\node.exe"" ""C:\Program Files\nod
ejs\node_modules\npm\bin\npm-cli.js"" ""install"" ""-g"" ""git://github.com/memcap
/node-inspector.git""
npm ERR! cwd C:\Program Files\nodejs
npm ERR! node -v v0.8.0
npm ERR! npm -v 1.1.32
npm ERR! message `git ""clone"" ""git://github.com/memcap/node-inspector.git"" ""C:\\
Users\\JSERVER2\\AppData\\Local\\Temp\\npm-1340968555875\\1340968555875-0.016481
239814311266""` failed with 127
npm ERR!
npm ERR! Additional logging details can be found in:
npm ERR!     C:\Program Files\nodejs\npm-debug.log
npm ERR! not ok code 0

C:\Program Files\nodejs>
",Mirodil,googlegroups
109,2012-06-19 09:30:39,"npm http 304 https://registry.npmjs.org/zeparser/0.0.5
    npm http 304 https://registry.npmjs.org/commander
    npm http 304 https://registry.npmjs.org/options
    npm http GET https://registry.npmjs.org/options/-/options-0.0.3.tgz
    npm http 304 https://registry.npmjs.org/tinycolor
    npm http GET https://registry.npmjs.org/tinycolor/-/tinycolor-0.0.1.tgz
    npm ERR! TypeError: Cannot call method 'trim' of undefined
    npm ERR!     at readmeDescription (/usr/lib/node_modules/npm/node_modules/read-package-json/read-json.js:217:42)
    npm ERR!     at final (/usr/lib/node_modules/npm/node_modules/read-package-json/read-json.js:297:33)
    npm ERR!     at /usr/lib/node_modules/npm/node_modules/read-package-json/read-json.js:115:33
    npm ERR!     at cb (/usr/lib/node_modules/npm/node_modules/slide/lib/async-map.js:48:11)
    npm ERR!     at /usr/lib/node_modules/npm/node_modules/read-package-json/read-json.js:234:40
    npm ERR!     at [object Object].<anonymous> (fs.js:123:5)
    npm ERR!     at [object Object].emit (events.js:64:17)
    npm ERR!     at fs.js:1190:12
    npm ERR!     at Object.oncomplete (/usr/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:94:5)
    npm ERR!  [TypeError: Cannot call method 'trim' of undefined]
    npm ERR! You may report this log at:
    npm ERR!     http://github.com/isaacs/npm/issues
    npm ERR! or email it to:
    npm ERR!     npm-@googlegroups.com


",ijse,googlegroups
108,2013-09-02 09:34:21,"@dannycoates in the case where the server has crashed and is brought back up, is there a way for `node-inspector` to detect that the server has been restarted and resume debugging, so you don't have to reload the page to start debugging again?
",spikebrehm,dannycoates
84,2012-02-17 09:57:52,"NPM install for node-inspector does not work. It gives error unable to find in registry. Log attached 

npm http GET https://registry.npmjs.org/node-inspector

npm ERR! Error: failed to fetch from registry: node-inspector
npm ERR!     at /usr/local/lib/node_modules/npm/lib/utils/npm-registry-client/get.js:139:12
npm ERR!     at cb (/usr/local/lib/node_modules/npm/lib/utils/npm-registry-client/request.js:32:9)
npm ERR!     at Request._callback (/usr/local/lib/node_modules/npm/lib/utils/npm-registry-client/request.js:137:18)
npm ERR!     at Request.callback (/usr/local/lib/node_modules/npm/node_modules/request/main.js:109:22)
npm ERR!     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/main.js:198:58)
npm ERR!     at Request.emit (events.js:88:20)
npm ERR!     at ClientRequest.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/main.js:195:10)
npm ERR!     at ClientRequest.emit (events.js:67:17)
npm ERR!     at CleartextStream.<anonymous> (http.js:1134:11)
npm ERR!     at CleartextStream.emit (events.js:67:17)
npm ERR! You may report this log at:
npm ERR!     http://github.com/isaacs/npm/issues
npm ERR! or email it to:
npm ERR!     npm-@googlegroups.com
npm ERR! 
npm ERR! System Linux 3.0.0-14-generic
npm ERR! command ""node"" ""/usr/local/bin/npm"" ""install"" ""-g"" ""node-inspector""
npm ERR! cwd /home/SERILOCAL/habib.virji/node
npm ERR! node -v v0.6.9
npm ERR! npm -v 1.1.0-3
npm ERR! message failed to fetch from registry: node-inspector
",habibvirji,googlegroups
62,2011-09-07 19:20:14,"@fprijate awesome thanks! Hopefully @felixge will land your patch from https://github.com/felixge/node-paperboy/pull/13#issuecomment-1990519
",dannycoates,felixge
48,2011-07-01 16:10:20,"npm install -g node-inspector
npm info it worked if it ends with ok
npm info using npm@0.3.18
npm info using node@v0.4.8
npm ERR! couldn't read package.json in .
npm ERR! Error installing .
npm ERR! Error: ENOENT, No such file or directory 'package.json'
npm ERR! Report this _entire_ log at http://github.com/isaacs/npm/issues
npm ERR! or email it to npm-@googlegroups.com
npm ERR! Just tweeting a tiny part of the error will not be helpful.
npm ERR! System Darwin 10.7.0
npm ERR! argv { remain: [],
npm ERR! argv   cooked: 
npm ERR! argv    [ 'install',
npm ERR! argv      '-g',
npm ERR! argv      'node-inspector' ],
npm ERR! argv   original: 
npm ERR! argv    [ 'install',
npm ERR! argv      '-g',
npm ERR! argv      'node-inspector' ] }
npm not ok
",ryonlife,googlegroups
33,2011-07-21 12:50:11,"@fngass: Sounds great. Could you add a pull request?
",ligaard,fngass
