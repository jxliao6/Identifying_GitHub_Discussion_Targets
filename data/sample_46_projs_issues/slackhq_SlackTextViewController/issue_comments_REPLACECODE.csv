issue_num,datetime,body,login,close_date
589,2017-03-27 21:58:02,"Hi,

I want to limit the amount of characters the user can type in the input bar. I know the library provides a character-counter, but I just wanna implement a limit, so that if a certain amount of characters is reached, the user can't type more characters.
Normally I would do that over the UITextField/UITextView delegate methods, but I can't find them in the  library, and the code for the textview is spread across many files.

Does the library perhaps offer something like this or if not, how can I implement that delegate method? I would use _shouldChangeCharactersInRange_ for that.

Thanks a lot in advance! :)",renshaw1,
588,2017-03-23 23:07:20,"* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've searched for any related issues and avoided creating a duplicate issue.

#### Description
I want to work with the leftButton and show it. 

I set 
`self.leftButton.setImage(UIImage(named: ""uploadic""), for: UIControlState())`
 
but no leftButton appears. 
Are there further Steps TODO?
Can´t find anything in documentation or example

",develth,
587,2017-03-23 14:06:54,"* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've searched for any related issues and avoided creating a duplicate issue.

#### Description
Inside the textview write any emoji (like :smile:) then press ""enter"" (new line) once, than twice, than third time. 

Emoji will appear, then disappear, then appear again.

#### Reproducible in:
* [ ] This is reproducible in the sample project.
SlackTextViewController version: 1.9.5
iOS version(s): 10.2
Device(s): iPhone 6s

#### Steps to reproduce:

1. Inside the textview write any emoji (like :smile:) press ""enter"" (new line) once, than twice, than third time. 
2. press ""enter""
3. press ""enter""
4. press ""enter""

### Expected result:
Emoji should appear at the ""text box"" all the time

### Actual result:
Emoji will appear, then disappear, then appear again.

### Attachments:
<img src=""https://cloud.githubusercontent.com/assets/12018372/24251291/54297618-0fe2-11e7-9880-90b1554db782.gif"" width=""248"">





",oded-regev,
586,2017-03-20 23:35:13,"There were a few places in the README where a heading wasn't rendering correctly because there was a missing space between the `###` or `####` heading and the text within the heading.

* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
* [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
* [x] I've written tests to cover the new code and functionality included in this PR.
* [x] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).

#### PR Summary

Fixes formatting issues in the project's README.

#### Related Issues

N/A

#### Test strategy

N/A",aaronbrethorst,2017-03-20 23:35:42
586,2017-03-20 23:37:20,Thanks for that @aaronbrethorst 🙇. I just merged https://github.com/slackhq/SlackTextViewController/pull/585 fixing the same.,dzenbot,2017-03-20 23:35:42
586,2017-03-20 23:38:17,"@dzenbot yeah, I just noticed that another PR was opened with the same changes :) ",aaronbrethorst,2017-03-20 23:35:42
585,2017-03-20 16:12:25,"* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
* [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
* [x] I've written tests to cover the new code and functionality included in this PR.
* [x] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).

#### PR Summary
Fix markdown of README",nallwhy,2017-03-20 23:36:26
584,2017-03-18 20:23:36,"Hi,

Thanks for sharing this awesome library. 
I have a question though: In one scenario, I want to hide the whole inputbar on the bottom, while still using the SlackViewController.
Is that somehow possible? I tried things like _bringSubviewToFront_ and _textInputbar.hidden_, but it doesn't help.

Thanks in advance!",renshaw1,2017-03-19 00:14:37
584,2017-03-18 22:01:42,Please have a look at https://github.com/slackhq/SlackTextViewController#hideable-textinputbar,dzenbot,2017-03-19 00:14:37
584,2017-03-18 23:56:06,Thank you! 👍 ,renshaw1,2017-03-19 00:14:37
583,2017-03-17 06:32:59,"* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've searched for any related issues and avoided creating a duplicate issue.

#### Description
> e.g. Description of the bug or feature

#### Reproducible in:
* [ ] This is reproducible in the sample project.
SlackTextViewController version:
iOS version(s):
Device(s):

#### Steps to reproduce:

1. 
2. 
3. 

### Expected result:
> e.g. What you expected to happen

### Actual result:
> e.g. What actually happened

### Attachments:
> e.g. Logs, screenshots, screencast, sample project, funny gif, etc.


",adamsrosco,2017-03-17 10:22:44
583,2017-03-17 10:22:44,Non-issue.,adamsrosco,2017-03-17 10:22:44
582,2017-03-16 00:54:34,"Hi there, 

i added `SLKTextViewController` to my `BaseTableViewController` and set it up like in the docs. 
As soon as i add the 
<S_CODE_TOKEN>
to the BaseTableViewController, my `self.navigationController` is nil.
How could i fix that?

Thanks & Cheers",develth,
581,2017-03-15 14:39:40,"* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've searched for any related issues and avoided creating a duplicate issue.

#### Description
I am trying to send edited messages from the rightButton, Although the rightButton always disappears when I activate the editing function, how to keep right button always on? is It possible to access the ""rightButtonWC"" to show the right button?
",nunesdennis,
580,2017-03-07 07:45:17,"Most of the time if the message has new lines it ends up partially hidden behind the keyboard. Any ideas how to fix that? 
@dzenbot 
![img_0576](https://cloud.githubusercontent.com/assets/13408859/23646721/fcb3363a-02c6-11e7-9415-145d7fd81651.PNG)
",yarodevuci,
580,2017-03-13 11:41:14,"hi @yarodevuci,

is this when the keyboard first pops up, or are you unable to scroll the message for it to appear fully in view?",adamsrosco,
580,2017-03-13 14:46:54,@adamsrosco That's when keyboard is up and I press send button. That's how new message appears,yarodevuci,
579,2017-03-06 10:44:28,"Hi! 

I'am using SLKTextInputbar with some other way -> after press left button on input bar i add as subview covered view with additional options buttons. One of there buttons remove my custom view and input bar works normally in standard way. There is great solution for me with extra option buttons but not work correctly in every case. Everything works well expect situation when inputbar is raised above the keyboard with my covered view then  **my custom buttons not receiving any actions.** Buttons icons  looks like everything work because change their tint color after press but not receiving IBActions. After resign responder and hide keyboard everything works back.  

",BBurzec,
579,2017-03-07 04:02:01,We've been experiencing a similar issue with our custom view. My guess is that the intrinsic size of the custom view is causing the touch events to not get passed to the subviews. I haven't spent much time trying to figure this bug out. Any contribution is very welcomed!,dzenbot,
578,2017-03-06 08:10:06,"Steps to reproduce:

* Enter text on iOS
* Select a range of text
* Touch screen in selected range, as if to move the blue start or end marker 

Result:
* The blue dots at the range start/end markers are clipped by the text box while the screen is touched

Expected result:
* The blue dots are not clipped, just as when the screen is not touched

![img_5618](https://cloud.githubusercontent.com/assets/888729/23411685/5a475b4e-fdd3-11e6-8b86-cddd68bdedd4.PNG)

Reference: https://github.com/EddyVerbruggen/cordova-plugin-native-keyboard/issues/25",vbraun,2017-03-07 09:19:16
578,2017-03-07 07:44:14,@vbraun Hi. What did you use to create gap between left and right message?,yarodevuci,2017-03-07 09:19:16
578,2017-03-07 08:00:27,"@yarodevuci not sure I understand your question, but this is the demo app that is in the https://github.com/EddyVerbruggen/cordova-plugin-native-keyboard repository.",vbraun,2017-03-07 09:19:16
578,2017-03-07 09:19:16,"Indeed, the selection handles are clipped when dragging, but this happens in many other apps, including Apple's Messages app. This is either a feature or a bug in UITextView.
Will close this for now as ""won't fix"".",dzenbot,2017-03-07 09:19:16
577,2017-03-05 23:32:15,"Hi all, and @dzenbot 
Can someone explain what is pipWindow for and how and for what purpose it can be used?
",yarodevuci,
576,2017-03-04 02:49:08,"Hello @dzenbot 
I am using below method to dismiss keyboard; However, if I am unable to use autocompletion because when I try to scroll on autocompletion view it triggers scrollViewWillBeginDragging func

Any solution to this? Thank you!

<S_CODE_TOKEN>


",yarodevuci,2017-03-04 02:55:32
576,2017-03-04 02:51:06,Check that the scrollView isn't the `autoCompletionView`. There's a few examples of this on the sample project.,dzenbot,2017-03-04 02:55:32
576,2017-03-04 02:53:39,"@dzenbot Could not find anything related to that. Could you please point more specifically? 
scrollView == autoCompletionView this?

Perfect! Thank you sir!!! Your super fast response is greatly appreciated! Cheers!",yarodevuci,2017-03-04 02:55:32
575,2017-03-02 13:37:03,"* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've searched for any related issues and avoided creating a duplicate issue.

#### Description
How can I add few right or left button?
",Qwertyk26,
575,2017-03-02 19:27:10,"You mean more buttons to the left and right? If that is the case, this is not supported but you should be able to customize a forked version to fit your needs.",dzenbot,
574,2017-02-26 16:08:09,Possible to have a label with username (instead of avatar)? The current project I'm working on requires a chat and doesn't have avatar support. ,happiehappie,2017-02-28 06:41:17
574,2017-02-28 06:41:17,"The tableview cells are not provided by the library. That layout it completly up to you. What you may see in the sample project, is just used as example.",dzenbot,2017-02-28 06:41:17
573,2017-02-23 07:43:33,"deinit is never called, however XCode memory profiler shows that it is not in memory anymore. Anyone facing the same problem?

deinit {
    print(""deinit is called"")
}",bingjiang,2017-02-23 08:11:17
573,2017-02-23 09:30:14,What was it after all?,dzenbot,2017-02-23 08:11:17
573,2017-02-24 11:06:45,"@bingjiang @dzenbot Yes I can confirm that deinit is not called. Any solution to this??
Why thread is closed??",yarodevuci,2017-02-23 08:11:17
573,2017-03-01 06:25:56,I don't seem to be able to reproduce this on the sample project. Make sure you are not having retain cycles of the SLKTextViewController.,dzenbot,2017-02-23 08:11:17
573,2017-03-01 06:44:50,@dzenbot Found the issue. Thank you,yarodevuci,2017-02-23 08:11:17
572,2017-02-20 12:05:42,Hello @dzenbot I would like to know if it possible to change top line of autoCompletion view?,yarodevuci,2017-03-01 06:55:43
572,2017-03-01 06:29:38,"This hairline is actually a private view called `autoCompletionHairline` added to the autoCompletion view, which inherits the tableView's `separatorColor`. So unless you want a different color than the `separatorColor`, it is currently not possible with public APIs.",dzenbot,2017-03-01 06:55:43
572,2017-03-01 06:43:51,@dzenbot  But it is possible to modify private file to change it ?,yarodevuci,2017-03-01 06:55:43
572,2017-03-01 06:50:35,"Well, this view is not public to the subclass, but you could still access it by doing:
<S_CODE_TOKEN>",dzenbot,2017-03-01 06:55:43
572,2017-03-01 06:54:41,"It's ok, I can modify the API.
`        _autoCompletionHairline.tintColor = [UIColor redColor];
`did not helped
@dzenbot  

        _autoCompletionHairline.backgroundColor = [UIColor redColor];
did the trick!! Thanks!",yarodevuci,2017-03-01 06:55:43
571,2017-02-17 07:46:32,"* [ ] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [ ] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've searched for any related issues and avoided creating a duplicate issue.

#### Description
",jaskiratSeraphic,2017-02-17 07:58:35
571,2017-02-17 07:58:35,"This library uses the Twitter keyboard by default. The APIs to change the keyboard are in the SDK, if you look for `.keyboardType` on any UITextInput object.",dzenbot,2017-02-17 07:58:35
571,2017-02-17 08:09:19,"@dzenbot thanks, I never used this type of keyboard..lol",jaskiratSeraphic,2017-02-17 07:58:35
570,2017-02-13 02:08:49,"Hi,

The sample project does not work when you add a tabbar control. I am on the master branch. I simply added a tab bar control to the sample project. The tab bar and control appears, but when I type in the input bar, nothing appears. I have the sample project, happy to upload it if it helps.

`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
    
    UITabBarController *tabBar = [[UITabBarController alloc] init];
    [tabBar.tabBar setBackgroundColor:[UIColor whiteColor]];
    [tabBar.tabBar setTintColor:[UIColor redColor]];
    [tabBar.tabBar setTranslucent:NO];
    tabBar.delegate = self;
    
    UINavigationController *messageViewController = [[UINavigationController alloc] initWithRootViewController:[MessageViewController new]];

    [tabBar setViewControllers:@[messageViewController]];
    
    
    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
    self.window.backgroundColor = [UIColor whiteColor];
    
    self.window.rootViewController = tabBar;
    [self.window makeKeyAndVisible];
    
    return YES;
}
`
-R ",electic,
570,2017-03-01 07:05:37,"There is an example of how this library works with `UITabBarController`, on the sample project.
![image](https://cloud.githubusercontent.com/assets/590579/23449241/57823f64-fe0a-11e6-9ea4-5fd18dfc2162.png)

Please provide your sample project for better understanding, if this is still an issue for you of course.",dzenbot,
569,2017-02-05 08:52:31,,yarodevuci,2017-02-17 14:08:03
569,2017-02-17 10:23:08,This library provides a View Controller which includes Slack's chat input bar. You are completely free to define the UI and behaviour of the message cells.,alexbredy,2017-02-17 14:08:03
569,2017-02-17 14:08:03,I couldb't have said it better. Thanks @alexbredy !,dzenbot,2017-02-17 14:08:03
568,2017-01-31 14:59:09,"* [ ] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [ ] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [ ] I've searched for any related issues and avoided creating a duplicate issue.

#### Description
> e.g. Description of the bug or feature

#### Reproducible in:
* [ ] This is reproducible in the sample project.
SlackTextViewController version:
iOS version(s):
Device(s):

#### Steps to reproduce:

1. 
2. 
3. 

### Expected result:
> e.g. What you expected to happen

### Actual result:
> e.g. What actually happened

### Attachments:
> e.g. Logs, screenshots, screencast, sample project, funny gif, etc.


",SLAMAKA,2017-01-31 14:59:17
567,2017-01-25 19:00:12,"* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've searched for any related issues and avoided creating a duplicate issue.

#### Description
I think it should be possible to inject our own UICollectionView instance, instead of just passing in a UICollectionViewLayout.

This makes it possible to use SlackTextViewController alongside other libraries like [IGListKit](https://github.com/Instagram/IGListKit)


#### How to add this feature
In my case, I just added a new initializer:
`- (instancetype)initWithCollectionView:(UICollectionView *)collectionView`

that does the same as:
`- (instancetype)initWithCollectionViewLayout:(UICollectionViewLayout *)layout`

but instead of making it's own collection view like the existing initializer does:
`_collectionView = [[UICollectionView alloc] initWithFrame:CGRectZero collectionViewLayout:layout];`

it uses the one passed in:
`_collectionView = collectionView;`

and also it doesn't set the collectionView's delegate and dataSource.

I then injected in my IGListCollectionView instance, and voilà, both libraries *seem to be* working together perfectly. ;)
",NinoScript,2017-03-01 06:59:53
567,2017-01-25 19:46:59,"As discussed with @dzenbot via slack, the `tableView`, `collectionView` and `scrollView` properties are just used to hold a strong reference and nothing more, so I can use `- (instancetype)initWithScrollView:(UIScrollView *)scrollView` and keep my own reference to the collectionView or override the getter for `collectionView` to return the one stored in `scrollView`.

It's kind of a hacky solution, but it is **a solution**.

> SlackTextController :heart: IGListKit",NinoScript,2017-03-01 06:59:53
567,2017-01-25 20:37:33,"If it makes it any easier, we're probably going to remove the `IGListCollectionView` requirement on IGListKit Instagram/IGListKit#409 soon.",rnystrom,2017-03-01 06:59:53
567,2017-03-01 06:59:53,"Closing this for now, since @NinoScript found a workaround 💪 ",dzenbot,2017-03-01 06:59:53
566,2017-01-25 18:45:00,"* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
* [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
* [x] I've written tests to cover the new code and functionality included in this PR.
* [x] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).

#### PR Summary
This commit will fix broken link in the ""Contributing at Slack"" file that should've pointed to the Code of Conduct file",NinoScript,2017-01-25 19:20:51
566,2017-01-25 19:20:35,Thank you!,dzenbot,2017-01-25 19:20:51
565,2017-01-25 06:08:00,"When the keyboard was presented right after a view controller presentation.
(i.e.: when dismissing a UIAlertController of action sheet type)

Should fix #507",dzenbot,2017-02-13 22:45:24
565,2017-01-25 06:19:07,"I was able to reproduce this on Slack iOS 9 app too!
![image](https://cloud.githubusercontent.com/assets/590579/22280033/1c1db89c-e283-11e6-9cd1-09890a3b4457.png)

",dzenbot,2017-02-13 22:45:24
564,2017-01-09 10:37:49,"hi. can you support customize textInputbar like facebook message for e.g.
* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've searched for any related issues and avoided creating a duplicate issue.

#### Description
> e.g. Description of the bug or feature

#### Reproducible in:
* [x] This is reproducible in the sample project.
SlackTextViewController version:
iOS version(s):
Device(s):",HieuLsw,2017-03-01 06:31:09
564,2017-03-01 06:31:09,"I'm sorry, but this feature is out of the scope of this project. Supporting this would require a significant refactor which is not a priority right now.",dzenbot,2017-03-01 06:31:09
563,2017-01-09 09:48:11,"In my project, I want to support to input attribute string. StatckOverFlow many answers says that we should change textview.text to attribute text manually.So, I changed them in textViewDidChange.

But, it not work well.I read your code and demo.In demo, text attrbutes only used in editText(SLKTextViewController),and then textview undo setText, finaly called super setAttributedText.

I have done all this in my project,it also not work.Which step missed?
",Lingyj,
563,2017-03-01 06:52:07,"I'm sorry, I'm not really following the question.
Please provide more concrete examples and references.",dzenbot,
562,2017-01-07 00:04:03,"The blue view is just an example of what could be added down there.
![image](https://cloud.githubusercontent.com/assets/590579/21736984/b4652c88-d429-11e6-8894-28a141d71c22.png)
",dzenbot,2017-01-10 03:31:53
561,2017-01-06 00:24:50,,dzenbot,2017-01-06 00:37:29
561,2017-01-06 00:37:16,LGTM,jason-winn,2017-01-06 00:37:29
560,2017-01-04 12:20:01,"* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've searched for any related issues and avoided creating a duplicate issue.

#### Description
If i set a UIView created from XIB in the tableViewHeader of a view controller that subclass SLKTextViewController i get wrong margin on the right.
If i use the same view loaded from XIB on the section header or on a tableviewheader of a normal tableview (not the one from the subclassed SLKTextViewController) i get the right margin.

#### Reproducible in:
* [x] This is reproducible in the sample project.
SlackTextViewController version: 1.9.5
iOS version(s): 10.2, 9.3.5
Device(s): iPhone 5, iPad 2, Simulator

#### Steps to reproduce:

1. Download the repo
2. Open the example Messenger workspace
3. Create a new Subclass of UIView named ""TestHeaderView""
3. Create a new View XIB file ""TestHeaderView""
4. Set the custom class ""TestHeaderView"" on the XIB
5. Add a UIView inside the XIB with some margin on the left and right side
6. Set a black background color to the added view
7. Set the Autoresizing of the View
![xib](https://cloud.githubusercontent.com/assets/1917105/21642009/c7b0bdda-d27f-11e6-8be8-5ec320c7093b.PNG)
8. Edit ""TestHeaderView.h""

<S_CODE_TOKEN>

9. Edit ""TestHeaderView.m""
<S_CODE_TOKEN>

10. Edit ""MessageViewController.m""
<S_CODE_TOKEN>

11. Launch
![simulator](https://cloud.githubusercontent.com/assets/1917105/21642022/d9bb18d6-d27f-11e6-93f6-15f7d750708f.PNG)

### Expected result:
Same margin on both side

### Actual result:
Wrong margin on the right side

",LightySnake,2017-03-01 06:48:51
560,2017-02-09 09:26:00,With autolayout i've fixed my problem but i don't understand why a plain UITableView does not create this problem but the one included in the SLKTextViewController yes,LightySnake,2017-03-01 06:48:51
560,2017-03-01 06:48:46,"I'm glad you solved it. I wouldn't know exactly why this could be happening, considering that the tableView instance on `SLKTextViewController` doesn't really do much.",dzenbot,2017-03-01 06:48:51
559,2016-12-15 10:53:07,"Just downloaded code and run the project.
Build always fails with 'ld: library not found for -lLoremIpsum' error.",nitesh-borad,
558,2016-12-03 00:45:14,"#### Description
If you add a view to `self.view` and position it underneath the navigation bar, it should appear blurred underneath, as the nav bar is translucent. For some reason when using SlackTextViewController, it is not, it's as if there's nothing else underneath it.

#### Reproducible in:
SlackTextViewController version: 1.9.5
iOS version(s): 10.1 and 10.2 beta, possibly earlier versions
Device(s): iOS Simulator, iPhone 7

#### Steps to reproduce:

1. Download the repo
2. Open the example Messenger workspace
3. Open MessageViewController.m
4. Add the following code in `viewDidAppear`:
<S_CODE_TOKEN>
5. Run the Messenger-Programmatic target

### Expected result:
A big red area should appear blurred behind the navigation bar

### Actual result:
Red doesn't appear in the navigation bar despite the fact it is placed directly below it and the navigation bar is translucent

### Attachments:
![app](https://cloud.githubusercontent.com/assets/6282848/20855110/f06fd202-b8b6-11e6-939e-95b43ed0cd70.png)
<img width=""506"" alt=""view hierarchy"" src=""https://cloud.githubusercontent.com/assets/6282848/20855111/f087a878-b8b6-11e6-9d7c-d82bfad884a0.png"">

",hipwelljo,
558,2016-12-03 02:58:04,"If you click the arrow button at the top right, it appears as expected.

![simulator screen shot dec 2 2016 7 53 09 pm](https://cloud.githubusercontent.com/assets/6282848/20856334/a04098ee-b8c9-11e6-8fbb-ddc54a64e06b.png)
",hipwelljo,
558,2016-12-07 02:06:06,I have the same issue/question,danipralea,
558,2017-02-06 20:17:15,+1,stremblayiOS,
558,2017-03-01 06:42:36,"Very interesting observation! I was able to reproduce this, by adding that code snippet either in `viewDidLoad` and `viewDidAppear`. @hipwelljo did you end up finding the issue?

I would have though the `edgesForExtendedLayout` wasn't `all`. That would have explained it, but it's `all` by default and playing around with it doesn't help much. 
`extendedLayoutIncludesOpaqueBars` is set to `YES` internally in `SLKTextViewController` but this flag doesn't influence the translucency of the navigation bar.

I have sincerely no idea why this could be happening.",dzenbot,
558,2017-03-01 07:10:05,No I wasn't able to figure out why. I would still like it to be solved though. :),hipwelljo,
557,2016-11-25 19:44:45,"    self.textInputbar.maxCharCount = 256;

- (BOOL)textView:(SLKTextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text{
    
    if (self.textInputbar.limitExceeded){
        
            // Prevent crashing undo bug
            if(range.length + range.location > textView.text.length){
                return NO;
            }
            
            NSUInteger newLength = [textView.text length] + [text length] - range.length;
            return newLength <= 200;

    }
    
    return [super textView:textView shouldChangeTextInRange:range replacementText:text];
}

",modLX4,
556,2016-11-17 05:46:43,"I developed a chat bot for slack using Hubot and sending/receiving messages is working fine. But when I receive message from the chat bot, the message does not scroll up to end. It only shows the first line.
What was the problem?

",Mahbubur-Rahman,2016-11-17 17:11:30
556,2016-11-17 17:11:30,"This library is only for building messaging applications on iOS. The screenshot you posted is in the desktop app, is that right?
In that case, please drop us a note and we can help diagnose the issue you're experiencing at slack.com/contact
",dzenbot,2016-11-17 17:11:30
555,2016-11-15 06:00:23,"This caused a state error where the menu would stop appearing after ""Format"" is
tapped but there were no items to display. slk_didHideMenuController: was never
called to reset self.formatting = NO because the menu never appeared.",kirb,2016-11-15 08:29:38
555,2016-11-15 08:29:34,"Good catch!
",dzenbot,2016-11-15 08:29:38
554,2016-11-15 05:12:17,"in Entering text the keyboard pops and everything rises up including navigation bar
how to avoid that?

Also sometimes textfield stays behind the keyboard - usually it happens when I am opening the view controller for the second or more time



thanks",gulzatique,
554,2016-12-06 17:11:31,"It's working fine, Can you please check are you using any third party keyboard handling library?",podilivinay,
554,2017-03-01 06:54:00,What version of the library are you using @gulzatique? Those bugs seem old.,dzenbot,
554,2017-03-03 11:35:24,"I get this issue too, my viewcontroller has no subview, fully empty and do as instruction. When i debug view hierarchy. I see my UILayoutContainerView has Position Y as -5 (It should be 0). So when the keyboard is toggled on, there is a space between that keyboard and textview ( i think that space's height is equal to 5, because the whole view has been shifted to 5 unit). 
Is it related to autoCorrection, because I turn it off and make the textview become first responder after the view appear
<S_CODE_TOKEN>",trmquang,
554,2017-03-06 03:33:38,And just 1 more note: my version is 1.9.5,trmquang,
553,2016-11-15 00:06:00,"* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've searched for any related issues and avoided creating a duplicate issue.

#### Description
I would like to know how to integrate an outlet table with other UI elements

#### Reproducible in:
* [x] This is reproducible in the sample project.
SlackTextViewController version: 1.9.5
iOS version(s): 9.0
Device(s): Simulator

#### Steps to reproduce:
I transitioned to SlackTextViewController from my own solution. I have some additional outlets, besides the table (custom title view), a gradient on top of the table

### Expected result:
Integrate other UI elements, besides just the table view

### Actual result:
The table is full screen and that's pretty much it

### Attachments:
Below

Other than that, I have the table scrolling insets and the frame badly set. Not sure if it's because of my setup (I have a hidden navigation bar)
![simulator screen shot 15 nov 2016 02 10 31](https://cloud.githubusercontent.com/assets/768893/20288008/f5cc2b56-aad8-11e6-843c-5f7ab1d9d865.png)

I tried playing with the constraints, but I only get really bad results.


",danipralea,
553,2016-11-23 13:02:20,Can anyone help please?,danipralea,
553,2016-11-23 19:24:30,"Hey @danipralea! This library wasn't designed to be that flexible, but instead, provide basic outlets that fit most needs. For a much more custom layout I would strongly encourage you to fork the project, and add these new controls in SLKTextViewController. Particularly, look at `slk_setupViewConstraints` and `slk_updateViewConstraints`. All controls are using auto-layout.",dzenbot,
553,2016-11-23 19:27:22,"Regarding your inset issue, have a look at `slk_topBarsHeight` and make sure your navigation bar's height is `0`. That must probably be the issue.",dzenbot,
553,2016-12-01 13:29:01,"Thanks for the response @dzenbot but if I add any other view via constraints, the constraints are somehow not activated. I have a custom title view for example, that I'm adding it and pinning it with layout constraints (same with a gradient view that comes below it):

The views (in the storyboard both have 384 width):
![screenshot 2016-12-01 15 19 51](https://cloud.githubusercontent.com/assets/768893/20795410/b0184096-b7d9-11e6-8d95-da219c263eb5.png)

The code:

<S_CODE_TOKEN>

But on an iPhone 7 Plus (which is bigger - 414 pixels), they don't resize up to the `self.view`'s width (same goes as for a join view as well):

![simulator screen shot 1 dec 2016 15 32 00](https://cloud.githubusercontent.com/assets/768893/20795734/54490e74-b7db-11e6-8ced-1d12ab9f61a7.png)

",danipralea,
553,2016-12-14 00:27:28,any ideas @dzenbot ?,danipralea,
552,2016-11-11 03:28:23,"Allows skipping the typing suggestion (aka Quick Type Bar) from being disabled when auto-completing mode is enabled. This includes both, auto-correction and spell checking.
This is particularly useful when attempting to reuse the auto-completion view for other purpose than auto-completion, like contextual assistance.",dzenbot,2016-11-11 03:33:40
551,2016-11-07 09:03:10,"Hi,

`slk_scrollToBottomAnimated` doesn't work properly. Actually I don't use invert mode, but I want to display the last row in the tableview. However it does not scroll exactly to the last row and there is some space between the last row and scroll position. How could I do this?",novinfard,
551,2017-03-07 07:47:53,"@novinfard I have similar issue, my message bubble is partially hidden behind keyboard after sending message",yarodevuci,
550,2016-11-06 23:32:35,"* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
* [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
* [ ] I've written tests to cover the new code and functionality included in this PR.
* [x] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).

#### PR Summary
Update SLKTextInputBar subviews constraints on text view content size change (for instance due to font change)

#### Related Issues
Fixes #543
",algrid,
549,2016-11-05 22:56:54,"* [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
* [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
* [ ] I've written tests to cover the new code and functionality included in this PR.
* [x] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).

#### PR Summary
Call registerClass earlier, otherwise default classes are used
 
#### Related Issues
Fixes #509 
",algrid,2016-11-19 08:12:35
548,2016-11-05 00:59:55,"* [X] I’ve read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [X] I’ve read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [X] I’ve searched for any related issues and avoided creating a duplicate issue.

#### Description
Is there any reason to stick to Cocoapods v. 0.39.0 (see [Gemfile](https://github.com/slackhq/SlackTextViewController/blob/f865d9318931d646ccda3f5a39757d124838d3fb/Gemfile#L3)) instead of using the latest version?

",ClementPadovani,
547,2016-11-05 00:24:24,"* [X] I’ve read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [X] I’ve read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [X] I’ve been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
* [X] I’ve a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
* [X] I’ve written tests to cover the new code and functionality included in this PR. **(N/A)**
* [X] I’ve read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).

#### PR Summary
Added the ability to set a text view’s (`SLTextView`) placeholder’s font.

#### Related Issues
Fixes #546 

#### Test strategy
Not really applicable…",ClementPadovani,2016-11-05 00:49:59
547,2016-11-05 00:36:24,"@dzenbot Thanks for the quick-reply. Sorry for the snafu, fixed with the last two commits!
",ClementPadovani,2016-11-05 00:49:59
547,2016-11-05 00:50:16,"👍 👍 
",dzenbot,2016-11-05 00:49:59
546,2016-11-05 00:23:55,"* [X] I’ve read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
* [X] I’ve read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
* [X] I’ve searched for any related issues and avoided creating a duplicate issue.

#### Description
Added the ability to set a text view’s (`SLTextView`) placeholder’s font.

Fixed with #547
",ClementPadovani,2016-11-05 00:49:59
545,2016-11-04 12:59:11,"Hey guys,

Anyone knows if `SlackTextViewController` helps with FPS rates? I'm having some issues in my chat app which is already manually implemented and I'm wondering if changing to `SlackTextViewController` would somehow improve the scrolling performance of my app.

Thank you in advance!


",filipealva,2016-11-04 20:46:49
545,2016-11-04 20:27:17,"This library doesn't really do much for improving scrolling performance tbh. You might want to have a look at [AsyncMessagesViewController](https://github.com/nguyenhuy/AsyncMessagesViewController), which combines SlackTextViewController and AsynDisplayKit.
",dzenbot,2016-11-04 20:46:49
545,2016-11-04 20:49:50,"Thank you! I will take a look 👍 
",filipealva,2016-11-04 20:46:49
544,2016-10-31 09:22:47,"I am looking for the best practice method for implementing load more when user reached the top of `UITableView` in ‍‍`SlackTextViewController`. 

What is your idea? 
Can I add some space to top of the tableview and show a text for load more?
As my `UITableView` is connected to `NSFetchedResultController` I can't add new virtual cell at the top of it.",novinfard,2016-11-02 07:49:20
544,2016-10-31 20:44:15,"You could use a footer or header view to show the button.
",dzenbot,2016-11-02 07:49:20
543,2016-10-28 03:24:11,"- [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
- [x] I've searched for any related issues and avoided creating a duplicate issue.
#### Description

I want to increase the font of the textView if there are only emojies typed into the textView, and make it small again, when the letter is typed into.  When the textView's font gets small again, the following happens: (Please see attachments)

You can see how Send button and left button are misplaced. Am I missing something to force them to be properly layouted or is this a bug? Have to mention, that when I remove the text, and Send button gets hidden, the left button get's back into the proper place.
#### Reproducible in:

SlackTextViewController version: 1.9.5
iOS version(s): 10.0.2
Device(s): iPhone 6s
#### Steps to reproduce:

I have this override function

<S_CODE_TOKEN>
#### Attachments

Before:

![img_3624](https://cloud.githubusercontent.com/assets/10225041/19793664/bd0e718e-9c9b-11e6-9d04-5655627cda31.PNG)

After:

![img_3623](https://cloud.githubusercontent.com/assets/10225041/19793648/8f5b6cf6-9c9b-11e6-8393-eb4cceaf0bc4.PNG)
",illyaBakurov,
542,2016-10-27 17:50:27,"Scrolls up the chat when the keyboard shows when uninverted.
",ZAndyL,2016-10-27 19:53:44
541,2016-10-26 08:27:57,"using cocoapod
version 1.9.5

I try to hide keyboard autocompletion with these code

<S_CODE_TOKEN>

or

<S_CODE_TOKEN>

but it both doesn't seem to work. I have no idea why. (See attach screenshot)

![screen shot 2559-10-26 at 3 22 08 pm](https://cloud.githubusercontent.com/assets/1732314/19718601/3cba2354-9b90-11e6-83b0-8b09060711d6.png)
",Amefuri,
541,2016-10-26 23:46:24,"This must be a bug in the library. We turn the auto correction on/off because of auto-completion feature. Look for `slk_enableTypingSuggestionIfNeeded`.
The code doesn't assume auto correction was completely disabled, it should.
",dzenbot,
540,2016-10-24 22:31:41,"- [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
- [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
- [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
- [ ] I've written tests to cover the new code and functionality included in this PR.
- [x] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).
#### PR Summary

Fix README inconsistency: The Obj-C example were different than the Swift one.
",filipealva,2016-10-24 22:34:46
539,2016-10-24 20:22:22,"Follow up on https://github.com/slackhq/SlackTextViewController/pull/532

When increasing the height constraint of a scrollview and calling layout on it, _adjustContentOffsetIfNecessary is called which adjusts the content offset so that there's no blank space at the bottom. When this happens, the content offset adjustment would happen twice, once by _adjustContentOffsetIfNecessary and once by the code in the block.

Have the adjustment be based on the contentOffset before any layout so that it remains accurate.
",ZAndyL,2016-10-24 21:00:19
538,2016-10-22 09:17:27,,dzenbot,2016-10-22 09:17:38
537,2016-10-22 09:06:01,,dzenbot,2016-10-22 09:06:08
536,2016-10-20 18:54:59,"- [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
- [x] I've searched for any related issues and avoided creating a duplicate issue.
#### Description

Typing a single emoji character into the text view, then tapping the right button (Send in the sample app), causes the text view font to change from system to a courier style font. This has been verified in the iOS Slack app as well.
#### Reproducible in:
- [x] This is reproducible in the sample project.
  SlackTextViewController version: 1.9.5
  iOS version(s): 10.0
  Device(s): All
#### Steps to reproduce:
1. Enter a single emoji in the sample app text view (only certain symbols will trigger the issue, ❤️, ☢️, ♒️ are examples that will cause it).
2. Tap 'Send'
3. Start typing in the text view. The font has changed to a courier style font. Tapping back with an empty text view and then returning to the messages view will cause the font to revert.
### Attachments:

![slktextview screenshot](https://cloud.githubusercontent.com/assets/729666/19573556/5d1a4200-96cc-11e6-9a71-e90747c8667f.png)
",je7db,
536,2016-10-22 08:57:22,"We've been seeing this too since iOS 10 came out, but didn't happen on the betas. Thanks for such a descriptive issue report. We will try to fix it but it almost feels like a UITextView issue so far.
",dzenbot,
536,2016-12-01 22:53:52,Was this fixed? I have a similar problem in my project.,enstulen,
536,2017-03-07 07:48:55,@dzenbot @enstulen @je7db Same thing happens with UI Label text ... No ideas so far? ,yarodevuci,
535,2016-10-19 09:15:05,"Hi when i use super.init(scrollView: asyncCollectionView) in a navigation controller the inputbar is first light grey and when the animation for seague is done is darker grey see screen:

<img width=""315"" alt=""bildschirmfoto 2016-10-19 um 11 12 11"" src=""https://cloud.githubusercontent.com/assets/157419/19512592/f4342114-95ec-11e6-91d4-f017899d87ee.png"">
your navigation example with tableview:
<img width=""318"" alt=""bildschirmfoto 2016-10-19 um 11 13 32"" src=""https://cloud.githubusercontent.com/assets/157419/19512647/2da2d9b8-95ed-11e6-8266-de30956c4152.png"">

it looks like the textInputbar is rendered twice or r duplicated?
",flashapplications,2016-10-19 17:16:46
535,2016-10-19 11:57:53,"Sorry for that i thougt it is only a problem when i use pushViewController at the moment... 
",flashapplications,2016-10-19 17:16:46
535,2016-10-19 17:16:46,"I don´t know why but when i wrap it into another viewcontroller it works fine ? :-)
",flashapplications,2016-10-19 17:16:46
534,2016-10-19 08:03:36,"I am wondering if it is possible to add a HMSegmentedControl inside the SLKTextInputbar above or below the super.textView? if so how?

Also is it possible to use SLKTextInputbar with autoCompletionView only, on a new view controller, not using SLKTextViewController? 

My project is in Swift using pods. Any examples would be awesome! 
",alexrmacleod,
533,2016-10-18 14:58:39,"- [ X] I've read and understood the [Contributing guidelines](./CONTRIBUTING.md) and have done my best effort to follow them.
- [X ] I've read and agree to the [Code of Conduct](./CODE_OF_CONDUCT.md).
- [X ] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
- [X ] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
- [X ] I've written tests to cover the new code and functionality included in this PR.
- [X ] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).
#### PR Summary

> There was a typo (""vien"" instead of ""view"") and the wording was a bit unclear.
#### Related Issues

> Did not open an issue
#### Test strategy

> No test needed, only comment updated
",jvbreen1,2016-10-18 15:00:08
532,2016-10-17 20:21:54,"Fixes #333
",ZAndyL,2016-10-17 21:07:38
531,2016-10-17 05:15:06,"- [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
- [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
- [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
  (https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).
#### PR Summary

Fix margin bottom on iOS 10
#### Related Issues

https://github.com/slackhq/SlackTextViewController/issues/515
#### Test strategy

You just need to change tableview cell to a custom class. There is a bottom margin until you bring up the keyboard first time.

https://github.com/slackhq/SlackTextViewController/issues/515
",cbedoy,
531,2016-12-18 14:36:42,This works. Please merge.,bradleymackey,
531,2017-03-07 07:56:49,"@dzenbot is this ever gonna be accepted?
",yarodevuci,
531,2017-03-10 19:29:14,"@yarodevuci it probably won't, unless someone explains why setting `AutomaticallyAdjustsScrollViewInsets` to `NO` works. I myself have no idea.",NinoScript,
531,2017-03-10 19:51:29,I second that @NinoScript ,dzenbot,
530,2016-10-16 04:41:45,"- [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
- [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
- [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
- [x] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).
#### PR Summary

Scroll up to current place when keyboard shows
#### Related Issues
#466
",zhubofei,2016-10-29 00:14:55
530,2016-10-16 04:44:52,"Flaws:
- There is still a magic number ""64"" in this solution. It is the height of the navbar. 
",zhubofei,2016-10-29 00:14:55
530,2016-10-18 00:25:52,"Fixes #466
",zhubofei,2016-10-29 00:14:55
530,2016-10-29 00:14:55,"#542 is much better than my solution. I'll just close this PR.
",zhubofei,2016-10-29 00:14:55
530,2016-10-29 00:15:55,"That's good to know. Thanks for the headups @zhubofei !
",dzenbot,2016-10-29 00:14:55
529,2016-10-13 08:57:31,"- [x] I've read and understood the [Contributing guidelines](./CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](./CODE_OF_CONDUCT.md).
- [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
- [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
- [x] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).
#### PR Summary

Scroll up to current place when keyboard shows
#### Related Issues

Try to fix #333
",zhubofei,2016-10-15 04:28:34
529,2016-10-15 19:10:38,"Why closing it? Did you find a workaround? Mind sharing?
",dzenbot,2016-10-15 04:28:34
529,2016-10-16 04:42:19,"I created a new PR with better solution.
",zhubofei,2016-10-15 04:28:34
528,2016-10-11 08:31:09,"- [X] I’ve read and understood the [Contributing guidelines](./CONTRIBUTING.md) and have done my best effort to follow them.
- [X] I’ve read and agree to the [Code of Conduct](./CODE_OF_CONDUCT.md).
- [X] I’ve been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
- [X] I’ve a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
- [X] I’ve written tests to cover the new code and functionality included in this PR.
- [X] I’ve read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).
#### PR Summary

> Based on the documentation, I’ve added nullability qualifiers.
#### Related Issues

> N/A
#### Test strategy

> N/A
",ClementPadovani,2016-10-12 07:26:51
527,2016-10-10 14:15:26,"I wanted to be able to use a custom NSTextStorage subclass with the input textView, so I added this in. 

This is probably an edge use-case, but it's optional to use, just like custom subclasses for the textView itself.

Regards,
Arvindh 
",arvindhsukumar,2016-10-18 17:19:37
527,2016-10-12 07:32:19,"Like you said, this is a pretty edge-case scenario. You could just create a SLKTextView subclass, which internally is created with your custom text storage and/or text manager. A user will unlikely swap text storages.
What do you think of this @jackywu07 ?
",dzenbot,2016-10-18 17:19:37
527,2016-10-18 17:17:36,"@dzenbot: Yes, I agree. I think a subclass of SLKTextView should be able to do the work.
@arvindhsukumar:  So a prototype work that I did required some customization of the input text view. I was able to achieve what you wanted to do by subclassing SLKTextView and swap with custom NSTextStorage/LayoutManager without any issue. 
",jackywu07,2016-10-18 17:19:37
527,2016-10-19 11:36:09,"Alright, thanks @jackywu07 @dzenbot 
",arvindhsukumar,2016-10-18 17:19:37
527,2016-10-19 16:36:45,"We appreciate the contribution tho! 💪 
",dzenbot,2016-10-18 17:19:37
526,2016-10-04 18:44:28,"Resolved. Thanks!
",markhao,2016-10-04 20:42:00
526,2016-10-06 02:39:41,"How did you fix it? Please share it, so others can benefit with it too 🙇 
",dzenbot,2016-10-04 20:42:00
525,2016-10-04 17:02:38,"What is the best was to debug this behaviour for that I can send you a better issue description? I am asking because this should be fixed with Version 9.4.
",headkit,2016-10-17 11:23:59
525,2016-10-04 17:11:21,"Please clone the repo, try the sample project and describe the steps to repro it.
Also, you can submit a PR and start a convo. That generally goes better 😉
",dzenbot,2016-10-17 11:23:59
525,2016-10-05 10:05:00,"Thank you for your kindness. But I can't reproduce. For me it seems that in my implementation the textinput does not recognize that it becomes firstResponder.

Maybe I miss something new in the initialization stage?

The only code I use here is

<S_CODE_TOKEN>

My class includes

`class MessageStreamViewController: SLKTextViewController, MyCallbackDelegate, MyProtocol, UIImagePickerControllerDelegate, UINavigationControllerDelegate {`
",headkit,2016-10-17 11:23:59
525,2016-10-05 10:12:51,"Neither the textInputbarDidMove is triggered nor the overridden didChangeKeyboardStatus does fire.
",headkit,2016-10-17 11:23:59
525,2016-10-05 13:18:04,"You should have access to the  lib's implementation, so you can break point it, do you? Try debugging it by following the code path of the keyboard notification events.
",dzenbot,2016-10-17 11:23:59
525,2016-10-07 17:30:49,"@headkit Do you by any chance override the method `func target(forAction action: Selector, 
 withSender sender: Any?) -> Any?` of SLKTextView? I modified the method to prevent ""select/copy/paste menu"" and screwed something up, when I removed the override it worked again. Spent my entire afternoon figuring it out...
",jpodcedensek,2016-10-17 11:23:59
525,2016-10-07 20:39:12,"@jpodcedensek hey, thanx for your thoughts on that - unfortunately I don't overwrite any SLKTextView methods at all. I am still diggin'...
",headkit,2016-10-17 11:23:59
525,2016-10-17 11:23:59,"strange - gone it is, working fine!
",headkit,2016-10-17 11:23:59
524,2016-10-02 10:33:31,"I have used the SLKTextInputbar separately in a view controller and not in the SLKTextViewController but it is not expanding automatically. Is there a way I can make it expand while typing?
",saina72,2016-10-02 10:38:14
524,2016-10-02 10:38:14,"This class is not intended to be used separately. Sorry, but I cannot help you there, as it is a combination of elements and techniques that make that expansion effect possible.
",dzenbot,2016-10-02 10:38:14
523,2016-09-29 06:01:42,"- [x] I've read and understood the [Contributing guidelines](./CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](./CODE_OF_CONDUCT.md).
- [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
- [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
- [x] I've written tests to cover the new code and functionality included in this PR.
- [x] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).
#### PR Summary

Update `CONTRIBUTING.md`:
- format markdown
- fix a typo: `preferrably` → `preferably`
- fix link to CoC
- fix link to Examples (URL is case-sensitive)
- fix link to CHANGELOG
#### Related Issues

N/A
#### Test strategy

View the [rendered page](https://github.com/cyhsutw/SlackTextViewController/blob/update-contributing.md/.github/CONTRIBUTING.md) on GitHub.
",cyhsutw,2016-09-29 06:04:15
523,2016-09-29 06:11:33,"@dzenbot No problem! It's all good 😄 
",cyhsutw,2016-09-29 06:04:15
522,2016-09-29 05:41:08,"- [x] I've read and understood the [Contributing guidelines](./CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](./CODE_OF_CONDUCT.md).
- [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
- [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
- [x] I've written tests to cover the new code and functionality included in this PR.
- [x] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).
#### PR Summary

Migrate the Swift example to new Swift 3 syntax, also update the `xcodeproj` so it can be used in Xcode 8.
#### Related Issues

N/A
#### Test strategy

Compile and run the `Messenger.app` using `Messenger-Swift` scheme.
#### Questions

Should we also update the project settings:

![warnings](https://cloud.githubusercontent.com/assets/1046917/18942274/558719ba-864a-11e6-82ba-0f2317daf29c.png)
",cyhsutw,2016-10-03 23:31:57
522,2016-10-03 23:30:01,"👍  Looks great. Thanks for doing this @cyhsutw!
",dzenbot,2016-10-03 23:31:57
522,2016-10-03 23:31:57,"This is now merged in master.
",dzenbot,2016-10-03 23:31:57
522,2016-10-03 23:34:43,"Thanks @dzenbot!
",cyhsutw,2016-10-03 23:31:57
521,2016-09-23 13:47:46,"I'm a little confused as to how to use this with a UIScrollView?

I have a UIViewcontroller setup on the storyboard and I've dropped the relevant code in to setup the textview, but the init method is never hit which is resulting in a default tableview being rendered and is over all of the content I have in my view.

I have tried everything I can think of and it wither renders a TableView or I get a crash with and error saying that I need to pass a valid ScrollView object (I guess because this is init the object hasn't been created yet so it's nil). 

Any help greatly appreciated. Thanks
",RNUK,2016-10-04 17:13:40
521,2016-09-23 15:33:00,"This is a good example as how the UIScrollView initialiser is used:
https://github.com/nguyenhuy/AsyncMessagesViewController/blob/master/Source/Controllers/AsyncMessagesViewController.swift

Keep in mind that all the controls are created programmatically. IB support is just for it to be used as a placeholder. I hope this helps.
",dzenbot,2016-10-04 17:13:40
521,2016-10-04 17:13:39,"Btw, init is never called if you are using view controller binded Interface Builder.
Closing this for now.
",dzenbot,2016-10-04 17:13:40
520,2016-09-21 06:47:08,"#### Description

Project is compiled on iOS 9 SDK with swift 2.1
App crashes randomly on send button action(DidPressRightButton). It's working fine on iOS 9 devices, random crashes on iOS 10 devices.

Here i have include the crash logs i got.

<S_CODE_TOKEN>
#### Reproducible in:

iOS version(s): iOS 10
#### Steps to reproduce:

There is no specific, It crashes randomly. 
",rajapandian-dev,2017-01-30 08:07:28
520,2016-10-18 18:31:48,"Everything was okay with ZipFileViewer.swift ?
",cbedoy,2017-01-30 08:07:28
520,2016-10-22 08:56:10,"The stack trace shows another tread than the main's, right?
It also seems you built a sample project? Mind sharing it to better understand the issue. I can not reproduce on the lib's sample project.
",dzenbot,2017-01-30 08:07:28
520,2017-01-17 12:39:31,@dzenbot we switched to latest iOS SDK/XCode. issue gone.,rajdev,2017-01-30 08:07:28
519,2016-09-19 14:54:40,"I am trying to get ""editText"" to function but whenever I call this function, the keyboard slides up but covers the ""inputView"" that is hanging at the bottom of the screen. However, if I click on the tableView to dismiss the keyboard and then click on the inputView that is on the bottom of the screen - Then it will now function properly and the keyboard will slide up along with the inputView.

What is going wrong here?

I have an actionSheet coming up after a long press on a cell that allows user to edit the cell. Once clicked on ""edit"" the ""editText"" function gets called.

Thanks in advanced!
",D34thStalker,2016-09-19 15:07:22
519,2016-09-19 15:11:41,"Why closing this? You sorted it out?
",dzenbot,2016-09-19 15:07:22
519,2016-09-19 16:01:11,"Sorry, Yes. I sorted it out by placing a performSelector onDelay to allow the action sheet close and allow the keyboard to slide up properly with the input view shortly after
",D34thStalker,2016-09-19 15:07:22
519,2016-09-19 16:02:19,"Are you using UIActionSheet?
",dzenbot,2016-09-19 15:07:22
519,2016-09-19 16:03:27,"Yes I am

On Mon, Sep 19, 2016 at 12:02 PM, Ignacio Romero Zurbuchen <
notifications@github.com> wrote:

> Are you using UIActionSheet?
> 
> —
> You are receiving this because you modified the open/close state.
> Reply to this email directly, view it on GitHub
> https://github.com/slackhq/SlackTextViewController/issues/519#issuecomment-248036182,
> or mute the thread
> https://github.com/notifications/unsubscribe-auth/AD4LSrQDRsLVFrM8NNcjx2GUz0naqKuMks5qrrISgaJpZM4KAlXU
> .

## 

Julius Btesh
_www.juliusbtesh.com http://www.juliusbtesh.com_
",D34thStalker,2016-09-19 15:07:22
519,2016-09-19 16:14:57,"That explains it. `UIActionSheet` has been flagged as deprecated since iOS8, and its behavior is somewhat different now, since it's a wrapper of `UIAlertController`. Try using the latter, if you can.
",dzenbot,2016-09-19 15:07:22
518,2016-09-18 07:34:52,"I ran into a strange bug where `self.isAutoCompleting` is set to NO and the foundPrefix and foundWord are nil, yet the auto-completion table view still shows with one empty roll. 

It seems like calling cancelAutoCompletion did not take effect because it checks the self.isAutoCompleting flag first. Still uncertain how we ended up in this stage, but I think as the name of the method `cancelAutoCompletion` implies, we should always force to cancel the auto completion menu.
",jackywu07,2016-10-04 01:34:20
518,2016-10-04 01:34:20,"Let's figure out a better way of doing this.
",dzenbot,2016-10-04 01:34:20
517,2016-09-17 16:43:37,"@Thanks for the great library. 
I have issue on input box [Textview]. When reached maxNumberOfLines, scrolling not happening. I'm not set any custom font for textview. 
Hope you got my issue. @dzenbot 
",RamdhaSOi,2016-09-23 23:51:54
517,2016-09-23 23:51:54,"@RamdhaSOi Please submit a new issue, following the issue guidelines with more context about the error you are facing.
",dzenbot,2016-09-23 23:51:54
516,2016-09-17 16:27:22,"Not the most important one.. but we could avoid a couple of redirects.. plus it's better for the crawlers :)

<img width=""232"" alt=""screen shot 2016-09-17 at 18 26 04"" src=""https://cloud.githubusercontent.com/assets/125676/18609522/5d619ab0-7d04-11e6-86ce-a3f5f7b52b04.png"">
",lipis,2016-09-21 19:10:57
516,2016-09-21 19:10:57,"Good point. Fixed!
",dzenbot,2016-09-21 19:10:57
516,2016-09-21 19:25:06,"while you are at it.. change the main URL of organization to point to https as well :) 
",lipis,2016-09-21 19:10:57
516,2016-09-21 19:26:08,"Not sure I'm following. Which URL?
",dzenbot,2016-09-21 19:10:57
516,2016-09-21 19:29:38,"![screenshot_20160921-212854](https://cloud.githubusercontent.com/assets/125676/18725921/7cb09baa-8042-11e6-8448-859d2b8a48b9.png)
",lipis,2016-09-21 19:10:57
516,2016-09-21 19:30:48,"Oh! Done and done!
",dzenbot,2016-09-21 19:10:57
516,2016-09-21 19:31:12,"awesome :)
",lipis,2016-09-21 19:10:57
516,2016-09-21 19:32:43,"even though you still have the www :)
",lipis,2016-09-21 19:10:57
516,2016-09-21 19:33:51,"You're sure? 😉
",dzenbot,2016-09-21 19:10:57
516,2016-09-21 19:52:04,":)
",lipis,2016-09-21 19:10:57
515,2016-09-16 04:55:47,"- [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
- [x] I've searched for any related issues and avoided creating a duplicate issue.
#### Description

Runs the project with iOS 10.0
#### Reproducible in:
- [x] This is reproducible in the sample project.
  iOS version(s): 10.0
  Device(s): iPhone 6S plus

Hi everyone I would like know if you are already working with support iOS 10, we're using your library into our project, but we detected that we have a bottom margin on the ChatView, also it's showing into your example project. I know that it's really new, but I would like know.

Any fast solution ?

![14374580_10210217936542674_1385732762_o](https://cloud.githubusercontent.com/assets/5570799/18575639/b4d3a560-7b9f-11e6-9960-2aa3c18b373b.jpg)

it looks like the margin is the same size of input bar
",cbedoy,
515,2016-10-04 01:00:32,"What version of the library are you using?
Also, are you using the `inverted` mode?

PS: Nice looking chat app btw!
",dzenbot,
515,2016-10-04 04:56:56,"Hi!

I'm using 1.9.4 version, with inverted mode.

I just see that you have a new release.

Notice: When the keyboard is showing and dismiss the bottom margin fixed
",cbedoy,
515,2016-10-04 04:59:11,"It would be helpful if you could repro this on the sample project.
",dzenbot,
515,2016-10-12 12:38:32,"Hi,
I have the same issue. iOS 10, 1.9.4 version, inverted mode. 
You just need to change tableview cell to a custom class. There is a bottom margin until you bring up the keyboard first time. 
",jderes,
515,2016-10-17 05:10:05,"@jderes @dzenbot 

I solved added the next lines on your viewWilAppear

 [self setAutomaticallyAdjustsScrollViewInsets:NO];
 [[self tableView] setContentInset:UIEdgeInsetsZero];
",cbedoy,
515,2016-10-18 18:22:53,"@cbedoy 
Thanks for your solution! Just setting `automaticallyAdjustsScrollViewInsets = false` in `viewWillAppear` in my SLKTextViewController subclass fixed this for me. I didn't need to reset the content inset as well.
",soleares,
515,2016-10-18 18:30:45,"I sent a pull request with that fixed on

https://github.com/slackhq/SlackTextViewController/pull/531
",cbedoy,
515,2016-10-18 20:28:54,"Thanks @cbedoy! Will have a look very soon.
",dzenbot,
515,2017-02-13 16:59:46,"Hey, I just wanted to say that this was also happening to me, and `automaticallyAdjustsScrollViewInsets = false` did fix it for me too.",NinoScript,
515,2017-02-20 11:11:22,yep did the trick for me as well.. ,yarodevuci,
515,2017-02-20 18:01:07,https://github.com/slackhq/SlackTextViewController/pull/531,cbedoy,
514,2016-09-16 00:21:27,"Update slk_cacheTextView calls that were breaking builds
",acandelaria1,2016-09-16 00:26:24
514,2016-09-16 00:22:36,"👍👍👍
",dzenbot,2016-09-16 00:26:24
513,2016-09-15 23:12:46,"Exposed slk_cacheTextView so that it can be used in cases where full view lifecycle is not called.
",acandelaria1,2016-09-15 23:28:01
513,2016-09-15 23:27:33,"👍 
",dzenbot,2016-09-15 23:28:01
512,2016-09-14 22:04:47,"This allows subclasses to use keyboard height to calculate scrolling offsets due to keyboard when not using inverted mode.
",ZAndyL,2016-09-16 17:42:46
512,2016-09-16 17:41:17,"👍 
",dzenbot,2016-09-16 17:42:46
511,2016-09-07 16:23:26,"Uses the new `editAttributedText:` method internally for `editText:`.
This helps reducing duplicated logic in 
",dzenbot,2016-09-07 23:27:22
511,2016-09-07 23:26:15,"👍 
",jackywu07,2016-09-07 23:27:22
510,2016-09-06 18:32:05,"- cache attributed text by default
- provide editAttributedText API
- send SLKTextViewSelectedRangeDidChange notification in setSelectedRange method.
",jackywu07,2016-09-06 19:42:07
510,2016-09-06 18:39:23,"👍 
",AhmedEid,2016-09-06 19:42:07
509,2016-09-02 17:03:20,"#### Description

Custom Typing Indicator does not display in sample project Swift example
#### Steps to reproduce:
1. In Examples/Messenger-Swift/MessageViewController.swift, set DEBUG_CUSTOM_TYPING_INDICATOR = true
2. Run Messenger Swift
3. Typing Indicator does not show when icn_typing is tapped
### Actual result:

It appear that the failure occurs in the simulateUserTyping function here:
           guard let view = self.typingIndicatorProxyView as? TypingIndicatorView else {
                return
            }
### Expected result:

The same process works fine in the Objective C (Messenger Programatic) version of the sample project.

Wondering if there is something basic I'm getting wrong with the Swift implementation of this.  Thanks!
",timothytclee,2016-11-19 08:12:35
509,2016-11-05 22:47:52,"It looks like 

<S_CODE_TOKEN>

is called too late and default class is used instead.
",algrid,2016-11-19 08:12:35
508,2016-09-01 08:00:10,"UITableview shrink if add last row because when inputBar's height changes if text input exceed 1 rows which also changes tableview's height constraint,which cause tableview's shrink horrible user experience.I recommend make tableview's bottom constraint relative to view and offset should be (keyboard height+input bar's initial height)  ,not (keyboard height+input bar's appropriate height,)
",peiweichen,
507,2016-08-30 20:39:44,"#### Description

When text input view is active (keyboard visible) and an action sheet is triggered and dismissed the text input bar is hidden behind they keyboard.
#### Reproducible in:
- [X] This is reproducible in the sample project.
  Also happens in official Slack app.
#### Steps to reproduce:
1. tap textview and enter some text
2. select (double tap) one word and wait for context menu (Cut, Copy, Paste)
3. select > in context menu and then tap on Share...
4. dismiss the share actionsheet by tapping Cancel
5. repeat steps if necessary (bug sometimes only happens after second or third try)

Same problem happens for all action sheets triggered while textView is first responder.
### Expected result:

UI should get restored correctly after actionsheets are dismissed.
### Actual result:

Keyboard shows up again (textView is first responder) but is hidden behind the keyboard
### Attachments:

![iphone 6s plus - iphone 6s plus ios 9 3 13e230 2016-08-30 14-35-38](https://cloud.githubusercontent.com/assets/1328724/18106074/43352394-6ebf-11e6-90ae-21472fc4eaed.png)
",RonnyFenrich,2017-02-13 22:45:24
507,2016-08-31 01:59:02,"Thanks for the detailed report. 💪 
Will have a look at this soon.
",dzenbot,2017-02-13 22:45:24
507,2016-10-28 05:37:43,"Is there any news on this bug?
I am having the same problem - text input is overlapped with the keyboard6 fctually textinput stays on the bottom it s not rising up

for the bug to appear I have to open the view with the slack stuff few times. As I am having a complex application I have many ways to reach the window with slackTextView and sometimes it does not appear even though it is on exact same UIViewController on the storyboard

thanks
",gulzatique,2017-02-13 22:45:24
507,2016-11-07 21:28:46,"It looks like it can be fixed by returning **true** from `forceTextInputbarAdjustment(for responder:)`, though I'm not really sure if there are any cases when you'd want false there.
",algrid,2017-02-13 22:45:24
507,2016-11-09 04:10:23,"algrid not helping
",gulzatique,2017-02-13 22:45:24
507,2017-01-24 19:00:49,@dzenbot Do we have an ETA on this bug fix?,arjunkrsna,2017-02-13 22:45:24
507,2017-01-25 00:41:21,"I was only able to reproduce this on iOS 9. With any version of iOS 10, this doesn't seem to happen. Is that correct for everyone?",dzenbot,2017-02-13 22:45:24
507,2017-01-25 16:21:24,@dzenbot I just did a quick test and also wasn't able to reproduce this anymore using iOS 10. Thanks,RonnyFenrich,2017-02-13 22:45:24
506,2016-08-29 18:28:06,"This is to create an API to allow end user to open autocompletion window with given prefix. Currently, we must set text to the text view.
",jackywu07,2016-08-29 19:49:47
506,2016-08-29 18:56:05,"👍 
",dzenbot,2016-08-29 19:49:47
505,2016-08-26 01:01:35,"- [x] I've read and understood the [Contributing guidelines](./CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](./CODE_OF_CONDUCT.md).
- [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
- [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
- [x] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).
#### PR Summary

Added property to allow the user to set how many lines of text `SLKTextView`'s placeholder should have.
#### Related Issues

This fixes issue #504.
",jedmund,2016-08-27 23:32:50
505,2016-08-26 14:16:03,"Thanks @jedmund.
Please complete the checklist and sign the CLA.
",dzenbot,2016-08-27 23:32:50
505,2016-08-27 04:04:58,"Done and done @dzenbot. Is the Travis CI build something I should worry about?

Thanks!
",jedmund,2016-08-27 23:32:50
505,2016-08-27 22:50:57,"Thanks @TosinAF! I knew something looked off. Added it back just now.
",jedmund,2016-08-27 23:32:50
505,2016-08-27 23:32:11,"Looks good!
Nice catch @TosinAF

@jedmund: The Travis CI is borken. I need to fix that thing (once more).
",dzenbot,2016-08-27 23:32:50
504,2016-08-25 13:39:44,"The placeholder label cuts off any text that would extend beyond one line. Looking deeper, this is because the `placeholderLabel`'s `numberOfLines` is hard-coded to 1.

I'd expect this to be set to 0 to allow multiple lines. I'm not using anywhere near as many of SlackTextViewController's features as others, so it's hard to tell if there are negative consequences to this somewhere else in the library.

I implemented my changes by adding a user-settable property for `numberOfLines` to give people options. This way, there's recourse if having unlimited placeholder lines breaks something else and default behavior can stay the same.

<S_CODE_TOKEN>

<S_CODE_TOKEN>

If there isn't something I'm overlooking, is this something that I can make a pull request for? Thanks!
",jedmund,2016-08-27 23:33:01
504,2016-08-25 17:41:42,"This looks great. Please do submit a PR.
",dzenbot,2016-08-27 23:33:01
503,2016-08-10 23:14:27,"Since we are now supporting attributed string API in text view, we probably need the attributed string support in text view controller as well.
",jackywu07,2016-08-29 18:26:49
502,2016-08-10 10:12:05,"Quick steps to reproduce:
- Set shakeToClearEnabled to YES
- Invoke a shake gesture
- Choose either Cancel or Undo
",rickrets,2016-08-29 20:40:33
502,2016-08-28 12:51:09,"After tapping on ""Cancel"" or ""Undo"", the text view becomes first responder again and the keyboard shows up, right?
",dzenbot,2016-08-29 20:40:33
502,2016-08-28 19:01:34,"The keyboard shows up yeah, but the text input bar won't move with it.
",rickrets,2016-08-29 20:40:33
502,2016-08-28 21:55:34,"Which version are you using?
iOS version?
",dzenbot,2016-08-29 20:40:33
502,2016-08-29 06:45:29,"1.9.4 using pods, iOS 9.3 with the simulator and the latest iOS version on iPhone 6 and iPhone 6 Plus.
",rickrets,2016-08-29 20:40:33
502,2016-08-29 07:03:38,"After pressing `Cancel` or `Undo` the code ends up here:

<S_CODE_TOKEN>

The currentResponder is a `UIAlertController`, so my guess is that I can fix it by overriding `forceTextInputbarAdjustmentForResponder:currentResponder` and return `YES` if it's a `UIAlertController`, but it seems wrong.
",rickrets,2016-08-29 20:40:33
502,2016-08-29 15:35:41,"Unfortunately, that's the way of doing it.
Here is how it's done in the sample project: https://github.com/slackhq/SlackTextViewController/blob/master/Examples/Messenger-Shared/MessageViewController.m#L366-L374
",dzenbot,2016-08-29 20:40:33
502,2016-08-29 20:40:33,"Jeez, how did I miss that. Thank you!
",rickrets,2016-08-29 20:40:33
501,2016-08-07 00:13:57,"We wanted to support attributed string in our SLKTextView to allow more stylization on the text we input. This PR will change SLKTextView to use NSAttributedString by default. To be backward compatible, all the original API will be preserved, and in places where we insert NSString for the text, the string will be converted into NSAttributedString without any attributes assigned to it.
There are additional API provided to allow ease of stylization. 
",jackywu07,2016-08-07 18:04:52
501,2016-08-07 08:55:03,"👍 nice, thank you for cleaning it up! should we merge this?
",jackywu07,2016-08-07 18:04:52
501,2016-08-07 15:33:09,"👍👍
",dzenbot,2016-08-07 18:04:52
500,2016-08-05 16:38:37,"Is it possible to add more options to the black UIMenuController that is shown when longpressing into the text input field? I'd like to add my own buttons with my own functionality.
",luzianscherrer,2016-08-28 12:30:03
500,2016-08-05 17:07:12,"Not right now, sorry. We do extend it internally.
The best way to do it right now would be forking the project and do it there.
",dzenbot,2016-08-28 12:30:03
500,2016-08-28 12:30:03,"Another alternative is to subclass `SLKTextView` and register that class wirh the view controller, and internally do all the appropriate overrides to add new options.
",dzenbot,2016-08-28 12:30:03
499,2016-08-03 05:35:01,"- [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
- [x] I've searched for any related issues and avoided creating a duplicate issue.
#### Description

I'm getting a EXC_BAD_ACCESS while runing the SLKTextViewController, the logs says:

 This application is modifying the autolayout engine from a background thread, which can lead to engine corruption and weird crashes.  This will cause an exception in a future release.

Maybe you don't already support the last version from iOS,  I attach the log and one screenshot.

Regards :)
#### Reproducible in:
- [x] This is reproducible in the sample project.
  SlackTextViewController version: Version 1.9.3
  iOS version(s): >= 9.0
  Device(s): Whatever iphone
#### Steps to reproduce:

Just run the project, or create another one that extends SLKTextViewController, with iOS Build 9.3
### Expected result:
### Actual result:

EXC_BAD_ACCESS
### Attachments:

 This application is modifying the autolayout engine from a background thread, which can lead to engine corruption and weird crashes.  This will cause an exception in a future release.
 Stack:(
    0   CoreFoundation                      0x000000011153af45 **exceptionPreprocess + 165
    1   libobjc.A.dylib                     0x0000000114fe6deb objc_exception_throw + 48
    2   CoreFoundation                      0x000000011153ae7d +[NSException raise:format:] + 205
    3   Foundation                          0x0000000114c17289 _AssertAutolayoutOnMainThreadOnly + 79
    4   Foundation                          0x0000000114a77cce -[NSISEngine withBehaviors:performModifications:] + 31
    5   UIKit                               0x000000011350ca4b -[UIView(AdditionalLayoutSupport) _withAutomaticEngineOptimizationDisabledIfEngineExists:] + 58
    6   UIKit                               0x000000011350d3cd -[UIView(AdditionalLayoutSupport) _updateConstraintsIfNeededAccumulatingViewsNeedingSecondPassAndViewsNeedingBaselineUpdate:forSecondPass:] + 154
    7   UIKit                               0x000000011350da31 __60-[UIView(AdditionalLayoutSupport) updateConstraintsIfNeeded]_block_invoke + 98
    8   Foundation                          0x0000000114a77d4a -[NSISEngine withBehaviors:performModifications:] + 155
    9   UIKit                               0x000000011350ca4b -[UIView(AdditionalLayoutSupport) _withAutomaticEngineOptimizationDisabledIfEngineExists:] + 58
    10  UIKit                               0x000000011350d58e -[UIView(AdditionalLayoutSupport) updateConstraintsIfNeeded] + 254
    11  UIKit                               0x000000011350e2a3 -[UIView(AdditionalLayoutSupport) _updateConstraintsAtEngineLevelIfNeeded] + 272
    12  UIKit                               0x0000000112cef332 -[UIView(Hierarchy) _updateConstraintsAsNecessaryAndApplyLayoutFromEngine] + 159
    13  UIKit                               0x0000000112cfee40 -[UIView(CALayerDelegate) layoutSublayersOfLayer:] + 710
    14  QuartzCore                          0x000000011615c59a -[CALayer layoutSublayers] + 146
    15  QuartzCore                          0x0000000116150e70 _ZN2CA5Layer16layout_if_neededEPNS_11TransactionE + 366
    16  UIKit                               0x0000000112ceeaa1 -[UIView(Hierarchy) layoutBelowIfNeeded] + 1083
    17  SlackTextViewController             0x0000000112a640ae -[SLKTextViewController textDidUpdate:] + 1246
    18  SlackTextViewController             0x0000000112a6abbe -[SLKTextViewController slk_didChangeTextViewContentSize:] + 238
    19  CoreFoundation                      0x000000011150777c __CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER** + 12
    20  CoreFoundation                      0x00000001115074bb _CFXRegistrationPost + 427
    21  CoreFoundation                      0x0000000111507222 ___CFXNotificationPost_block_invoke + 50
    22  CoreFoundation                      0x000000011154ca52 -[_CFXNotificationRegistrar find:object:observer:enumerator:] + 1986
    23  CoreFoundation                      0x0000000111402859 _CFXNotificationPost + 633
    24  Foundation                          0x0000000114a301e9 -[NSNotificationCenter postNotificationName:object:userInfo:] + 66
    25  SlackTextViewController             0x0000000112a5ca81 -[SLKTextView observeValueForKeyPath:ofObject:change:context:] + 369
    26  Foundation                          0x0000000114a36610 NSKeyValueNotifyObserver + 347
    27  Foundation                          0x0000000114a3583b NSKeyValueDidChange + 466
    28  Foundation                          0x0000000114a330af -[NSObject(NSKeyValueObservingPrivate) _changeValueForKey:key:key:usingBlock:] + 1176
    29  Foundation                          0x0000000114aad8dc _NSSetSizeValueAndNotify + 285
    30  UIKit                               0x00000001135e0cf0 -[UITextView _updateContentSize] + 263
    31  CoreFoundation                      0x000000011150777c __CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ + 12
    32  CoreFoundation                      0x00000001115074bb _CFXRegistrationPost + 427
    33  CoreFoundation                      0x0000000111507222 ___CFXNotificationPost_block_invoke + 50
    34  CoreFoundation                      0x000000011154ca52 -[_CFXNotificationRegistrar find:object:observer:enumerator:] + 1986
    35  CoreFoundation                      0x0000000111402859 _CFXNotificationPost + 633
    36  Foundation                          0x0000000114a301e9 -[NSNotificationCenter postNotificationName:object:userInfo:] + 66
    37  UIKit                               0x00000001135f5826 __64-[_UITextContainerView _setFrameOrBounds:oldRect:settingAction:]_block_invoke + 196
    38  UIKit                               0x00000001135f573e -[_UITextContainerView _setFrameOrBounds:oldRect:settingAction:] + 548
    39  UIKit                               0x00000001135f5b55 -[_UITextContainerView setFrame:] + 239
    40  UIKit                               0x00000001135e0a78 -[UITextView _resyncContainerFrameForNonAutolayoutDeferringSizeToFit:] + 652
    41  UIKit                               0x00000001135e12a4 -[UITextView _setFrameOrBounds:fromOldRect:settingAction:] + 495
    42  UIKit                               0x00000001135e16a3 -[UITextView setBounds:] + 239
    43  UIKit                               0x0000000112cea022 -[UIView(Geometry) _applyISEngineLayoutValues] + 417
    44  UIKit                               0x0000000112cea35c -[UIView(Geometry) _resizeWithOldSuperviewSize:] + 127
    45  UIKit                               0x0000000113583ad3 -[UIScrollView(_UIOldConstraintBasedLayoutSupport) _resizeWithOldSuperviewSize:] + 47
    46  CoreFoundation                      0x0000000111469a42 __53-[__NSArrayM enumerateObjectsWithOptions:usingBlock:]_block_invoke + 114
    47  CoreFoundation                      0x00000001114691bf -[__NSArrayM enumerateObjectsWithOptions:usingBlock:] + 335
    48  UIKit                               0x0000000112ce8c64 -[UIView(Geometry) resizeSubviewsWithOldSize:] + 138
    49  UIKit                               0x000000011350a0f9 -[UIView(AdditionalLayoutSupport) _is_layout] + 167
    50  UIKit                               0x0000000112cef596 -[UIView(Hierarchy) _updateConstraintsAsNecessaryAndApplyLayoutFromEngine] + 771
    51  UIKit                               0x0000000112e744f1 -[UIToolbar layoutSubviews] + 82
    52  UIKit                               0x0000000112cfee40 -[UIView(CALayerDelegate) layoutSublayersOfLayer:] + 710
    53  QuartzCore                          0x000000011615c59a -[CALayer layoutSublayers] + 146
    54  QuartzCore                          0x0000000116150e70 _ZN2CA5Layer16layout_if_neededEPNS_11TransactionE + 366
    55  UIKit                               0x0000000112ceeaa1 -[UIView(Hierarchy) layoutBelowIfNeeded] + 1083
    56  SlackTextViewController             0x0000000112a60915 -[SLKTextViewController viewWillAppear:] + 181
    57  Dagm8                               0x000000010ff3e350 -[ChatViewController viewWillAppear:] + 160
    58  UIKit                               0x0000000112de25fd -[UIViewController _setViewAppearState:isAnimating:] + 710
    59  UIKit                               0x0000000112de2c98 -[UIViewController __viewWillAppear:] + 149
    60  UIKit                               0x0000000112e12a37 -[UINavigationController _startCustomTransition:] + 1203
    61  UIKit                               0x0000000112e22cdb -[UINavigationController _startDeferredTransitionIfNeeded:] + 712
    62  UIKit                               0x0000000112e23cea -[UINavigationController __viewWillLayoutSubviews] + 57
    63  UIKit                               0x0000000112fc9c85 -[UILayoutContainerView layoutSubviews] + 248
    64  UIKit                               0x0000000112cfee40 -[UIView(CALayerDelegate) layoutSublayersOfLayer:] + 710
    65  QuartzCore                          0x000000011615c59a -[CALayer layoutSublayers] + 146
    66  QuartzCore                          0x0000000116150e70 _ZN2CA5Layer16layout_if_neededEPNS_11TransactionE + 366
    67  QuartzCore                          0x0000000116150cee _ZN2CA5Layer28layout_and_display_if_neededEPNS_11TransactionE + 24
    68  QuartzCore                          0x0000000116145475 _ZN2CA7Context18commit_transactionEPNS_11TransactionE + 277
    69  QuartzCore                          0x0000000116172c0a _ZN2CA11Transaction6commitEv + 486
    70  QuartzCore                          0x0000000116172efc _ZN2CA11Transaction14release_threadEPv + 224
    71  libsystem_pthread.dylib             0x00000001166d6387 _pthread_tsd_cleanup + 470
    72  libsystem_pthread.dylib             0x00000001166d5f63 _pthread_exit + 117
    73  libsystem_pthread.dylib             0x00000001166d4582 pthread_attr_getschedpolicy + 0
    74  libsystem_pthread.dylib             0x00000001166d2341 start_wqthread + 13
)

![screenshot 2016-08-03 00 36 57](https://cloud.githubusercontent.com/assets/5570799/17354797/63eafdf2-5911-11e6-9837-87d525d4e059.png)
",cbedoy,2016-10-22 09:19:35
499,2016-09-15 13:29:44,"Are you sure you're presenting a view controller from main thread?
",pronebird,2016-10-22 09:19:35
499,2016-09-15 17:59:26,"Good point. That's in a different thread.
",dzenbot,2016-10-22 09:19:35
499,2016-10-04 01:18:13,"@cbedoy were you able to fix this by moving it to the main queue?
",dzenbot,2016-10-22 09:19:35
498,2016-08-02 13:52:08,"- [x] I've read and understood the [Contributing guidelines](./CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](./CODE_OF_CONDUCT.md).
- [x] I've searched for any related issues and avoided creating a duplicate issue.
#### Description

Inside the tableview cell I would like to click on a link. Instead (I guess) this is blocked by the keyboard hide gesture.
#### Reproducible in:
- [x] This is reproducible in the sample project.
  SlackTextViewController version: 1.9.3
  iOS version(s): 9.3
  Device(s): All iOS Devices
#### Steps to reproduce:
1. Make the a textview inside your tableviewcell recognize links or create a button inside the tableview cell.
2. Click on the link/button
3. Be disappointed
### Expected result:

Associated events with UIButton or the link are fired
### Actual result:

Keyboard hides. If Keyboard is not active nothing happens.
### Attachments:

![Please halp!](http://i.imgur.com/cDkyomW.jpg)
",michelalbers,2016-08-15 21:31:46
498,2016-08-02 17:09:57,"Thanks for the detailed issue @michelalbers!
You are right about the fact that other touch input are ignored because of the `singleTapGesture`, that is why this object is public so you can decide either to allow it to be recognised from the  `UIGestureRecognizerDelegate` methods.
That is how we do it at Slack fwiw.

(Lovely kitty btw! 😂 )
",dzenbot,2016-08-15 21:31:46
498,2016-08-03 10:18:33,"Thanks for your kind reply :) I would like to have the singleTapGesture only be active if the keyboard is shown. Will code this for my use case now - maybe thats a nice default behavior? 
",michelalbers,2016-08-15 21:31:46
498,2016-08-03 17:46:48,"It is already built-in if you check these lines: https://github.com/slackhq/SlackTextViewController/blob/ace9bd209ad4f24aff6e998dc2986d36e696b695/Source/SLKTextViewController.m#L2104-L2105

If you're overriding `gestureRecognizerShouldBegin:` in your view controller, then you need to be sure to call super to get the base implementation. It should be recognising this gesture only in case the text view is first responder.
",dzenbot,2016-08-15 21:31:46
498,2016-08-15 21:22:00,"That one was a bi**\* to figure out. I used an XIB to hook up as cell to my TableView. All subviews have to be added to contentView NOT to the view itself. If you do actually put them directly under the view, you have to do this in your configureCell method:

<S_CODE_TOKEN>

Further explained here: http://stackoverflow.com/questions/18866420/cant-click-uibutton-inside-a-cell-in-uitableview

Now it works flawless. Thanks for your awesome lib!
",michelalbers,2016-08-15 21:31:46
498,2016-08-15 21:23:16,"That's great to know. So this seems not to be an issue directly from the lib, isn't it?
",dzenbot,2016-08-15 21:31:46
498,2016-08-15 21:24:13,"Nope - but if some people use XIBs as TableViewCells they most definitely will run into this problem. Maybe a mention in the docs would be nice?
",michelalbers,2016-08-15 21:31:46
498,2016-08-15 21:31:43,"I think this issue will be as good as docs, specially since it's not a bug in the lib.
Thanks for the heads up!
",dzenbot,2016-08-15 21:31:46
497,2016-07-28 13:09:03,"- [x] I've read and understood the [Contributing guidelines](./CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](./CODE_OF_CONDUCT.md).
- [x] I've searched for any related issues and avoided creating a duplicate issue.
#### Description

Recently fixes were merged to address an issue with the text bar hiding below UITabBar's
",AndrewBarba,2016-08-08 22:01:53
497,2016-07-28 21:29:12,"Yes. Will release a new version real soon!
",dzenbot,2016-08-08 22:01:53
497,2016-08-08 21:54:38,"[1.9.4](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.9.4) has been released!
",dzenbot,2016-08-08 22:01:53
496,2016-07-21 13:16:04,"- [x] I've read and understood the [Contributing guidelines](./CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](./CODE_OF_CONDUCT.md).
- [x] I've searched for any related issues and avoided creating a duplicate issue.
#### Description

I want to use only the growing text view inside any view - in my viewcontroller . I am not using for messaging app for the control to be always on the bottom , so I dont want to inherit viewcontroller  from SlackTextViewController . How can we use just the slack-textview to accomplish this without using its default SlackTextViewController.
",Ankish,2016-07-21 16:27:15
496,2016-07-21 16:28:35,"Unfortunatly you can't. This library wasn't designed to allow stand alone controls. There are a bunch of OSS projects that accomplish what you are looking for. Have a look at cocoacontrols.com
",dzenbot,2016-07-21 16:27:15
496,2016-07-24 08:08:34,"Here is one I used for an old project. That fits your description.

https://github.com/AlexLittlejohn/ALTextInputBar
",lekanadeyeri,2016-07-21 16:27:15
495,2016-07-20 19:33:17,"#### Based on https://github.com/slackhq/SlackTextViewController/pull/355, this PR includes a more reliable solution for the keyboard panning feature:
- The keyboard stub view is added to the key window's view hierarchy instead. This is particularly helpful for overlapping to any other view, specially when using `UITabBar`, view controller containment or modal presentations.
- The stubbing logic is now controlled in `SLKTextViewController`.
- Tested on iOS 7, 8, 9 and 10.
#### Downsides:
- Because we perform a **keyboard view snapshotting**, custom keyboard with animations look frozen while dragging the keyboard (e.g. PopKey,  GIF Keyboard, etc.).
- Sometimes, the native keyboard's translucency is noticeable lost (depends on the content below the keyboard). This is not a big deal but obviously, not ideal.
- Since [we access the keyboard's window](https://github.com/slackhq/SlackTextViewController/blob/2baf0414b8d77a36cf5412c50c08dc54b571f281/Source/SLKTextViewController.m#L518-L525), things can break if the `UIApplication`'s windows hierarchy change in future iOS releases. We will be monitoring this and try our best to patch.

Closes #355

![untitled3](https://cloud.githubusercontent.com/assets/590579/16999973/6db79954-4e75-11e6-8196-6fd233d0714d.gif)
",dzenbot,2016-07-20 21:05:24
495,2016-07-20 21:05:24,"We've decided against merging this in for now
",bradya,2016-07-20 21:05:24
495,2016-11-29 15:32:26,@bradya @dzenbot What's the status of this behavior for iOS 9/10? Did you guys just give up on this or is something else in the works?,firedrake93,2016-07-20 21:05:24
494,2016-07-20 08:31:34,"Doesn't skip keyboard status update if the view isn't visible anymore, at least when needed.
Fixes #487

Also updates the sample project to open a new view from the left button for testing purposes.
",dzenbot,2016-07-20 17:46:44
494,2016-07-20 17:46:04,"👍 
",jackywu07,2016-07-20 17:46:44
493,2016-07-17 12:01:44,"- [x] I've read and understood the [Contributing guidelines](./CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](./CODE_OF_CONDUCT.md).
- [x] I've been mindful about doing atomic commits, adding documentation to my changes, not refactoring too much.
- [x] I've a descriptive title and added any useful information for the reviewer. Where appropriate, I've attached a screenshot and/or screencast (gif preferrably).
- [x] I've written tests to cover the new code and functionality included in this PR.
- [x] I've read, agree to, and signed the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform).
#### PR Summary

When I installed this library by Carthage with `--use-submodules` option, this repository is marked as dirty because of `Carthage/` is not ignored.
",giginet,2016-07-19 00:21:13
493,2016-07-18 19:31:40,"This is great @giginet, although we need you to complete the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform) before I can merge this PR.
",dzenbot,2016-07-19 00:21:13
493,2016-07-19 00:18:43,"Thank you!
I filled CLA. Please check it out.
",giginet,2016-07-19 00:21:13
493,2016-07-19 00:21:11,"Thank you 👍 
",dzenbot,2016-07-19 00:21:13
492,2016-07-07 12:14:26,"- [x] I've read and understood the [Contributing guidelines](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CONTRIBUTING.md) and have done my best effort to follow them.
- [x] I've read and agree to the [Code of Conduct](https://github.com/slackhq/SlackTextViewController/blob/master/.github/CODE_OF_CONDUCT.md).
- [x] I've searched for any related issues and avoided creating a duplicate issue.
#### Description

This bug happens when we try to prefill the textview with an ""@"" prefix and try to edit it or add more prefixes to it. When we go to add another ""@"" prefix and then select a suggestion, the selected suggestion text attaches itself to the start of the textview. 
#### Reproducible in:
- [x] This is reproducible in the sample project.

SlackTextViewController version:
iOS version(s): 9.3
Device(s): Simulator
#### Steps to reproduce:
1. Open workspace to edit the Messenger-Swift project.
2. Add textViewDidBeginEditing method.
3. Add textView.text = ""@Someone "" to the method.
4. Run the project. 
5. Find the cursor stuck on the ""@"" 
6. Try to add another prefix ""@"", select any auto complete suggestion. 
### Expected result:

Search suggestion when tapped should attach next to the cursor.
### Actual result:

You'll find the selected suggestion text attach itself all the way at the start of the textview.
",eshwartm,
491,2016-07-06 22:17:41,"Hi, It's more a question than a bug or a request.
So basically, I am trying to use your plugin. The thing is I noticed, and i read it's impossible to use the SlackViewController with an already existing tableView --> Too bad for me... But i was wondering if there any way to use my custom cell and how can I do that ?

Regards,

Hary
",HarishHary,2016-07-06 22:36:08
491,2016-07-06 22:22:22,"Hey @HarishHary. This library handles most of the UI outlets you would need to create a messaging interface, except its content (cells). This is totally up to you.
Have a look at the sample project. It will help you better understand the implementation, power and limitations of the framework.
",dzenbot,2016-07-06 22:36:08
491,2016-07-06 22:24:43,"Yea, that's totally fine for me. The thing is, you guys are implementing your cells programmatically. But i have my cell ready to go in the storyboard. How do i add it to your tableView ? If no subviews can be present within the main view. Using xib files, for custom cells ?
",HarishHary,2016-07-06 22:36:08
491,2016-07-06 22:25:44,"Yes. I would recommend creating nib (aka xib) files for your views. It's generally a better approach, than having them nested in a storyboard.
",dzenbot,2016-07-06 22:36:08
491,2016-07-06 22:27:54,"Is it possible to programatically add container views as cell view to your tableviews ? So i can implement my cells in a container views in the storyboard if yes how ? XIB files is the way to go here I guess ?  
",HarishHary,2016-07-06 22:36:08
491,2016-07-06 22:29:34,"You could have a generic tableview cell subclass, and override the `contentView` to display your custom xibs. I don't usually work with IB, so I'm def. not the best person to give suggestions.
",dzenbot,2016-07-06 22:36:08
491,2016-07-06 22:32:12,"Ok no worries, I would love to have an example to see how to implement XIB files with this framework and manipulate it. If someone has ! Share it please ! It would be grateful ! Thank you for your quick reply ! 
",HarishHary,2016-07-06 22:36:08
491,2016-07-08 13:10:47,"Made it work with XIB files ! Works perfectly fine ! Awesome framework ! Thank you for sharing it !
",HarishHary,2016-07-06 22:36:08
491,2016-07-08 21:43:08,"That great!
Mind sharing what approach did you take?
",dzenbot,2016-07-06 22:36:08
491,2016-07-08 21:54:08,"Created a custom cell using a XIB files, register the class ! And Voilà !! It's done. Another thing is, until now every custom cell was made without using XIB files (kinda old fashion implementation). So I am going to try to implement this using container views. Adding a container view made on storyboard to a cell or something similar. I'll let you know. 
",HarishHary,2016-07-06 22:36:08
490,2016-07-05 19:31:55,,dzenbot,2016-07-06 18:55:05
490,2016-07-06 18:54:42,"LGTM!
",DEGoodmanWilson,2016-07-06 18:55:05
489,2016-07-04 21:20:00,"Currently if you turn on voice over, focus on the upload button and swipe right twice, it focuses on the placeholder label. The text input should just be a single accessibility element.
",ksmarshall,2016-07-04 21:20:54
489,2016-07-04 21:20:52,"👍 
",dzenbot,2016-07-04 21:20:54
488,2016-07-01 13:02:26,"Before this fix slk_dismissTextInputbarIfNeeded sets keyboardHC.constant to zero which is wrong if SLKTextViewController placed in UITabBarController.

Instead of 0 it is better to use slk_appropriateBottomMargin.

Fixes #467
Fixes #456
",yury,2016-07-20 18:55:10
488,2016-07-18 17:53:26,"I like this! It is a cleaner fix than #448
",dzenbot,2016-07-20 18:55:10
488,2016-07-18 19:12:24,"@dzenbot it is battle tested with your super awesome QA :)
",yury,2016-07-20 18:55:10
488,2016-07-19 21:05:09,"@yury: This PR looks good. Before merging, could you please complete the [Contributor License Agreement (CLA)](https://docs.google.com/a/slack-corp.com/forms/d/1q_w8rlJG_x_xJOoSUMNl7R35rkpA7N6pUkKhfHHMD9c/viewform)?
",dzenbot,2016-07-20 18:55:10
488,2016-07-20 13:12:02,"@dzenbot done
",yury,2016-07-20 18:55:10
488,2016-07-20 18:55:02,"👍 
",dzenbot,2016-07-20 18:55:10
487,2016-06-30 15:30:32,"In my subclass I have overriden didChangeKeyboardStatus, but it's not being called for all states when I hide the keyboard.

I'm hiding the keyboard when the left button is pressed and I go to another view controller:

<S_CODE_TOKEN>

but then the DidHide status never gets called. With this implementation of the function:

<S_CODE_TOKEN>

the output in the debugger is:

<S_CODE_TOKEN>

so the Did Hide nevers happens. 

Then when the users goes back to this controller and opens the keyboard again, the WillShow and DidShow are not called, because of the inconsistent internal state (the _keyboardStatus is still SLKKeyboardStatusWillHide).

On the contrary, if I hide the keyboard with

`self.dismissKeyboard(false)`

it works and all the states are called.
",madelman,2016-07-20 17:46:44
487,2016-07-05 19:16:25,"@madelman Thanks for taking the time to fully describe the issue. Could you please take a few more minutes and see if it's reproducible in the sample project too?
",dzenbot,2016-07-20 17:46:44
487,2016-07-06 09:57:59,"@dzenbot Yes, I can confirm that it also happens in the sample project (in the Messenger-Swift). I added a new empty viewcontroller and the same code I sent in the Issue and I get the same result, Did Hide is not called.
",madelman,2016-07-20 17:46:44
487,2016-07-06 23:29:08,"I believe I found the root cause of the issue.
`Did Hide` is never hit, [because of this check](https://github.com/slackhq/SlackTextViewController/blob/48b76d8894360c28d23209d72334ee287181a20a/Source/SLKTextViewController.m#L1405-L1409) which is always false when the view it not visible, specially after a view push. This misleading keyboard status causes the whole text input presentation mechanism to fail because of this.
Will submit a fix in a moment.
",dzenbot,2016-07-20 17:46:44
487,2016-07-07 01:11:04,"@madelman: this tweaks fixes the keyboard status issues.
https://github.com/slackhq/SlackTextViewController/compare/keyboard-status-fix?expand=1

I still need to do a bit more testing, specially so it doesn't break other expected behaviors. Please give it a try and let me know what you think.
",dzenbot,2016-07-20 17:46:44
487,2016-07-12 08:31:59,"Hi, looks good to me and it's working correctly with those changes. Great!!
",madelman,2016-07-20 17:46:44
486,2016-06-28 23:05:10,"When initiating with a table view style, if your table view uses an `estimatedRowHeight` instead of a fixed `rowHeight`, if you set the `textInputBar.textView.font` or if you change the `textColor`, cells are not sized appropriately. The content is clipped. Upon scrolling and returning to the cells they're sized correctly. It doesn't matter if you set `inverted` to true or false. I've attached a very basic project to demonstrate the issue. 
[SampleApp.zip](https://github.com/slackhq/SlackTextViewController/files/338229/SampleApp.zip)
![simulator screen shot jun 28 2016 4 52 30 pm](https://cloud.githubusercontent.com/assets/6282848/16435333/739d999c-3d52-11e6-8f13-11f5c9c583f7.png)
![simulator screen shot jun 28 2016 4 52 40 pm](https://cloud.githubusercontent.com/assets/6282848/16435336/7635bc20-3d52-11e6-8ea3-8cc473d41652.png)
",hipwelljo,
486,2016-11-08 21:09:28,"@hipwelljo I was able to fix this by calling

<S_CODE_TOKEN>

at the end of viewDidLoad method in your sample project.

Looks like the issue may be unrelated to SlackTextViewController. Take a look here:
http://stackoverflow.com/questions/27787552/ios-8-auto-height-cell-not-correct-height-at-first-load
",algrid,
485,2016-06-27 19:44:12,"Specially annoying if a subclass of `SLKTextViewController` has its own designated initialiser, a bunch of warnings will be fired up.
",dzenbot,2016-06-27 21:15:54
484,2016-06-24 20:24:25,"Is there a sample for the message cell handling different text formatting. Bold, underline, links, etc? 

Thanks.
",talkaboutdesign,2016-06-24 22:19:24
484,2016-06-24 22:19:24,"Unfortunately, that is out of the scope of this project. We use another internal library to achieve all that at Slack.
",dzenbot,2016-06-24 22:19:24
484,2017-03-03 14:21:49,@dzenbot What library is that?,yarodevuci,2016-06-24 22:19:24
484,2017-03-03 15:39:00,Internal library 😉,dzenbot,2016-06-24 22:19:24
483,2016-06-23 10:49:42,"If don't hide the keyboard before moving to another viewController, after return textInputbar in center screen. It begins after first transition.
![untitled](https://cloud.githubusercontent.com/assets/14258270/16300586/4da94eb4-3949-11e6-9fe1-d86f16671e48.gif)
",yupoff,2016-07-22 16:16:47
483,2016-07-22 12:56:33,"I believe this is the same issue as discussed in #487. I was having very similar behavior and when I logged the calls on `didChangeKeyboardStatus`, I was getting the same results of `didHide` never being called.
",danielrees18,2016-07-22 16:16:47
483,2016-07-22 16:16:47,"This should have been fixed in https://github.com/slackhq/SlackTextViewController/pull/494
",dzenbot,2016-07-22 16:16:47
482,2016-06-23 05:45:24,"I have a custom NSTextStorage so that I must use a textContainer to init the textView, but I don't know how to do this.
",DarkAngel7,2016-08-28 12:55:34
482,2016-06-23 17:04:17,"You can subclass SLKTextView and initialize it with your text storage/manager/container, internally.
You can then register this custom textView when configurating your SLKTextViewController subclass using the `registerClassForTextView:` method.
There is an example of this on the sample project.
",dzenbot,2016-08-28 12:55:34
481,2016-06-22 04:33:42,"Would be super neat to see an iOS 10 style update, with the rightButton lying inside the the pill-shaped text field.
![ios-10](https://cloud.githubusercontent.com/assets/6282848/16254727/33079db2-3800-11e6-9ff5-2042c9442a0b.png)
",hipwelljo,2016-08-28 12:53:30
481,2016-08-28 12:53:28,"Slack's app will unlikely adopt this same style, so there are slim chances we would build this. But it should be pretty easy to do in a forked version.
",dzenbot,2016-08-28 12:53:30
480,2016-06-22 04:31:37,"please disregard
",jordanhbuiltbyhq,2016-06-22 04:37:05
479,2016-06-15 18:37:40,"See example below:
<img width=""371"" alt=""screen shot 2016-06-15 at 11 37 08 am 1"" src=""https://cloud.githubusercontent.com/assets/2926534/16092640/8ccd846e-32ed-11e6-9530-de78f4cfd42f.png"">
",talkaboutdesign,2016-06-20 01:08:21
479,2016-06-20 01:08:21,"You can tweak the textView's layer's border color.
",dzenbot,2016-06-20 01:08:21
478,2016-06-14 18:30:55,"Is it possible to configure the return key to type a new line instead of sending?
",emuye,2016-06-29 04:45:36
478,2016-06-29 04:35:13,"https://github.com/slackhq/SlackTextViewController#external-keyboard

you can override key commands - read the documentation 😄 
",mikengyn,2016-06-29 04:45:36
478,2016-06-29 04:45:36,"You can override `didPressReturnKey:` and implement your own handling of the event.
",dzenbot,2016-06-29 04:45:36
477,2016-06-14 00:33:40,,dzenbot,2016-06-14 00:37:41
477,2016-06-14 00:36:21,"LGTM!
",jackywu07,2016-06-14 00:37:41
476,2016-06-10 22:45:10,"Solves a crash some users were experiencing when auto-completing with the dictation input mode.
This PR adds a way to detect the dictation mode, using `UITextInputMode` public API. Once detected, we can opt-out from refreshing the text view.

It was causing the following exception:

<S_CODE_TOKEN>
",dzenbot,2016-06-10 22:54:20
476,2016-06-10 22:53:58,"Looks good!
",sukeban,2016-06-10 22:54:20
475,2016-06-09 03:44:40,"...regardless if the scrolling cursor is at the bottom or not.

Fixes #474
",dzenbot,2016-06-24 22:29:57
474,2016-06-08 05:23:32,,felixchan,2016-06-24 22:29:57
473,2016-06-05 07:01:22,"@dzenbot the keyboard-panning-v2 branch is really great, but there is one issue I've found.

If you're using a SlackTextViewController inside a UITabBarController, the keyboard appears _over_ the tab bar when the SlackTextView becomes first responder. Normally when the SlackTextView resigns first responder, the keyboard slides back down _over_ the tab bar, but when the SlackTextView resigns first responder via the swipe gesture, the tab bar suddenly appears on top of the keyboard and the keyboard slides down _under_ the tab bar, which looks really yucky.
",firedrake93,2016-10-04 01:23:49
473,2016-06-05 07:48:35,"Makes sense. It's because it's a snapshot of the keyboard window.
Will think something about that very soon.
",dzenbot,2016-10-04 01:23:49
473,2016-10-04 01:23:49,"We are dropping this technique, as it is too hacky and could be unstable in further versions of iOS.
",dzenbot,2016-10-04 01:23:49
472,2016-06-01 21:27:38,"I'm writing for iOS8 but testing my app on iOS9.

I have `self.keyboardPanningEnabled = true` and I'm not override any scrollView delegates.

I also ran the example-swift app on iOS9 simulator. When I drag down on the table, the keyboard stays and does not move.
",felixchan,2016-06-01 22:55:02
472,2016-06-01 22:55:00,"Please see https://github.com/slackhq/SlackTextViewController/pull/355
I hope to continue that work soon-ish
",dzenbot,2016-06-01 22:55:02
471,2016-06-01 07:14:59,"When trying to register a long press gesture on the tableView in SLKTextViewController the desired  method in the selector is never called. At first I thought it might be because I didn't implement the delegate as mentioned in https://github.com/slackhq/SlackTextViewController/issues/376 but it turns out that adding that delegate to my controller doesn't do anything for me.

I also tried to disable the other two gestures to no avail by using `enabled=NO`.

It seems to me that `UILongPressGestureRecognizer` is blocked at some level. Here is the code I am using. A long press on a table cell that uses the code below will just result in the cell being unhighlighted. 

<S_CODE_TOKEN>
",keyboardsamurai,
471,2016-06-01 07:37:40,"OTOH adding the recognizer to the UITableViewCell like in the example in https://github.com/slackhq/SlackTextViewController/blob/master/Examples/Messenger-Shared/MessageViewController.m  works just fine.
",keyboardsamurai,
471,2016-06-01 09:18:30,"This snippet looks like you're adding the long press to the `tableView`, and not the cells:

<S_CODE_TOKEN>
",dzenbot,
471,2016-06-01 15:32:52,"@dzenbot exactly. This works just fine in a regular UITableViewController, but for some reason doesn't in SLKTextViewController. As I mentioned in the last comment, I was able to work around it by just adding the longpress to the cell, but it was a point of confusion. It's totally possible that I might have overlooked some concept that I was not aware of here though, so the question whether that is a legitimate bug is up for debate.
",keyboardsamurai,
471,2016-08-04 18:26:57,"Seems like a legitimate bug to me. I have the same problem as keyboardsamurai. Going to do the workaround that he posted. Cheers.
",xcadaverx,
470,2016-05-26 22:02:58,"Addresses #469.
",mtackes,2016-06-09 03:47:29
470,2016-05-27 00:09:04,"Nice fix!
",dzenbot,2016-06-09 03:47:29
470,2016-06-09 03:47:26,"Looks good! Thanks @mtackes 
",dzenbot,2016-06-09 03:47:29
469,2016-05-26 21:12:14,"When closing a formatting mark with a double space while the insertion-point is anywhere inside the text, the cursor jumps to the end of the text after adding the closure.

![slacktextviewbug](https://cloud.githubusercontent.com/assets/2160268/15590294/95a26d20-235c-11e6-97c0-21965c527201.gif)
",mtackes,2016-08-28 12:36:35
469,2016-08-28 12:36:34,"Fixed in https://github.com/slackhq/SlackTextViewController/pull/470
",dzenbot,2016-08-28 12:36:35
468,2016-05-23 10:10:57,"I'm not sure what goes wrong... In a new test project, I subclass the SlackTextViewController with a customised table view cell, the controller's text input bar is flashing on scrolling. Please see the GIF below.

![flashinginputbar](https://cloud.githubusercontent.com/assets/941849/15467338/896c8a70-2110-11e6-88a7-90b8c980ba0a.gif)

I tried to set `backgroundColor` for cell's background and for cell's `contentView`'s background, but none of it resolved the issue.

Firstly I found this issue when I integrate the SlackTextViewController to my project. Interestingly, this issue does not happen in the provided sample project. So I created a brand new test project to try, and it has this issue as well.

Anything I missed to correctly use the library?
",powerqian,
468,2016-05-28 17:28:37,"Could you attach that sample project? It is hard to know what's wrong without seeing any implementation.
",dzenbot,
468,2016-05-30 03:16:27,"Hi @dzenbot Thanks for the reply. Attached the really simple sample project.

[SlackTextViewControllerTest.zip](https://github.com/slackhq/SlackTextViewController/files/288759/SlackTextViewControllerTest.zip)
",powerqian,
468,2016-09-09 15:09:44,"Same issue happens to me 
",sche,
468,2016-11-08 21:48:09,"One should call

<S_CODE_TOKEN>

to prevent that.
",algrid,
467,2016-05-18 20:09:30,"I have SlackTextViewController subclass embedded in a UINavigationController in a UITabBarController. Standard stuff. The input Bar seems to disappear under the tab bar on some occasions. For example, when a text message comes in and you swipe down to quick reply, the input Bar disappears. It seems SLKTVC is assuming something when viewWillDisappear as that's when the actual disappearing happens...

This issue is potentially similar to https://github.com/slackhq/SlackTextViewController/pull/456 and https://github.com/slackhq/SlackTextViewController/pull/448 and can be reliably reproduced. At least on my end. 
",inb4ohnoes,2016-07-20 18:55:10
467,2016-05-18 21:58:54,"Does https://github.com/slackhq/SlackTextViewController/pull/448 fix it for you?
",dzenbot,2016-07-20 18:55:10
467,2016-05-18 22:03:54,"I hadn't tried it as I was working on a couple other things, but I'll try it in a bit
",inb4ohnoes,2016-07-20 18:55:10
467,2016-05-18 22:27:32,"Yes, this does fix the issue. Maybe consider merging it?
",inb4ohnoes,2016-07-20 18:55:10
466,2016-05-18 12:39:40,"Hello,
when self.inverted = NO (self being a subclass of SLKTextViewController), turns out that tableView doesn't scroll up upon keyboard presentation. I've dug into the code, but not sure exactly were to look. 

It's reproducible using a Vanilla SLKTextViewController demo.

Could you please share your pointers as to where to look into?

Thanks!
",Mamonaku,2016-05-18 16:15:04
466,2016-05-18 12:43:56,"is it a duplicate of [#333](https://github.com/slackhq/SlackTextViewController/issues/333)?
",Mamonaku,2016-05-18 16:15:04
466,2016-05-18 16:15:04,"Yes, it is! Let's move the convo over there please.
",dzenbot,2016-05-18 16:15:04
465,2016-05-15 20:15:22,"Hi, I'm sorry if this is not the correct place to ask for specific help.

I was wondering if there is a way to add a view above the tableview and have the tableview resize to under the added view.

I attached a screen shot of what I'm trying to do. The scroll bar and content are still under the blue view so if I scroll up, the view hides the content. I was thinking I could just add a constraint from the top of the tableview and the bottom of the blue view. But I'm not sure if that'll break anything else.

Thanks 

![screen shot 2016-05-15 at 3 13 04 pm](https://cloud.githubusercontent.com/assets/1768152/15276502/8e055f88-1aaf-11e6-927c-d0350a97f5b8.png)
",thomashocking,
465,2016-05-18 12:31:43,"Not sure if this fixes your problem, but for readability and real estate maximisation, I'd recommend that you use a tableHeaderView, or tableFooterView, instead of using a fixed view. 

Otherwise, if you still need to have a fixed view, the best way is to add it to the table view, and scroll it in the opposite direction of the tableview scroll. 
",Mamonaku,
465,2016-05-18 16:18:51,"One even easier way is to change the tableView's contentInset, and give to `top` the height value of your custom vien. If that isn't enough and you really need a static container at the top, I would suggest to fork the project and add it to you SLKTextViewController super class directly and modify the internal view constraints.
",dzenbot,
465,2016-05-28 20:57:05,"Great thanks a lot for the tips!
",thomashocking,
464,2016-05-14 00:00:48,"Reproduction Steps:
1. Tap text edit control to begin composing a message
2. When keyboard comes up, make sure that Google's Gboard is the currently active keyboard
3. Type exactly the following characters. (For clarity below I am placing each character to type on a separate line. Note that I am typing Test, followed by return, followed by the hash symbol, followed by backspace because I didn't intend to type hash.) 
   T 
   e 
   s 
   t 
   <return> 
   # 
   
   <backspace>
4. Bug: After approximately 3 seconds, the keyboard starts automatically backspacing, causing data loss of everything in the text control.
",sukeban,2016-08-28 13:02:04
464,2016-05-14 00:19:05,"Can't repro on sample app. Must be client interaction. 
",sukeban,2016-08-28 13:02:04
464,2016-06-10 21:54:46,"I was able to reproduce this issue on the sample app, as well as in Slack.

#### Steps to reproduce:
1. Tap on the text input to bring the keyboard up.
2. Switch to Gboard (itunes.apple.com/us/app/gboard-search.-gifs.-emojis/id1091700242?mt=8)
3. Type any text on the app's text input.
4. Type any auto-completion prefix, being #, or @, or :
5. Hit the back space to only delete the auto-completion prefix.

#### Result:

Observe, after approximately 3 seconds, that the keyboard starts automatically backspacing, causing all the text inside of the text input to be deleted. This happens infinitely, until you hit the back space button again.

I haven't been able to reproduce with other third party keyboard. I would hate having to add a special fix for GBoard, requiring us to detect the `com.google.keyboard.KeyboardExtension` bundle id from the `AppleKeyboards` dictionary representation of the `NSUserDefaults`.

Will leave this open for now, in case others face this issue and think of a solution.
",dzenbot,2016-08-28 13:02:04
464,2016-08-28 13:02:04,"This has been fixed by the GBoard's team! 🙌
",dzenbot,2016-08-28 13:02:04
463,2016-05-13 11:43:06,"Is there a feature that preserves the text in textInputbar.textView across app kill/start cycles? When I enter something, kill the app, start it again that text is still there in the input field. Is this a feature and if so, can I disable it?
",luzianscherrer,2016-05-13 15:32:10
463,2016-05-13 11:54:45,"This is actually a feature, but disabled by default. Here are the API definitions: https://github.com/slackhq/SlackTextViewController/blob/master/Source/SLKTextViewController.h#L499-L523

Are you sure you're not implementing these?

PS: I realised this feature isn't documented jn the README. We should add it.
",dzenbot,2016-05-13 15:32:10
463,2016-05-13 12:51:39,"Thanks, that did solve the problem :) Now I'm just calling `[self clearCachedText]` in my `viewDidLoad` but I have definitely **not** implemented the keyForTextCaching feature. I'm using version 1.7.1.
",luzianscherrer,2016-05-13 15:32:10
463,2016-05-13 15:30:36,"👍
",dzenbot,2016-05-13 15:32:10
463,2016-05-13 15:32:05,"You should upgrade to 1.9
There's been a lot of fixes since then, including that feature.
",dzenbot,2016-05-13 15:32:10
462,2016-05-11 02:48:51,"Fixes #461 (sort of)
",douglashill,2016-05-11 02:57:04
462,2016-05-11 02:57:00,":+1: Thanks!
",dzenbot,2016-05-11 02:57:04
461,2016-05-11 01:30:10,"The readme references a `swift-example` branch, which doesn’t seem to exist. I can’t find it being merged either.

What is the status of this branch, and the collection view example it apparently contains?

I was going to PR to update the broken readme links, but though better to check what’s going on.
",douglashill,2016-05-11 02:57:04
461,2016-05-11 02:36:50,"Yes, that's an outdated doc, sorry about that.
The Swift example is under a different target in the sample project. It is not a collectionView example after all.
",dzenbot,2016-05-11 02:57:04
461,2016-05-11 02:42:37,"OK. Little PR incoming.
",douglashill,2016-05-11 02:57:04
460,2016-05-10 00:44:36,"Hi!

There's a gap between the keyboard and the textview. What I tried to do was setting the autocorrectionType of the textView to UITextAutocorrectionTypeNo but the gap is still there. If you have the autocorrection ""boxes"" enabled (the words that appear above the keyboard) and you swipe up and down this area, the gap disappears but I'm not really sure how to fix it programmatically.

How can we remove this gap? Thanks!

<img width=""421"" alt=""captura de pantalla 2016-05-09 a la s 7 35 15 p m"" src=""https://cloud.githubusercontent.com/assets/4009741/15132261/662e5730-161d-11e6-8cb4-12e91cf4b1bf.png"">
",Axort,2016-06-27 21:24:28
460,2016-05-10 01:31:53,"Can you please try to reproduce this on the sample project and explain how to?
Thanks!
",dzenbot,2016-06-27 21:24:28
460,2016-05-11 16:48:02,"I haven't been able to reproduce this on the sample project. What I noticed, in my app, is that this doesn't happen on the simulator, only on the devices D: I'm not really sure why this happens ):
",Axort,2016-06-27 21:24:28
460,2016-06-27 21:22:49,"Now we know what the problem is. We're also using a library called IQKeyboardManager, this library was causing this issue. I don't know if this is the correct place to put the solution but if you have this problem (and you're using IQKeyboardManager) just call this line in the AppDelegate:

`[[[IQKeyboardManager sharedManager] disabledDistanceHandlingClasses] addObject:[SLKTextViewController class]];`

Thanks!
",Axort,2016-06-27 21:24:28
460,2016-06-27 21:24:28,"Interesting!
There's been quite a few issues related to IQKeyboardManager, although this one seems new:
https://github.com/slackhq/SlackTextViewController/issues?q=is%3Aissue+IQKeyboardManager+is%3Aclosed

Thanks for the update. Closing this now as it seems your work around is pretty simple.
",dzenbot,2016-06-27 21:24:28
460,2016-09-20 12:45:01,"@dzenbot , @Axort  : Huge thanks guys  👍 
",pmapma1,2016-06-27 21:24:28
459,2016-05-09 19:37:54,"First of all I want to thank the Slack team for open sourcing and maintaining this project.

I encountered a strange bug when updating from 1.9.1 causing the navigation title bar to disappear. Turns out self.navigationController was nil in viewDidLoad().

I finally narrowed it down to me changing self.textInputbar.textView.font in my init(). I haven't investigated too much into the underlying cause yet, but here is a simple example to reproduce (1.9.2+):

<S_CODE_TOKEN>

This will output the following:

> self.navigationController = nil
",wpK,
459,2017-03-16 00:46:12,"+1

As soon as i apply ""super.init(tableViewStyle: .Plain)"" the navigation Controller is nil",develth,
458,2016-05-06 00:37:32,"This is how I'm setting my footerView:

<S_CODE_TOKEN>

However, instead of appearing at the **top** (since it's inverted), the view sticks to the bottom, as if it's an inverted header view.

<img width=""378"" alt=""screen shot 2016-05-05 at 5 34 06 pm"" src=""https://cloud.githubusercontent.com/assets/306524/15061247/ce95f47e-12e7-11e6-8539-50feaab42f0d.png"">

For experimental purposes, I have tried to flipping my code to:

<S_CODE_TOKEN>

and the result is identical.
",felixchan,2016-05-06 00:42:19
458,2016-05-06 16:09:59,"Did you figure it out?
",dzenbot,2016-05-06 00:42:19
458,2016-05-10 04:23:26,"Yes - it was a simple auto layout issue (non related to slack) 👍 
",felixchan,2016-05-06 00:42:19
457,2016-05-05 01:04:22,"Hi,

I hesitated creating an issue for this, but couldn't find any resource online. In swift, I can only have a leftButton with an UIImage, but I can't have one with text instead.

For instance:

<S_CODE_TOKEN>

Is there a way to put text in the leftButton instead of an image ? Sorry if this question already has an obvious answer.
",clemkoa,
457,2016-05-06 16:11:22,"This is not yet supported. We need image support for the right button too. It's been requested several times, would be great if someone can have a stab at it.
",dzenbot,
456,2016-05-02 21:14:57,"There were a couple of situations where the bottom text bar could be behind the tab bar related to the view being loaded and laid out before it was in a tab bar controller.

This forces constraints to be updated after any parent view controllers change.
",davbeck,2016-07-20 18:55:10
456,2016-05-04 03:26:31,"Could you please explain how to reproduce this bug?
",dzenbot,2016-07-20 18:55:10
456,2016-05-04 04:23:57,"When pushing over a UINavigationController stack, I'm seeing a 2-3 pts movement on the layout because of the changes in `didMoveToParentViewController:`
",dzenbot,2016-07-20 18:55:10
456,2016-05-04 20:34:07,"I will create an example app that reproduces this and maybe refine the solution to fix the movement you're seeing (good catch). It happens if for some reason the view gets loaded before being added to the parent.
",davbeck,2016-07-20 18:55:10
456,2016-06-10 23:27:42,"I finally got around to reproducing this cleanly.
1. Download [reproduce-hidden-bar](https://github.com/davbeck/SlackTextViewController/tree/reproduce-hidden-bar).
2. Build and run Messenger-Storyboard.
3. Tap ""Show Messages"".
4. After 1 second the detail view is shown with the text bar missing.

I was able to reproduce this by forcing the view to be loaded immediately but waiting a second to actually display it. There are more subtle ways that this can be triggered, for instance during state restoration, but this is the easiest way to reproduce it with the least amount of code.

I was not able to reproduce the pixel movement you mentioned, but I changed to updating the margin in `viewWillAppear:` instead. It looks like `didMoveToParentViewController` is sometimes (but not always) called after the view animates in.
",davbeck,2016-07-20 18:55:10
456,2016-06-10 23:53:04,"Great @davbeck. Will give it a try soon.
On the meantime, can you check for https://github.com/slackhq/SlackTextViewController/pull/448 and see if it fixes it for you?
",dzenbot,2016-07-20 18:55:10
456,2016-09-08 09:22:17,"I have issues with extra space between the tableview, top of viewcontroller and the textview, resolves when tapping the textfield and close again (layout subviews). Also the mentioned fix resolves the issue. 
",bogren,2016-07-20 18:55:10
456,2016-09-08 09:27:42,"Ah nvm, can be solved the same way as mentioned in David's comment 🎉 
",bogren,2016-07-20 18:55:10
455,2016-04-30 20:17:10,"It'd be great to support `UIScrollViewKeyboardDismissModeInteractive`. If you configure that for `keyboardDismissMode` on your `scrollView`, when you scroll down and over the keyboard the keyboard will follow your finger off screen but the `textInputbar` remains in place until the keyboard is dismissed. Perhaps it needs to listen to the `UIKeyboardWillChangeFrameNotification`? I'd really like to obtain a Messages-like experience.
",hipwelljo,2016-04-30 20:25:02
455,2016-04-30 20:25:02,"I see this is discussed here:
https://github.com/slackhq/SlackTextViewController/issues/361#issuecomment-171938265
",hipwelljo,2016-04-30 20:25:02
454,2016-04-30 18:11:51,"I have a `UIView` I want to display to the right of my collection view. It should be a sibling view to the collection view. I previously did this in the storyboard using auto layout. Now that SlackTextViewController provides the collection view, I'm not sure how to set this up. Is it possible I can continue to implement the collection view in the storyboard and tell SlackTextViewController to use that collection view instead? If not, could I add the view programmatically and modify the collection view's layout constraints to make it work? Essentially I would just push it over from the right edge of the screen the same amount as the width of the UIView.

Perhaps related to this, using SlackTextViewController in a storyboard requires you provide the collection view layout. This works, but in `viewDidLoad` I configure two different layouts which I use to switch between them, so I manually set it like so `self.collectionView.collectionViewLayout = self.gridFlowLayout`. I'm just a little confused as to why `collectionViewLayoutForCoder` is required.

`+ (UICollectionViewLayout *)collectionViewLayoutForCoder:(NSCoder *)decoder
{
    return [[UICollectionViewFlowLayout alloc] init];
}`
",hipwelljo,2016-04-30 18:16:15
454,2016-04-30 18:15:13,"To achieve this, you should fork the project and have a custom version, and modify the view constraints internally like you suggested.
",dzenbot,2016-04-30 18:16:15
454,2016-04-30 18:16:15,"Ok, thanks for the quick response!
",hipwelljo,2016-04-30 18:16:15
453,2016-04-30 17:50:50,"If you call `[self.textView slk_insertTextAtCaretRange:myText];` while the caret position is at the end, there is already sufficient number of lines in the `textView` to exceed the max limit, it is pushed to a new line, and the `textView` is the first responder, it will auto scroll to the bottom to show the text that was just inserted as you would expect. But if the `textView` is not the first responder, it will still insert at the end, but it won't auto scroll the `textView` so you can't see the text you just inserted. It should always auto scroll to show the just inserted text. :)
",hipwelljo,
453,2016-04-30 17:53:19,"Agree. Will look at it. Thanks.
",dzenbot,
453,2017-03-16 13:42:14,Any news on this? =),Preen,
452,2016-04-27 07:54:57,"Just to keep more lucidity about this project's release notes.
Other releases' notes are available in https://github.com/slackhq/SlackTextViewController/releases
",dzenbot,2016-04-27 07:55:45
451,2016-04-27 05:25:07,"For some unknown reason, when I focus on the textField, the keyboard just covers it.  The textInput does not move up with the keyboard.

In the emulator, if I focus on the textField and then hide the keyboard , the send button becomes greyed out and can't be pushed (but I can still push enter on the keyboard)

<S_CODE_TOKEN>

![simulator screen shot apr 26 2016 10 23 33 pm](https://cloud.githubusercontent.com/assets/306524/14842623/ea8985b0-0bfd-11e6-9616-a6f618fbc4f0.png)
![simulator screen shot apr 26 2016 10 23 37 pm](https://cloud.githubusercontent.com/assets/306524/14842622/ea891c88-0bfd-11e6-8950-c7a028bd70be.png)
",felixchan,2016-04-27 23:02:49
451,2016-04-27 23:57:26,"Did you sort it out?
",dzenbot,2016-04-27 23:02:49
451,2016-04-27 23:59:46,"Yes - it was because I accidentally removedObservers() for notification centers!
",felixchan,2016-04-27 23:02:49
451,2016-04-28 05:11:49,"Cool. Bw, have a look at https://github.com/slackhq/SlackTextViewController/issues/450 to avoid unwrapping `tableView` constantly.
",dzenbot,2016-04-27 23:02:49
450,2016-04-27 05:04:05,"In the recent release the _Nullable annotation had been added in the interface of SLKTextViewController. This can create some pretty nasty code in Swift. In every function where you need to access these properties you have three options.

1) Force unwrap them. If you are using Swiftlint this results in build failures and in general is shunned in the Swift community. Also, you need to suffix the property with ! every place you use it.

2) Optional unwrapping. Doing this can result in silent failures. Again, you need to suffix the property with ? every place you use it.

3) Begin each function with something equivalent to `guard let tableView = self.tableView else { fatalError() }`. Again, you need to do this in each function you use the property.

Totally open to hear the other side or another pattern to workaround this. 😊
",cday,2016-04-27 06:30:06
450,2016-04-27 05:58:46,"I understand what you're saying, but all these 3 objects are in fact, optional.

The best way to get rid of these workarounds is to override `tableView` and unwrap it just once:

<S_CODE_TOKEN>

I hope it helps.
",dzenbot,2016-04-27 06:30:06
450,2016-04-27 06:30:06,"Exactly the kind of workaround I was looking for. Thanks for the help!

P.S. Kudos for changing the example to include this. 💯
",cday,2016-04-27 06:30:06
450,2016-04-27 06:31:43,"Glad it helped!
I was browsing the code of Fabler's iOS app. Pretty legit. Good work.
",dzenbot,2016-04-27 06:30:06
449,2016-04-26 12:54:21,,hoosrightapp,2016-04-26 18:31:08
449,2016-04-26 18:31:08,"Check out the sample project, everything is demo'd there.
This library doesn't take care of the data source for your tableView. You need to provide it.
",dzenbot,2016-04-26 18:31:08
448,2016-04-25 23:16:50,"When using the UITabbarController,
input bar covered in the tab bar
i'm fixed
",devmario,2016-07-20 18:56:19
448,2016-05-04 04:24:32,"Could you please explain better what this fixes, and how to reproduce the issue?
",dzenbot,2016-07-20 18:56:19
448,2016-07-16 17:52:09,"In quite a few cases, when the controller is in a uitabbarcontroller, the text input bar gets hidden behind the tab bar. This fixes that. Can we get this merged?
",AndrewBarba,2016-07-20 18:56:19
448,2016-07-16 17:56:15,"I think this is the better PR: https://github.com/slackhq/SlackTextViewController/pull/488/files
",AndrewBarba,2016-07-20 18:56:19
448,2016-07-20 18:56:19,"Thanks @devmario for your contribution but I've merged https://github.com/slackhq/SlackTextViewController/pull/488 which fixes this.
",dzenbot,2016-07-20 18:56:19
447,2016-04-22 23:19:25,"Has anyone figured out a way to fix the insert animation from flipping the cell until the cell is refreshed when using `insertItemsAtIndexPaths`?
",jarodl,2016-08-28 12:32:35
447,2016-07-30 22:17:30,"@jarodl  Try to use this:

<S_CODE_TOKEN>
",dkabyshev,2016-08-28 12:32:35
446,2016-04-21 21:38:51,,dzenbot,2016-04-21 21:40:26
446,2016-04-21 21:40:24,"🏁 
",TosinAF,2016-04-21 21:40:26
445,2016-04-21 04:53:06,"Since upgrading to 1.9.2 from 1.9.1, I'm receiving this error whenever I begin typing in the text field:

>  **\* Assertion failure in -[SLKTextView lookForPrefixes:completion:], /Users/felix/Project/Pods/SlackTextViewController/Source/SLKTextInput+Implementation.m:28

This is how I'm configuring my tableView:

<S_CODE_TOKEN>

I don't need AutoComplete or prefix lookup. Do I need to disable it?
",felixchan,2016-05-08 05:30:14
445,2016-04-21 05:44:35,"This was fixed in https://github.com/slackhq/SlackTextViewController/issues/438
Will release a patch soon.
",dzenbot,2016-05-08 05:30:14
445,2016-04-27 11:51:05,"hey @dzenbot ,so is #438 released yet? If not when will it be released?
",allenx,2016-05-08 05:30:14
445,2016-05-06 15:21:15,"Crashes for me too
",HiroshiHorie,2016-05-08 05:30:14
445,2016-05-08 05:30:14,"[Version 1.9.3](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.9.3) has now been released, including the fix for this crash.
",dzenbot,2016-05-08 05:30:14
445,2016-11-02 13:14:25,"Today I update to new version (1.9.5) and registering custom cell encounters a new problem:

`UINib *nibSenderText = [UINib nibWithNibName:@""TextCell"" bundle:[NSBundle mainBundle];
[self.tableView registerNib:nibSenderText forCellReuseIdentifier:@""Text""];`

The error is this:

> ssertion failure in -[UITableView _configureCellForDisplay:forIndexPath:], ... failed to obtain a cell from its dataSource raised during typesetting layout manager <NSLayoutManager: 0x6180001f7400>

The result is that custom cell is not loaded.
",novinfard,2016-05-08 05:30:14
444,2016-04-21 04:04:25,"By default, cells load from the bottom.  Is there a way for cells to load from the top? (But new messages still append on bottom)  I don't need the ordering of items to change.  

I just want a mode where the user to be able to browse ""from the top"" instead of ""from the bottom"".
",felixchan,2016-04-21 04:32:07
444,2016-04-21 04:06:30,"Please see https://github.com/slackhq/SlackTextViewController#inverted-mode
It's either top or bottom. For any custom mechanism, I suggest using UICollectionView with a custom layout to manage insertion from the bottom.
",dzenbot,2016-04-21 04:32:07
444,2016-04-21 04:28:40,"Thanks.  How can I set the inverted property to false? It's not a property of `self.tableView`
",felixchan,2016-04-21 04:32:07
444,2016-04-21 04:32:07,"Nevermind - I'm an idiot  .  `self.inverted` 

Thanks!
",felixchan,2016-04-21 04:32:07
443,2016-04-18 19:52:52,"Leave it to the subclass to handle it.
",dzenbot,2016-04-18 20:09:45
442,2016-04-18 18:16:38,,dzenbot,2016-04-18 18:19:17
442,2016-04-18 18:19:10,"🏁 
",TosinAF,2016-04-18 18:19:17
442,2016-04-18 18:19:30,"🏁 
",TosinAF,2016-04-18 18:19:17
441,2016-04-18 03:08:45,"Skips auto-completion text processing if no prefix have been registered. This is a regression bug.
Also makes `-shouldProcessTextForAutoCompletion:` require super from now on.

Fixes #438
",dzenbot,2016-04-18 17:35:22
441,2016-04-18 17:35:17,"🏁 
",TosinAF,2016-04-18 17:35:22
440,2016-04-17 00:55:06,"Firstly, thanks for a great package!

I just downloaded and updated to latest version, now the keyboard is ""stuck"" and not hiding when scrolling tableview. Everything works fine though except for the visual scroll to hide keyboard. Any suggestions what it might be?
",Sneakr,2016-04-17 02:18:05
440,2016-04-17 01:09:51,"This feature has been removed in 1.9
Please see https://github.com/slackhq/SlackTextViewController/pull/355 for an alternative approach.
",dzenbot,2016-04-17 02:18:05
440,2016-04-17 02:18:03,"Thanks for quick support! Ill look it up! cheers
",Sneakr,2016-04-17 02:18:05
439,2016-04-16 08:27:53,"I see that you're hardcoding the border color the layer of SLKTextView in SLKTextInputbar. Can you publicize the getter and setter for this property?
",inb4ohnoes,2016-04-16 08:37:08
439,2016-04-16 08:35:36,"Also while you're at it, maybe ability to modify the corner radius and such as well?
",inb4ohnoes,2016-04-16 08:37:08
439,2016-04-16 08:37:08,"I've just realized that I'm a blithering idiot. Please ignore this.
",inb4ohnoes,2016-04-16 08:37:08
438,2016-04-15 13:57:18,"Crashes with

`*** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'You must provide a set containing String prefixes.'`

Fixed it on my project with the following snippet to init the prefixes but should probably be an optional

`self.registerPrefixesForAutoCompletion([""""])`

This is only since updating from 1.9.2/3 to the latest today
",thewhitewood,2016-04-18 17:35:22
438,2016-04-15 15:18:25,"It's an assert exception, dev only.
If you don't need to register prefixes for auto-completion, simply do not call `registerPrefixesForAutoCompletion`
",dzenbot,2016-04-18 17:35:22
438,2016-04-17 13:54:25,"@dzenbot it occurs if you _don't_ call `registerPrefixesForAutoCompletion` at all though, so it's a problem.
",sjrmanning,2016-04-18 17:35:22
438,2016-04-18 02:43:24,"Gotcha!
",dzenbot,2016-04-18 17:35:22
437,2016-04-14 08:45:04,"An import error of `SLKTextView.h` occurs when I use the framework in version 1.9.2.
",dacchan,2016-04-15 06:55:26
437,2016-04-14 09:03:05,"Oh, Sorry it was revised in 4c6e3ef
",dacchan,2016-04-15 06:55:26
437,2016-04-14 16:13:31,"I'm having the same problem in **1.9.2**. I can successfully build **1.9.0** and **1.9.1**.

Built with:

<S_CODE_TOKEN>
",joshfreemanIO,2016-04-15 06:55:26
437,2016-04-14 16:15:06,"Can you target a specific commit with Carthage?
Say https://github.com/slackhq/SlackTextViewController/commit/4c6e3ef0e0314b184671fd23cb2fc78f8e89112c

Could you confirm if this commit fixes it?
",dzenbot,2016-04-15 06:55:26
437,2016-04-14 16:23:54,"This fixes it for me–thanks @dzenbot 
",joshfreemanIO,2016-04-15 06:55:26
437,2016-04-15 06:55:26,"https://github.com/slackhq/SlackTextViewController/commit/4c6e3ef0e0314b184671fd23cb2fc78f8e89112c is now part of 1.9.2, so this should be fixed now.
",dzenbot,2016-04-15 06:55:26
436,2016-04-13 17:04:51,"As we don't use Carthage internally at Slack, it is hard to make sure that it doesn't break.
Can anyone recommend a good way of guaranteeing its stability? There's some tests in the project located in `./SlackTextViewController/`. We still need to fix the CI and integrate these tests for PR validation.
",dzenbot,2016-04-15 06:55:35
436,2016-04-13 17:05:12,"Reported in https://github.com/slackhq/SlackTextViewController/issues/415
",dzenbot,2016-04-15 06:55:35
436,2016-04-15 06:55:35,"https://github.com/slackhq/SlackTextViewController/commit/4c6e3ef0e0314b184671fd23cb2fc78f8e89112c is now part of 1.9.2, so this should be fixed now.
",dzenbot,2016-04-15 06:55:35
435,2016-04-13 08:21:55,"Version 1.9.1 and 1.9.2 do not seem to have release notes anymore. Don’t know if this is the right place to discuss it, but I would like to say I miss them. Thanks.
",Soryu,2016-04-27 07:41:23
435,2016-04-13 15:38:24,"Yes, I've been wanting to write down the changelogs. Just haven't had the time.
",dzenbot,2016-04-27 07:41:23
435,2016-04-27 07:41:23,"Ok, both [1.9.1](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.9.1) and [1.9.2](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.9.2) have release notes.
",dzenbot,2016-04-27 07:41:23
435,2016-04-27 07:58:44,"Release notes are now also available from here: https://github.com/slackhq/SlackTextViewController/blob/master/CHANGELOG.md
",dzenbot,2016-04-27 07:41:23
434,2016-04-13 06:36:19,"All OSS projects at Slack have now the MIT license.
",dzenbot,2016-04-13 06:45:54
433,2016-04-05 21:17:10,"This seems to be an Apple bug, since the exception is triggered even before `previewingContext:viewControllerForLocation:` gets called. So far, the only way I've figured to disable 3D touch on the textView is by disabling a private gesture but this is not a solution.

Exception's backtrace:

<S_CODE_TOKEN>
",dzenbot,2016-05-08 05:06:57
433,2016-04-12 19:07:54,"Closed as it seems to be a bug on iOS itself. Please re-open if you have more information about this, or a patch/fix idea.
",dzenbot,2016-05-08 05:06:57
432,2016-03-31 09:12:52,"I want to change the size of the thumbnailView but i couldn't. I set the frame in my custom table view cell but it did not effect. Also I want to reposition the title label and the body label. what part of the code would i tweak?
",tobitech,2016-03-31 16:14:55
432,2016-03-31 15:46:00,"That is not part of the framework. I guess you are talking about the sample project.
",dzenbot,2016-03-31 16:14:55
432,2016-03-31 16:04:47,"Exactly
",tobitech,2016-03-31 16:14:55
432,2016-03-31 16:14:55,"The layout is defined in the table view cell class 😉
",dzenbot,2016-03-31 16:14:55
431,2016-03-31 07:23:44,"At times during a layout pass, the content offset's x value may change.
This was causing the textView's placeholder and its text layout to be misaligned and out of bounds, specially reproducible when starting/ending the auto-completion mode.

Also fixes a regression recently introduced with the typing indicator layout tweaks in https://github.com/slackhq/SlackTextViewController/pull/429.
",dzenbot,2016-03-31 16:43:46
431,2016-03-31 16:42:04,"Looking now, lol
",TosinAF,2016-03-31 16:43:46
431,2016-03-31 16:43:47,"Looks good :checkered_flag: 
",TosinAF,2016-03-31 16:43:46
431,2016-03-31 16:44:18,"💪 thanks
",dzenbot,2016-03-31 16:43:46
430,2016-03-30 19:50:52,"This fixes an edge case where the text input would not follow the keyboard if the textView isn't yet first responder, on a cold launch and tapping right away on the textView.
",dzenbot,2016-03-30 22:40:26
430,2016-03-30 22:39:16,":+1: 
",sukeban,2016-03-30 22:40:26
429,2016-03-30 18:48:24,"Modifies view constraints so the typing indicator view doesn't push the tableView up and down anymore
",dzenbot,2016-03-30 22:59:13
429,2016-03-30 22:59:09,":+1: 
",sukeban,2016-03-30 22:59:13
428,2016-03-30 17:47:08,"Closes #427
",dzenbot,2016-03-30 22:43:51
428,2016-03-30 22:43:48,":clap: 
",sukeban,2016-03-30 22:43:51
427,2016-03-29 22:13:00,"Sometimes, a user might have typed text and switches apps. The app with the text input could get terminated on the background and the typed text would get lost.

Remove the flag in https://github.com/tinyspeck/slack-objc/blob/124642bb3675a9d9634433ec4b65521512a216ac/pods/Pods/SlackTextViewController/Source/SLKTextViewController.m#L1560-L1566
",dzenbot,2016-03-30 22:43:51
426,2016-03-28 21:12:37,"Hi folks, I adore this project and love what it does for iOS.

The Slack Android app has something similar so I was wondering if there's a repo for the Android version as well? I've really looked hard for a library offering a similar experience on Android but failed to find it. 

Sorry for asking here, really appreciate any suggestions you may have. 

Cheers,
Eddy
",EddyVerbruggen,2016-03-31 07:27:10
426,2016-03-31 07:27:10,"Thank you for the kind words Eddy. I'm glad you've found this project useful.
Unfortunately, there is no Android alternative of this same project from Slack. I've passed along your feedback to the Android team. Good luck!
",dzenbot,2016-03-31 07:27:10
426,2016-04-22 06:39:51,"Hi dzenbot, Thanks for the awesome repo. We implemented for our iOS App. Looking Android repo too same as iOS.
",RamdhaSOi,2016-03-31 07:27:10
426,2016-07-19 19:41:02,"@dzenbot Hello, Is there any good news from Android team? We highly appreciate your help on this.
Thanks.
",Joisar,2016-03-31 07:27:10
426,2016-07-19 20:39:04,"Hey folks, I'm one of the engineers from the Android team at Slack and I'm sad to say we don't have an equivalent library available. We were obviously not as clever as our iOS friends when we implemented the parts of this library in our app and it is unlikely we'll be extracting all those bits into library form in the immediate future. If that changes we'll be sure to mention and link to whatever comes in this lib as well.
",michaelworth,2016-03-31 07:27:10
425,2016-03-23 13:38:39,"In my view controller I want to show tableview of some custom size but currently it takes whole view controller size and displaying.

When presenting view controller with navigation bar table view is under the navigation bar.
Is there any way I can solve this.
",sunilsharma08,2016-03-23 15:45:14
425,2016-03-23 15:45:14,"This library wasn't designed to be added as a subview/child vc. I recommend you to fork it and do the appropriate adjustments to fit your needs.
",dzenbot,2016-03-23 15:45:14
424,2016-03-23 03:24:59,,liruqi,2016-03-23 03:29:33
424,2016-03-23 03:29:39,"Thanks!
",dzenbot,2016-03-23 03:29:33
423,2016-03-23 01:28:09,"Goal:
I was looking for a way to dynamically set the layout constraints of the tableView (SLKTextViewController.m // 2142 - 2147). My quick and dirty solution was to remove the pre-defined constraint and replace it. Could you expose these in the .h file?

Current solution:

<S_CODE_TOKEN>
",cjdeletto,2016-03-23 01:45:20
423,2016-03-23 01:41:24,"Why not update the constant and call `layoutIfNeeded` instead?
",dzenbot,2016-03-23 01:45:20
423,2016-03-23 01:45:20,"Even better - thanks!
",cjdeletto,2016-03-23 01:45:20
423,2016-03-23 01:46:47,"Cool. I have though on exposing them, but most are added as arrays of constraints.
It's def. easier to fetch them like you just did with the UIView extension.
",dzenbot,2016-03-23 01:45:20
422,2016-03-22 23:48:55,"We were processing things on a background thread, which were causing main queue deadlock at times because there are just too many UIKit implications from the main queue. Using the background thread here doesn't make any huge different either.
",dzenbot,2016-03-23 00:12:13
421,2016-03-18 19:13:08,"Specially fixes 2 regression bugs:
- The keyboard would show above the text input at times, essentially after presenting a view controller modally that had any object that become first responder before the view was fully visible.
- The auto-completion processing was being started before the keyboard fully appeared, causing the native Quick Type Bar to be missing but its height wasn't updated.
",dzenbot,2016-03-21 19:50:30
421,2016-03-21 19:50:35,"LGTM! 
",AhmedEid,2016-03-21 19:50:30
420,2016-03-18 17:05:20,,dzenbot,2016-10-04 01:28:46
420,2016-10-04 01:28:46,"No need for this after all.
",dzenbot,2016-10-04 01:28:46
419,2016-03-17 10:56:45,"<S_CODE_TOKEN>

No idea how it happened, I can't reproduce it myself.
",kevinrenskers,2016-05-08 05:06:28
419,2016-03-17 15:55:23,"Are you using markdown formatters?
What version of the lib are you currently using?
",dzenbot,2016-05-08 05:06:28
419,2016-03-17 17:06:29,"I am indeed using a markdown formatter, TSMarkdownParser. And I am using SlackTextViewController 1.9.1.
",kevinrenskers,2016-05-08 05:06:28
419,2016-03-17 17:08:03,"Are you using this feature? https://github.com/slackhq/SlackTextViewController#markdown-formatting
",dzenbot,2016-05-08 05:06:28
419,2016-03-17 17:13:50,"Ah sorry :) Yes I do, we use it for double asterisk (bold text).
",kevinrenskers,2016-05-08 05:06:28
419,2016-03-17 17:15:11,"Ok, good to know!
I've seen an exception in that code as well. Will revisit soon.
Would be great if you could manage to repro tho. Would make things so much easier :smile: 
",dzenbot,2016-05-08 05:06:28
419,2016-03-17 17:16:35,"At least now I can try to repro it a bit more targeted. I'll let you know if I find something.
",kevinrenskers,2016-05-08 05:06:28
419,2016-03-17 17:20:55,"The bug is definitely between these lines:
https://github.com/slackhq/SlackTextViewController/blob/master/Source/SLKTextViewController.m#L1896-L1965
",dzenbot,2016-05-08 05:06:28
419,2016-03-17 17:24:49,"The crash report points to https://github.com/slackhq/SlackTextViewController/blob/master/Source/SLKTextViewController.m#L1883 but not sure how precise that is?
",kevinrenskers,2016-05-08 05:06:28
419,2016-03-17 17:31:41,"Probably not very accurate.
I was most likely thinking about this line:
https://github.com/slackhq/SlackTextViewController/blob/master/Source/SLKTextViewController.m#L1926
",dzenbot,2016-05-08 05:06:28
419,2016-03-30 08:18:10,"I haven't been able to reproduce this crash myself. Have you had any luck with this?
",kevinrenskers,2016-05-08 05:06:28
419,2016-03-30 08:40:28,"No, I haven't been able to repro either. I'll keep an eye on it.
",dzenbot,2016-05-08 05:06:28
419,2016-05-08 05:06:28,"Closing as as can't repro. Let's re-open if this is still an issue to anyone.
",dzenbot,2016-05-08 05:06:28
418,2016-03-17 08:41:10,"After clicking on number section on keyboard and then press a number (eg. 1,2,3,...) , it returns to alphabet part each time and it doesn't remain in ""number section"".

![ezgif-2783581416](https://cloud.githubusercontent.com/assets/611607/13840959/3f3bf17a-ec3b-11e5-9788-294ad49f51bc.gif)
",novinfard,2016-08-28 12:31:04
418,2016-03-17 15:13:55,"I just tried to repro, and couldn't.
What version of the lib are you using? Do you have any auto-completion setup?
",dzenbot,2016-08-28 12:31:04
418,2016-03-18 13:07:32,"How to disable auto-completion fully to test it? I could find only getter method for it.
version 1.9.1

Plus, this warning could be seen in console:
`Can't find keyplane that supports type 10 for keyboard iPhone-Portrait-Emoji; using 3444608646_Portrait_iPhone-Emoji-Keyboard_Letters`

UPDATE:
I installed the previous version (1.9.0) and problem completely solved. Then I tested all file of project ,one by one, and found that the problem is definitely in one of the following files of the project:
SLKTextViewController.m 
SLKTextView.h 

UPDATE 2:
I finally find the bug:
SLKTextView.m

<S_CODE_TOKEN>

By commenting `[self refreshFirstResponder]` the problem solved.
",novinfard,2016-08-28 12:31:04
418,2016-03-21 20:34:51,"Auto-complete features are disabled by default, unless you register prefixes.
https://github.com/slackhq/SlackTextViewController#1-registration

`refreshFirstResponder` is needed so we can disable the auto-correction while auto-completing, because it overrides unrecognised text all the time when tapping on the space bar.

Try setting `self.textView.autocorrectionType = UITextAutocorrectionTypeNo`, so it doesn't even try to reload the input view.
",dzenbot,2016-08-28 12:31:04
417,2016-03-16 23:34:10,"Hi there, I just found two small bugs.
One is about `UIlongPressGestureRecognizer` could be added multiple times because the condition check in `- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath`. 
And another is about `UIAlertController` that could be presenting multiple times because of it's a continuous event recognizer.
Also, I implement Swift Example as well since I'm working on a Swift project.

Thanks all the great efforts of `SlackTextViewController`!! It's really really really COOL and AWESOME!!!

Cheers,

Allen
",weijentu,2016-03-22 21:18:52
417,2016-03-16 23:58:29,"This is great! Thank you for doing this.

I had some progress in https://github.com/slackhq/SlackTextViewController/pull/391 but didn't have time to continue with it.
Will review this soon! 
",dzenbot,2016-03-22 21:18:52
417,2016-03-22 22:05:39,"Cool! That's AWESOME :smile: 
",weijentu,2016-03-22 21:18:52
416,2016-03-15 11:24:10,"Hello, 

I found there's a ""jump"" when setting the `inputView` property of the text view:

<img src=""https://cloud.githubusercontent.com/assets/1046917/13776202/dbe67ba2-eae3-11e5-8914-822b4a1c3c65.gif"" alt=""Without Animation"" style=""height: 360px;""/>

It looks like the value of `UIKeyboardFrameBeginUserInfoKey` and `UIKeyboardFrameEndUserInfoKey` are the same when `reloadInputViews` is called after setting a custom `inputView`.

So I add a condition to check if the height of the keyboard changed.

This is the result after the modification:

<img src=""https://cloud.githubusercontent.com/assets/1046917/13776212/eebe7ab8-eae3-11e5-9594-2829d70f1280.gif"" alt=""With Animation"" style=""height: 360px;""/>

Looking forward to your feedback. 
",cyhsutw,2016-03-23 06:51:38
416,2016-03-23 06:51:46,"Looks good! Thanks.
",dzenbot,2016-03-23 06:51:38
416,2016-03-23 09:41:06,"@dzenbot Thank you! :smile: 
",cyhsutw,2016-03-23 06:51:38
415,2016-03-11 20:43:34,"I run into this problem pretty frequently. (Screenshot attached)
It happens 25% of the time, where upon returning to the app, the keyboard is dismissed but the view textInputBar is not reset. 

I am running an iPhone 6+ (It occurs on my iPhone 6 and iPhone 5)
I am running iOS 9.2

As you can see I only have one view controller and it's extremely simple.

<S_CODE_TOKEN>

![image](https://cloud.githubusercontent.com/assets/2183729/13714943/8f720ce2-e786-11e5-9722-9b3275e86d28.png)
",mbalex99,2016-04-20 05:13:38
415,2016-03-16 21:30:50,"Are you using the latest version of the lib?
",dzenbot,2016-04-20 05:13:38
415,2016-03-18 10:30:11,"Yes.

On Wed, Mar 16, 2016 at 2:31 PM Ignacio Romero Zurbuchen <
notifications@github.com> wrote:

> Are you using the latest version of the lib?
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly or view it on GitHub
> https://github.com/slackhq/SlackTextViewController/issues/415#issuecomment-197557276
> 
> ## 
> 
> Maximilian Alexander
> mbalex99@gmail.com
> http://blog.edenmsg.com
",mbalex99,2016-04-20 05:13:38
415,2016-03-21 09:17:38,"I am seeing the same issue, but not when backgrounded, it seems completely random.

I am creating a class that is a SLKTextViewController, and inside of it I am not calling any set first responders, or anything like that, just the basic implementation.

I am then placing that controller into a CAPSPageMenu, which is a navigation controller with 3 pages. Sometimes when typing things into the chat section the text bar will just not dismiss. Other times it just won't dismiss randomly when switching pages. Either way I cannot reproduce, and have tried for a long time, it seems completely random.

Here is a gif, mind the poor quality. 

![issue2](https://cloud.githubusercontent.com/assets/5479251/13914332/f29fe934-ef0a-11e5-8c9b-50532618ef31.gif)
",elmateo487,2016-04-20 05:13:38
415,2016-03-21 19:43:45,"This should be fixed in https://github.com/slackhq/SlackTextViewController/pull/421
",dzenbot,2016-04-20 05:13:38
415,2016-03-21 20:35:31,"#421 is now merged into master. Please give it a try.
",dzenbot,2016-04-20 05:13:38
415,2016-03-21 20:36:25,"Does that mean it's ready for cocoapods trunk update?
",mbalex99,2016-04-20 05:13:38
415,2016-03-21 20:37:17,"Not yet. You can install from a specific merge hash just to try it out and confirm the bug fix.
",dzenbot,2016-04-20 05:13:38
415,2016-03-21 20:37:55,"Got it thank you!
",mbalex99,2016-04-20 05:13:38
415,2016-03-22 07:30:01,"Bummer. I really wished it would fix my issue, but no luck. Same issue as above
",elmateo487,2016-04-20 05:13:38
415,2016-03-22 21:34:39,"@elmateo487 Make sure you're not using some sort of a keyboard manager like IQKeyboardManager.
If you are disable it for your class instance.
",mbalex99,2016-04-20 05:13:38
415,2016-03-23 06:58:36,"Yeah, no keyboard management, or first responders or anything I can see of the sort.
",elmateo487,2016-04-20 05:13:38
415,2016-04-13 00:22:54,"The only way I was able to get around this entirely was by throwing this into ""viewWillDisappear""

Swift:

<S_CODE_TOKEN>

ObjC:

<S_CODE_TOKEN>
",rrallo,2016-04-20 05:13:38
415,2016-04-13 05:13:13,"Wish that worked. Still no go.
",elmateo487,2016-04-20 05:13:38
415,2016-04-13 06:59:34,"Just released [**version 1.9.2**](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.9.2).
Please let me know if this is still an issue for you guys.
",dzenbot,2016-04-20 05:13:38
415,2016-04-13 07:23:03,"Call me dumb... but I can't build after doing a carthage update. SLKTextInput.h file not found, and could not build ObjC module SlackTextViewController
",elmateo487,2016-04-20 05:13:38
415,2016-04-13 07:24:09,"What version were you using before?
",dzenbot,2016-04-20 05:13:38
415,2016-04-13 07:24:39,"1.9.1
",elmateo487,2016-04-20 05:13:38
415,2016-04-13 07:40:02,"Carthage support got broken with 1.9.2
Just fixed it. Try again 😉
",dzenbot,2016-04-20 05:13:38
415,2016-04-13 07:50:35,"Hum, still same problem with 1.9.2
",elmateo487,2016-04-20 05:13:38
415,2016-04-13 16:53:01,"@elmateo487: ok, but Carthage is working again, right?
",dzenbot,2016-04-20 05:13:38
415,2016-04-13 16:54:25,"Sorry wasn't clear. Still couldn't build via Carthage. Same errors. 
",elmateo487,2016-04-20 05:13:38
415,2016-04-16 06:20:48,"@dzenbot I finally got it to build, and congrats! The issue is gone for me! The gif above was very reproducible, and I cannot reproduce it now.

THANKS!
",elmateo487,2016-04-20 05:13:38
415,2016-04-16 06:22:43,"@elmateo487 thank you for the heads up!
@mbalex99 can you confirm this as well?
",dzenbot,2016-04-20 05:13:38
415,2016-04-20 05:12:56,"@dzenbot confirmed looks good for me!
",mbalex99,2016-04-20 05:13:38
414,2016-03-08 12:08:41,"How we could change the size of rightButton? I could not find any proper method of your class to do it.
`slk_appropriateRightButtonWidth` is a getter method, not setter.
",novinfard,
414,2016-03-08 19:06:29,"Sorry, this isn't supported yet.
",dzenbot,
413,2016-03-07 03:59:13,"Do you have an example of using a custom typing indicator in swift?
",hmaidasani,2016-03-08 19:07:18
413,2016-03-08 19:07:13,"No, sorry. It should be pretty straightforward if you have a look at the Objective-C example.
",dzenbot,2016-03-08 19:07:18
412,2016-03-01 16:00:45,"In the swift example code simply adding `self.textView.typingSuggestionEnabled = false` in `configureViews()` hides the predictive text but as soon as you start typing the bar pops back into view.

This is Xcode 7.2.1 and iOS 9.2
",dominsbeard,
412,2016-03-03 10:41:48,"That is a bug. It has been like that for quite some time probably.
This is because, internally, in `SLKTextViewController` [this method is called regularly](https://github.com/slackhq/SlackTextViewController/blob/614b44f48db91a33d9c651d40995cc072f121738/Source/SLKTextViewController.m#L1160-L1176) when the text changes in the `textView`. The `typingSuggestionEnabled` feature was mainly used to disable auto-correction when the auto-completion mode was on.

What you want to achieve is to disable the typing suggestion forever then?
",dzenbot,
412,2016-03-18 00:56:13,"It would be nice if this could be forever. I tried doing so by also setting it to `NO` in `textViewDidBeginEditing:(UITextView *)textView`, but that really messed up performance when typing. 

The reason I would like to hide it is because I'm already showing a toolbar in addition to the one in this controller resulting in a lot of space being taken up when the user is typing (Think Facebook Messenger).
",FreshDonut,
412,2016-10-28 12:47:19,"Ran into the same thing and what worked for me was doing this in the (ObjC) class extending `SLKTextViewController`:

<S_CODE_TOKEN>

UPDATE:
Hmm, that's because of a bug in iOS 10.x beta I'm afraid (the log is filled with errors related to the required dictionary).. my iOS 9 device isn't helped by this LoC.\

UPDATE 2:
Seems like the only current way (I'd love to be wrong here!) is setting `self.textView.secureTextEntry = YES;`. The downside is that it'll also disable the Emoji keyboard so it's not for everyone.
",EddyVerbruggen,
411,2016-02-26 04:30:32,"When the view controller first loads, everything is fine -- the ""first"" item is displayed at the bottom of the screen, and the bottom border of that item is _just_ above the UITabBar.   The tableView treats the top of the UITabBar as the end. 

When my UITabBar performs a modal segue and then later on gets unwinded back, the tableView suddenly doesn't sense the UITabBar - it treats the bottom of the screen as the end.  The first cell is covered by the TabBar.

I'm using inverse mode and also `textInputHidden = true`
",felixchan,2016-04-25 20:05:05
411,2016-02-26 04:31:17,"Please add a screenshot of the layout issue to better understand.
",dzenbot,2016-04-25 20:05:05
411,2016-02-26 04:35:54,":+1: 

When app first loads: 

![before](https://cloud.githubusercontent.com/assets/306524/13343215/4a1a0fba-dbff-11e5-8ea0-2c89eaca1e92.png)

When the TabBar performs a modal segue and then  I unwind back to the TabBar:
![after](https://cloud.githubusercontent.com/assets/306524/13343214/4a072076-dbff-11e5-9331-541bb07ad414.png)

(The tableView will stay like this forever, until I terminate the app)
",felixchan,2016-04-25 20:05:05
411,2016-02-26 04:44:06,"This sort of fixed it, but I'm not sure if it's a hack or not...

<S_CODE_TOKEN>

I notice that this messes up the initial load (the initial load is now higher than normal)
",felixchan,2016-04-25 20:05:05
411,2016-03-08 19:09:10,"Did you try setting `self.edgesForExtendedLayout = .None` in your view controller?
",dzenbot,2016-04-25 20:05:05
410,2016-02-25 03:32:40,"Update README with a note about heightForAutoCompletionView. It took me a really long time to figure out why the autocomplete wasn't showing up.
",ndbroadbent,2016-02-25 03:45:45
410,2016-02-25 03:45:45,"Ah never mind, it's already there under the Layout header. I just didn't realize it was important to override that function!
",ndbroadbent,2016-02-25 03:45:45
410,2016-02-25 03:58:42,"That's a good point. We could use a better default value.
",dzenbot,2016-02-25 03:45:45
409,2016-02-24 21:34:06,,kylehorn,2016-02-24 21:34:15
408,2016-02-22 21:04:33,"Fixes #392, broken since 1.7.1
",dzenbot,2016-02-22 21:05:25
407,2016-02-22 09:58:26,"I'm using 1.9.1. The dark shadow would disappear after segue animation finished.
![img_7950](https://cloud.githubusercontent.com/assets/770482/13215029/a3da35e8-d920-11e5-8303-08cc7a64141b.PNG)
",zhubofei,2016-02-22 10:04:44
407,2016-02-22 10:04:44,"Please see https://github.com/slackhq/SlackTextViewController/issues/114#issuecomment-71189550
",dzenbot,2016-02-22 10:04:44
406,2016-02-22 08:23:40,"I want to add a tableHeaderView to tableView. But I found that the tableView doesn't finish loading when viewDidLoad is triggered, which cause some trouble in auto layout. Is there a function that I can use when tableView is loaded?
",zhubofei,2016-02-22 09:21:19
406,2016-02-22 09:38:35,"Did you figure it out?
",dzenbot,2016-02-22 09:21:19
406,2016-02-22 09:40:21,"Yes, I use viewDidLayoutSubviews() instead. But I'm not sure if it is the best practice
",zhubofei,2016-02-22 09:21:19
406,2016-02-22 09:43:25,"Any extra configuration should be implemented after calling `super`.
",dzenbot,2016-02-22 09:21:19
405,2016-02-21 02:59:57,"When I first load the VC and show the keyboard, there is a second delay where the user can't do anything.  The textInputBar moves ""up"" for 1 second, and during this time, I'm unable to perform any tap gestures. 

Is there a way to disable these animations without manually overriding UIView animation settings?

I notice that I can stop animations after calling `super.viewWillAppear` and then start animations immediately before `super.viewDidAppear`.  This makes everything instant, but this solution messes up transitions between view controllers:

<S_CODE_TOKEN>
",felixchan,2016-02-26 04:25:01
405,2016-02-22 09:48:24,"You want to present the keyboard without animation?
",dzenbot,2016-02-26 04:25:01
405,2016-02-26 04:25:00,"I presented the keyboard (without animation) after viewDidAppear(), and all is fine. Thanks :)
",felixchan,2016-02-26 04:25:01
405,2016-02-26 04:25:56,"Did you use `-presentKeyboard:`?
",dzenbot,2016-02-26 04:25:01
404,2016-02-21 00:57:49,"I have tried:

<S_CODE_TOKEN>

However, the background is still `#FEFEFE` (very faint - barely visible with max brightness)
",felixchan,2016-02-22 09:48:44
404,2016-02-21 02:39:41,"Make sure you set it in `viewDidLoad`
",dzenbot,2016-02-22 09:48:44
404,2016-02-21 04:40:59,"Yes, it's set in viewDidLoad, but awkwardly it still shows the #fefefe color
",felixchan,2016-02-22 09:48:44
404,2016-02-21 05:26:22,"It must be because `translucent` is enabled by default. If you're looking for a solid color, try disabling that flag.
",dzenbot,2016-02-22 09:48:44
404,2016-02-22 09:47:07,"Also, are you doing this before calling `super`?
",dzenbot,2016-02-22 09:48:44
403,2016-02-20 12:47:03,"As part of making the auto-completion feature a bit more generic and reusable in other `UITextInput` objects, this PR includes a couple of small features and improvements. Also, makes the text process free from blocking the UI thread when it comes to heavier processing (it is now being done in a background thread).
Decoupling the text processing logic into its own class will help for better testing (still need to add those).

Related to #401 and #402
",dzenbot,2016-03-01 02:41:39
403,2016-02-26 03:44:18,"A quick example about how to reuse the auto-completion module on a `UISearchBar`:
![untitled2](https://cloud.githubusercontent.com/assets/590579/13342600/0fb64368-dbf8-11e5-94a8-cc070fff6665.gif)
",dzenbot,2016-03-01 02:41:39
403,2016-03-01 02:41:28,":muscle: 2016
",fyaqub,2016-03-01 02:41:39
402,2016-02-20 12:41:37,"This is particularly useful when it comes to leave the matching auto-completed item visible at all time, while keep typing related things to it (imagine slash commands with syntax tips).
",dzenbot,2016-03-01 02:41:42
401,2016-02-20 05:22:03,"To be able to reuse the text processing and auto-completion features in other text inputs, such as `UISearchBar` and `UITextField`, we should port as much as possible to a new protocol extension of `UITextInput`.
",dzenbot,2016-03-01 02:41:42
400,2016-02-19 20:33:15,"@dzenbot Recently you fixed a bug which make it impossible to hide bottom bar on push.

The original issue which is fixed now:
[https://github.com/slackhq/SlackTextViewController/issues/340](https://github.com/slackhq/SlackTextViewController/issues/340)
",azhdari,2016-02-22 09:54:08
400,2016-02-22 09:54:06,"Try `1.9.1`
",dzenbot,2016-02-22 09:54:08
399,2016-02-19 06:03:56,"I am using Slack Text View Controller inside essentially a scroll view and its not liking it. I'm using this library https://github.com/maxep/MXSegmentedPager which handles vanilla collection and table view controllers fine but not the Slack one.

so slack is the child, and segmentedPager is the parent controller.

I have `textView.delegate = self` and override the `gestureRecognizer(gestureRecognizer: UIGestureRecognizer, shouldRecognizeSimultaneouslyWithGestureRecognizer otherGestureRecognizer: UIGestureRecognizer` method to no avail. Not sure if this is an issue or if I am doing it wrong, any ideas?

SO link: http://stackoverflow.com/questions/35498520/slacktextviewcontroller-inside-mxsegmentedpager-not-handling-gestures-right?noredirect=1#comment58689114_35498520
",MadeByDouglas,2016-02-21 02:43:29
399,2016-02-21 02:43:29,"I'm no aware of how `MXSegmentedPager` works internally, but you might need to use more gesture delegates to handle it. The lib wasn't designed to be used in that very particular case. Many things could go wrong.
",dzenbot,2016-02-21 02:43:29
399,2016-02-22 20:04:40,"ok
",MadeByDouglas,2016-02-21 02:43:29
398,2016-02-18 19:08:53,"Using `/` when typing in Korean on iOS forces letters to separate and not combine as they should (and this works as intended in other apps on iOS)

User Comment 

> In iPhone client, using Korean slash command is not available. When i type the first key of the command like “ㅇ” of “어디”, because of the autocompletion, cursor goes to next so i cannot type “어”. It make me type like “ㅇㅓ”. In Korean, two or three keys can be a one letter. We combine “ㅇ” and “ㅓ” to make “어”. The only way to use “/어디” is typing “ㅇ” and find “어디” in autocompletion list and choose it. Thank you :D

<img width=""1123"" alt=""screen shot 2016-02-18 at 9 46 50 am"" src=""https://cloud.githubusercontent.com/assets/2206858/13154838/c60bf406-d62f-11e5-8c34-119cfd767bec.png"">
",TosinAF,2016-10-04 01:25:38
398,2016-02-18 23:56:27,"That reminds me of https://github.com/slackhq/SlackTextViewController/blob/30f3ecc9926b08443f4a61d47f30a23d0f8d0aac/Source/SLKTextViewController.m#L1167-L1171
It's probably a thing for most east asian languages. Will dig in soon.
",dzenbot,2016-10-04 01:25:38
398,2016-02-19 01:27:03,"Could probably do the same thing for now and maybe focus on when we start to localize.
",TosinAF,2016-10-04 01:25:38
398,2016-02-19 01:28:24,"Yup. Although, this isn't really a localisation issue. More like an race condition by all the little hacks we do to disable the auto-correction for auto-completion, in east asian languages.
",dzenbot,2016-10-04 01:25:38
398,2016-10-04 01:25:38,"Closing this for now.
",dzenbot,2016-10-04 01:25:38
397,2016-02-17 16:32:09,"This pull request corrects the capitalization of **Xcode** :sweat_smile:
https://developer.apple.com/xcode/

Created with [`xcode-readme`](https://github.com/dkhamsing/xcode-readme).
",ReadmeCritic,2016-02-17 16:57:18
397,2016-02-17 16:58:29,":beers: 
",ReadmeCritic,2016-02-17 16:57:18
396,2016-02-15 23:54:12,"Right now, if you run `pod install` in Examples folder there would be build errors:

<S_CODE_TOKEN>

I've fixed them by running `pod update`, so it is possible to work with example after checkout.
",richardtop,2016-02-16 17:52:53
396,2016-02-16 17:53:07,"Thanks :+1: 
",dzenbot,2016-02-16 17:52:53
395,2016-02-14 11:18:30,"When I set textInputbar.textView.delegate to a valid delegate, the expected callbacks are not executed.

<S_CODE_TOKEN>

In - (void)slk_unregisterNotifications of SLKTextViewController.m, I noticed that all the TextView notifications are unregistered. 

Manually adding in these notification reenabled the delegate calls.

<S_CODE_TOKEN>

Can this unregistration of UITextField notifications be documented some place so people won't be puzzled why the normal delegate behaviour doesn't work?

Thank you.
",eviltofu,2016-02-14 20:33:03
395,2016-02-14 20:32:52,"The delegate of the textView is the view controller, `SLKTextViewController`. Both of these methods work ok when implemented:
https://github.com/slackhq/SlackTextViewController/blob/master/Examples/Messenger-Shared/MessageViewController.m#L658-L666
",dzenbot,2016-02-14 20:33:03
395,2016-02-15 03:25:36,"<S_CODE_TOKEN>

in my delegate is not called. Looking at the code, 

<S_CODE_TOKEN>

and 

<S_CODE_TOKEN>

What is the recommended approach? Should I subclass SLKTextView and invoke my delegate's method from slk_didBeginEditing:(NSNotification *)notification? Sorry for the extra questions.
",eviltofu,2016-02-14 20:33:03
395,2016-02-15 06:30:44,"In `SLKTextView` the notification observers are meant to be used internally, while the `UITextViewDelegate` methods are implemented in `SLKTextViewController`.

You don't need to set the `textView`'s delegate. `SLKTextViewController` already conforms to it.
All these methods are working: https://github.com/slackhq/SlackTextViewController/blob/031d410de271891c984903dc5a8a18fe0e64c13b/Source/SLKTextViewController.m#L1993-L2020

Please have a look at the sample project for more information.
",dzenbot,2016-02-14 20:33:03
394,2016-02-13 04:54:18,"Reverts slackhq/SlackTextViewController#390
",dzenbot,2016-02-13 04:55:26
394,2016-02-13 04:55:28,"Legend! Thanks!
",TosinAF,2016-02-13 04:55:26
393,2016-02-12 06:18:12,"Should this be a wiki?
",dzenbot,2016-08-28 13:02:40
392,2016-02-12 06:16:19,"I set the text view's font size to a larger font. What heights/attributes should (or shouldn't) change to accommodate for this? 

As of right now, the textView seems to be the same size as default.  When I start typing, the textView seems to ""snap"" to a bigger size and adjust itself (which is good).  How can I make the textView adjust itself from the get-go, without requiring typing? 
",felixchan,2016-02-22 21:05:25
392,2016-02-22 20:07:20,"This is a regression actually. It used to work fine.
",dzenbot,2016-02-22 21:05:25
392,2016-02-22 21:01:39,"After some diagnosing, it seems this has been broken since `1.7.1`, in this commit https://github.com/slackhq/SlackTextViewController/commit/4f1373a80a30cc1b1cb38ca620a7980adabbe70a

Checking for `self.textView.window` to be valid seems unnecessary and breaks things while the view is still being configured before adding it as subview.
",dzenbot,2016-02-22 21:05:25
391,2016-02-12 06:10:07,"As part of v2, this library needed better Swift support:
- [x] `_Nullable` and `_Nonnull` annotations in header files.
- [x] Swift snippet examples in README
- [x] Fully Swift sample project
- [ ] SLKTVC Swift template files
",dzenbot,2016-03-22 21:18:50
391,2016-03-21 08:12:41,"This PR now includes a complete Swift sample thanks to @weijentu 👏
Closes #417
",dzenbot,2016-03-22 21:18:50
391,2016-03-21 08:13:19,"@TosinAF: This is ready for review. We can add the Swift template later.
",dzenbot,2016-03-22 21:18:50
391,2016-03-22 21:19:08,"This was a MASSIVE PR, must have taken a long time to implement! 
",AhmedEid,2016-03-22 21:18:50
391,2016-03-22 21:19:34,"It did. It's been on dev for quite some time now :smile: 
",dzenbot,2016-03-22 21:18:50
390,2016-02-11 23:16:16,"Exposing this public method as a last resort if using forceTextInputbarAdjustmentForResponder: isn't a good fit.

An example of such a cases is 3D Touch on iOS 9.2. If the keybaord is open and you 3D touch to view a link; upon closing the webview, the keyboard is resigned but the textInputBar stays in the middle of the screen instead of at the bottom, as expected.

![img_1552](https://cloud.githubusercontent.com/assets/2206858/12993998/62c843f2-d0d2-11e5-9909-e766756ade7f.PNG)
",TosinAF,2016-02-12 00:30:52
390,2016-02-12 00:30:49,":rocket:
",dzenbot,2016-02-12 00:30:52
389,2016-02-11 21:27:06,"In the particular use case I found this necessary, I am using SlackTextViewController in a containing view controller that requires a tabbar. When presenting STVC, the text input field would end up vertically displaced from the keyboard by the height of the tabbar. This pull request addresses and allows for preventing that from happening.
",jakeva,2016-04-12 07:37:26
389,2016-02-11 21:29:20,"In your use case, what are the values of `self.edgesForExtendedLayout`? Isn't `UIRectEdgeBottom` available? 
",dzenbot,2016-04-12 07:37:26
389,2016-02-11 21:34:14,"UIRectEdgeAll - setting it to UIRectEdgeBottom doesn't fix the problem.
",jakeva,2016-04-12 07:37:26
389,2016-02-11 22:08:41,"In fact, it looks like I need to do even more constraint customization… since I need to place a custom view at the top of the scrollview. love to hear your thoughts.
",jakeva,2016-04-12 07:37:26
389,2016-02-11 22:27:56,"On the other hand I can do a lot of constraint manipulation from my containing view controller. In the case of the tabbar however, I really saw no other way to get the behavior I needed so I thought I'd go ahead and submit what I did.
",jakeva,2016-04-12 07:37:26
389,2016-02-11 22:30:48,"If your config is `UIRectEdgeAll`, `self.edgesForExtendedLayout & UIRectEdgeBottom) > 0` should be true and you shouldn't need an additional flag. That's why I'm a bit confused with this.
",dzenbot,2016-04-12 07:37:26
389,2016-02-11 22:31:33,"Sure. Well, it is true. What I need though is for it to return 0, not the height of the tabbar. So I set that flag to false (it defaults to true) for my use case.
",jakeva,2016-04-12 07:37:26
389,2016-02-11 22:32:10,"Oh, gotcha! You want to skip it. My bad, totally misread the title :facepalm:
",dzenbot,2016-04-12 07:37:26
389,2016-02-11 22:32:21,"Correct.
",jakeva,2016-04-12 07:37:26
389,2016-04-12 07:37:26,"Closing this as it is too specific to an isolated use case. There are better ways of achiving this without having to make it part of the lib.
",dzenbot,2016-04-12 07:37:26
388,2016-02-11 10:01:18,"This library was working fine 3 months before and we can dismiss the keyboard interactively like iMessages or any other messing app. But new updates keyboard dismiss as I scroll down the messages a little. Please fix this issue. 
",asifhabib,2016-02-11 14:01:49
388,2016-02-11 14:01:49,"This has already been fixed. Please see https://github.com/slackhq/SlackTextViewController/pull/355
Here's some context too https://github.com/slackhq/SlackTextViewController/issues/361

Will merge this in soon.
",dzenbot,2016-02-11 14:01:49
387,2016-02-10 21:37:38,"This pull requests corrects the spelling of **CocoaPods** 🤓
https://github.com/CocoaPods/shared_resources/tree/master/media

<blockquote class=""twitter-tweet"" data-lang=""en""><p lang=""en"" dir=""ltr"">One day I’ll make a bot that looks through the READMEs of all Pods, looks to see if it uses “Cocoapods” and PRs “CocoaPods” :D</p>&mdash; Ørta (@orta) <a href=""https://twitter.com/orta/status/697374357975388160"">February 10, 2016</a></blockquote>

<script async src=""//platform.twitter.com/widgets.js"" charset=""utf-8""></script>
",ReadmeCritic,2016-02-11 17:05:14
387,2016-02-11 13:58:50,"Nice find. You missed this spot tho: https://github.com/slackhq/SlackTextViewController/blob/master/README.md#with-cocoa-pods 🤓
",dzenbot,2016-02-11 17:05:14
387,2016-02-11 15:25:01,"@dzenbot good catch :smile: 
",ReadmeCritic,2016-02-11 17:05:14
387,2016-02-11 17:05:22,"Thanks!
",dzenbot,2016-02-11 17:05:14
386,2016-02-10 20:22:59,"For some yet unknown reasons, registering `UIKeyCommand` objects from within `SLKTextViewController` caused the view controller never to be deallocated, when interacting with at least 1 of these commands on the iPad. Certainly due to a retain cycle since this didn't cause any memory leaks. With the right repro steps, it was possible to get incremental retain cycles.

After profiling this for a full day, and looking for different alternatives, I decided to move ALL the key command registration back to `SLKTextView`, using a simpler-to-use API like:

<S_CODE_TOKEN>

Key commands are then registered internally in `SLKTextView`, using a common selector and forwarding the events to the block callbacks. By doing this, the view controller is out of risk from being retained, possibly by a UIKit private object since it was untraceable. It seems to me, that this is a behavior change on UIKit since iOS 9, but unsure.
",dzenbot,2016-02-16 18:52:25
386,2016-02-16 17:50:41,"This code looks good. Such an annoying bug!
",sukeban,2016-02-16 18:52:25
385,2016-02-09 22:01:32,"I'm not sure if you have found a good solution for this in swift yet but is there a good implementation of the inverted mode for the swift-update you provided?

I used
`cell.transform = self.collectionView!.transform`

but the text is still showing upside down. Any solutions?
",myflokk,2016-02-28 00:49:57
384,2016-02-07 19:55:35,"The way the auto-completion view has always been presented used to be a bit violent/intrusive, by moving up and down the table/collection view at every character change, specially if the auto-completion view's height was being resized dynamically based on the amount of cells to be displayed.
This feels definetly much better, presenting it now on top of the table/collection view.

![untitled2](https://cloud.githubusercontent.com/assets/590579/12874797/4899fdb0-cdba-11e5-896f-319c02dc1fe0.gif)

Closes #381
",dzenbot,2016-02-11 18:56:26
384,2016-02-09 18:38:50,"@dzenbot Cool! I have an issue currently with auto complete where the auto complete is partially hidden by the text box because of the current handling of this issue. When will this change be merged and released?

Note that the reason for my issue is because the image is actually within the section header, so the current autocomplete is only in the table view below.

![img_4265](https://cloud.githubusercontent.com/assets/4510849/12926607/1969a918-cf19-11e5-9bb4-c71910d7eebb.PNG)
",abc2mit,2016-02-11 18:56:26
384,2016-02-09 18:53:10,"@dzenbot I take that back, it looks like it has nothing to do with the header section, but having to do with the anchor position of the auto complete table, which seems to be tied to the bottom of the view (which is at the top of the keyboard) and not to the text box. Your demo video seems to show that your fix addresses this issue.

![img_4266](https://cloud.githubusercontent.com/assets/4510849/12927120/4c76e742-cf1b-11e5-952e-db9e6815098c.PNG)
",abc2mit,2016-02-11 18:56:26
384,2016-02-09 18:54:52,"Try installing this branch, to see if this actually fixes your issue.
What version of the library are you using?
",dzenbot,2016-02-11 18:56:26
384,2016-02-09 18:56:11,"Using 1.9 release via CocoaPods. I'll try installing the branch after finishing my changes.
",abc2mit,2016-02-11 18:56:26
383,2016-02-07 01:18:56,"To keep code style consistent, and specially, to reduce friction during code reviews.
We're auto-formatting all source's and example's code using [Uncrustify](https://github.com/bengardner/uncrustify).
",dzenbot,2016-10-04 01:30:43
383,2016-10-04 01:30:43,"Will re-open soon, fixing conflicts.
",dzenbot,2016-10-04 01:30:43
382,2016-02-06 17:15:49,,dzenbot,2016-02-06 17:15:52
381,2016-02-06 13:14:50,"Hello,

In the current display of autoCompletionView, it pushed other cells to up in ViewController. I want to display ""autoCompletionView"" over other cells of my table. How to do it?
",novinfard,2016-02-11 18:56:26
381,2016-02-06 13:30:37,"You mean, you want to present the autoCompletionView without pushing the tableView up and down? Present it over the tableView?
",dzenbot,2016-02-11 18:56:26
381,2016-02-06 13:53:51,"@dzenbot yes exactly
",novinfard,2016-02-11 18:56:26
381,2016-02-06 14:11:18,"You will need to modify the view constraints. I've been wanting to do that too for a while, since it can become easily intrusive to the user when the tableView moves up and down too often.
",dzenbot,2016-02-11 18:56:26
380,2016-02-06 12:43:37,"My subclass of SLKTextViewController is inside UITabBarController but its hidesBottomBarWhenPushed is YES, which causes a mistake in bottom margin calculation as is shown here.
![simulator screen shot 2016 2 6 8 39 58](https://cloud.githubusercontent.com/assets/6781789/12866687/fbba6e10-cd11-11e5-9a89-70dc097ee4ad.png)
To fix this I recommend modifying method `- (CGFloat)slk_appropriateBottomMargin` in `SLKTextViewController.m` as

<S_CODE_TOKEN>
",xnth97,2016-02-06 13:51:45
380,2016-02-06 13:32:45,"Please, submit a PR with your proposal.
",dzenbot,2016-02-06 13:51:45
380,2016-02-06 13:51:45,"Oooops sorry I find that it has been fixed in Fixes #362. Please update podspec since it's quite important. Thanks.
",xnth97,2016-02-06 13:51:45
379,2016-02-05 13:00:50,"As the very descriptive title suggests, when a Markdown Formatting Symbol has been registered, a double space in empty `SLKTextView` results in a `NSRangeException`

To reproduce:
- Add `pod 'SlackTextViewController'` to your project 
- Use an empty `SLKTextViewController` subclass that implements `[self.textView registerMarkdownFormattingSymbol:@""*"" withTitle:@""Bold""];` in `- (void)viewDidLoad` 
- Enter a double space in the `SLKTextView` in your `SLKTextViewController` subclass
- The `NSRangeException` will occur

Note:
- I also tested if the /Examples have the same problem, but the `NSRangeException` **does not occur** for `pod 'SlackTextViewController', :path => '../SlackTextViewController.podspec'` (obviously when you use `pod 'SlackTextViewController'` instead, the `NSRangeException` does occur)
- Checked on iOS 8.4 and iOS 9.3 simulators and have number of crash reports from users ranging from iOS 7.1.2 to iOS 9.2.1

Hope this makes it clear how to reproduce the issue :) 

Rgds,
Brecht Bakker 
",brechtbakker,2016-02-19 00:10:46
379,2016-02-12 01:50:21,"Oh, interesting. Will have a look.
",dzenbot,2016-02-19 00:10:46
379,2016-02-15 09:36:31,"Actually, this has been fixed a while back in https://github.com/slackhq/SlackTextViewController/commit/61671ffa0d5cf2d8f5a140638be35f6dfad63057
I will release a new patch version this week.
",dzenbot,2016-02-19 00:10:46
379,2016-02-15 10:00:47,"Great, thanks for checking it out :)
",brechtbakker,2016-02-19 00:10:46
379,2016-02-15 10:04:51,"Of course! Thanks for the detailed repro steps :muscle: 
",dzenbot,2016-02-19 00:10:46
379,2016-02-19 00:10:44,"This fix is included in the `1.9.1` release bw. Closing now.
",dzenbot,2016-02-19 00:10:46
378,2016-02-03 16:22:03,"This change will take padding from custom content and title insets set for the rightButton when sizing the width of the rightButton.
",samhsiung,2016-02-06 15:14:36
378,2016-02-06 15:15:20,"Thanks for this. I included another fix in this branch, to avoid the right button to stretch when `autoHideRightButton` was enabled. This was a regression since iOS 9 came out.
",dzenbot,2016-02-06 15:14:36
377,2016-02-02 15:11:50,"What is the best approach to add my own kind of selection view to the top of the textInputbar?
Thnx!

![imagesizeselector](https://cloud.githubusercontent.com/assets/359542/12753493/a5052fd0-c9c7-11e5-8f7c-f173d35e7533.jpg)
",headkit,2016-02-05 13:45:44
377,2016-02-05 13:45:44,"It is not possible at this moment to achieve such layout using the available APIs. What you could do is to fork the project, and customise the layout to fit your needs. Good luck!
",dzenbot,2016-02-05 13:45:44
376,2016-02-02 06:32:33,"I'd like to override the default ""tap"" gesture recognizer (dismiss keyboard).  Instead of dismissing it, I'd like to call my own methods.

In addition, when users ""hold"" on a UITableViewCell, I'd like to be use UIMenuItem (without interfering with the entire tap gesture).

Is there a way for this?
",felixchan,2016-02-04 15:24:45
376,2016-02-02 07:52:46,"The `singleTapGesture` and `verticalPanGesture` are exposed and the SLKTextViewController superclass already conforms to the `UIGestureRecognizerDelegate`.

Override [this delegate method in your subclass](https://github.com/slackhq/SlackTextViewController/blob/master/Source/SLKTextViewController.h#L560) and return `NO` for `singleTapGesture`.
Then add your new gesture to the tableView, targeting your custom method.

As of your long press gesture, to avoid interference, combine it with the `shouldRecognizeSimultaneouslyWithGestureRecognizer:` delegate method.
",dzenbot,2016-02-04 15:24:45
375,2016-01-30 16:05:30,"Updated as promised, some methods I left untouched 'cause I haven't used them in my projects
",Luccifer,2016-02-01 02:40:19
375,2016-02-01 02:40:19,"Thanks for this, but I wasn't very satisfied with the format.
Instead, I've done it in the updated Swift example branch with both, Obj-C and Swift side by side. https://github.com/slackhq/SlackTextViewController/commit/62e68632b8956f87bc2d1dd24ae463dc65d85590

Will be merging this real soon. Thanks anyways.
",dzenbot,2016-02-01 02:40:19
374,2016-01-30 12:09:11,"Is it possible to create a custom cell configured and designed i.e in `xib` with full control of `IBAction`s? 
",Vaberer,2016-01-30 16:52:47
374,2016-01-30 14:52:01,"Of course. Just make sure to register your nib with your tableView. You can't use protoypes thk.
",dzenbot,2016-01-30 16:52:47
373,2016-01-28 15:59:03,"Hey, great tool - thank you for sharing!
I have one question: How (and within which method) would I add a segmented controll and adjust the position and height of the tableView if I wanted to?
Thank you!!
",headkit,2016-01-28 16:31:54
373,2016-01-28 16:16:06,"I think it would depend of your layout, there are many ways of doing it.
A screenshot of what your layout should look like might help.
",dzenbot,2016-01-28 16:31:54
373,2016-01-28 16:20:51,"![segmentedcontrol](https://cloud.githubusercontent.com/assets/359542/12650533/75bbb0e2-c5e3-11e5-8360-8f818e0bfddf.jpg)
something like this...
",headkit,2016-01-28 16:31:54
373,2016-01-28 16:22:25,"my work in this case is storyboard-based, b.t.w.
",headkit,2016-01-28 16:31:54
373,2016-01-28 16:26:47,"That might not be possible to do using IB, since all layout is programatic in SlackTextViewVC.
There are many ways you could do this:
- tableView header view
- tableView section view
- custom navigation bar with extended height (not easy to do but doable)
- or as a plain subview of the VC. You might need to tweak the tableView's content inset on the top, as an easy way to push the content down.
",dzenbot,2016-01-28 16:31:54
373,2016-01-28 16:30:31,"thank you for the quick answer!
I think tableView would scroll the segment controler when I put it into the section header. but content inset manipulation would be a good solution, I guess.
thnx!
",headkit,2016-01-28 16:31:54
373,2016-01-28 16:31:54,"Good luck ✌️
",dzenbot,2016-01-28 16:31:54
373,2016-01-29 14:19:58,"me again. isn't there a way to resize the tableView? the reason I ask is that its too complicated to change the navigation bar back and forth every time when entering/leaving the view. also its content (navButtons, Label etc.) is hopping. changing the table view header and section is problematic because the are not static/fixed so they scroll with the table.

better would be if one could change the frame of the tableView by any method .
or maybe I better use the SLKTextViewController inside a Container View Controller...?
",headkit,2016-01-28 16:31:54
372,2016-01-28 15:35:05,"I currently use the - (void)textViewDidBeginEditing:(UITextView *)textView method to do some texting if someone is allowed to comment (i.e. are they anonymous or authenticated).

In 1.9 version the TextVewDelegate methods are no longer being called.  I have tried directly setting the textInputBar.textView delegate myself and still no callbacks.  Reverted back to 1.7 and it works as expected.  However, given the private API issues I am embedding this in client code, I don't want to revert back.
",comptonmc,2016-01-28 16:17:47
372,2016-01-28 16:14:03,"Same than https://github.com/slackhq/SlackTextViewController/issues/349
This is now fixed in master. Will summit a patch version today 👊
On the mean time, target that commit.
",dzenbot,2016-01-28 16:17:47
372,2016-01-28 16:17:10,"You guys rock.  Sorry I didn't see the prev bug fix.  Thanks!
",comptonmc,2016-01-28 16:17:47
371,2016-01-26 08:44:00,"Hello,

Will I break the framework If I use a xib file for message cells(tableViewCell)? Unfortunately the programmatic view have very difficulty (plus hard work) when adding new labels(for example for date of messages, etc.) and keeping auto-constraint. Also I check the example of storyboard and it does not really have something customize for tableViewCell.
",novinfard,2016-01-28 04:03:23
371,2016-01-28 04:03:23,"No, it wouldn't break. Simply register your cell view nib with the tableView. It's the same flow you would do when using UITableViewController.
",dzenbot,2016-01-28 04:03:23
370,2016-01-25 13:42:13,"Hello,

Maybe this is not related to framework itself, but I want to know is there any way to add thumbnails of users (avatar)? There are many methods in example named thumbnail, but I could not find where to change it (just name of the file could help me too, just a hint) and add avatar of all users.

<img width=""303"" alt=""screen shot 2016-01-25 at 5 08 43 pm"" src=""https://cloud.githubusercontent.com/assets/611607/12552373/b48558dc-c386-11e5-81d3-8c4bf03a6516.png"" >
",novinfard,2016-01-28 04:04:15
370,2016-01-25 18:38:33,"The example project was using `LoremIpsum`'s API to load random avatar images using `asyncPlaceholderImageFromService:withSize:completion:`. We removed it, since this isn't really a concern for SlackTextViewController, and was causing noticeable scroll lags since that framework didn't have a way of cancelling the request.
We could perhaps add a bundle image instead...
",dzenbot,2016-01-28 04:04:15
369,2016-01-22 04:18:43,"I have been working on a particular issue of a collection view getting calls to update the offset and inset automagically when showing and hiding the system keyboard, so far with great frustration and lot's of hacks. Really only an issue if you want to support iOS 9 and anything lower, as anything lower does not seem to get these magical untraceable calls to update the various content variables of the scrollview be it collection or table. I then came across this little number and was curios as to how you handled this issue, had a quick gander through the source code and you don't seem too, even more curious i then added KVO to see what was happening with the aforementioned magic calls...lo and behold...you don't get any, even on iOS9. I must ask please for my sanity...what sorcery is this?

[for reference to the ninja calls](http://stackoverflow.com/questions/32773986/kvo-collection-view-content-inset-in-ios9)
",Genhain,2016-01-23 21:28:18
369,2016-01-23 21:28:18,"This library doesn't update the content `offset` and `inset` of either the tableView or collectionView when the system keyboard appears/disappears. Instead, we update the height constraints of the view, being squeezed by a bottom constraint meant to simulate the keyboard's space taken on the screen. The result is great when the `inverted` mode is on. When it is not, the content offset doesn't get updated, making it feel buggy at times.
I hope this help.
",dzenbot,2016-01-23 21:28:18
369,2016-01-25 02:39:20,"Thank you, i noticed this a few hours before work ended in a small little eureka moment while wondering how you were doing it, And needles to say this little charm works wonders for not having to deal with inset changes, now my only question is how do you deal with the offset? I wish for it to change relatively with the keyboard i.e not looking like it has scrolled at all, again your implementation seems to not have to do anything with the offset aside from calling layoutIfNeeded, whereas mine moves by some random value when calling this, and again through KVO i noticed that changing the frame of the CollectionViewController.view.frame seems to change the offset. which i suspect is where my issue is stemming from.
",Genhain,2016-01-23 21:28:18
369,2016-01-25 03:53:05,"That's because by default we invert the view, which doesn't change the offset when the resize follows the keyboard animation. It's has pros and cons, but the smooth transition is definetly a huge benefit.
",dzenbot,2016-01-23 21:28:18
369,2016-01-26 04:09:07,"Well i finally come up with an implementation myself, it uses some rather round about calculations, but I managed to refactor it to a useable state.

for posterity

<S_CODE_TOKEN>

I could probably further refactor it into a category, but this class it's being used in is a bit of a mess and i have to make sure i don't break anything doing so. Where is the fun without legacy code ay?

I know you already have a more than capable implementation yourself, but just in case anyone else asks you can direct them to this, also if you don't mind me asking. How does one invert views exactly?

In any case, thank you very much for your time, i know i lack the view inversion to handle the offset changing automatically as you do but it is ultimately better than the previous implementation of manually handling the content inset which tested the very limits of my ability to not launch things on my desk at my product manager who wondered why something so simple was taking so long.
",Genhain,2016-01-23 21:28:18
368,2016-01-19 00:28:38,,dzenbot,2016-01-19 00:28:50
367,2016-01-19 00:23:57,,dzenbot,2016-01-19 00:24:00
366,2016-01-19 00:14:50,"Since iOS 9 SDK was released, the tests were broken because of XCTest framework changes, colliding with the test dependencies. This PR is mostly to re-established what we had before, compiling and running tests perfectly. There's still lots to do, but it's an initial step to keep adding more tests from now on.
",dzenbot,2016-01-19 00:15:02
365,2016-01-18 21:49:07,,dzenbot,2016-01-18 21:50:07
364,2016-01-18 14:11:17,"I am trying to run the swift example and I have everything populating except the searchResults in the autoCompleteView. I've created my own custom cell since I could not access the MessageViewCell.h file.  Can you tell me why the results are not populating labels in the autoCompleteView?

Here is the code in my MessageViewController:

<S_CODE_TOKEN>
",myflokk,2016-01-29 04:28:57
364,2016-01-23 21:32:30,"You are using an old version of the library. `canShowAutoCompletion` is now deprecated. You need to use `didChangeAutoCompletionPrefix:andWord` instead.

[Please have a look at this example](https://github.com/slackhq/SlackTextViewController#2-processing). 
You are now responsible of calling `showAutoCompletionView:`
",dzenbot,2016-01-29 04:28:57
364,2016-01-23 21:59:50,"I switched to the most recent version of the library and I used the {didChangeAutoCompletionPrefix} . I am able to get the autoCompleteView to appear but it will not display the results or labels in the cell.

<S_CODE_TOKEN>
",myflokk,2016-01-29 04:28:57
364,2016-01-23 22:02:14,"Are you configuring the cells in the UITableViewDataSource callbacks?
",dzenbot,2016-01-29 04:28:57
364,2016-01-23 22:04:20,"Here is my code as it currently stands. Is there something I'm not calling to have the cells populated?

<S_CODE_TOKEN>
",myflokk,2016-01-29 04:28:57
364,2016-01-23 22:26:01,"Well, you're not calling

<S_CODE_TOKEN>
",dzenbot,2016-01-29 04:28:57
364,2016-01-23 22:38:56,"@dzenbot 
when I call 

override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.searchResult.count
    }

that causes it to crash with the error 

fatal error: unexpectedly found nil while unwrapping an Optional value
(lldb) 
",myflokk,2016-01-29 04:28:57
364,2016-01-24 00:05:56,"![img_6643](https://cloud.githubusercontent.com/assets/12204779/12533274/5b305c74-c1f0-11e5-8c36-86c10695e312.jpg)

Just wanted to give you a visual of what I mean by the autoCompleteView not showing the results. The table shows up but the rows aren't displaying anything. The func you had me call throws an error. Not sure where to go from here.
",myflokk,2016-01-29 04:28:57
364,2016-01-28 17:14:08,"@dzenbot hey is there anyone that you know could help with this issue for Swift or any update on what could be causing this. I know you're busy and I don't mean to bug you but I REALLY need to find this solution and I've not been able to solve it myself.
",myflokk,2016-01-29 04:28:57
364,2016-01-29 04:28:48,"I just updated the [Swift example project](https://github.com/slackhq/SlackTextViewController/tree/swift-update).
I want to finish this up soon and merge it once and for all in master. Have a look at the implementation, it works there.
",dzenbot,2016-01-29 04:28:57
364,2016-03-10 04:52:18,"FYI, it's not working. 

> Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'no UICollectionViewLayoutAttributes instance for layoutAttributesForItemAtIndexPath
",nguyenchiencong,2016-01-29 04:28:57
363,2016-01-18 08:39:00,"According to http://www.copyright.gov/circs/circ01.pdf , document should list its first year of publication in its copyright

Therefore added a range between 2014-2016
",pra85,2016-01-28 03:54:55
363,2016-01-28 03:55:08,"Thank you
",dzenbot,2016-01-28 03:54:55
362,2016-01-15 20:07:58,"After updating to 1.9 I noticed that my view controller that has `hidesBottomBarWhenPushed` set to `true` breaks the layout for the `textInputbar`. You can reproduce this with the Storyboard example by setting `hidesBottomBarWhenPushed` in `commonInit`.
",davbeck,2016-01-18 21:50:21
362,2016-01-16 08:35:31,"Will have a look. Thanks for reporting.
",dzenbot,2016-01-18 21:50:21
362,2016-01-18 19:14:13,"@davbeck would you mind posting a screenshot to show how the layout is broken?
",dzenbot,2016-01-18 21:50:21
362,2016-01-18 19:23:53,"Certainly:

![](http://davbeck.s3.amazonaws.com/slack-tabbar.png)

It's a little hard to see the white space on the white background, but the bar is moved up the height of the tab bar (44pt).
",davbeck,2016-01-18 21:50:21
361,2016-01-14 20:50:07,"### Summary:

SlackTextViewController is [**no longer using private APIs**](https://github.com/slackhq/SlackTextViewController/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aclosed+private+api+deprecation). We highly recommend updating your app to use [**version 1.9**](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.9), to be in compliance with the [App Store Review Guidelines](https://developer.apple.com/app-store/review/guidelines/) and, therefore, avoid App Store rejections.
### Some Context:

In the SlackTextViewController library, we were internally checking for 3 private class names. We recently removed the private APIs listed below:
- `UIInputSetHostView`
- `UIVariableDelayLoupeGesture`
- `_UITextSelectionForceGesture`

In one instance, we were accessing the keyboard's view to be able to drag the keyboard. In the other two instances, we were detecting the text selection loupe so that the behaviour of the auto-completion feature was more consistent with user expectations.
##### Keyboard Panning

In iOS 9, the keyboard was moved to its own view hierarchy. We were looking up its view so we could move the text input whenever the keyboard frame changed. With the removal of the API access, users will no longer be able to move the keyboard with a panning gesture. This feature will still work in iOS 7 and iOS8, if `keyboardPanningEnabled` is enabled.
**NOTE:** [We are working on an alternative](https://github.com/slackhq/SlackTextViewController/pull/355), to allow dragging the keyboard on iOS 9. Any contribution is very welcomed! 💪
##### Magnifying Glass Detection

When a user activates the loupe by long pressing on the text content area and moves the cursor into a range of text that triggers auto-completion, the loupe would disappear and cause some UI issues. With the removal of the API access, users may experience some of these issues again.

---

We have [filed a radar with Apple](http://openradar.appspot.com/radar?id=5021485877952512) about these issues and requested some features to help third-party developers to better interact with the keyboard.
**NOTE:** Apple as flagged this radar as duplicate of `9261950`.

We highly recommend updating your app to use [**version 1.9**](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.9) in order to avoid an App Store rejection. We sincerely apologize for the inconvenience and are working on putting together better processes to make sure this doesn't happen again. We'd love to hear any feedback you might have.

![image](https://cloud.githubusercontent.com/assets/590579/12337189/62e2674e-babd-11e5-9b30-c11c8bc40580.png)
",dzenbot,
361,2016-01-15 11:29:02,"Why not just use `UIScrollViewKeyboardDismissMode` and `UIKeyboardWillChangeFrameNotification`? I don't understand why the controller has such complex keyboard handling.
",sveinhal,
361,2016-01-17 09:51:43,"We initially used a combination of APIs like `UIScrollViewKeyboardDismissMode`, a custom `inputAccessoryView` and KVO for observing it's superview's frame/center, but the transition felt kind of jarring and it was always possible to see a gap between the text input bar and the keyboard when dragging up/down quickly. Until https://github.com/slackhq/SlackTextViewController/pull/215 was pull requested, introducing a new technique by effectively moving the keyboard's view along the way to guarantee a smoother transition.

`UIKeyboardWillChangeFrameNotification` is unfortunately not enough. This notification isn't fired every time the keyboard's origin changes by result of an interactive dismissal, making it useless since we need to layout the text input bar as soon as there is a change on the keyboard's origin.
",dzenbot,
361,2016-01-18 17:26:39,"I really did appreciate the polish which these methods gave the text view and keyboard handling. I don't think it was appropriate to open-source the project without any documentation which called out private API usage: it's something which should be clearly disclosed, so potential users of the project can make a fully-informed decision about using this code.
",cbowns,
361,2016-01-18 17:38:00,"@cbowns agree, we should have done that at least. We will be more careful from now on. Thank you for your feedback 👊
",dzenbot,
361,2016-12-12 10:26:02,@dzenbot Can we go back to `UIScrollViewKeyboardDismissMode` at this point? I think the jarring animation only appears in the simulator right? I've never seen the gaps on my phone. (And we clearly can't find any better solution for iOS10 at least),zhubofei,
361,2016-12-15 02:04:24,"That could be a solution, but will require somewhat medium/large refactor. Anyone up to the challenge?",dzenbot,
360,2016-01-14 00:50:02,"Currently, `SLKTextInputbar` offers a lot of functionality for a fairly specific design and layout. The design that I'm currently building against doesn't lend itself well to `SLKTextInputbar`'s layout (for example: I have additional buttons below the text view, and want custom layout and animations far beyond what's currently possible), and thus, I've found myself forking SlackTextViewController. I'd just like to clarify up front that I'm just bringing this up for discussion. I understand that this may be completely out of the question, as this project was built for Slack's own needs.

What do folks think about abstracting `SLKTextViewController`'s input bar further, such that it's easier to modify `SLKTextInputbar` for one's own purposes? Here is a proposed change:
- Allow `SLKTextViewController.textInputbar` to be specified in a `SLKTextViewController` initializer
- Reduce the amount of interaction between `SLKTextInputbar` and `SLKTextViewController` and abstract it to a protocol. Custom input bar classes can conform to that protocol.
- This protocol's interface would try to cover the lowest-common-denominator of a messaging app. Off the top of my head, the input bar might only need to be able to specify its preferred height (there are many mechanisms to do so).
- Since `SLKTextViewController` is meant to be subclassed, it seems to make sense that the `SLKTextViewController` subclass interact directly with the input bar (examples: callbacks on button presses, text changing) and not be included in the protocol.
- Keep `SLKTextInputbar` for those who don't need a custom design. If we did so, we'd also want a `SLKTextViewController` subclass that knows how to interact with `SLKTextInputbar`.
",sibljon,
360,2016-01-25 18:45:43,"This is an interesting idea, although abstracting `SLKTextInputbar` might be hard since its pretty tied to `SLKTextViewController` and `SLKTextView`.
We already do an abstraction for `SLKTextView` and the typing indicator, but this other one can be really hard to maintain and cover both side's edge cases too.
Nonetheless, you could try it out and we'll see how it goes.

FWIW, `SLKTextInputbar` deserves some refactoring to allow multiple button outlets, and a better way of adding them (UIButtonItem?).
",dzenbot,
360,2017-02-15 15:22:16,"Hi. 

is it simply possible for now to use custom version of SLKTextInputBar? ",BBurzec,
360,2017-02-15 19:33:57,"Not currently @BBurzec, sorry.",dzenbot,
359,2016-01-13 22:38:35,,dzenbot,2016-01-13 22:51:21
359,2016-01-13 22:51:15,"Private API's :(
",TosinAF,2016-01-13 22:51:21
358,2016-01-13 22:00:52,"There may be additional control logic necessary here for the case that `self.usernames.count == 0`, but this will at least satisfy the Static Analyzer.

Here's the Static Analyzer output in Xcode 7.3 beta 1:

http://cl.ly/3C333Q1g1L1s/Screen%20Shot%202016-01-13%20at%201.59.47%20PM.png
![image](https://cloud.githubusercontent.com/assets/590579/12309183/1fc0ded8-b9fe-11e5-8c87-f8edde4833e3.png)
",sibljon,2016-01-13 22:05:56
358,2016-01-13 22:03:29,"Good catch @sibljon (or the Analyzer) 😅
",dzenbot,2016-01-13 22:05:56
357,2016-01-13 21:54:52,"Fixes crash when double tapping the space bar while the textView was empty.
",dzenbot,2016-01-13 22:28:12
357,2016-01-13 22:28:08,"Reviewed! Looks good! 💃
",TosinAF,2016-01-13 22:28:12
356,2016-01-13 19:22:20,"The Xcode (7.3 beta 1) error/warning I'm seeing is:

> SlackTextViewController/SLKTextView.m:1057:75: Variable 'nextLineCaretRect' may be uninitialized when used here

This seems like a worthwhile change, regardless of whether there's a currently possible code path which results in reading `nextLineCaretRect` before it's initialized with a value.
",sibljon,2016-01-13 20:36:48
356,2016-01-13 20:36:46,"Makes sense!
",dzenbot,2016-01-13 20:36:48
355,2016-01-13 18:02:05,"_Because the keyboard is on its own view hierarchy since iOS 9_, we needed to lookup for its view so we could move the keyboard view following the text input using a panning gesture, using private APIs. [We no longer use private APIs](https://github.com/slackhq/SlackTextViewController/pull/344), but we needed this feature back.
#### This is an alternative technique, working in the following way:
- Whenever the panning gesture recogniser changes state to `Began`, **we take a snapshot of the keyboard window** and **add it as a subview of the textInputbar**, just below, at the same position the keyboard is.
- We then **hide the window keyboard** since it overlaps the app's window.
- Then, when dragging the textInputbar, the user will have the impression the keyboard is following, accomplishing the effect we wanted. After all, we don't need interactivity on the keyboard.
- Whenever the panning gesture recogniser changes states to either `Possible`, `Cancelled`, `Ended` or `Failed`, we **remove the keyboard mockup and unhide the keyboard window**, going back to the original layout.

This works great on iPhone and iPad. It is not needed on iOS 8 and 7, since we are able to access the keyboard view like we use to, without any private API usage.

Here's the result:
![keyboard_panning2](https://cloud.githubusercontent.com/assets/590579/12302925/a50847b0-b9dc-11e5-8605-94874190b2b5.gif)
",dzenbot,2016-07-20 21:06:14
355,2016-01-14 22:51:03,"Why not create an input accessory view of the same height as the text view, and get its frame and move the actual text view?
",rounak,2016-07-20 21:06:14
355,2016-01-14 22:58:15,"We used to do that, some time ago. We moved away from that approach since it wasn't satisfactory enough (dragging lags, UI issues, firing more keyboard notifications than expected, etc.).
See https://github.com/slackhq/SlackTextViewController/issues/243

On iOS 7 and 8, it seemed more reliable to be able to drag the keyboard view guaranteeing the sticky effect of the text input. We never anticipated that huge change on iOS 9. Moving back to the old approach would mean a huge refactor.
",dzenbot,2016-07-20 21:06:14
355,2016-01-15 00:30:18,"@dzenbot how do you think the other people (FB, Insta etc.) do it?
",rounak,2016-07-20 21:06:14
355,2016-01-15 00:38:13,"I sincerely have no clue.
I know that the [Telegram app](https://github.com/peter-iakovlev/Telegram) used to access the keyboard's window using the same technique we did, just camouflaging the private class names by encoding them, and decoding when needed.
",dzenbot,2016-07-20 21:06:14
355,2016-01-20 15:43:24,"Why don't you use [`keyboardDismissMode`](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIScrollView_Class/#//apple_ref/occ/instp/UIScrollView/keyboardDismissMode) set to interactive to achieve this?
",iosdeveloper,2016-07-20 21:06:14
355,2016-01-20 17:05:15,"@iosdeveloper please see https://github.com/slackhq/SlackTextViewController/issues/361#issuecomment-171938265
",dzenbot,2016-07-20 21:06:14
355,2016-02-06 17:16:39,"Closing/Reopening to run tests again.
",dzenbot,2016-07-20 21:06:14
355,2016-03-16 16:31:34,"I Might be a little late but, this can be done by setting an invisible view as an InputAccessoryView of the textView, and then using KVO to observe frame and center changes.
https://github.com/aryaxt/TextInputBar/blob/master/TextInputBar/Source/TextInputAccessoryView.swift

The only challenge I had with this solution was handling and calculating offsets when running in a modal form-sheet in an iPad landscape mode. I believe SlackTextViewController has this issue as well
",aryaxt,2016-07-20 21:06:14
355,2016-03-16 16:36:40,"That is exactly what we used to do before. It's a well known and clean technique.
Problem is that it didn't work on iOS 9, thus we started using private APIs to access the keyboard's window to be able to listen to the `center` property's update.

On iOS 9, this call will never work:

<S_CODE_TOKEN>

https://github.com/aryaxt/TextInputBar/blob/master/TextInputBar/Source/TextInputAccessoryView.swift#L67-L77
",dzenbot,2016-07-20 21:06:14
355,2016-03-16 16:57:08,"@dzenbot Not quite sure what the issue is. I'm currently using this technique in production with no issues on iOS9. I just tested and verified (iOS 9.2.1) that `willMoveToSuperview` get's called and sets the observer, and as I'm pulling the keyboard down `observeValueForKeyPath` is called.

the one thing I noticed is that only `center` is called, and not `frame`

<S_CODE_TOKEN>
",aryaxt,2016-07-20 21:06:14
355,2016-03-16 17:00:07,"What is `newSuperview` for you, on iOS 9?
",dzenbot,2016-07-20 21:06:14
355,2016-03-16 17:14:04,"it returns `<UIInputSetHostView: 0x129431860; frame = (0 667; 375 0); layer = <CALayer: 0x129414d30>)`
",aryaxt,2016-07-20 21:06:14
355,2016-03-16 17:16:53,"I will give it a try to https://github.com/aryaxt/TextInputBar/ but it might just not apply much for this project, since we don't layout the textInput as a text input accessory view any more. Switching back will mean a huge refactor.
",dzenbot,2016-07-20 21:06:14
355,2016-03-16 17:22:30,"@dzenbot :+1: 
FYI: my input bar is not set as an accessoryView, it's added as a view of the controller. The accessoryView is `TextInputAccessoryView` which is just a hidden view is only used for tracking the movement of the keyboard
",aryaxt,2016-07-20 21:06:14
355,2016-04-13 17:45:27,"@dzenbot Man I feel your pain here haha.  

Did you every try using the accessoryView and overriding addConstraint: to capture and modify the height constraint? If so any issues?

I'm using the auto-created height constraint to update the height of the accessoryView to allow for the interactive dismiss to still work. Since that internal constraint is not animatable, I animate the content to the new height before setting the internal constraint.

Check out my project here https://github.com/ashare80/ASTextInputAccessoryView
",ashare80,2016-07-20 21:06:14
355,2016-04-13 17:46:29,"That looks very interesting! Will have a look real soon.
",dzenbot,2016-07-20 21:06:14
355,2016-04-27 16:56:00,"@dzenbot thanks for this solution!
Will it be merged in nearest release?
When should we expect this fix in master?

Thanks!
",AYastrebov,2016-07-20 21:06:14
355,2016-07-20 21:06:14,"We will eventually revisit this solution with a different approach after all.
",dzenbot,2016-07-20 21:06:14
355,2016-11-17 08:39:42,"Has this issue been abandoned? How do we enable this behavior?
",felixchan,2016-07-20 21:06:14
354,2016-01-13 04:50:59,"To have the same `""` as the carthage string
",KrauseFx,2016-01-13 05:26:51
353,2016-01-13 04:50:28,,KrauseFx,2016-01-13 05:27:09
353,2016-01-13 05:27:37,"It's all about consistency :+1: 
",dzenbot,2016-01-13 05:27:09
353,2016-01-13 05:31:02,":rocket: 
",KrauseFx,2016-01-13 05:27:09
352,2016-01-13 04:22:22,"This silences a deprecation warning.
",sibljon,2016-01-13 21:57:18
352,2016-01-13 21:57:18,"Looks like this can be closed, as the commit is in `master`.
",sibljon,2016-01-13 21:57:18
351,2016-01-13 00:59:30,,dzenbot,2016-01-13 01:15:17
350,2016-01-11 08:28:26,"So the auto property is implemented by the super class.
Fixes #349 causing not forwarding all `UITextViewDelegate` callbacks
",dzenbot,2016-01-12 05:54:25
349,2016-01-09 22:05:13,"Has `textViewDidBeginEditing:` been replaced by another method? I looked through the headers, but I can't figure out the problem.`textViewDidBeginEditing:` just isn't called anymore for my `SLKTextView`?  

Using 1.7.2 all works fine
",brechtbakker,2016-01-12 05:54:25
349,2016-01-10 23:38:45,"Same issue here.

After few tests, I found that `textViewShouldBeginEditing:`, `textViewShouldEndEditing:`, `textViewDidBeginEditing:`, and `textViewDidEndEditing:` are not functioning properly, but other `UITextViewDelegate` methods still work fine.

**Update:**
I override a method in `SLKTextView` and get rid of the problem:

<S_CODE_TOKEN>

I'm not quite sure about how to address this issue properly, but this worked for me.
",cyhsutw,2016-01-12 05:54:25
349,2016-01-11 08:31:14,"Sorry about this. It was caused when introducing the new text view delegate of type `<SLKTextViewDelegate,UITextViewDelegate>`. Strangely enough, `textView: shouldChangeTextInRange:replacementText:` still worked but not the other callbacks.

Instead of overriding the delegate setter like @cyhsutw did in his comment, it's simpler to use `@dynamic` for the `delegate` property, so we let super implement it for us. Works like a charm now.

Please have a look at #350
Would appreciate your confirmation of the fix.
",dzenbot,2016-01-12 05:54:25
349,2016-01-12 01:33:05,"Thank you very much @dzenbot :+1: 

It works great after changing `@synthesize delegate = _delegate;` to `@dynamic delegate;`!
",cyhsutw,2016-01-12 05:54:25
348,2016-01-08 23:08:14,,dzenbot,2016-01-08 23:09:47
347,2016-01-08 19:35:33,"Removes usage of the deprecated APIs
",dzenbot,2016-01-08 19:36:19
346,2016-01-08 18:32:15,,dzenbot,2016-01-08 18:34:24
345,2016-01-07 14:44:32,,markcleonard,2016-01-08 03:19:31
345,2016-01-08 03:19:42,"Thanks :muscle: 
",dzenbot,2016-01-08 03:19:31
344,2016-01-06 20:57:39,"As part of not using any private API in this project, we are disabling a few features until a public API is available.
### Keyboard Panning

Because the keyboard is on its own view hierarchy since iOS 9, we needed to lookup for its view so we can move the text input whenever its origin changed. iOS 9 users won't be able to move the keyboard with the gesture anymore, even if the `keyboardPanningEnabled` is enabled. It will still work in iOS 7 and 8.
### Magnifying Glass Detection

Whenever a user activates the magnifying glass by long pressing on the text content area and moves the cursor into a range of text that requires auto-completion, the magnifying glass would disappear all of the sudden, causing erratic UI behaviours. Why, you say? Because we need to reload the textView and disable auto-correction since it overrides any auto-completion while typing.
From now, the `isLoupeVisible` flag will always be false. These erratic behavior will be back again, in any version of iOS.

The code using private APIs is still available in this project's source code, but commented out. Use it at your own risk.

We have filed a radar proposing new APIs to be added in `UITextInputTraits` to help making the keyboard experience better.
http://openradar.appspot.com/radar?id=5021485877952512
",dzenbot,2016-01-08 18:47:09
343,2016-01-04 08:22:56,"Hey all,

I'm trying to add a UIRefreshControl to my SLKTextViewController, but it is to be added to the bottom of the screen, rather than the top. I am guessing that this is a result of the inverted property being set to true. Maybe not really a bug, but this would be nice to support. Any ideas on how to make this work?
",gdroel,2016-01-06 05:22:24
343,2016-01-04 16:24:29,"You can try forcing the refresh control to work from the bottom, ence top when using the inverted mode. There are a few OSS solutions out there, but this one seems nice: https://github.com/vlasov/CCBottomRefreshControl

Related to #55
",dzenbot,2016-01-06 05:22:24
343,2016-01-04 18:53:03,"Thanks for the suggestion. I've actually tried CCBottomRefreshControl, but the refresh icon appears on top of the first row of the tableview for some reason. Maybe I'll try some other libraries. 
",gdroel,2016-01-06 05:22:24
343,2016-01-06 05:22:24,"Unfortunately the library doesn't have much control over this, when `inverted` is on. I hope you can figure it out 💪
",dzenbot,2016-01-06 05:22:24
343,2016-01-06 07:34:02,"I had to put my own refresh spinner in a table footer view to make it work. Here's some code:

<S_CODE_TOKEN>
",gdroel,2016-01-06 05:22:24
343,2016-02-17 00:07:45,"@gdroel Is it possible to provide a more comprehensive example of a working refresh control with this library? I've been looking everywhere and I can't find anything but references that it's possible.
",jacortinas,2016-01-06 05:22:24
343,2016-02-17 07:01:39,"Sorry @jacortinas, this is the only way i've been able to implement it. Definitely would love to see a library for this. 
",gdroel,2016-01-06 05:22:24
342,2016-01-03 00:58:04,,dzenbot,2016-01-05 20:10:27
342,2016-01-05 20:13:49,"This is not the right approach...
",bradya,2016-01-05 20:10:27
342,2016-01-05 20:14:48,"This is an open source library, we don't want to use private APIs at all.
",bradya,2016-01-05 20:10:27
341,2016-01-03 00:19:23,"Several tweaks for supporting `UITabBarController`, after a regression introduced in https://github.com/slackhq/SlackTextViewController/commit/a686d96548019078cce025de51af94af2ef78846#diff-3b0e9bbcea407f0c4929d544e275f114R1240

Fixes #340
Fixes #339
",dzenbot,2016-01-04 21:40:45
340,2015-12-31 23:42:04,"When using this pod in UITabBar based application, the input text is hidden behind the tabbar.
",LHIOUI,2016-01-04 21:40:45
340,2016-01-02 05:14:34,"@LHIOUI please share a screenshot of this issue to better understand your view hierarchy. It should be working fine.
",dzenbot,2016-01-04 21:40:45
340,2016-01-02 10:16:59,"My view hiearchy is something like this tabbedbarVC-->NavigationVC->ViewController(extends SLKTextViewController)
![simulator screen shot 02 jan 2016 10 28 16](https://cloud.githubusercontent.com/assets/5761153/12074004/2db88a42-b13c-11e5-8796-cec3945ec08d.png)
![simulator screen shot 02 jan 2016 10 29 36](https://cloud.githubusercontent.com/assets/5761153/12074005/2dbaeda0-b13c-11e5-82de-67e18ad6a19b.png)
I have attached tow image with tow differents tabbar view opacity (1 annd 0.1) you can see here the uitextview is hidden behind the tabbar. 
We can avoid this by putting in viewDidLoad

<S_CODE_TOKEN>
",LHIOUI,2016-01-04 21:40:45
340,2016-01-05 18:31:58,"@LHIOUI try out that commit and let me know if it's fixed for your too.
",dzenbot,2016-01-04 21:40:45
340,2016-01-05 21:26:54,"@dzenbot Yes, I can confirm it Works now. Thank you.
",LHIOUI,2016-01-04 21:40:45
340,2016-02-19 07:57:08,"@dzenbot It's not support `hidesBottomBarWhenPushed`, many apps hide bottom bar on chat pages or comments. Now, it's impossible.
",azhdari,2016-01-04 21:40:45
339,2015-12-31 10:21:07,"I'm using SLKTextViewController but have more textviews (UITextView) in my controller. This is now causing a crash here: https://github.com/slackhq/SlackTextViewController/blob/master/Source/SLKTextViewController.m#L1864

`-[UITextView autoCompleteFormatting]: unrecognized selector sent to instance`

The delegate in SLKTextViewController should probably check if the textview is an instance of SLKTextView.

Broke in 1.8.0, worked fine in 1.7.2.
",kevinrenskers,2016-01-04 21:40:45
339,2015-12-31 10:25:35,"Workaround: I'm using a subclass of SLKTextViewController and have added this code:

<S_CODE_TOKEN>
",kevinrenskers,2016-01-04 21:40:45
339,2015-12-31 18:27:44,"Good point! Will add the check for `SLKTextView`. Didn't anticipate the usage of other subclasses of UITextView.
",dzenbot,2016-01-04 21:40:45
338,2015-12-27 19:08:47,"It does not work the transition from one controller to controller SLKTextViewController. I can not transfer the data to send not only text messages on the server, for example a user name and some API Keys. How to solve this problem? How transition same data to SLKTextViewController? 

On Swift plz
",ChStarfish,2015-12-27 19:36:38
338,2015-12-27 19:36:38,"The library is all about offering simpler UI APIs to build your messaging interfaces. It doesn't do any networking or backend work. You need to build that yourself. ✌️
",dzenbot,2015-12-27 19:36:38
337,2015-12-23 23:21:41,,dzenbot,2015-12-23 23:25:14
336,2015-12-23 05:00:01,,dzenbot,2015-12-23 05:07:06
335,2015-12-23 04:53:18,,dzenbot,2015-12-23 05:07:07
334,2015-12-22 19:03:45,"The first UITableViewCell in the UITableView is behind the `textInputBar` when the UIViewController appears instead of having a top content inset greater than 0. It will only fix itself when I tap on the `textView` (bringing up the keyboard) and then tap off of it (dismissing the keyboard).

This is after upgrading from `v1.7.2` to `v1.8`. I bisected around and looks like https://github.com/slackhq/SlackTextViewController/commit/3ce0f7bf57c62989e00ae156fff925736cb9c16d breaks it.
",briankracoff,2016-01-25 18:39:39
334,2016-01-04 16:28:04,"Thanks. Will look into it.
",dzenbot,2016-01-25 18:39:39
334,2016-01-25 16:37:53,"Found out what's going on. I was adding a `UIRefreshControl` to the `UITableView` to the top as usual (which will put it at the bottom since `inverted == true`). 

However, I called `refreshControl.beginRefreshing()` in `viewDidLoad` so it'll show as refreshing when the user comes into the screen. I'm guessing `UIRefreshControl` does some `contentInset` changes that messes with the `contentInset` changes that you guys do.

Moving `refreshControl.beginRefreshing()` to `viewDidAppear` fixes the issue.

Feel free to close if this is too specific of a bug.
",briankracoff,2016-01-25 18:39:39
334,2016-01-25 18:39:39,"Thanks for the heads up! :+1: 
",dzenbot,2016-01-25 18:39:39
333,2015-12-22 18:00:54,"Hi guys, one problem I noticed when I configure inverted to NO. When writing text and the text view grows up, the already sent messages remain behind the text view, they are not pushed up while typing. This works ok if inverted is left at it's default value, YES.
",adina-abduraman,2016-10-17 21:07:38
333,2015-12-22 18:09:13,"Yes, this isn't really a bug, but more of a missing support. This works out of the box when `inverted` is set ON because the tableView/collectionView is flipped, and auto-layout pushes the view up from the top, which doesn't modify the content offset, giving the impression that the scroll cursor moves along the text view when growing. Makes sense?
On the other hand, when not `inverted`, the tableView/collectionView moves from the bottom, without re-adjusting the content offset accordantly.

I agree this should be tweaked. I tried many times to add support for this case without getting into a great result. Will leave this one open as a reminder. Feel free to give it a try @adina-abduraman :v: 
",dzenbot,2016-10-17 21:07:38
333,2016-02-13 00:00:20,"If the scrollview text is pushed up, then the most recent message (on top) will be hidden. Maybe putting the message box on top , then pushing the scrollview down (instead of up) when inverted = NO makes more sense to the user?
",maranas,2016-10-17 21:07:38
333,2016-07-21 18:48:44,"Have this issue been fixed? I'm facing the same problem right now.
",eoboite,2016-10-17 21:07:38
333,2016-10-29 00:16:28,"Fixed in https://github.com/slackhq/SlackTextViewController/pull/542
",dzenbot,2016-10-17 21:07:38
332,2015-12-22 08:51:41,"When I input a long text string, the SLKTextInputbar does not get reset properly after didPressRightButton but instead it gets shifted upwards. Is this a known issue or might it be a problem in my setup?

![slackcontroller_issue](https://cloud.githubusercontent.com/assets/2244108/11951495/875164ce-a891-11e5-9daf-e571e75e08c2.png)
",luzianscherrer,2016-08-28 12:34:33
332,2015-12-22 17:05:57,"I've seen this happening more often since iOS 9 was released, but couldn't repro consistently.
How long is the text that you pasted? (Num. of lines)
",dzenbot,2016-08-28 12:34:33
332,2015-12-22 17:09:46,"That's the text that I've used: 

Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.

I'm still trying to come up with a consistently reproducible case.
",luzianscherrer,2016-08-28 12:34:33
332,2016-01-26 10:07:07,"I have the same problem on iOS 8.1, Cannot be consistently reproduced and doesn't seem to be based on any particular action beforehand.

Just every now and then the text aligns itself to the top of the entry box
",Shazib,2016-08-28 12:34:33
332,2016-08-28 12:34:33,"Closing as `can't repro` for now.
",dzenbot,2016-08-28 12:34:33
331,2015-12-20 09:13:12,"I set registerPrefixesForAutoCompletion to only ""$"" sign in controller : 

<S_CODE_TOKEN>

But still the custom keyboard show the @ and # marks:
![screen-shot-2015-12-20-at-12 34 39-pm](https://cloud.githubusercontent.com/assets/611607/11917304/3759777a-a717-11e5-88ba-7b289f634d21.png)

How to change it to only ""$"" sign in keyboard? 
",novinfard,2015-12-21 09:03:43
331,2015-12-21 09:03:43,"This feature doesn't control the keyboard layout. Its layout is very limiting and it is just a coincidence/convenience that the keys ""@"" and ""#"" are available for this use case.
You might might be interested in `UITextView`'s `keyboardType` value.
Read docs here: https://developer.apple.com/library/ios/documentation/StringsTextFonts/Conceptual/TextAndWebiPhoneOS/KeyboardManagement/KeyboardManagement.html
",dzenbot,2015-12-21 09:03:43
330,2015-12-19 14:34:45,"Updated ReadMe with Swift-documentated methods in Swift language
",Luccifer,2016-01-30 16:02:40
330,2015-12-21 08:53:57,"Although I appreciate this, the Objective-C and Swift documentation must be available, side by side.
",dzenbot,2016-01-30 16:02:40
330,2016-01-23 18:59:27,"Okey, I will fix it asap, a lot of work to do) Obj-C + Swift will be side-by-side
",Luccifer,2016-01-30 16:02:40
329,2015-12-19 13:11:42,"Where is the best place to set font name of bodyLabel? (for instance in Example of SlackTextViewController project)
I want to have the best performance in cells.
",novinfard,2015-12-21 09:06:29
329,2015-12-21 09:06:28,"See https://github.com/slackhq/SlackTextViewController/issues/328
",dzenbot,2015-12-21 09:06:29
328,2015-12-19 11:48:54,"Thanks for your efforts on this Controller.

There is a very annoying problem with multi-language string. When text of the message are of multi-language or have line-break in non-english languages, the scrolling is not smooth as expected any more. To reproduce the problem, just change the following line in example:

SlackTextViewController-master/Examples/Messenger-Shared/MessageViewController.m :
- configureDataSource - Line 149

<S_CODE_TOKEN>

Please help to resolve this issue.
",novinfard,2015-12-21 09:06:12
328,2015-12-21 09:06:12,"Even if this is part of the sample, cell rendering are not part of the library it self.
Although, try disabling the `inverted` mode and see if that improves performance.
",dzenbot,2015-12-21 09:06:12
327,2015-12-18 20:48:13,"I have overwritten didChangeKeyboardStatus in my view controller, because I wanted to scroll down to the last message when the keyboard is becoming visible (I'm not using the inverted mode). 

didChangeKeyboard is called with
- willShow
- didShow
- willHide

but the last didHide is not passed to the view controller. Even worse, the method isn't called any more, because the keyboard state is still set to willHide.

I am hiding the keyboard with a call to dismissKeyboard from didPressRightButton.
",Ben305,2016-01-08 18:34:25
327,2015-12-21 09:08:37,"You might be interested in `shouldScrollToBottomAfterKeyboardShows` to easily achieve this.
I will review the `didChangeKeyboardStatus` and see why it broke. What version were you using?
",dzenbot,2016-01-08 18:34:25
327,2015-12-28 10:45:51,"Thanks, I was using 1.7.2. Will upgrade to 1.8.
`shouldScrollToBottomAfterKeyboardShows` is working great btw.
",Ben305,2016-01-08 18:34:25
326,2015-12-18 16:36:41,"Any fix for that? Seems to be related to the back gesture recognizer.
",Pe-te,2015-12-21 09:14:37
326,2015-12-21 09:14:37,"It's not because of gesture recognizer conflict, but because the hit area of your button must be too small.
One easy way to fix it, it so have a larger asset artboard (while keeping the same size of the actual glyph/icon).
Another way, is to tweak the hit area using `UIEdgeInsets`, which a similar approach to http://stackoverflow.com/a/13067285/590010

Although this seems very related to the library, it is not. You need to implement this on your end.
I Hope this helps.
",dzenbot,2015-12-21 09:14:37
326,2015-12-21 14:24:19,"Sounds good, thank you!
",Pe-te,2015-12-21 09:14:37
326,2016-01-21 17:53:39,"This worked, thanks again!

<S_CODE_TOKEN>
",Pe-te,2015-12-21 09:14:37
325,2015-12-17 21:42:56,"Hello guz!

Tried to find any method of registerMarkdownFormattingSymbol, writing in swift, tried to search for it - nothing, opened Obj-C projects and Examples - nothing, in docs - it exists, what's the mess? 
",Luccifer,2015-12-18 01:20:08
325,2015-12-17 22:10:42,"Just so I understand the issue: you want an example of how to implement `registerMarkdownFormattingSymbol:` in Swift?
",dzenbot,2015-12-18 01:20:08
325,2015-12-17 22:20:12,"Of course! 
Cause I didn't found  neither in Obj-C nor in Swift-branch....
And I didn't find any methods of registerMarkdownFormattingSymbol in SLK-Sources as well

BTW: You described different methods in AutoCompletion for swift-branch and main branch... Totally different methods for AutoCompletion, may be need an update and choose what is deprecated or not?
",Luccifer,2015-12-18 01:20:08
325,2015-12-17 22:27:09,"Yeah, those are deprecated. I haven't been able to maintain the Swift example branch.
I was really hoping the community could contribute...
",dzenbot,2015-12-18 01:20:08
325,2015-12-17 22:30:44,"There is an example of `registerMarkdownFormattingSymbol` in the Obj-c sample project:
- [Declaration here](https://github.com/slackhq/SlackTextViewController/blob/master/Examples/Messenger-Shared/MessageViewController.m#L119-L124)
- [Implementation here](https://github.com/slackhq/SlackTextViewController/blob/master/Examples/Messenger-Shared/MessageViewController.m#L667-L698)

It's pretty straightforward. I'm planning on adding a Swift snippet for each Objc implementation examples in the README.
",dzenbot,2015-12-18 01:20:08
325,2015-12-17 22:33:37,"if you need help - just ask, I have a lot of reworked and reformatted Obj-C code in swift now)

And BTW - its not worked like self.textView.registerMarkdown.... I don't know why
",Luccifer,2015-12-18 01:20:08
325,2015-12-17 22:34:34,"We could open a new issue to plan writing a decent Swift example. More than happy if you want to contribute on it.
",dzenbot,2015-12-18 01:20:08
325,2015-12-17 22:35:18,"I personally don't use Swift much yet. Slowly adopting it in my day to day work...
",dzenbot,2015-12-18 01:20:08
325,2015-12-17 22:36:32,"Okey, I'll check it again, may be cleaning will do some magic...
",Luccifer,2015-12-18 01:20:08
325,2015-12-18 01:17:19,"I am very sorry for such and issue! I was used 1.7.2 version without registerMarkdownFormattingSymbol which is appeared only in 1.8 ... Cocoa pods still not updated, so I missed it, you can close this...
",Luccifer,2015-12-18 01:20:08
325,2015-12-18 01:20:08,"Np!
",dzenbot,2015-12-18 01:20:08
325,2015-12-19 09:31:40,"Hello,

Please remove it from example or add it to main repo. In the example, it is a part of library, but when I install with Pod no such method found.

Thanks
",novinfard,2015-12-18 01:20:08
325,2015-12-19 14:42:51,"@novinfard are you really installing 1.8?
",dzenbot,2015-12-18 01:20:08
325,2015-12-19 14:44:08,"He meant that in CocoaPods it's still 1.7.2  or smh like this... 
Request update for CocoaPods :)
",Luccifer,2015-12-18 01:20:08
325,2015-12-19 17:35:03,"Oh, weird. I did push the pod!
Will see what's wrong...
",dzenbot,2015-12-18 01:20:08
325,2015-12-19 21:43:24,"Yes, it is exactly the problem point (1.7.2 in Cocoapods):
https://cocoapods.org/?q=slack

Now I try with this line in Pod:

<S_CODE_TOKEN>

But it does not work and face this error:

<S_CODE_TOKEN>

Please update pods mr. dzenbot. Thanks :+1: 
",novinfard,2015-12-18 01:20:08
325,2015-12-19 22:02:27,"Tried just the same the day before yesterday, same problem) But u still can replace new files from pod in your project in sources, or use carthage
",Luccifer,2015-12-18 01:20:08
325,2015-12-21 08:58:29,"`version 1.8` is now available for real in Cocoapods :v: 
",dzenbot,2015-12-18 01:20:08
324,2015-12-15 21:39:59,"Allows interaction while either the Send button or the auto-completion view are being presented animatedly
",dzenbot,2015-12-17 22:20:19
323,2015-12-10 01:55:15,"You're comparing the old and new value here in the KVO callback https://github.com/slackhq/SlackTextViewController/blob/master/Source/SLKTextInputbar.m#L710 

but when you register for KVO, you're including just NSKeyValueObservingOptionNew, so the old change is nil, and the block inside the if fires everytime.

This PR fixes that
",rounak,2016-03-23 03:31:11
323,2015-12-10 01:56:34,"Was this causing any side effects?
",dzenbot,2016-03-23 03:31:11
323,2015-12-10 01:58:15,"@dzenbot The send button was being misaligned because of this for some reason when I touch and hold the left button. This fix fixes that
",rounak,2016-03-23 03:31:11
323,2015-12-10 02:22:08,"I'm not sure why the travis build failed. I didn't even touch the file it's failing on
",rounak,2016-03-23 03:31:11
323,2015-12-10 02:24:20,"No worries. The tests are all broken since iOS 9 :cry: 
I need to spend some time to fix them out.
",dzenbot,2016-03-23 03:31:11
323,2016-01-07 20:19:16,"Is there a problem with the PR? Happy to address any concerns
",rounak,2016-03-23 03:31:11
323,2016-01-07 20:20:17,"No, sorry. I just forgot to double test it. Will do it soon :+1: 
",dzenbot,2016-03-23 03:31:11
322,2015-12-08 17:38:35,"I want to lock the application in portrait mode, but I can't do it for the view controller that implements that slacktextviewcontroller. Everyone in my application is locked into portrait, but nothing I do disables it in this view controller. What other information should I provide?
",niebloomj,2015-12-10 02:05:22
322,2015-12-10 01:58:08,"Are you override `- (UIInterfaceOrientationMask)supportedInterfaceOrientations` in your SLKTextViewController subclass, to return only portrait?
",dzenbot,2015-12-10 02:05:22
322,2015-12-10 02:05:18,"For some reason, now that worked. I don't know why it wasn't working before. Thank you!!
",niebloomj,2015-12-10 02:05:22
322,2015-12-10 02:05:37,":+1: 
",dzenbot,2015-12-10 02:05:22
321,2015-12-08 15:14:31,"When scrolled to the bottom (non-inverted) if I bring up the keyboard by tapping the input bar the keyboard shows. Then if I try to dismiss the keyboard by using a pan gesture starting from above the text input bar the tableview will immediately be set to the very top position (the oldest message). It does not animate it just jumps all the way to the top. 

This may be somehow associated with the fact that I'm using non-inverted mode, but I'm not sure. 
",tylerjames,2016-03-08 19:10:24
321,2015-12-09 16:40:08,"I found the line that is causing the tableview to jump to the top when you use the pan gesture do dismiss the keyboard.

Down near the bottom of `- (void)slk_handlePanGestureRecognizer:(UIPanGestureRecognizer *)gesture` under the switch case `case UIGestureRecognizerStateChanged:` there is this block:

<S_CODE_TOKEN>

The line: `self.scrollViewProxy.contentOffset = offset;` seems to be the culprit as the offset (for me) is (0,0) which forces the tableview to jump to the top. 

Commenting out that line fixes the problem. 
",tylerjames,2016-03-08 19:10:24
321,2015-12-22 18:11:00,"Interesting. Good catch!
Will test it out.
",dzenbot,2016-03-08 19:10:24
321,2015-12-22 19:29:40,"Hey @tylerjames I wasn't able to repro. Which version are you using, and can you repro on iOS 9 and 8 consistently?
Would you mind sharing a screencast to show how better reproduce this issue? That could be helpful to diagnose this.
",dzenbot,2016-03-08 19:10:24
321,2015-12-23 17:47:30,"Hi @dzenbot, 

I probably won't get a chance to look at this again until the new year. It's entirely possible, however, that there are some other libraries and/or views that are causing conflicts with the SlackTextViewController. I find setting the tableViewHeader property and adding a UIRefreshControl can cause some strange behaviour in tables. 

If I get a chance I'll try to reproduce with more info.
",tylerjames,2016-03-08 19:10:24
321,2016-03-08 19:10:24,"Closing this for now.
",dzenbot,2016-03-08 19:10:24
320,2015-12-04 21:10:22,,dzenbot,2015-12-04 21:10:26
319,2015-12-02 10:46:10,,dzenbot,2015-12-02 10:46:16
318,2015-12-01 20:38:37,"minor edit
",rounak,2015-12-01 21:01:22
318,2015-12-01 21:01:35,":facepalm: thanks!
",dzenbot,2015-12-01 21:01:22
317,2015-12-01 10:43:44,,Ferrick90,2015-12-02 10:46:43
317,2015-12-01 17:19:25,"Please do explain.
",dzenbot,2015-12-02 10:46:43
317,2015-12-02 03:26:32,"<img width=""122"" alt=""screen shot 2015-12-02 at 11 24 34 am"" src=""https://cloud.githubusercontent.com/assets/6068413/11521476/7d8c7d52-98e7-11e5-8b94-ef2fd6942e8a.png"">
<img width=""76"" alt=""screen shot 2015-12-02 at 11 24 46 am"" src=""https://cloud.githubusercontent.com/assets/6068413/11521468/673579aa-98e7-11e5-8c80-7fc25c4fa9c5.png"">
",Ferrick90,2015-12-02 10:46:43
317,2016-12-27 04:37:35,Why this is closed? Is there a solution yet?,ravenjam,2015-12-02 10:46:43
316,2015-11-30 21:55:13,"Awesome framework (and awesome product!) I'm hoping to use this in conjunction with the incomparable [AsyncDisplayKit](http://asyncdisplaykit.org) so I've added support for overriding the table view / collection view instance creation.

Unfortunately it wouldn't be enough to let them provide us a class, because `ASTableView` uses a different designated initializer `-initWithFrame:style:asyncDataFetching:`.
",Adlai-Holler,2016-01-06 21:33:33
316,2015-11-30 22:00:25,"There's a very decent example of how to combine [SlackTextViewController with ASynchDisplayKit](https://github.com/nguyenhuy/AsyncMessagesViewController)

Isn't `initWithScrollView:` enough?
",dzenbot,2016-01-06 21:33:33
316,2015-11-30 22:14:16,"@dzenbot Thanks for linking me to that repo! He made it work but it's not exactly first-class support, since you have to `override var tableView: UITableView { return scrollView as! UITableView }` and if we add any more table view integration in the future, this solution will miss out on that. 
",Adlai-Holler,2016-01-06 21:33:33
316,2016-01-06 21:33:33,"I agree it's not first-class support, but this library is meant to be extended anyhow. So being as generic as possible it's important.

Doing things like

<S_CODE_TOKEN>

are totally ok IMHO.

For now, I'm closing this PR simply because I want to avoid having redundant APIs making harder for others to understand which ones to use and in what context.
",dzenbot,2016-01-06 21:33:33
315,2015-11-30 20:03:01,"I am using a SLKTextView and I have its text to be centered align. When actual text is entered, it works as expected as centers the input text, but the placeholder text itself still sticks to left aligned when no text is entered. 

Any help would be appreciated!
",Daltron,2015-12-02 10:46:17
315,2015-12-02 10:48:04,"It ended up being a regression. Fixed now :+1: 
",dzenbot,2015-12-02 10:46:17
315,2015-12-02 22:30:08,"Awesome, thanks a bunch for the quick fix! :+1: 
",Daltron,2015-12-02 10:46:17
315,2015-12-19 14:51:42,"Where to change a placeholder alignment in textview ? For me it does not work (I subclass it)

<S_CODE_TOKEN>
",novinfard,2015-12-02 10:46:17
315,2015-12-19 17:33:17,"Try change it in `viewDidLoad` of your `SLKTextViewController` instead.
",dzenbot,2015-12-02 10:46:17
314,2015-11-30 17:37:41,"Hello guys,

Thanks for this awesome library! I'm using it again on my current project.

I just have an issue with the inputbar itself being not visible at the first appearance.

I'm using SlackTextViewController as a TableViewController and the controller itself is embedded in a TabbarController. (this controller is actually the 5th so the problem only happen the first time I go on this tab. If I go to an other tab and come back on this tab again, the input bar is visible)

I tried to play with the `textInputbarHidden` flag and I made sure my `textInputbar` isn't nil but I didn't manage to make it work...

Any idea?

Thanks!
Thibaut
",tibo,2015-12-01 17:56:07
314,2015-11-30 17:44:36,"actually I think I just got a wrong frame and my input bar is hidden behind the tabbar the first time I open this controller:

in `viewDidAppear:`:
the first time:

<S_CODE_TOKEN>

the second time:

<S_CODE_TOKEN>
",tibo,2015-12-01 17:56:07
314,2015-12-01 17:55:54,"Solved.
The size of my view was invalid at the first appearance.
I manage to solve this issue by unchecking the ""Under Bottom Bars""  extend edge in the storyboard.
![screen shot 2015-12-01 at 18 47 13](https://cloud.githubusercontent.com/assets/309695/11509068/48f58b28-985c-11e5-9608-5dee17fd9485.png)
",tibo,2015-12-01 17:56:07
314,2015-12-02 10:49:11,"What version were you using @tibo ?
",dzenbot,2015-12-01 17:56:07
314,2015-12-02 11:25:31,"@dzenbot 1.7.2, looks like I'm up to date according to the podspec
",tibo,2015-12-01 17:56:07
313,2015-11-29 14:24:04,"Hi, i'm customizing the SlackTextViewController to behavior well inside a UITableViewCell. 

I'm hoping someone could point me which function is handling the adjustments of the view height/inset/scrolling when presenting keyboard.

**My Problem**
When I tap the textInputbar it goes up 2 times the height of the keyboard. Then, when keyboard is fully presented, it readjust itself to the correct position, glued to the keyboard's top edge.

**What i tried:**
When i set _ignoreTextInputbarAdjustment_  to return false, the the inputBar comes up with the keyboard as i want it to behavior, but then, when the keyboard is fully displayed, the view ""readjusts"" itself to the start position, docked at the bottom, behind the keyboard.

**What i'm asking:**
Where I find the place where this readjustment behavior is defined? I'm not very skilled with Objective-C. Could someone point the direction to me?!

Thank you very very much.
",luizv,2015-12-03 02:33:16
313,2015-11-29 22:10:20,"These are the two methods you might want to tweak to satisfy your requirements:
https://github.com/slackhq/SlackTextViewController/blob/master/Source/SLKTextViewController.m#L384
https://github.com/slackhq/SlackTextViewController/blob/master/Source/SLKTextViewController.m#L398

Where the ""appropriate"" height of the keyboard if calculated.
",dzenbot,2015-12-03 02:33:16
313,2015-12-03 02:04:51,"Thank you. I solved it by reprogramming the view to insert it in a scrollview. Works as it should now!
",luizv,2015-12-03 02:33:16
313,2015-12-03 02:33:16,"👏
",dzenbot,2015-12-03 02:33:16
312,2015-11-28 21:37:33,"Documentation and classes are for obj-c developers only, Swift-Controller has dependences from obj-c classes such as MessageCells and Layout, mb little bit fix?
",Luccifer,2016-03-28 18:12:41
312,2015-11-29 09:53:11,"We could/should add some Swift documentation in the README at least. Is that what you're asking?
",dzenbot,2016-03-28 18:12:41
312,2015-11-29 10:19:13,"It's quite understandable, but some classes in Sample are from Obj-C, it's a little bit scary at first time, jouniour developers can spend a lot of time to understand what and where, so if you will add some swift code to README in Swift-branch, I think that will be nice :)
",Luccifer,2016-03-28 18:12:41
312,2015-11-29 10:20:33,"Definitely! That Swift branch is very old. I've been wanting to improve the sample there as well, just low priority and was hoping the community would help out 😓
",dzenbot,2016-03-28 18:12:41
312,2015-11-29 10:20:55,"Will leave this one open, as a reminder! :muscle: 
",dzenbot,2016-03-28 18:12:41
312,2015-11-29 10:21:44,"Great! You are cool ^_^
",Luccifer,2016-03-28 18:12:41
312,2015-12-06 19:36:41,"And maybe rewrite all dependable subclasses to Swift? I mean in Samples are now using - obj-C subClasses of layout, cells, etc. I can help to rewrite them
",Luccifer,2016-03-28 18:12:41
312,2016-01-18 13:19:28,"Is there any new update for the Swift documentation? I've been trying to use the old swift example and I have not been able to get the autocomplete view to show the search results and I could use the all the help I can get since I am still new to programming.
",myflokk,2016-03-28 18:12:41
312,2016-01-19 15:05:22,"@Luccifer would you be able to help with the swift example? I have an issue with the autocompleteView
",myflokk,2016-03-28 18:12:41
312,2016-03-28 18:12:41,"Closed in https://github.com/slackhq/SlackTextViewController/pull/391
",dzenbot,2016-03-28 18:12:41
311,2015-11-25 06:14:55,"On first appear, all my cells are the wrong way around. If I scroll them out of view & back into view they are fine...

![simulator screen shot 25 nov 2015 17 13 03](https://cloud.githubusercontent.com/assets/274318/11389776/d85e4e04-9397-11e5-9a82-0884d801412a.png)

I'm setting the transform on `willDisplayCell:` as well as trying it on `cellForRowAtIndexPath:`. 

<S_CODE_TOKEN>
",markst,2015-11-26 06:23:43
311,2015-11-25 06:16:42,"Try inheriting the transform from the tableView instead:

<S_CODE_TOKEN>
",dzenbot,2015-11-26 06:23:43
311,2015-11-25 06:25:42,"@dzenbot that's what I had to begin with. no joy. 
",markst,2015-11-26 06:23:43
311,2015-11-25 06:27:46,"What version are you on? This has never been reported and I was not able to repro, so no idea what could be going on there.
Mind sharing a snippet or sample project of your implementation?
",dzenbot,2015-11-26 06:23:43
311,2015-11-25 06:33:37,"@dzenbot can't I'm afraid. But could have something to do with backing my table view with a `NSFetchedResultsController`
",markst,2015-11-26 06:23:43
311,2015-11-25 06:34:10,"for test purposes I tried reloading the table view after view did appear & that reset the transforms correctly. 

<S_CODE_TOKEN>

so perhaps give a go at only loading the table view on `viewWillAppear:`?
",markst,2015-11-26 06:23:43
311,2015-11-25 06:37:47,"@dzenbot ah; this seems to be to do with using a custom navigation controller transition animator. `<UIViewControllerAnimatedTransitioning>`
",markst,2015-11-26 06:23:43
311,2015-11-26 06:21:39,"ah. this seems to only be an issue with https://github.com/andreamazz/AMWaveTransition
since it transforms all the visible cell's to identity...
",markst,2015-11-26 06:23:43
311,2015-11-26 06:23:43,"Gotcha!
Try disabling the `invert` mode if you don't really need it.
",dzenbot,2015-11-26 06:23:43
310,2015-11-25 06:02:12,"Method `slk_adjustContentConfigurationIfNeeded` assumes that the height of the navigation bar is required for the bottom inset. When in actual fact if the navigation bar is not translucent, no inset is required. 
",markst,2015-11-25 06:57:34
310,2015-11-25 06:06:06,"You're right but setting bottom inset with non-translucent navigation bar doesn't cause any side effects, does it?
",dzenbot,2015-11-25 06:57:34
310,2015-11-25 06:12:33,"@dzenbot yeah it means I have 64pt's more space at the top of the scroll. 
",markst,2015-11-25 06:57:34
310,2015-11-25 06:15:05,"What version are you using right now? Try installing the latest from master, which includes https://github.com/slackhq/SlackTextViewController/commit/a686d96548019078cce025de51af94af2ef78ffixing https://github.com/slackhq/SlackTextViewController/issues/195 
",dzenbot,2015-11-25 06:57:34
310,2015-11-25 06:57:03,"Seems to be all good using tip of master. 
",markst,2015-11-25 06:57:34
310,2015-11-25 06:57:34,"Fixed #195
",markst,2015-11-25 06:57:34
309,2015-11-23 18:49:25,"Created with https://github.com/dkhamsing/frankenstein
### GitHub Corrected URLs

| Was | Now |
| --- | --- |
| https://github.com/supermarin/Alcatraz | https://github.com/alcatraz/Alcatraz |
### Other Corrected URLs

| Was | Now |
| --- | --- |
| http://cocoapods.org | https://cocoapods.org/ |
| http://img.shields.io/badge/license-apache%202.0-blue.svg?style=flat-square | https://img.shields.io/badge/license-apache%202.0-blue.svg?style=flat-square |
| http://img.shields.io/cocoapods/v/SlackTextViewController.svg?style=flat-square | https://img.shields.io/cocoapods/v/SlackTextViewController.svg?style=flat-square |
",ReadmeCritic,2015-11-23 18:54:48
309,2015-11-23 18:54:58,":+1: 
",dzenbot,2015-11-23 18:54:48
309,2015-11-23 19:38:01,":smile: 
",ReadmeCritic,2015-11-23 18:54:48
308,2015-11-23 06:18:40,"This PR adds a few cool additions to `SLKTextView` allowing to register markdown formatting symbols so they can be easily be used to wrap a text selection, with the help of the  native contextual menu, aka `UIMenuController`.
#### Features:
- Easily register any formatting symbol
- Customise the behavior with new `SLKTextViewDelegate` methods
- Allow autocompletion for any pending formatting by double tapping the space bar

![screencast](https://cloud.githubusercontent.com/assets/590579/11348128/878e2b76-91d9-11e5-9c77-faf99c37c98e.gif)
",dzenbot,2015-12-04 18:15:47
308,2015-12-03 23:47:08,"If you have a string with the suffix and prefix already added, like \* text here \* and then double tap the space bar, it adds another suffix -> \* text here **
",AhmedEid,2015-12-04 18:15:47
308,2015-12-03 23:47:58,"Good catch!
",dzenbot,2015-12-04 18:15:47
308,2015-12-04 00:01:37,"Other than that it behaves and expected and the code is clean :)
",AhmedEid,2015-12-04 18:15:47
307,2015-11-23 02:01:49,"Fixes #195
Fixes #271
Fixes #296
",dzenbot,2015-11-23 02:44:35
306,2015-11-22 15:52:49,"Hi, here is what i'm trying to do. In my app i don't have short names like ""@someone"", only full names like ""@someone last name"" and i need tag people like Facebook does.
I already modified the lib to return string like ""<:id><:name>"" then i can get name and id with regex and show in textfield.
but the problem is when i have name with spaces, after press spacebar, the autocompletion view hide itself. 
What can i do? 
Thanks and sorry for my english
",reeichert,2015-11-22 20:10:52
306,2015-11-22 20:10:52,"This was requested here https://github.com/slackhq/SlackTextViewController/issues/280

The auto-completion view is dismissed internally when a new word is added. You could override this behavior and only dismiss it when there is no item in your data source matching the `first_name` + `last_name` query.

Closing since it's a duplicate issue.
",dzenbot,2015-11-22 20:10:52
305,2015-11-19 04:53:53,"Firstly thank you for such a great open source project!

I am trying to set self.textView.font as bold font i.e. 
`self.textView.font = [UIFont boldSystemFontOfSize:16.0];`
but its always using same font but regular style.

Looks like the culprit lies in `SLKTextView.h` using `font.familyName` instead of `font.fontName`.
",Ataman11,2015-11-20 19:52:09
305,2015-11-20 19:52:40,"It should be working fine now, thanks for reporting.
",dzenbot,2015-11-20 19:52:09
304,2015-11-18 08:09:51,"# What

if not override `keyForTextCaching` method, key for persistence is wrong key name like `com.slack.TextViewController.(null)`.
All channel uses same its key and load same saved a text.
",susieyy,2015-11-18 08:30:47
304,2015-11-18 08:31:09,"✌️ good catch
",dzenbot,2015-11-18 08:30:47
304,2015-11-18 08:32:07,"thx !
",susieyy,2015-11-18 08:30:47
303,2015-11-13 11:03:34,"Closes #297
Closes #290
Closes #210 (not really fixed, but cannot repro any more)
",dzenbot,2015-11-14 00:14:53
302,2015-11-06 21:19:05,"I'm making chat type view that shows the newest messages at the bottom. I'm currently using non-inverted mode to do this. Basically I fetch my messages place them in an array in reverse chronological order (oldest message at position zero) and display them in a table.

I am currently having a hell of a time trying to load older messages into the top of the table without having the scroll position get out of whack.

Is this what inverted mode is meant to fix? Should I be using inverted and just not sorting my messages reverse-chronologically? 

Sorry if this is not the appropriate place to ask this but I couldn't find a good answer on Stack Overflow. 
",tylerjames,2015-11-06 21:24:24
302,2015-11-06 21:24:24,"There are many benefits of using the [inverted mode](https://github.com/slackhq/SlackTextViewController#inverted-mode), one of them is to be able to display messages from the bottom specially when you have 1 or 2 or very few messages so the rest of the UI is just blank at the top. Instead of filtering your data source by ascending chronological order, you would need to invert your data data source model.

I've been wanting to add a custom UICollectionViewLayout to do this, but it's just not that easy. Inverting a tableView is just easier and practical.
",dzenbot,2015-11-06 21:24:24
301,2015-11-04 22:17:35,"Add a new API to register markdown keys, auto-detectable like the auto-completion works.
This way, you could add any custom markdown support you'd want, using an API like:

<S_CODE_TOKEN>

This could later be combined with attributed strings to be able to show a preview of the formatting inside of the text view.
",dzenbot,2015-12-04 18:15:51
300,2015-11-03 18:34:10,"Hi. is there a way to prevent dismissing keyboard when presenting a view controller?
",rad182,2015-11-06 01:33:26
300,2015-11-06 01:33:26,"Since iOS 8, the modal presentations make the presented view controller to become first responder (for whatever reason :apple: thinks it's a good practice), causing the keyboard to be dismissed.
Haven't found a way to force the textView to not resign first responder honestly, but this isn't really a problem with the lib.
",dzenbot,2015-11-06 01:33:26
299,2015-11-02 20:22:23,"I have an app similar to Slack where the chat view is in a horizontal UIScrollView. When the chat is scrolled/panned left/right the keyboard is dismisses. I can't find out what is controlling this in the code though. Is there somewhere specific I should look to make it so the keyboard doesn't dismiss automatically when the view is scrolled horizontally?
",cerupcat,2016-08-28 12:46:12
299,2015-11-22 21:45:46,"Perhaps another control is becoming first responder?
A sample project or code snippet could help to reproduce this issue.
",dzenbot,2016-08-28 12:46:12
298,2015-11-02 19:08:16,"Dependency ""SlackTextViewController"" has no shared framework schemes
",eddwinpaz,2015-11-04 23:16:37
298,2015-11-02 23:35:59,"#294
",ikesyo,2015-11-04 23:16:37
298,2015-11-04 23:16:37,"See https://github.com/slackhq/SlackTextViewController/pull/294#issuecomment-153900936
",dzenbot,2015-11-04 23:16:37
297,2015-10-29 19:26:28,"**v1.7.1, iOS9.1**

Use-case:
0. SLKTextViewController-based screen shows.
1. Tap on input bar to open keyboard. Keyboard appears.
2. Tap on right navigation item to push another screen. Keyboard hides. New screen appears.
3. Tap back on the new screen. The SLKTextViewController screen returns.

Expected results:
- SLKTextViewController works correctly.

Actual results:
- Keyboard reappears.
- However SLKTextViewController ignores it. Keyboard overlaps table view, inputbar is not visible, etc.
",yaalaa,2015-11-14 00:14:52
297,2015-10-30 00:28:20,"Thanks, will investigate. This shouldn't be happening, but keeps breaking :facepalm:
",dzenbot,2015-11-14 00:14:52
296,2015-10-27 17:24:28,"I'm setting this property in viewDidLoad.  Works the first time i tap the textView...  but after that when i dismiss the keyboard and then show it again, it just covers my table view and doesn't scroll to bottom anymore.  Surprised this isn't a reported issue.  Please help!  Same problem regardless of setting inverted or not.  
",Gman9855,2015-11-23 02:44:35
295,2015-10-26 07:53:00,"…= NO

https://github.com/slackhq/SlackTextViewController/commit/dceedc70393e873d70c82da39c9f2cc9f18fda5a#diff-592522ed60e49c6ca08c23b1fa1ac14aR104 broke the behavior.

`autoHideRightButton` would affect the result of `slk_appropriateRightButtonMargin`, so we should update `rightMarginWC.constant` in the setter as with `rightButtonWC.constant`.
",ikesyo,2015-10-26 22:13:25
294,2015-10-25 23:40:36,"Tried to include SlackTextViewController in my project through Carthage, was told

<S_CODE_TOKEN>

Seems to be that you aren't sharing the framework scheme, I added that. If this is merged and a new tagged release is created (current latest is `v1.7.1`) I believe Carthage will be able to build SlackTextViewController
",AndrewSB,2015-10-26 22:14:20
294,2015-10-25 23:45:34,"Yup, this works. Just tested by using my fork in the Cartfile
",AndrewSB,2015-10-26 22:14:20
294,2015-10-26 22:14:25,"Thanks :+1: 
",dzenbot,2015-10-26 22:14:20
294,2015-11-02 02:09:20,"@dzenbot any chance you can also create a new tagged release? Carthage takes the latest one and so far it's `Checking out SlackTextViewController at ""v1.7.1""`, not pulling in my changes unless I explicitly specify the commit hash 
",AndrewSB,2015-10-26 22:14:20
294,2015-11-02 02:10:21,"Will do, tomorrow morning 😉
",dzenbot,2015-10-26 22:14:20
294,2015-11-02 02:43:53,"thanks :smile: 
",AndrewSB,2015-10-26 22:14:20
294,2015-11-04 23:16:18,"[1.7.2](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.7.2) is out!
",dzenbot,2015-10-26 22:14:20
294,2015-11-04 23:52:45,"awesome!
",AndrewSB,2015-10-26 22:14:20
293,2015-10-22 13:50:16,"I call textDidUpdate with YES flag and it doesn't return.
I then call it with NO flag and it doesn't return, I comment [self.view layoutIfNeeded] within the method, and it works.
",danipralea,2016-10-04 01:30:19
293,2015-10-22 20:21:13,"What do you mean by ""it doesn't return""?
What are you trying to do?
",dzenbot,2016-10-04 01:30:19
293,2015-10-22 20:22:05,"It hangs on that specific line. I'm .... using it :smile: 
",danipralea,2016-10-04 01:30:19
293,2015-10-22 20:50:58,"So, you're experiencing an exception in the line of `[self.view layoutIfNeeded]`?
",dzenbot,2016-10-04 01:30:19
293,2015-10-22 20:51:28,"correct
",danipralea,2016-10-04 01:30:19
293,2015-10-22 20:52:22,"Mind sharing you backtrace?
Just like you did in https://cloud.githubusercontent.com/assets/768893/10657565/2831c162-7896-11e5-9ee9-420e3275b2ce.png 
",dzenbot,2016-10-04 01:30:19
293,2015-10-22 20:52:37," It never advances to [self slk_enableTypingSuggestionIfNeeded];, which means the UI completely blocks
",danipralea,2016-10-04 01:30:19
293,2015-10-22 20:53:11,"Is `self.view` nil?
",dzenbot,2016-10-04 01:30:19
293,2015-10-22 20:53:34,"I would, @dzenbot, but there is no crash, meaning no backtrace
",danipralea,2016-10-04 01:30:19
293,2015-10-22 20:55:30,"The `self.view` is not `nil`

<S_CODE_TOKEN>
",danipralea,2016-10-04 01:30:19
293,2015-10-22 21:00:12,"I'm doing this in my view controller (I have a form of segmented control for which I have different dataflows from web sockets - just to get the general idea) :

<S_CODE_TOKEN>

When I use `textDidUpdate:YES`, it completely hangs. When using NO, and commenting `[self.view layoutIfNeeded];`, it goes on
",danipralea,2016-10-04 01:30:19
293,2015-10-22 21:09:39,"What if you move that logic from `viewDidLayoutSubviews` to something like `viewWillAppear:` or `viewDidLoad`? Same thing?
",dzenbot,2016-10-04 01:30:19
293,2015-10-22 21:11:14,"it's there because I already tried it and it's the only way for the screen to not look funny. By 'funny' I mean the views get overlapped and some glithces occur if I try to do it the standard way - in `viewDidLoad`
",danipralea,2016-10-04 01:30:19
293,2015-10-22 21:12:41,"Gotcha. Not sure what's going on honestly.
Haven't experienced this before, and it's very strange that you're just not getting an exception.

You probably already did, but try compiling with another SDK version and/or device types.
",dzenbot,2016-10-04 01:30:19
293,2015-10-22 21:27:07,"I will! Thank you for this and if I have updates, I will get back with additional info
",danipralea,2016-10-04 01:30:19
293,2015-10-27 19:07:27,"I'm having the same issue on iOS7. No error or exception. The app just crashed at the line [self.view layoutIfNeeded]; in SLKTextViewController. It works fine on iOS9.
",sasilukr,2016-10-04 01:30:19
293,2015-10-27 19:11:25,"Crashes without exception? Did you repro on device or sim?
",dzenbot,2016-10-04 01:30:19
293,2015-10-27 20:14:33,"I don't see any error messages in the console. I can reproduce the bug on my iphone 5c with ios7 installed. 
",sasilukr,2016-10-04 01:30:19
293,2015-10-27 20:27:01,"![screen shot 2015-10-27 at 1 25 06 pm](https://cloud.githubusercontent.com/assets/6777818/10771502/6140d15c-7cae-11e5-8e3d-6813adee3d25.png)
",sasilukr,2016-10-04 01:30:19
293,2016-08-28 12:46:45,"Is this still an issue? Found any work around?
",dzenbot,2016-10-04 01:30:19
292,2015-10-22 05:23:41,"Hello I am receiving a crash for no apparent reason. The description is here:

**\* Terminating app due to uncaught exception 'NSRangeException', reason: 'Cannot remove an observer <GabInputToolbar 0x13e722ce0> for the key path ""position"" from <CALayer 0x13db83cc0> because it is not registered as an observer.'
**\* First throw call stack:
(0x1830fcf5c 0x197cf3f80 0x1830fcea4 0x183f7cef8 0x183f7c9d4 0x1002ea688 0x1002eb1c8 0x197d0dae8 0x182fe0b6c 0x1830b20c8 0x182fe0dc0 0x18e134088 0x1886baf44 0x1001147d4 0x19851e8b8)
libc++abi.dylib: terminating with uncaught exception of type NSException
<img width=""1631"" alt=""screenshot 2015-10-22 08 14 05"" src=""https://cloud.githubusercontent.com/assets/768893/10657565/2831c162-7896-11e5-9ee9-420e3275b2ce.png"">

Does anyone have an idea to what's happening?
",danipralea,2016-03-28 18:33:30
292,2016-02-05 13:47:17,"Is it a subclass? If so, why would you subclass it?
",dzenbot,2016-03-28 18:33:30
292,2016-03-08 19:11:03,"Did you figure this out?
",dzenbot,2016-03-28 18:33:30
292,2016-03-28 18:33:30,"Closing for now. Feel free to re-open if this is still an issue.
",dzenbot,2016-03-28 18:33:30
291,2015-10-20 22:37:22,"This helps avoiding unnecessary scrolling in the text view when setting for larger and smaller font sizes, when there is only 1 line of content.
",dzenbot,2015-10-20 22:40:42
290,2015-10-18 11:24:17,"Inside `slk_didShowOrHideKeyboard:` there is an early exit, before the status notifications are broadcast ([SLKTextViewController.m](https://github.com/slackhq/SlackTextViewController/blob/c49e2b80ecd52737f5c43cd831f47d74558ffa0a/Source/SLKTextViewController.m#L1375)):

<S_CODE_TOKEN>

Any reason why this is done?
",arvindhsukumar,2015-11-14 00:14:52
290,2015-10-23 18:57:24,"A workaround for now might be to listen for UIKeyboardWillHideNotification instead of SLKKeyboardWillHideNotification
",raj-room,2015-11-14 00:14:52
290,2015-10-23 18:59:49,"Can't remember why I added that, must be a bug.

The reason of using `SLKKeyboardNotifications` is to get more reliable notifications since the native API broadcast every single status change, repeating them even if nothing really changed.

I will fix this soon. Thanks for reporting.
",dzenbot,2015-11-14 00:14:52
289,2015-10-17 18:27:41,"I already had a UITableviewCell configured with autolayout that i was using it in a different tableview and the constraints were being applied perfectly.  I want to use SLKTextViewController but when i make a nib containing that cell and load it into the tableview the height of each cell is fixed and my constraints aren't being applied at all.  What am i missing here...??
",Gman9855,2015-10-26 01:51:44
289,2015-10-18 01:47:58,"If possible, please provide a sample project reflecting this issue.
It's hard to help you without seeing your configuration and/or code 😉
",dzenbot,2015-10-26 01:51:44
289,2015-10-23 11:17:27,"Hei, thanks for this awesome library. I just implemented and it works perfectly (at the moment :))
And I'm using `UITableViewAutomaticDimension` and it's also working perfectly.
All I did was doing this 

<S_CODE_TOKEN>
",asmusto,2015-10-26 01:51:44
289,2015-10-26 00:06:11,"That did it!  Thanks!
",Gman9855,2015-10-26 01:51:44
288,2015-10-16 17:49:58,"I'm converting the code in swift and all works good except the tableview is not loading.. i can't understand why! 

this is my code :+1: 

<S_CODE_TOKEN>
",MarcoCarnevali,2016-08-28 12:37:10
288,2015-11-22 20:18:46,"Your `cellForRowAtIndexPath:` implementation is incomplete. You are only configuring the auto-completion's tableView. That might explain it?
",dzenbot,2016-08-28 12:37:10
288,2015-11-22 20:20:11,"What i need to put?
",MarcoCarnevali,2016-08-28 12:37:10
288,2015-11-22 20:21:32,"Which tableView are you trying to display/load?
",dzenbot,2016-08-28 12:37:10
288,2015-11-22 20:23:01,"What do you mean?
",MarcoCarnevali,2016-08-28 12:37:10
288,2015-11-22 20:27:47,"There are two tableViews, the main one which displays messages or your app's contents, and the autocompletionView which displays auto-completion results.

It seems you're missing:

<S_CODE_TOKEN>

Where you should return the searchResults' count.
Bw, is this a direct translation of the sample project?
",dzenbot,2016-08-28 12:37:10
287,2015-10-16 04:36:15,"viewDidLoad also requires `super`
",WenchaoD,2015-10-16 05:53:15
287,2015-10-16 05:53:28,"Thanks for this @WenchaoIOS !
",dzenbot,2015-10-16 05:53:15
286,2015-10-14 18:11:14,"For some reason the header files are not being linked in the update when installing the SlackTextViewController with Cocoapods.
",AdamBCo,2015-10-16 15:20:42
286,2015-10-14 18:11:48,"Which Cocoapods version is that? Which version of the library are you installing?
",dzenbot,2015-10-16 15:20:42
286,2015-10-14 18:13:38,"Cocoapods 0.39.0
SlackTextViewController (1.7)
",AdamBCo,2015-10-16 15:20:42
286,2015-10-14 21:04:52,"Having the same problem.  Even tried manually adding the library, same error.  SLKTextView+SLKAdditions.h not found when it's being imported from SLKTextViewController.
",Gman9855,2015-10-16 15:20:42
286,2015-10-14 21:16:01,"I tried adding the static library as well, and ran into the same issue.

I also cleaned the project, restarted Xcode, restarted my Macbook Pro, and did a long list of other recommendations as well. 
",AdamBCo,2015-10-16 15:20:42
286,2015-10-14 21:24:06,"Occasionally Xcode will autocomplete the following, but it won't show any of the files referenced inside;

<S_CODE_TOKEN>

I think it's also worth mentioning that the only header file Xcode Recognizes is the following:

<S_CODE_TOKEN>
",AdamBCo,2015-10-16 15:20:42
286,2015-10-14 22:28:21,"@Gman9855 I got everything to work again, so hopefully this helps.

For some reason, my targets User Header Search Paths were empty.

I had to paste the following inside to get it to work: $(BUILT_PRODUCTS_DIR)
",AdamBCo,2015-10-16 15:20:42
286,2015-10-15 00:33:18,"Didn't work for me unfortunately.  Still getting 'file not found' when i do '#import SlackTextViewController/SLKTextViewController.h' with carrots or any of the other variations i've tried :(
",Gman9855,2015-10-16 15:20:42
286,2015-10-15 02:16:42,"I ran into the same issue.  It was OK when building in Simulator or on device, but fail when I trying to archive pkg.

Cocoapods 0.39.0
SlackTextViewController (1.7)

I just install `cocoapods 0.38.2`, but also have the same issue.
",neil-wu,2015-10-16 15:20:42
286,2015-10-15 02:18:53,"Nothing changed on the library lately regarding the `podspec`.
I'm still on Cocoapods `0.38.2`. I should try `0.39.0` and see if I can repro.
",dzenbot,2015-10-16 15:20:42
286,2015-10-15 15:00:52,"It’s because of the way slack source files are split into `Additions` and `Classes` and CocoaPods 0.39 has changed something with regard to the header search paths. It can be fixed by manually adding

<S_CODE_TOKEN>

to the target's `Header Search Path` build setting. Or by the Slack team restructuring their source files. ;)
",Soryu,2015-10-16 15:20:42
286,2015-10-15 16:56:47,"When i do that i get this...

![screen shot 2015-10-15 at 9 55 42 am](https://cloud.githubusercontent.com/assets/5007053/10521150/07760870-7323-11e5-88dc-a0b9a900437f.png)
",Gman9855,2015-10-16 15:20:42
286,2015-10-16 06:59:30,"After some testing, it seems that this should be now fixed with [release 1.7.1](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.7.1). Could anyone confirm please?
",dzenbot,2015-10-16 15:20:42
286,2015-10-16 08:19:32,"It works for me with release 1.7.1. Thanks.
",vampirewalk,2015-10-16 15:20:42
286,2015-10-16 08:30:36,"Also works for me with release 1.7.1. 
Thanks.
",neil-wu,2015-10-16 15:20:42
286,2015-10-16 15:20:42,"✌️
",dzenbot,2015-10-16 15:20:42
286,2015-10-21 08:34:18,"w/ swift:

In Bridging-header.h:

<S_CODE_TOKEN>

Then run in Terminal:

<S_CODE_TOKEN>

Then Import in your controllers:

<S_CODE_TOKEN>
",A1iAshoor,2015-10-16 15:20:42
286,2015-10-21 08:51:28,"@A1iAshoor I'm getting `Use of unresolved identifier 'SLKMessageViewLayout'` and `Use of unresolved identifier 'SLKMessageViewCell'` when using the swift version in a current project. Are you seeing anything similar, or know how I could troubleshoot these errors?
",blangslet,2015-10-16 15:20:42
286,2015-10-21 09:06:29,"it looks like a Bridge-Header.h file of: 
`#import ""SlackTextViewController/SLKTextViewController.h""`
`#import ""SLKMessageViewLayout.h""`
`#import ""SLKMessageViewCell.h""`
builds successfully, the view seems a bit strange though. Will dig in more tomorrow.
",blangslet,2015-10-16 15:20:42
286,2015-10-21 19:48:57,"@blangslet `SLKMessageViewLayout` isn't part of the library. It's a class from the sample project.
Are you trying to reuse that class?
",dzenbot,2015-10-16 15:20:42
286,2015-10-21 20:00:16,"@dzenbot Yep, I ended up just bringing over the objective-c classes from the sample project and was able to import them in the bridge-header. Thanks for your work on this, pretty awesome project! :)
",blangslet,2015-10-16 15:20:42
286,2015-10-21 20:02:18,"💪😎 Thanks!
The `SLKMessageViewLayout` is a work-in-progress thing that I never continued working on.
If you do end up using it and improving it, please send a PR to review it and hopefully include it in the sample project.
",dzenbot,2015-10-16 15:20:42
286,2015-10-21 20:05:16,"@dzenbot definitely will do! Going to use this in a night/weekend project, hopefully integrating media sharing won't be too difficult. I'm also considering trying to implement conversation threading, but that's a whole different ballgame. I'll send in PRs for any fun things that come out of the experimentation. 💁
",blangslet,2015-10-16 15:20:42
286,2016-02-18 14:28:39,"Just an observation. I installed SlackTextViewController via Cocoapods. When I first tried to subclass SlackTextViewController, I selected 'SLKTextViewController' as the parent class. The .h file that got created automatically included the following import statement: `#import <SlackTextViewController/SlackTextViewController.h>` and I got the error `'SlackTextViewController/SlackTextViewController.h' file not found`. It was sufficient for me to change the import statement to `#import <SlackTextViewController/SLKTextViewController.h>` to get it working.
",AndySoHotRightNow,2015-10-16 15:20:42
285,2015-10-13 20:34:16,"### Steps to repro:
- Switch to non-alpha keyboard
- Start typing a registered prefix + a letter that matches a result. For example `:-`
- Notice how the keyboard switches to alpha
### Expected result:

Keep the selected keyboard active
",dzenbot,2016-10-04 01:28:12
285,2016-10-04 01:28:12,"This is no real fix for this at the moment, since we reload the textView's first responder to enable/disable auto-correction when switching on/off auto-completion. Closing this for now.
",dzenbot,2016-10-04 01:28:12
284,2015-10-13 04:08:15,"- Introduces `-didChangeAutoCompletionPrefix:andWord:` to notify any change either for the detected prefix or word.
- Once the datasource is ready, it will be necessary to call `-showAutoCompletionView:` to either show or dismiss the tableView. Won't be necessary to call `-reloadData`.
- Deprecates `-canShowAutoCompletion` (still backwards compatible)

This feature is useful for asynch display, when either fetching data from an HTTP resource or querying a local storage that might take longer than expected.
",dzenbot,2015-10-14 06:27:30
283,2015-10-13 02:03:59,"This PR includes:
- Refactored text caching APIs to reduce calls in `keyForTextCaching`
- Simplified internal APIs
- Fixed an issue where restoring cached text would cause the following issue:
  ![image](https://cloud.githubusercontent.com/assets/590579/10443797/b4fe60b2-7113-11e5-84f7-fcb8bc320737.png)
  This was introduced in iOS 9.
",dzenbot,2015-10-15 23:00:52
283,2015-10-15 23:00:58,"Nice work!
",fyaqub,2015-10-15 23:00:52
283,2015-11-30 00:43:25,"@dzenbot is text caching optional? 
for now I'm overriding `- (void)slk_cacheTextToDisk:(NSString *)text` to do nothing. 
We use `SlackTextViewController` for multiple screens & don't wish to use this feature.
",markst,2015-10-15 23:00:52
283,2015-11-30 00:46:18,"No need to override that private method.
By default, `keyForTextCaching` returns nil, which disables the feature. It's totally optional, yes.
",dzenbot,2015-10-15 23:00:52
283,2015-11-30 00:47:40,"ah understood. thanks. 
",markst,2015-10-15 23:00:52
282,2015-10-08 04:39:54,"It is working fine with iOS 8.4 and below but starting iOS 9.0 I can't delete any characters to the SLTextView.
",johnpaulmanoza,2015-10-08 05:53:27
282,2015-10-08 04:42:32,"Can you repro on the sample project? I can not.
",dzenbot,2015-10-08 05:53:27
282,2015-10-08 05:53:24,"I just updated from 1.4 to 1.5, then the issue is resolved. Thanks for support.
",johnpaulmanoza,2015-10-08 05:53:27
281,2015-10-07 14:42:40,"Hi,

I am not sure if this should be considered an issue with `Cocoapods` or with `SlackTextViewController` so I will add this issue to both repos.

After upgrading to `0.39.0.beta.5` I got an error with pod `SlackTextViewController` (https://github.com/slackhq/SlackTextViewController/). My project claimed that the `#import ""SLKTextViewController.h""`  reffered to a file that didn't exist. After some investigation I noticed that there were actually  <b>no public headerfiles</b> visible to my project in this pod.

My fix for this was to fork `SLKTextViewController` and make some changes to the folder structure. Here is the original folder structure which fails:

<img width=""688"" alt=""skarmavbild 2015-10-07 kl 16 19 09"" src=""https://cloud.githubusercontent.com/assets/591532/10340388/0b6c09c0-6d10-11e5-8483-f22cac7b1fd7.png"">

And here is the podspec:

<img width=""492"" alt=""skarmavbild 2015-10-07 kl 16 19 58"" src=""https://cloud.githubusercontent.com/assets/591532/10340387/0b68e3ee-6d10-11e5-923f-ae23ddc7ef00.png"">

What I did is that I removed these two subfolders `Additions` and `Classes` and copied all files within these two to the groundlevel of folder `Source`.

Here is my fork: https://github.com/knutigro/SlackTextViewController/tree/master-foap/Source which give me no errors in 0.39.0.beta.5.

I have too little knowledge about how cocoapods work or should work to say if this is a bug in Cocoapods or in SlackTextViewController, but to me it look like Cocopods do not make public headers from files within subfolders.

/Knut
",knutigro,2015-10-16 15:20:08
281,2015-10-07 14:43:07,"Here is the issue I created in Cocoapods: https://github.com/CocoaPods/CocoaPods/issues/4337
",knutigro,2015-10-16 15:20:08
281,2015-10-07 14:55:45,"Thanks for this Knut.
Would be interesting to know if #273, #265, #259 or #275 are related issues.

I think this is a bug in Cocoapods, due to a non-backwards compatibility support. It used to be fine to separate classes in a pod. I guess there is no huge benefit of doing that anymore.
",dzenbot,2015-10-16 15:20:08
281,2015-10-13 20:09:02,"I also faced this bug with Cocoapods and SackTextViewController. Going to use @knutigro  fork for now:)
",zigdanis,2015-10-16 15:20:08
281,2015-10-13 20:10:33,"works good with pods 0.39.0 
",yaalaa,2015-10-16 15:20:08
281,2015-10-13 20:11:07,"Is this definitely an issue in Cocoapods?
",dzenbot,2015-10-16 15:20:08
281,2015-10-13 20:11:47,"seems so, many pods were broken
",yaalaa,2015-10-16 15:20:08
281,2015-10-13 20:16:08,"That's why it's probably not worth using Cocoapods betas. It's better to work on stable environments 😕
",dzenbot,2015-10-16 15:20:08
281,2015-10-13 20:17:43,"there are no more stable envs, only startups are:(
",yaalaa,2015-10-16 15:20:08
281,2015-10-13 20:39:19,"😭 Sorry to hear that.
Anyways, I will close this issue for now since it's unrelated to the library 💪
",dzenbot,2015-10-16 15:20:08
281,2015-10-13 21:14:46,"I am also having this issue with 0.39 NOT the beta. 
",magnett,2015-10-16 15:20:08
281,2015-10-14 09:28:04,"+1
",fdddf,2015-10-16 15:20:08
281,2015-10-15 06:43:02,"Did you guys recently upgrade to 0.39?
Do you think it's something related to the lib?
",dzenbot,2015-10-16 15:20:08
281,2015-10-15 07:02:04,"@dzenbot Yeap, i recently updated to 0.39 and with over 20 pods in my project, only SlackTextViewController had missing headers. So, i guess that cocoapods installation is fine, but you may have to fix something :)

BTW I updated to 0.39 from the previous stable version (0.38.something) if that matters. I never try betas.
",magnett,2015-10-16 15:20:08
281,2015-10-16 06:59:15,"After some testing, it seems that this should be now fixed with [release 1.7.1](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.7.1). Could anyone confirm please?
",dzenbot,2015-10-16 15:20:08
281,2015-10-16 07:36:41,"@dzenbot  Yes, thanks. That solves it for me :-)
",knutigro,2015-10-16 15:20:08
281,2015-10-16 15:20:08,"👌👌
",dzenbot,2015-10-16 15:20:08
280,2015-10-06 18:09:56,,stremblayiOS,2016-08-28 12:42:26
280,2015-10-07 08:51:27,"Do you mean, to activate the auto-completion mode without any prefix but with a whitespace instead? Like Facebook does?
",dzenbot,2016-08-28 12:42:26
280,2015-10-07 13:16:01,"No, I meant to add an option to not cancel auto-completion when typing a space bar while typing the mention. (Ex.:  @samuel tremblay) Will help for last name query and HTTP search with multiple words.
",stremblayiOS,2016-08-28 12:42:26
280,2015-10-07 14:24:12,"I guess after implementing https://github.com/slackhq/SlackTextViewController/issues/278#issuecomment-146208663, this could be done real easy by disabling the automatic show/hide feature and give that control to the developer instead.
",dzenbot,2016-08-28 12:42:26
280,2015-10-07 14:37:52,"Yeah that could work! Again I figured that Slack was all about Core Data queries so the way you built it makes sense. Although that lib would be much versatile with HTTP queries. Thanks again! We <3 Slack.
",stremblayiOS,2016-08-28 12:42:26
280,2015-10-07 14:44:39,"I agree. This enhancement may actually help us too, to make these queries asynch, improving performance for teams with a high amount of users.
",dzenbot,2016-08-28 12:42:26
280,2016-08-28 12:42:26,"Closing this as it is now possible to achieve with some client side implementation.
",dzenbot,2016-08-28 12:42:26
279,2015-10-06 17:22:27,,stremblayiOS,
279,2015-12-24 21:51:23,"+1
",LucasCoelho,
278,2015-10-06 15:46:54,"We managed to do it with our app (GroupUp) but it is not seemless and hard to maintain. Like now we want to mention people accross the whole app and obviously we are not gonna store all of our users in-app.

![simulator screen shot oct 6 2015 11 44 04 am](https://cloud.githubusercontent.com/assets/919665/10313843/ad792d16-6c1f-11e5-93c9-2d3264992fc7.png)
",stremblayiOS,2015-10-14 06:27:32
278,2015-10-07 08:48:34,"The library gives you the detected prefix and search query for you to do a search using your HTTP API.
What else would you need?
",dzenbot,2015-10-14 06:27:32
278,2015-10-07 13:13:18,"It just felt a total hack to me when implementing this feature. Probably a better timing to get **self.foundWord** would help. Right now the right moment to start the search query is in **\- (BOOL)canShowAutoCompletion**
",stremblayiOS,2015-10-14 06:27:32
278,2015-10-07 14:19:54,"Gotcha, you need an asynch API, with the ability to be notified when `foundWord` and `foundPrefix` update, so you can perform a remote search and show/hide the auto-completion view and update its content.
I've been wanting to do this for some time. We just didn't had the need at Slack since we query from CoreData.
Will have a look at this soon, unless you're starting implementing it already.
",dzenbot,2015-10-14 06:27:32
278,2015-10-07 14:22:17,"Thanks a bunch!
",stremblayiOS,2015-10-14 06:27:32
277,2015-10-02 22:17:21,"Documentation specifies the wrong default and YES for visible.
",robtimp,2015-10-13 00:44:31
276,2015-10-01 07:52:01,"When keyboard is showing - controller receive slk_didShowOrHideKeyboard and slk_willShowOrHideKeyboard notification all time. I think problem in reloadInputViews on SLKTextView
",populius,2016-03-18 19:09:16
276,2015-10-04 14:36:52,"You're about right. Has this been causing issue in the library itself, or are you using these notifications on your subclass?
",dzenbot,2016-03-18 19:09:16
275,2015-09-30 14:54:07,"Hello I receive warnings for the following 2 methods:
- (BOOL)forceTextInputbarAdjustmentForResponder:(UIResponder *)responder;
- (BOOL)ignoreTextInputbarAdjustment;

![screenshot 2015-09-30 17 52 47](https://cloud.githubusercontent.com/assets/768893/10196557/1b274934-679c-11e5-8c7d-a090160bdacb.png)

I have the latest version - 1.7
",danipralea,2015-10-16 07:01:13
275,2015-10-15 17:19:42,"This has been fixed [here](https://github.com/slackhq/SlackTextViewController/commit/f61e4e2cbc03ff30c9391fc86eba2c5ba8674f47)
Will release a new version today.
",dzenbot,2015-10-16 07:01:13
275,2015-10-16 07:01:13,"This is fixed with [release 1.7.1](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.7.1)
",dzenbot,2015-10-16 07:01:13
274,2015-09-28 18:49:10,"Registering for `SLKTextInputbarDidMoveNotification` will help you to detect whenever the text input bar changes its origin. Very useful when you have a subview anchored to the text input bar, such a picture-in-picture.

This PR also includes an implementation example.

Closes #261
",dzenbot,2015-09-28 22:35:57
273,2015-09-25 19:13:02,"All my project is builded using Swift. I installed SlackTextViewController using cocoapods, and work perfectly, but when I try used

import SLKTextView
public class MessageTextView : SLKTextView {
}

The XCode show the error ""No such module 'SLKTextView' "".
",tarekabdala,2015-10-16 07:07:55
273,2015-10-16 07:07:55,"Try importing the umbrella header instead:

<S_CODE_TOKEN>

That should do the trick.
",dzenbot,2015-10-16 07:07:55
272,2015-09-24 18:45:47,"Typing indicator doesn't is not shown anymore since 1.7 version. I'am trying to display it like this(which was working before):
`typingIndicatorView.insertUsername(userName)`

Could anybody check this please?
",mladen107,2015-09-24 18:48:13
272,2015-09-24 18:48:13,"Please see https://github.com/slackhq/SlackTextViewController/issues/253
This has been fixed in https://github.com/slackhq/SlackTextViewController/commit/d1d6d34180aed0e0368eebcdd5e000694479e376

We will release a new version real soon.
",dzenbot,2015-09-24 18:48:13
271,2015-09-23 15:58:08,"If I use `SLKTextViewController` in inverted mode, double tap the status bar will scroll the text view to bottom, which is not iOS default behavior.

I tried to override this with custom `scrollViewShouldScrollToTop()`:

<S_CODE_TOKEN>

This mostly work except when user is at the **bottom of the scroll view**. Tap gesture will not trigger `scrollViewShouldScrollToTop()` when the scroll view is at top, which in our inverted case, bottom. 

This mean when user open messages screen and want to read older messages by tapping status bar, the table view will not response which feel strange. I wonder if there are solution to this problem? Or I should look into set inverted = false instead?
",siuying,2015-11-23 02:44:35
271,2015-09-23 16:05:07,"I have been wanting to remove all that logic, and let the tableView scroll to top independent of the inverted mode. Even if messages come from the bottom, the user might be interested in checking history by scrolling up.

About the second issue, I'm not sure how that could work since this is an internal behaviour in UIScrollView which calls  `scrollViewShouldScrollToTop` if the content offset is lower than Zero. There must be something to do, but probably hacky.
",dzenbot,2015-11-23 02:44:35
271,2015-09-23 16:11:29,"Thanks! I guess I should try if non inverted mode could work in my case.
",siuying,2015-11-23 02:44:35
271,2015-09-23 16:12:21,"Will keep this issue open, to remind myself to remove that scroll-to-bottom logic on inverted mode.
",dzenbot,2015-11-23 02:44:35
270,2015-09-18 10:06:01,"Hi! I've noticed an issue with animation when I tried to push a view controller with an already visible keyboard.

Here's a video of how it looked before my changes:
https://dl.dropboxusercontent.com/u/5184129/movies/slack_before.mov
and after:
https://dl.dropboxusercontent.com/u/5184129/movies/slack_after.mov

These videos are based on `Messenger-Storyboard` scheme with one small change. I added:

<S_CODE_TOKEN>

to `MessageViewController.m`.
",fastred,2015-09-21 17:11:15
270,2015-09-21 17:36:55,"Great fix! Thanks :+1: 
",dzenbot,2015-09-21 17:11:15
270,2015-09-21 17:42:13,"Thanks likewise, for this great library :smile: 
",fastred,2015-09-21 17:11:15
269,2015-09-17 12:06:43,"Operating directly on self.constraints is not safe, iOS has some of it's own constraints you never know in the future.
This is kind of a best practice on how to manage developer's own constraints.
",senryxie,2016-07-20 19:12:03
269,2015-09-17 12:09:13,"BTW, when self.constrains is nil calling  [self removeConstraints:self.constraints] will lead to a crash.
",senryxie,2016-07-20 19:12:03
269,2015-09-21 19:04:31,"I believe `removeConstraints:` would only crash on iOS 7.
Still, this is a very interesting approach. I wonder if we should spread this practice in every class that handles custom constraints.
",dzenbot,2016-07-20 19:12:03
269,2016-07-20 19:12:03,"Closing this for now, as it's deprecated.
",dzenbot,2016-07-20 19:12:03
268,2015-09-17 06:00:38,"Closes #267 
Closes #258 
",dzenbot,2015-09-17 06:22:02
267,2015-09-16 21:28:42,"There must be a way to detect this gesture and like we do for the Loupe gesture, disable auto-completion's text processing to avoid this erratic behaviour.

Backtrace:

<S_CODE_TOKEN>
",dzenbot,2015-09-17 06:22:02
266,2015-09-16 10:47:24,"Now I can only set button's title to a bunch of spaces as placeholder, and set my image.

<S_CODE_TOKEN>
",Nick-The-Uncharted,
266,2015-10-27 02:02:11,"look forward to this feature
",neil-wu,
266,2016-09-22 00:23:50,"I'm not sure exactly what you're trying to do but if you want the right button to be a custom image with no title you can set the title to nil. For example:

<S_CODE_TOKEN>
",soleares,
265,2015-09-16 09:42:44,"Hello!
This happens if I add use_frameworks! in the Cocoapods file:
![screenshot 2015-09-16 12 41 56](https://cloud.githubusercontent.com/assets/768893/9901430/6546d0f2-5c70-11e5-8577-d6c57e975e8c.png)

Any idea how to fix it?
",danipralea,2016-01-06 19:11:53
265,2015-09-16 13:40:23,"Cleaning and deleting derived data doesn't fix it?
",dzenbot,2016-01-06 19:11:53
265,2015-09-16 14:49:00,"Nope. Did a lot of those actually
",danipralea,2016-01-06 19:11:53
265,2015-09-16 15:53:18,"What version of Cocoapods are you using? Not trying to blame them, but I cannot reproduce this issue on my end.
",dzenbot,2016-01-06 19:11:53
265,2015-09-30 14:49:50,"0.38.2

It happens with different versions though
",danipralea,2016-01-06 19:11:53
265,2015-10-01 22:17:52,"Bump.
Has anyone found a fix for it. I cannot use any Swift library with that flag added.
Please help ? :smiley: 

Thanks in advance
",danipralea,2016-01-06 19:11:53
265,2015-10-16 15:22:45,"Try using [release 1.7.1](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.7.1).
",dzenbot,2016-01-06 19:11:53
265,2015-10-23 19:00:22,"@danipralea did you try the latest releases?
",dzenbot,2016-01-06 19:11:53
265,2015-10-23 19:12:04,"Yes, sir.

> On 23 Oct 2015, at 22:00, Ignacio Romero Zurbuchen notifications@github.com wrote:
> 
> @danipralea did you try the latest releases?
> 
> —
> Reply to this email directly or view it on GitHub.
",danipralea,2016-01-06 19:11:53
265,2015-10-23 19:12:34,"...and still an issue?
",dzenbot,2016-01-06 19:11:53
264,2015-09-15 22:02:03,,dzenbot,2015-09-15 22:12:25
263,2015-09-15 21:38:55,,xhacker,2015-10-19 05:03:42
263,2015-10-19 05:03:42,"This isn't needed after all since you can [hide/show the textInputbar programatically now](https://github.com/slackhq/SlackTextViewController#hiddable-textinputbar)
",dzenbot,2015-10-19 05:03:42
262,2015-09-15 19:39:31,"If we don't use the getters to access left and right buttons, the KVO is removed from the wrong instance variables if a subclass decides to override the leftButton/rightButton getters.

You can reproduce this issue on XCode 7.1/iOS 9.1 by creating a subclass of SLKTextInputbar, overriding the self.rightButton getter and then triggering a dealloc.  Debug builds will crash with the warning that an observer is not being removed.
",vertigo0,2015-11-23 02:43:01
262,2015-10-19 04:47:01,"Sorry, I missed seeing this PR.

Your description makes sense, although `SLKTextViewController` doesn't support extending `SLKTextInputbar`. Are you using a custom version of the library? In that case, this PR doesn't really fix the issue (yet).
",dzenbot,2015-11-23 02:43:01
261,2015-09-14 20:46:19,,AhmedEid,2015-09-28 22:35:57
260,2015-09-13 11:24:34,"Is there any way to set the frame of the tableview ? for ex the height and the layout constraint as well?
",fnumono,2015-09-13 14:09:05
260,2015-09-13 14:09:05,"You would need to fork the project and tweak the scrollview height constraint in thw implementation.
",dzenbot,2015-09-13 14:09:05
259,2015-09-12 22:44:00,"Hey guys thks for this great plugin
I just wanted to check with you this warning, we have when we use SlackTextViewController into our app 
nothing to worry about? 

<S_CODE_TOKEN>
",pgherveou,2015-10-13 20:54:04
259,2015-09-13 14:06:15,"If you override these methods, you must call `super`. Are you?
",dzenbot,2015-10-13 20:54:04
259,2015-09-13 15:49:27,"Thks for your reply, I check we don't override these classes.
The warnings seems to come from the plugin files itself?
SlackTextViewController.SLKTextViewController:338:14
SlackTextViewController.SLKTextViewController:336:14
",pgherveou,2015-10-13 20:54:04
259,2015-10-13 20:40:00,"@pgherveou are you still experiencing this?
",dzenbot,2015-10-13 20:54:04
259,2015-10-13 20:54:04,"nope I am not seeing it anymore, closing it!
",pgherveou,2015-10-13 20:54:04
259,2015-10-13 20:54:22,"🙌
",dzenbot,2015-10-13 20:54:04
258,2015-09-12 06:41:58,"Overwriting `- (NSArray *)gestures` in `SLKTextView` can cause crash. `- (NSArray *)gestures` is called when super is being `dealloc`-ed. 

Possible fix: Add `self` as target during initialisation. See -> https://github.com/devladinci/SlackTextViewController/commit/5abf17a027fa8e6412255df43620fb145fecc7ec
",devladinci,2015-09-17 06:22:02
258,2015-09-13 14:03:15,"That doesn't work on iOS 9. The gestures are recreated over and over. Couldn't find a better solution. Didn't realised that it was causing a crash tho, thanks for the heads up!
",dzenbot,2015-09-17 06:22:02
257,2015-09-11 18:21:00,"This PR mostly cover iOS 9 GM bug fixes but also includes regression bug fixes, like the one reported in #253
",dzenbot,2015-09-11 18:49:51
256,2015-09-10 09:54:58,"HI I love this library however when i use the tableview version of the controller

and set 

cell at indexpath
 var cell = self.tableView.dequeueReusableCellWithIdentifier(""cell"") as! UITableViewCell

<S_CODE_TOKEN>

return cell

the cell is start from the bottom and the text itself is flipped upside down
did I do anything wrong?
",fnumono,2015-09-11 15:59:11
256,2015-09-10 15:28:59,"Please see https://github.com/slackhq/SlackTextViewController#inverted-mode
",dzenbot,2015-09-11 15:59:11
255,2015-09-09 20:02:44,"- not sure if these changes are appropriate for merging into master
- we typically update the textview with attributed text and some of the code was not behaving nicely for us; these changes just make it behave nicer when using attributedText properties rather than text
",rvanmelle,2015-11-23 02:43:23
255,2015-09-09 20:17:43,"I've been thinking about this lately and how to improve the attributed string support, but I think it should be done everywhere in the library. One thing I've been wondering to do, is to override `SLKTextView`'s `text` getter property to look like so:

<S_CODE_TOKEN>

This way, we can have a more precise API to check for string length, and avoid doing `self.textView.text.length > 0 || self.textView.attributedText.length > 0` everywhere, don't you think?
",dzenbot,2015-11-23 02:43:23
255,2015-09-09 20:20:38,"Definitely, probably more of a comprehensive look at it would be warranted; I kind of did the minimum change that fixed the problems we were seeing.  Might be better to do an all or nothing type of fix.
",rvanmelle,2015-11-23 02:43:23
255,2015-09-09 20:25:01,"Since we don't currently use attributed strings for Slack's app, this might not be a priority for us at the moment. Would you like to tackle this down and submit a PR with a more broad implementation for better attributed string support?
",dzenbot,2015-11-23 02:43:23
255,2015-09-09 20:30:30,"Totally understood --- we're maintaining a fork and using it almost exclusively with attributed text, so I suspect eventually we might come across all related bugs. I would love to find the time to tackle a more broad-based fix, but no promises.
",rvanmelle,2015-11-23 02:43:23
255,2015-09-09 20:35:07,"I will keep this PR open as a reminder to add better support for this.
",dzenbot,2015-11-23 02:43:23
254,2015-09-09 18:10:06,"I think it might be helpful for individuals to either include the x86_64 slice when running `carthage update` or let people know to run `carthage update --no-use-binaries` if their intention is to use SlackTextViewController with the simulator.
",csjones,2016-01-06 19:12:19
254,2015-09-10 22:11:33,":+1: 
",timshadel,2016-01-06 19:12:19
254,2015-10-07 20:38:23,":+1: 
",heyalexchoi,2016-01-06 19:12:19
254,2015-10-07 20:40:09,"Is this something the library could help with? Or is it a thing in Carthage? (Don't use it very often, sorry)
",dzenbot,2016-01-06 19:12:19
254,2015-10-07 21:06:58,"as I understand, carthage will grab the prebuilt framework attached to a release by default, but that prebuilt framework does not include the x86_64 slice needed to run in the simulator. you could update the readme to recommend the --no-use-binaries flag:

<S_CODE_TOKEN>

to enable use with the simulator
",heyalexchoi,2016-01-06 19:12:19
254,2015-10-07 21:07:44,"Or include the `x86_64` slice instead?
",dzenbot,2016-01-06 19:12:19
254,2015-10-07 21:15:27,"To be honest, I'm not entirely sure what happens if a prebuilt framework includes simulator slices and gets included into a project that then gets built for release.

It seems Carthage had some issues earlier with apps with carthage-built frameworks getting rejected for these simulator slices, and  added a script to work around: https://github.com/Carthage/Carthage/blob/5fd867c4895b4f59d70181dec169a1644f4430e3/README.md#if-youre-building-for-ios

But yeah, if the x86_64 slice doesn't cause any problems, including it in the attached prebuilt framework would probably make things easiest for SlackTextViewController users.
",heyalexchoi,2016-01-06 19:12:19
254,2015-10-07 21:20:00,"Gotcha. Thanks for the info @heyalexchoi.
I'm happy to accept any PR that would make this experience a bit better. If not, I'll have a look at it soon.
",dzenbot,2016-01-06 19:12:19
254,2015-10-07 21:59:19,"I don't think it's possible to do a PR. I believe that it's a manual process to attach `SlackTextViewController.framework.zip` to a Github release.

Simply checkout the code at that tag, then:

<S_CODE_TOKEN>

The zip file is created in your current directory. Attach that on your Github release page. I believe you can even edit former releases to attach appropriate binaries, fixing the problem for past versions.
",timshadel,2016-01-06 19:12:19
254,2015-10-07 22:00:39,"@timshadel so does this mean that including simulator slices shouldn't cause complications for users using the prebuilt framework without carthage?
",heyalexchoi,2016-01-06 19:12:19
254,2015-10-08 15:25:35,"So how do people using the prebuilt framework currently run their app in the simulator? I assume that without the x86_64 slice they're forced to test on device only.

The challenge is that you can't submit to the App Store with an x86_64 slice in your library. That's where some kind of script comes in if you're using a binary dependency. Carthage has one, and describes how to use it. I'm guessing that's what the script you reference is doing.

So I believe the core tension is use source only vs give simulator testing vs script for App Store submission.
",timshadel,2016-01-06 19:12:19
253,2015-09-08 20:28:11,"I have a subclass of SLKTextViewController that is calling:
`self.typingIndicatorView.insertUsername(username)`

In version 1.6, I would see the typing indicator appear.  Now with version 1.7, it is not appearing.

Did something in the default configuration change for typing indicators?
",aaronscherbing,2015-09-11 18:49:52
253,2015-09-08 20:42:07,"Sorry about that @aaronscherbing. Some stuff changed in `UIScrollView+SLKAdditions.h`, specifically in `slk_isAtTop` and `slk_isAtBottom`, breaking the typing indicator check in `-canShowTypingIndicator`.

While I take care of this, simply override `-canShowTypingIndicator` in your  `SLKTextViewController` subclass, and return `YES` for the conditions that best applies for you.
",dzenbot,2015-09-11 18:49:52
253,2015-09-08 20:43:29,"Great!  Thanks for taking a look.  I love this library, by the way.
",aaronscherbing,2015-09-11 18:49:52
253,2015-09-08 20:44:00,"That's great to hear/read 😊
",dzenbot,2015-09-11 18:49:52
252,2015-09-08 10:36:55,"I have the following structure:

1.) Tab bar controller
2.) A tab contains a list of chats
3.) Tapping on an entry in the chat list pushes the `ChatViewController` on the navigation stack (subclass of `SLKTextViewController`) -> hides the bottom bar when pushed (the tab bar)
4.) Tapping on an image in this chatview presents a modal view with the fullscreen image

Now, if I load the `ChatViewController` (3.) and go to the chatview all works fine. The input bar is always on top of the keyboard if it appears. However, if I present some view modally (4.) and go back, the behaviour changes. The input bar is still there, but when I tap on it, the keyboard opens, but the input bar is stuck at the bottom and therefore hidden by the keyboard (the tableview also does not scroll up anymore).

Do you have any clue how to fix that?

Thank you!
",Lukee35,2015-09-08 11:05:53
252,2015-09-08 11:05:53,"Oh, I've already found the bug. It was my fault. :)
",Lukee35,2015-09-08 11:05:53
252,2015-09-08 11:10:39,"Would you mind sharing what was the cause of this issue?
",dzenbot,2015-09-08 11:05:53
252,2015-09-08 12:11:44,"Sure - I called `unSubscribeFromNotifications()` on `viewWillDisappear`, which removes the Controller from the NSNotificationCenter completely, which in return messes up the notification handlers for the SlackTextViewController (I guess).
",Lukee35,2015-09-08 11:05:53
252,2015-09-08 13:37:17,"Yes, that must be it.
Thanks for the heads up! ✌️
",dzenbot,2015-09-08 11:05:53
251,2015-09-02 17:36:25,"#### New & Improved features:
- [Key​ Command shorcuts for external keyboards](http://nshipster.com/uikeycommand/)
- [Multi-Tasking support](https://developer.apple.com/library/prerelease/ios/documentation/WindowsViews/Conceptual/AdoptingMultitaskingOniPad/index.html)
- Better keyboard panning recognition
",dzenbot,2015-09-03 00:56:01
251,2015-09-03 00:56:08,"Nice work!
",fyaqub,2015-09-03 00:56:01
250,2015-09-02 04:08:08,"How can this be done? I have a tablewView that is an outlet and a UIView with a textView as an outlet. I would like to just display the inputbar. I am using Swift. Any help would be appreciated. Thanks!
",hongseung92,2015-09-02 13:13:04
250,2015-09-02 08:18:16,"+1
",mixdesign,2015-09-02 13:13:04
250,2015-09-02 12:49:48,"The Inputbar is managed by `SLKTextViewController` so I'm afraid what you are tying to do isn't possible. Why not subclass `SLKTextViewController`?
",dzenbot,2015-09-02 13:13:04
250,2015-09-02 13:09:21,"@dzenbot thanks for your response. I have subclassed the SLKTextViewController. But then the viewcontroller does not display what I have in the storyboard. I guess the best practice for me is just to write code to configure my viewcontroller? Thanks!
",hongseung92,2015-09-02 13:13:04
250,2015-09-02 13:13:04,"There is storyboard compatibility. Please have a look at the sample project.
",dzenbot,2015-09-02 13:13:04
250,2015-09-02 14:24:33,"@dzenbot is the sample project available in Swift?
",hongseung92,2015-09-02 13:13:04
250,2015-09-02 14:26:16,"@dzenbot  the storyboard sample is only in Objective-C. :'(
",hongseung92,2015-09-02 13:13:04
250,2015-09-02 14:26:21,"There is a Swift sample project, incomplete, in https://github.com/slackhq/SlackTextViewController/tree/swift-example

I'm not yet into Swift that much and was hoping the community could contribute to build a great Swift sample ¯_(ツ)_/¯
",dzenbot,2015-09-02 13:13:04
250,2015-09-02 14:27:58,"Anyway, for storyboard compatibility, you should only care about the following method to override in your subclass:

<S_CODE_TOKEN>
",dzenbot,2015-09-02 13:13:04
250,2015-09-10 12:22:24,"But this storyboard compatibility.. it's not possible to use your own, existing UITableView, right? For example I have an existing scene in a storyboard. It's a UIViewController with a UITableView. It's connected to the view controller via an outlet. Now I want to make this view controller a SLKTextViewController instead, but it seems that I can't keep on using my existing table (with all its prototype cells etc). It seems that I have to remove the table view from my scene, and use the programmatically created one from SLKTextViewController. Then use individual nibs for the different cells etc, instead of using prototype cells in the storyboard.
",kevinrenskers,2015-09-02 13:13:04
250,2015-09-10 12:32:35,"You cannot use your custom UITableView, no. Everything is setup programatically. The Storyboard compatibility does only work when using with an empty nib extending SLKTextViewController.
I'm happy to accept any improvements in this area, that make the Storyboard integration better tho.
",dzenbot,2015-09-02 13:13:04
250,2015-09-21 07:55:07,"Would be spectacular if you could just hook in a current UITableView via IBOulets. 
",dilizarov,2015-09-02 13:13:04
250,2015-09-21 11:19:08,"It would. Can't imagine how it would be compatible tho. I'm open to ideas.
",dzenbot,2015-09-02 13:13:04
249,2015-09-01 16:28:01,,csjones,2015-09-01 17:27:34
249,2015-09-01 17:27:39,"Thanks :+1: 
",dzenbot,2015-09-01 17:27:34
248,2015-08-31 02:47:19,"I am trying to used the subclassed viewcontroller from SLKTextViewController inside a navigation controller. But it seems the tableview frame its returns is the  (0 0; 375 574) in the iPhone 6 simulator.
While in case of navigation controller the tableview frame should start from Y origin 64 instead of 0.
How to fix that?
",kidsid49,2015-08-31 07:12:35
248,2015-08-31 07:04:21,"Try setting `self.edgesForExtendedLayout = UIRectEdgeNone;` on your view controller.
",dzenbot,2015-08-31 07:12:35
248,2015-08-31 07:12:35,"Yup that worked.
Thanks!
",kidsid49,2015-08-31 07:12:35
248,2015-10-26 00:01:36,"I have a weird problem with this.  My navigation bar is translucent black and whenever i scroll past each cell, it's shown behind the nav bar like it should, but then when the cell scrolls completely out of view the nav bar immediately shows it's black background color and that transition is really ugly (the cells are white so it goes from white, then immediately to black).  Not sure if anyone else is having this problem, or how to fix it...  I've attached a gif so you can get a better idea of the problem...  

![slacktextviewcontrollerbug](https://cloud.githubusercontent.com/assets/5007053/10718974/b9879eb4-7b3b-11e5-8723-b89c1efb582a.gif)
",Gman9855,2015-08-31 07:12:35
247,2015-08-26 18:42:02,"@dzenbot Finally found out why my input bar gets hidden. Changing the background color causes this issue. This issue only happens on 1.6

<S_CODE_TOKEN>
",aryaxt,2015-09-02 23:15:56
247,2015-08-26 18:45:15,"Thanks for the heads up! 👊

`setBackgroundColor:` doesn't update the `inputAccessoryView`'s background color anymore in https://github.com/slackhq/SlackTextViewController/pull/241
This will be fixed in the next release. 
",dzenbot,2015-09-02 23:15:56
246,2015-08-26 15:50:51,"The controller hides the keyboard when user touches the tableView by default, but I don't want this behavior.
I want the keyboard keeps showing up even when user touches the tableView.
How do I disable this default behavior?
Thanks!

By the way, I found I need to do many tiny customizations to make this library meet my requirement. These customizations usually can be achieved easily, but it's not that easy currently due to lack of documentation. I usually need to spend several minutes tracing the source/sample code before I get a solution, which is usually a 1-line code.
I'd like to contribute by adding some wiki to this project, but I want to make sure whether it's welcome :)
",brianhu,2015-08-27 13:55:42
246,2015-08-26 16:14:17,"Look for `UIGestureRecognizer *singleTapGesture` in `SLKTextViewController`'s interface. That gesture's delegate is the `SLKTextViewController` already. You can disable the gesture in `- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer`

All class interfaces, and implementations, are heavily documented. But this library has many features, which you need to invest some time to make it fit your requirements, it's normal, specially since its pattern is to subclass and extend, like you normally would with `UIViewController` 😉

The problem with a Wiki, is that it's not accessible enough, and to keep that updated is too much work. I would rather make the README more friendly, or the interfaces' documentation better. That said: I'm very happy to accept PR for documentation improvements/localization. 💪😎👊
",dzenbot,2015-08-27 13:55:42
245,2015-08-26 08:25:58,"I am using Storyboard to create a view whose viewController is a sub-class of SlackTextViewController.

Everything worked well except the tableView was reversed:

<img width=""246"" alt=""screen shot 2015-08-26 at 4 29 56 pm"" src=""https://cloud.githubusercontent.com/assets/738117/9488913/bfe1a77e-4c0f-11e5-82df-477ef0cf46f5.png"">

Only the tableView was reversed, the texts on the navigation bar and input toolbar are good.
This is funny and doesn't make sense to me at all.

How do I fix this? Thanks!
",brianhu,2015-08-26 13:28:20
245,2015-08-26 12:34:21,"Please see https://github.com/slackhq/SlackTextViewController/blob/master/README.md#inverted-mode
",dzenbot,2015-08-26 13:28:20
245,2015-08-26 13:21:28,"oops, sorry for not reading the doc carefully.
In my opinion, this is a must-to-know of this lib since the default `inverted` value is `YES`. You should put this in somewhere more obvious (like the beginning of this doc). It looks like an optional functionality at current position.
Thank you for this awesome project anyways :D
",brianhu,2015-08-26 13:28:20
245,2015-08-26 13:27:40,"Good point :+1: 
",dzenbot,2015-08-26 13:28:20
245,2015-09-02 14:58:55,"@brianhu Hey Brian, Are you using Swift? if you are how are you displaying your storyboard? Can you advise on this? Thanks!
",hongseung92,2015-08-26 13:28:20
245,2015-09-02 15:48:52,"I am using obj-c. However, as for storyboard, I believe the logic is the same. There should not be any differences between swift and obj-c
",brianhu,2015-08-26 13:28:20
244,2015-08-25 19:46:38,"Video: https://cloudup.com/cYAyK7jrSr8
Please note that message 4 is not triggering the scroll down action.

I'm using SlackTextViewController using UICollectionView. Here's what I got in my viewcontroller after appending a new message on my Data Source:

<S_CODE_TOKEN>

Is that a known bug? I haven't tried yet with UITableView.
",betzerra,2015-09-08 17:50:12
244,2015-08-28 18:56:10,"One of our devs fixed the issue by adding:

<S_CODE_TOKEN>

What the hell? Does this makes sense to you guys?
",betzerra,2015-09-08 17:50:12
244,2015-08-29 14:00:49,"By setting ""self.edgesForExtendedLayout = UIRectEdgeNone"", you actually move the viewController of your NavigationController under the NavigationBar, which results of losing the translucency effect in normal mode, or glitchy translucency effect on ""inverted"" mode. 

I found a better solution without changing the edgesForExtendedLayout: 

<S_CODE_TOKEN>
",dreampowder,2015-09-08 17:50:12
244,2015-08-29 14:07:38,"`automaticallyAdjustsScrollViewInsets` is definetly a better solution. I wonder if this should be set by default to `YES` in `SLKTextViewController`
",dzenbot,2015-09-08 17:50:12
244,2015-08-29 14:44:35,"i think that wuold be a good improvement, btw i really like your libraries on github @dzenbot , thanks for sharing!
",dreampowder,2015-09-08 17:50:12
244,2015-11-16 19:02:16,"I've the same problem.. has this been fixed? my application inserts the row on Tableview and scrolls but not at the position it should (bottom).
",eddwinpaz,2015-09-08 17:50:12
244,2015-11-16 19:56:07,"Did you try using `automaticallyAdjustsScrollViewInsets` @eddwinpaz ?
",dzenbot,2015-09-08 17:50:12
244,2015-11-16 22:20:51,"@dzenbot I've use it on my swift file that holds the tableview and nothing happens. :( 
",eddwinpaz,2015-09-08 17:50:12
244,2015-11-16 23:15:44,"I'm not using collectionViews. I'm using Tableviews. I've added self.automaticallyAdjustsScrollViewInsets = true to my viewDidLoad and the same issue :-1: 
",eddwinpaz,2015-09-08 17:50:12
243,2015-08-25 12:55:31,"We don't know why but suddenly the input bar is no longer visible as long as the keyboard is shown.

We tried versions 1.5, 1.6 and master (at commit [5a442257664f76c99458db1b21c849a7fe8756ab](https://github.com/slackhq/SlackTextViewController/tree/5a442257664f76c99458db1b21c849a7fe8756ab)) and the issue does always occur.

I think this is related to https://github.com/slackhq/SlackTextViewController/pull/230#issuecomment-130754698 but no separate issue was created for that problem yet.

Looking at the view hierarchies we see that the `SLKInputAccessoryView` is sitting in front of the `SLKTextInputbar`.

Why does the empty `SLKInputAccessoryView` have a background color and a non-zero height set? From what I understand it's not supposed to display anything.
#### Without Keyboard

![without keyboard](https://cloud.githubusercontent.com/assets/85242/9466617/6b4e72d4-4b36-11e5-871f-c035906f7f8e.png)
#### With Keyboard

![with keyboard](https://cloud.githubusercontent.com/assets/85242/9466629/7f0cb7d6-4b36-11e5-8385-8edd18e9b3ee.png)
",fluidsonic,2015-09-02 23:15:58
243,2015-08-25 16:31:11,"I've been recently working on a new feature, related to the empty `inputAccessoryView` for panning gesture enhancements.

Would you please [install this branch](https://github.com/slackhq/SlackTextViewController/pull/241) @fluidsonic and let me know if it's still an issue for you?
I haven't been able to repro 😕
",dzenbot,2015-09-02 23:15:58
243,2015-08-25 17:08:02,"@dzenbot that branch works fine - the input bar is visible again :)

Keyboard panning also works, although it's a bit buggy when you scroll the keyboard all the way down and then up again without lifting your finger. When the keyboard is all the way up again then finally lift the finger. Keyboard won't stay but be dismissed instead. Works fine in Messages app.
",fluidsonic,2015-09-02 23:15:58
243,2015-08-25 17:10:11,"I'm glad to know that it's fixed!
That branch is still a _work-in-progress_ thing. I submitted a PR to give visibility to whoever wanted to test and help out.
",dzenbot,2015-09-02 23:15:58
243,2015-08-27 13:57:13,"@fluidsonic you might be interested in https://github.com/slackhq/SlackTextViewController/issues/247 's quick solution for now
",dzenbot,2015-09-02 23:15:58
242,2015-08-24 20:27:18,,krzd,2015-08-24 21:09:27
242,2015-08-24 21:09:27,"Makes sure to override `- (BOOL)canShowTypingIndicator` and return `YES` whenever you think it's best. By default, the typing indicator is only shown when the scrollView offset is at the bottom of the content size.
",dzenbot,2015-08-24 21:09:27
241,2015-08-24 18:28:00,"This new feature basically allows to bring the keyboard up, progressively, from the bottom, by either dragging the text input bar (UIToolbar) or the scrollView if it's at the very bottom of the content size. Also, dismissing the keyboard interactively can start from the `textInputbar` too (before we were only using the scrollView's native panning gesture recognizer).

Also fixes a few textInput adjustment on iPad when the keyboard was docked/split, detecting and exposing it with a new flag `isKeyboardDocked`.

![interative_keyboard_panning](https://cloud.githubusercontent.com/assets/590579/9448678/5423f254-4a74-11e5-870d-80c377d24937.gif)

Known issues:
- When dragging from the bottom, the keyboard flashes occasionally when presented for the first time. It glitches more frequently on iPad.
- When dragging from the bottom and releasing with speed to open the keyboard, the speed is `0` so the keyboard is dismissed instead of being presented.
- Sometimes, the keyboard disappears leaving a white area while the text input is still up.

Closes #247
",dzenbot,2015-09-02 23:15:56
240,2015-08-22 15:16:55,"These APIs have been flagged as deprecated for a long time. It's now time to remove them before we bump to a new version.
",dzenbot,2015-09-02 19:29:02
239,2015-08-22 15:06:52,"This feature includes:
- Fully dynamic TextView height based on the font size and the user preferred font ratio
- Dynamic maximum line count (small fonts allow more lines, as large fonts are limited to less lines)
- The layout updates as soon as the user's Dynamic Type setting changes
- Easily Opt-out by disabling the `dynamicTypeEnabled` flag (default is on)

![image](https://cloud.githubusercontent.com/assets/590579/9424511/31a9871c-48c5-11e5-84fe-822cd2200516.png)
",dzenbot,2015-09-02 19:25:18
239,2015-08-22 20:53:35,"cc @udaysinghcode
",dzenbot,2015-09-02 19:25:18
239,2015-09-26 05:22:17,"Hi @dzenbot , is there any particular reason you used font.familyName instead of font.fontName? Now I can not set set bold or italic font in the textview as it only picks family name.
",Ataman11,2015-09-02 19:25:18
238,2015-08-22 02:25:17,"When using this library inside of a UITabBarController, where the tab bar is not hidden, the animation for showing and hiding the keyboard are offset by the height of the tab bar.
The code seems to assume the tab bar would move with the text input bar, but instead it does not change its position and will be covered by the keyboard.
",krzd,2015-11-22 21:23:09
238,2015-08-22 02:27:35,"Please, attach a screenshot of this issue to better understand.
",dzenbot,2015-11-22 21:23:09
238,2015-08-22 05:03:12,"![ios simulator screen shot 21 aug 2015 22 01 14](https://cloud.githubusercontent.com/assets/1003886/9422612/436fd796-4850-11e5-85b2-1e95782e807a.png)
![ios simulator screen shot 21 aug 2015 22 01 15](https://cloud.githubusercontent.com/assets/1003886/9422613/4376bb24-4850-11e5-8f77-5915301de13b.png)
",krzd,2015-11-22 21:23:09
238,2015-09-08 20:48:18,"Please install [1.7](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.7) and let me know if that's fixed. Cannot reproduce anymore.
",dzenbot,2015-11-22 21:23:09
238,2015-09-09 12:30:11,"It still seems to happen. I now tried the Programatic Example, replacing in AppDelegate:

<S_CODE_TOKEN>

with

<S_CODE_TOKEN>

Now when doing this, there is indeed no black gap. However, there still is one, as shown below:
![ios simulator screen shot 9 sep 2015 13 27 17](https://cloud.githubusercontent.com/assets/1003886/9761797/cc7f4170-56f6-11e5-8bfc-7db6ee07c676.png)
",krzd,2015-11-22 21:23:09
238,2015-09-09 12:38:34,"Interesting.
So far, I've been testing with UITabBarController when pusing from a view controller, like in the Storyboard example. But never though that configured in the root view controller directly it wouldn't work.
Gonna take a look at this.
",dzenbot,2015-11-22 21:23:09
238,2015-10-28 11:19:33,"Is there any update on this, @dzenbot?
",casperstorm,2015-11-22 21:23:09
238,2015-11-22 21:23:09,"@krzd I've tried [that same snippet](https://github.com/slackhq/SlackTextViewController/issues/238#issuecomment-138894809) in the Programatic example, using the latest version, and I can no longer reproduce.
Please re-open if it's still an issue for you.
",dzenbot,2015-11-22 21:23:09
238,2016-05-25 08:26:15,"@dzenbot, I still have this problem. I have reproduced it the same way @krzd mentioned:

`UITabBarController *controller = [[UITabBarController alloc] init];
controller.viewControllers = @[[[UINavigationController alloc] initWithRootViewController:[MessageViewController new]]];
self.window.rootViewController = controller;`

I am using the newest release `1.9.3`.
I have packed a [sample project](https://dl.dropboxusercontent.com/u/1027303/SlackTextViewController_offset_bug.zip) and a [small movie](https://dl.dropboxusercontent.com/u/1027303/slack_textfield_gab_problem.mov) showing the problem, recorded in the simulator however I have the problem on the device as well.
",casperstorm,2015-11-22 21:23:09
237,2015-08-21 17:39:12,"This fixes a retain cycle recently introduced. 
",dzenbot,2015-08-21 20:02:28
236,2015-08-19 09:32:30,,peiweichen,2015-08-19 09:32:45
235,2015-08-19 08:32:58,"![wechat_1439969276](https://cloud.githubusercontent.com/assets/6760710/9351936/df1d285a-468f-11e5-8d3a-0c6bef26a4eb.jpeg)
![wechat_1439969267](https://cloud.githubusercontent.com/assets/6760710/9351940/e0cd0d46-468f-11e5-821a-af6b432d6205.jpeg)

This happens every launch once during the running process...
",peiweichen,2015-08-21 10:58:33
235,2015-08-19 08:36:18,"@dzenbot 
",peiweichen,2015-08-21 10:58:33
235,2015-08-19 13:44:14,"I've never seen this before.
This library doesn't interact with the view controller's navigation controller, so I wonder if it's a bug in your forked version. You're using a custom version of the library, aren't you?
",dzenbot,2015-08-21 10:58:33
235,2015-08-20 10:10:05,"My controller subclass SLKTextViewController using custom navigationController

@implementation CutstomNavigationController
- (void)viewDidLoad {
  [super viewDidLoad];
  [self setNeedsStatusBarAppearanceUpdate];
  __weak typeof (self) weakSelf = self;
  if ([self respondsToSelector:@selector(interactivePopGestureRecognizer)]) {
      self.interactivePopGestureRecognizer.delegate = weakSelf;
      self.delegate = self;
  }
  [self setCommonNavigationStyle];
  }
- (void)setCommonNavigationStyle {
  [self.navigationBar setBarTintColor:kBlueColor];
  [self.navigationBar setTintColor:[UIColor whiteColor]];
  [self.navigationBar setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:[UIColor whiteColor], NSForegroundColorAttributeName, nil]];
  }

-(UIStatusBarStyle)preferredStatusBarStyle {
    return UIStatusBarStyleLightContent;
}
",peiweichen,2015-08-21 10:58:33
235,2015-08-21 06:01:46,"Although this is likely not related to your problem, you should never override the delegate of the interactive pop gesture recognizer because it can cause unpredictable behavior such as disabling all gestures in the app due to navigation stack inconsistencies rendering the app useless.
",joshbernfeld,2015-08-21 10:58:33
235,2015-08-21 07:11:11,"@dzenbot  Sorry,my bad, IQKeyboardManager is the evil
@joshbernfeld  Thanks!! I would fix that ..I am new to the old project.
",peiweichen,2015-08-21 10:58:33
235,2015-08-21 10:58:33,":+1:
",dzenbot,2015-08-21 10:58:33
234,2015-08-16 05:34:18,"If the keyboard is visible on the SLKTextViewController and you pop the controller off the nav controller stack the SLKTextViewController will never be deallocated. I tested this with the provided example project. To recreate, use the programatic example and set the root view controller as a blank UIViewController and then push on the new SLKTextViewController. Open the keyboard, then press the back button, dealloc will not be called.
",joshbernfeld,2015-08-21 20:02:29
234,2015-08-20 19:06:47,"Seeing this internally as well. We will be looking into this asap.
",bradya,2015-08-21 20:02:29
234,2015-08-21 18:59:31,"Thanks for the quick fix. That did it 👍
",joshbernfeld,2015-08-21 20:02:29
234,2015-08-21 19:08:31,"Thanks for the heads up! 🙌
",dzenbot,2015-08-21 20:02:29
233,2015-08-13 19:32:10,"I still get the same issue as #172 I get the ""Project ""Messenger.xcodeproj"" has no shared schemes, and no framework file is built in `Carthage/Build/iOS` or `../OSX` folder.
",nekonari,2015-09-08 18:31:35
233,2015-08-13 23:10:46,"What version of Carthage are you using? The latest version 0.8 should fix the problem.
",ikesyo,2015-09-08 18:31:35
233,2015-09-08 17:50:31,"@nekonari did `0.8` fix it?
",dzenbot,2015-09-08 18:31:35
233,2015-09-08 18:31:08,"Yes it did. Sorry, forgot to leave an update.
",nekonari,2015-09-08 18:31:35
233,2015-09-08 18:31:35,"Thanks for the heads up!
",dzenbot,2015-09-08 18:31:35
232,2015-08-13 07:15:17,"Hi 
@dzenbot  I am facing an issue when in call staus bar is ON.My view is getting truncated.Anyone have any idea why  my SLKTextViewController view is not getting fit inside window irrespective of In-call status bar toggle ON/OFF.It would be great if you help me out for this issue.
Thanks in advance.
![screen shot 2015-08-13 at 12 42 55 pm](https://cloud.githubusercontent.com/assets/12642338/9244470/1cc9bcbc-41b9-11e5-9682-cc8104e71eba.png)
",vandanakanwar,2015-09-08 17:51:20
232,2015-08-13 10:04:13,"What version of the lib are you using?
Also, in which OS can you repro?

**I just tested latest version (1.6) for both, iOS 8 and 7, and couldn't repro.**
",dzenbot,2015-09-08 17:51:20
232,2015-08-13 13:15:13,"@dzenbot It is coming when in-call status bar is on at the time of launching the app.I am using the latest library.Other then this scenario it is working fine.
",vandanakanwar,2015-09-08 17:51:20
232,2015-09-08 17:51:20,"This has been fixed in [v1.7](https://github.com/slackhq/SlackTextViewController/releases/tag/untagged-795eb65f8fd29d8e2aa2)
",dzenbot,2015-09-08 17:51:20
231,2015-08-13 05:37:11,"Fixes this sort of behavior, when the auto-completion view is partially visible because of a bad height calculation:
![image](https://cloud.githubusercontent.com/assets/590579/9243265/c2891454-4164-11e5-9a0c-5b20eef84d6a.png)
",dzenbot,2015-08-13 05:44:39
230,2015-08-12 04:33:04,"@aryaxt: I've made some improvements and refactorings to your original PR in #229:
- Renamed `hideInputBar:animated:` to `setTextInputbarHidden:animated:`
- Dismissed the keyboard and the auto-completion view right after hiding the textInputBar
- Fixed cases where hiding the textInputBar wouldn't be possible when the keyboard was up
- Avoided hiding the textInputBar with alpha, instead fixed some auto-layout constraints so the textView would follow the dismissal animation

Known bugs:
- when rotating the device, the scrollView's wouldn't extend to the bottom of the screen when the textInputBar is hidden.

Please try pulling this branch. Thanks for this great improvement!
",dzenbot,2015-08-25 00:13:38
230,2015-08-12 05:33:02,"@dzenbot Thanks for the quick response, I made a comment and already pulled the changes. Would you like me to update that line of code in my branch?
",aryaxt,2015-08-25 00:13:38
230,2015-08-13 00:24:26,"@dzenbot This branch is broken, the bar disappears as soon as textfield becomes first response.
",aryaxt,2015-08-25 00:13:38
230,2015-08-13 03:54:59,"Would appreciate more context about the issue you're facing.
It behaves just great on the sample project.
",dzenbot,2015-08-25 00:13:38
230,2015-08-13 16:45:13,"I was ending up with this state, will do more testing on this today and comment back.

![ios simulator screen shot aug 12 2015 5 05 17 pm](https://cloud.githubusercontent.com/assets/3460069/9255749/26e1a96c-41a0-11e5-9792-a8a3c71a9e09.png)
",aryaxt,2015-08-25 00:13:38
230,2015-08-13 16:50:20,"I noticed that you have a subview above your cells. Is that a section header view? Or a custom subview?

Can you repro on the sample project?
",dzenbot,2015-08-25 00:13:38
230,2015-08-13 16:59:01,"That's just a UIView added on top of the main tableView.
I had to release a new version, so I checked out 1.5.1 and added the code in my original PR.

I'll update to that branch again sometimes today or tomorrow, and will report back.

Thanks
",aryaxt,2015-08-25 00:13:38
230,2015-08-16 17:23:40,"Investigated this, and it seem like the issue is not related to this branch. This issue was introduced in 1.6.
Switching to 1.5.2 resolves the issue.

textview becomes first responder but the toolbar doesn't appear. It looks like it's hidden behind another view, because as I'm scrolling down and dismissing the keyboard interactively I can see parts of the toolbar animating down along with the keyboard

<img width=""1149"" alt=""screen shot 2015-08-16 at 10 01 01 am"" src=""https://cloud.githubusercontent.com/assets/3460069/9294272/f63e8afe-43fd-11e5-89df-b3bcc6fbf2c0.png"">

![ios simulator screen shot aug 16 2015 10 08 18 am](https://cloud.githubusercontent.com/assets/3460069/9294387/af4e8024-4400-11e5-9d90-32f16a4be69c.png)

Here is the viewHierarchy when the toolbar is hidden:

<S_CODE_TOKEN>
",aryaxt,2015-08-25 00:13:38
230,2015-08-16 18:58:54,"Maybe the SLKInputAccessoryView is covering the input bar?
",aryaxt,2015-08-25 00:13:38
230,2015-08-21 22:03:59,"So far, this branch behaves great. I haven't found any apparent bugs. The one about auto-rotation seems fixed now.

@aryaxt Since the issue you're experiencing isn't related to this branch, let's open it in a new issue. I haven't been able to repro so far tho.
",dzenbot,2015-08-25 00:13:38
230,2015-08-25 00:14:13,"Awesome work guys!
",fyaqub,2015-08-25 00:13:38
229,2015-08-11 23:05:22,"Fix for #203 
",aryaxt,2015-08-25 00:13:40
228,2015-08-07 15:31:46,,dzenbot,2015-08-07 16:51:04
228,2015-08-07 16:45:29,"I don't see a merge option...I need to be given write access to this repo to be able to merge 
",AhmedEid,2015-08-07 16:51:04
227,2015-08-06 15:59:27,,pwightman,2015-08-06 16:06:50
226,2015-08-05 00:40:46,,dzenbot,2015-08-05 01:26:45
225,2015-08-04 16:31:42,"Adding a NSTextAttachment in code doesn't update showing the send button.

Is there any way to override if the ""Send"" button should show?
",kylehorn,2016-10-04 01:27:13
225,2015-08-04 16:41:58,"It looks like `UITextViewTextDidChangeNotification` and `SLKTextViewContentSizeDidChangeNotification` are not being triggered. We don't yet support `NSTextAttachment`.

There was a great PR from a while back, you might want to take a look at.
https://github.com/slackhq/SlackTextViewController/pull/120/files
",dzenbot,2016-10-04 01:27:13
225,2015-08-04 16:44:43,"Is there a plan to merge that PR at some point? That seems like it would solve my issue.
",kylehorn,2016-10-04 01:27:13
225,2015-08-04 16:45:48,"Probably, but it's somewhat deprecated (lots of things changed since that PR).
There hasn't been many people complaining/asking for this feature yet, so it hasn't been set as a high priority thing.
",dzenbot,2016-10-04 01:27:13
225,2015-08-04 16:49:28,"We're relying quite heavily on NSTextAttachment so i'll have to look into it more. Is it something that the media pasteboard could solve?
",kylehorn,2016-10-04 01:27:13
225,2015-08-04 16:52:35,"The media pasteboard only detects the type of object pasted into the text view, and sends a notification.
I assume you want to display an image using `NSTextAttachment` in the text view, so I don't think that would help.

Try forking the project, extend it using that PR's implementation. If you get to a good and backwards compatible solution, please submit a PR for it and I'll review it.
",dzenbot,2016-10-04 01:27:13
225,2015-08-04 16:53:41,"Sounds good, I'll give it a go.

Thanks!
",kylehorn,2016-10-04 01:27:13
225,2016-05-20 15:21:55,"@kylehorn @dzenbot  were there any PRs or commits made for this enhancement?
",gooso,2016-10-04 01:27:13
225,2016-10-04 01:27:13,"This has been addressed here: https://github.com/slackhq/SlackTextViewController/pull/501
",dzenbot,2016-10-04 01:27:13
224,2015-08-03 04:35:35,"i make a subclass of SLKTextViewController, called slackViewController
this is how i do:
rootViewController is a UINavigationController which its root is a ViewController, then i push to slackViewController, then in slackViewController i push again to newViewController, and then i press back so im back to slackVewController, when i tap the textInputBar the keyboard shows up bat the textInputBar does not goes up and cant even send (disabled)
",jezzamyn,2015-08-05 14:25:29
224,2015-08-05 08:10:54,"i have fixed the problem, I removed the line [[NSNotificationCenter defaultCenter] removeObserver:self] from viewWillDisappear, and now it's working.
",jezzamyn,2015-08-05 14:25:29
224,2015-08-05 14:25:29,"I'm glad you fixed it and that it wasn't a bug in the library.
",dzenbot,2015-08-05 14:25:29
223,2015-08-01 23:58:32,"Is there support for adding like buttons to individual chat cells?
",udaysinghcode,2015-08-02 13:31:00
223,2015-08-02 13:31:00,"Basic message cells are available in the sample project, but they are not part of the library.
You will have to do that yourself, or use a third-party.
",dzenbot,2015-08-02 13:31:00
222,2015-08-01 23:56:55,"Like JSQMessagesViewController - how can SlackTextViewController support Dynamic Type? Additionally, if this is not currently supported - will there be plans to implement support soon?
https://github.com/jessesquires/JSQMessagesViewController/issues/736
",udaysinghcode,2015-09-02 19:25:21
222,2015-08-02 13:31:52,"We started to implement it on a separate branch. I hope to PR it real soon.
",dzenbot,2015-09-02 19:25:21
221,2015-07-31 14:48:44,"Hello,

I would like integrate the iAd banner in SLKTextViewController. I have imported the iAd framework and I have wrote this code in viewDidLoad

if([self respondsToSelector:@selector(setCanDisplayBannerAds:)]){
        self.canDisplayBannerAds = YES;
    }

Then I see the iAd Banner but when  I tap in textInput appears a black view between the textInput and keyboard. Anyone else can help me?

Thanks!
",josete89,2015-08-07 14:48:37
221,2015-07-31 16:18:33,"How does your layout look like?
",dzenbot,2015-08-07 14:48:37
221,2015-07-31 17:00:37,"![ios simulator screen shot 31 7 2015 19 00 08](https://cloud.githubusercontent.com/assets/1042992/9012590/697cecc6-37b6-11e5-9823-fcc199fb3431.png)
",josete89,2015-08-07 14:48:37
220,2015-07-29 23:06:29,"Fixes a bad behavior when dragging the keyboard down using the scrollview gesture.
It was mainly due to a missing CGRect conversion.
",dzenbot,2015-07-29 23:17:46
219,2015-07-28 22:58:55,,dzenbot,2015-07-28 22:59:00
218,2015-07-27 18:29:23,"Hi
I'm trying to install using cocoapods, but without success.
It seems that the problem is that I'm using `use_frameworks!` in my Podfile (i must use it for other pods to work)

This will reproduce if you just download the sample code and add the `use_frameworks!` to the Podfile

Any ideas how to solve this issue?
",eyalc,2015-08-04 13:27:00
218,2015-07-27 19:21:53,"That feature seems to be available since `0.36.0`. I'm still running on `0.35.0`! :scream: so I cannot really debug that issue.

Mind sharing more insight about the issue? It's probably something missing in the podspec to allow this.
",dzenbot,2015-08-04 13:27:00
218,2015-08-04 12:19:23,"I got it to work by writing

<S_CODE_TOKEN>

instead of

<S_CODE_TOKEN>

I'm using Swift, so this also meant I didn't need a bridging header
",stianjensen,2015-08-04 13:27:00
218,2015-08-04 13:27:00,"Great. Thanks for sharing.
",dzenbot,2015-08-04 13:27:00
217,2015-07-26 09:28:14,"- I've updated the code, so it conforms Swift 1.2.
- Fixed an issue with auto layout posted here: https://github.com/slackhq/SlackTextViewController/issues/214 It caused by collectionView.heightForRowAtIndexPath method, which returned too small height value for newly added cells (~20 pts). Resolved this by adding a check for the minimal cell height (40 pts).
",andrew8712,2015-08-07 15:42:12
217,2015-08-07 15:42:17,"Thanks for this!
",dzenbot,2015-08-07 15:42:12
216,2015-07-25 00:07:11,"This is very useful when presenting the view controller in a custom modal presentation, when there keyboard events are being handled externally to reframe the presented view.
",dzenbot,2015-07-25 00:10:28
215,2015-07-24 18:54:52,"Removes KVO from the inputAccesoryView and implements a custom keyboardDimsissMode using the panGesture on the ScrollViewProxy to achieve a smooth transition.

For you Cotito Ignacio @dzenbot 
",camovrbz,2015-07-24 22:12:08
215,2015-07-24 22:16:10,"Panning the keyboard was always feeling kind of jarring.
It's extremely smooth and accurate now 💪😎👊

Thanks cotito @camitox for this great contribution!
",dzenbot,2015-07-24 22:12:08
215,2015-07-24 22:59:52,":+1: because cotito
",ianmurrays,2015-07-24 22:12:08
214,2015-07-23 18:34:29,"I just started using this library for my new project. I was playing around with the examples. All of them work fine, except for the one with Storyboards.

On that one, I see the ""unsatisfiable constraints"" in the console, and I see that in `SLKMessageViewCell`, the `contentView` does not have its `translatesAutoresizingMasksIntoConstraints` set to `NO`. 

I'd like to think I'm pretty comfortable with Auto Layout. So I changed that property, but then the text label on the cells starts running off the end of the cell. No matter how I change the layout constraints, I can't get the title label on `SLKMessageViewCell` to stay within its `contentView`. 

So what I'm wondering is perhaps someone more familiar with the code base would know if the layout is being manipulated anywhere else outside of `SLKMessageViewCell`?
",hirad,2015-07-26 19:31:04
214,2015-07-26 09:31:04,"I had the same problem. I found out that collectionView.heightForRowAtIndexPath causing this issue by returning too small value for newly added cells. The fix is easy: perform a check against a minimal height value. See my pull requiest for more info: https://github.com/slackhq/SlackTextViewController/pull/217
",andrew8712,2015-07-26 19:31:04
214,2015-07-26 16:10:03,"Great!
",hirad,2015-07-26 19:31:04
214,2015-07-26 18:15:22,"Does that solve the issue you were experiencing @hirad ?
",dzenbot,2015-07-26 19:31:04
214,2015-07-26 19:31:04,"Yes, just tried it and it seems good.
",hirad,2015-07-26 19:31:04
213,2015-07-22 16:19:41,"Besides auto completion and typing indication, there should be support for ""custom"" views above the text input bar.
It's useful for actions from the menu controller (e.g. ""Quote"").

The example is conditioned with the `DEBUG_CUSTOM_BAR` flag in **MessageViewController.m**.
",kobim,2015-08-07 15:47:30
213,2015-07-23 15:00:59,"Thanks for this. I will review it real soon.
",dzenbot,2015-08-07 15:47:30
213,2015-08-07 15:47:30,"The implementation of this feature is great, following the same patterns we use for the generic typing indicator. Although, the idea of this framework is to be able to extend it to meet your own needs. I'm not fully convinced about adding this to the project source code.

Please, keep your fork around so others can benefit of this when looking for it.

Thanks!
",dzenbot,2015-08-07 15:47:30
212,2015-07-18 01:49:18,"how to set textinputbar and tableview background color to be transparent?
",EVENFATE,2015-08-08 12:06:19
212,2015-07-27 05:16:43,"Set property to this:

<S_CODE_TOKEN>
",muazh,2015-08-08 12:06:19
211,2015-07-14 18:44:26,":moneybag: for example will return in the textview as it is "":moneybag:"" not an emoji icon, what's really the idea about implementing this emoji autocompletion
",jezzamyn,2015-07-15 02:32:11
211,2015-07-14 19:59:53,"At Slack, you can auto-complete an emoji `alias`.
ie: you type `:simpl` and `:simple_smile` + its corresponding system emoji icon is displayed.

It is something you will need to implement on our own, or use [Slack's emoji aliases list](https://api.slack.com/methods/emoji.list) as a reference for your own auto-completion system.
",dzenbot,2015-07-15 02:32:11
211,2015-07-15 01:28:33,"yes thanks, i have this solved, got the implementation of emoji on my own project. I just gonna do it in my back end as well. :+1: 
",jezzamyn,2015-07-15 02:32:11
211,2015-07-15 02:32:11,"Fair enough 😉
",dzenbot,2015-07-15 02:32:11
211,2015-08-02 00:03:45,"@dzenbot - is there a way to see the emojis in action in the demo? I'm running Messenger-Storyboard as the demo app but do not know how to run the autocomplete for emoji system...
",udaysinghcode,2015-07-15 02:32:11
211,2015-08-02 13:27:43,"The demo project only implements emoji auto-complete using their handles starting with `:`. But they are not displayed. It's up to you to do the alias conversion, using an emoji mapping.
",dzenbot,2015-07-15 02:32:11
211,2015-08-02 22:35:12,":+1: Thanks - got it all figured out!
",udaysinghcode,2015-07-15 02:32:11
210,2015-07-13 06:58:59,"When the inputMode did change, the keyboard frame also did change, but the function slk_didChangeKeyboardFrame always return, because ""if (self.isMovingKeyboard == NO) return;"", Actualy the keyboard frame did change and self.scrollViewProxy.contentOffset also need change, could you help me about this? How can I solve this? Thank You!
",xiaolanlianhua,2015-11-14 00:14:52
210,2015-07-13 07:00:11,"I switch the input mode between Chinese And English. Thank You!
",xiaolanlianhua,2015-11-14 00:14:52
209,2015-07-12 10:40:47,"I want to use this tool bar , is it possible to use with this component only ? and if yes i how should i do it , i tried to create new instance and put it as textFieldComment.inputAccessoryView but i don't see  text label inside the tool bar

Thank you for helping
",Kayoto1,2015-07-12 23:08:35
209,2015-07-12 23:08:35,"The components were not designed to work completely independent. You will need to subclass `SLKTextViewController` to inherits all its features.
",dzenbot,2015-07-12 23:08:35
208,2015-07-10 17:40:05,"Before, auto-completion prefixes would only be detected if they were 1 character long max.
Now, there are no limitations, so you can go wild by registering any sort of prefixes `@""+:""`, `@""blah""` and even emoji prefixes `@""😱""`!

![image](https://cloud.githubusercontent.com/assets/590579/8624870/f0dc58e6-26ef-11e5-89b0-041d373d97ca.png)
",dzenbot,2015-07-10 17:44:34
207,2015-06-28 23:02:43,"_Inspired from @sveinhal's implementation in #202._

It now uses KVO internally, observing the `visible` propery's changes to properly update the view constraints constants and animately present the typing indicator view.
By simply conforming to `SLKTypingIndicatorProtocol` required methods, it should be very easy to add any sort of custom typing indicator view.

I have added a custom typing indicator view to the sample project:
![image](https://cloud.githubusercontent.com/assets/590579/8398714/af0f39b0-1dd0-11e5-9602-456ffc5f77d0.png)

PS: Thanks @sveinhal for taking the initiative to do this! I felt the need to refactor your implementation for a more friendly approach. Observing the `hidden` property wasn't enough, since it would force the view to hide when dismissing the typing indicator. I have also taken the time to refactor and improve other related to logic to the default typing indicator view.
**This update should be backwards compatible, but might still need some testing before merging.**
",dzenbot,2015-07-02 17:44:44
207,2015-07-02 04:33:22,"@sveinhal I've made some fixes, considering all your feedback. Mind having a look once more?
",dzenbot,2015-07-02 17:44:44
207,2015-07-02 08:58:11,"I'm satisfied with this, but I think the quirks of implementing a custom protocol-conforming class in Swift justifies a note somewhere in the `README.md` file or something. It's not really intuitive, but also there are not simple solutions that either won't break Obj-C conventions (by having the setter and getter share name), or break automatic KVO (by not declaring it a property, but instead specify the setter and getters as methods in the protocol).

Anyways, you get my :+1: for merging this!
",sveinhal,2015-07-02 17:44:44
207,2015-07-02 09:03:14,"Contra: I discovered a bug: If the scroll view is scrolled up when setting `visible = false` does not cause the height constraint to be set to `0`. Why?
",sveinhal,2015-07-02 17:44:44
207,2015-07-02 09:15:39,"I don't understand this requirement:

<S_CODE_TOKEN>

Maybe that should be configurable. Also, it behaves different when showing/hiding.
",sveinhal,2015-07-02 17:44:44
207,2015-07-02 16:11:25,"About `-canShowTypingIndicator`: this logic was actually a request for Slack's app. The goal was not to show the typing indicator when the scrollview's offset wasn't at the bottom, to avoid making the view jump constantly (specially in very busy channels). This might not be generic enough for others, so I can perhaps remove it from SLKTVC's base code. I wonder if people are depending of this behavior tho.
",dzenbot,2015-07-02 17:44:44
207,2015-07-02 16:56:16,"I guess I can override the method in my subclass of `SLKTVC` ;-)
",sveinhal,2015-07-02 17:44:44
207,2015-07-02 16:57:49,"Yes, definitely. That's what I did in https://github.com/slackhq/SlackTextViewController/blob/5c4939325d04462aaf172c1badd0b7b60ef1e316/Examples/Messenger-Shared/MessageViewController.m#L354-360
",dzenbot,2015-07-02 17:44:44
207,2015-07-02 17:11:18,"But when leaving it on, it still had a bug. The typing indicator would _display_, but not _hide_ when scrolled up. (I didn't try to see if it would hide if I scrolled up _while_ it was visible, but that's another issue)
",sveinhal,2015-07-02 17:44:44
207,2015-07-02 17:12:58,"Anyways: If you clean up the protocol, and preferably add a note about Swift in the read me, I think this is production quality :-) Great work!
",sveinhal,2015-07-02 17:44:44
207,2015-07-02 17:20:08,"Sounds good! What do you mean by ""clean up the protocol""?
Bw, the typing indicator will not hide automatically. The default typing indicator does, because it has a timer internally. You will need to implement all that yourself.
",dzenbot,2015-07-02 17:44:44
207,2015-07-02 17:26:27,"> Sounds good! What do you mean by ""clean up the protocol""?

Remove the `intrinsicContentSize` requirement

> Bw, the typing indicator will not hide automatically. The default typing indicator does, because it has a timer internally. You will need to implement all that yourself.

Sure, but calling `visible = false`, would make the observer fire, and it would set the layout constraint to 0. But if this happens while scrolled up, it does nothing, because `canShowTypingIndicator` returns `NO`. However, when setting `visible = true` under the same circumstances, `canShowTypingIndicator` returns `YES`, which makes it display, but never hide.  

It may be some quirks in the frame calculations again. I'm not displaying my VC full screen ¯_(ツ)_/¯

I've also confirmed that this isn't a regression, so it is unrelated to this pull request.
",sveinhal,2015-07-02 17:44:44
207,2015-07-02 17:37:35,"> Remove the intrinsicContentSize requirement

That's done in 52c201e

> Sure, but calling visible = false, would make the observer fire, and it would set the layout constraint to 0. But if this happens while scrolled up, it does nothing, because canShowTypingIndicator returns NO. 

Are you overriding `-canShowTypingIndicator` like this? Without calling super?

<S_CODE_TOKEN>
",dzenbot,2015-07-02 17:44:44
207,2015-07-02 17:43:27,"> Are you overriding -canShowTypingIndicator like this? Without calling super?

Now I am (or rather — the Swift equivalent). So that solved my problem. Now it's always displayed or hidden with a nice animation whenever I set the `visible` property of my class.

However, before I added this, and just let the `SLKTVC` handle it, it would prevent the view from being hidden, but not prevent it from being displayed. 

However, this is also the current behavior for my particular view hierarchy in master as well, so I suggest we close this discussion, and perhaps open another issue for it, if needed :-)
",sveinhal,2015-07-02 17:44:44
207,2015-07-02 17:44:32,":+1: 
",dzenbot,2015-07-02 17:44:44
207,2015-07-02 17:44:54,"Over at appear.in we usually give each other a cake when something is ready to be merged.

:cake:
",sveinhal,2015-07-02 17:44:44
207,2015-07-02 17:45:30,"Thanks for all your input @sveinhal ! 🙌
",dzenbot,2015-07-02 17:44:44
207,2015-07-02 21:52:49,"Thank you for creating a great open source component, and also a great product which we use every day both on iOS and the desktop. And: Which has great integration with the stuff I'm working on every day: https://appear.in (shameless plug)

Seems like people like us:
![skjermbilde 2015-07-02 23 56 07](https://cloud.githubusercontent.com/assets/88693/8488793/d6dcee72-2115-11e5-8426-3425c9fe12e6.png)
",sveinhal,2015-07-02 17:44:44
207,2016-03-07 03:58:14,"Do you have an example of this in Swift? 
",hmaidasani,2015-07-02 17:44:44
206,2015-06-24 03:12:11,"the correct way that apple recommends：

NSLayoutManager *layoutManager = [self layoutManager];
    NSUInteger numberOfLines, index, numberOfGlyphs = [layoutManager numberOfGlyphs];
    NSRange lineRange;
    for (numberOfLines = 0, index = 0; index < numberOfGlyphs; numberOfLines++)
    {
        (void) [layoutManager lineFragmentRectForGlyphAtIndex:index effectiveRange:&lineRange];
        index = NSMaxRange(lineRange);
    }

<S_CODE_TOKEN>

https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/TextLayout/Tasks/CountLines.html
",xiaolanlianhua,2015-06-25 20:27:41
206,2015-06-24 07:15:34,"I have once used that approach, but it wasn't reliable enough as it expects to have at least 1 character in a line to increment the number of lines.

What issues are you facing with the current line count calculations?
",dzenbot,2015-06-25 20:27:41
206,2015-06-25 01:05:10,"My code :
I used in non-inverted pattern.

[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(didChangeTextViewContentSize:) name:SLKTextViewContentSizeDidChangeNotification object:nil];
- (void)didChangeTextViewContentSize:(NSNotification *)notification
  {  
  CGFloat inputbarHeight = self.textInputbar.appropriateHeight;
  ....
  }

the inputbarHeight did not calculate correct， the reason was that sometimes the numberOfLines calculated  a line of less，i found the numberOfLines of textview was  three, but it returned two，and the text was Chinese，the English was OK.
",xiaolanlianhua,2015-06-25 20:27:41
206,2015-06-25 01:06:36,"if i use that apple recommends, it is OK.
",xiaolanlianhua,2015-06-25 20:27:41
206,2015-06-25 20:27:41,"I did try your suggestion, but it's not reliable enough at least for Latin alphabet. It expects to have at least 1 character in a line to increment the number of lines.
",dzenbot,2015-06-25 20:27:41
205,2015-06-21 14:07:30,"In SLKTextViewController tableViewWithStyle:, you are forcing the background color to white. This causes Grouped tableview to have a white background instead of their default light gray. SLKTextViewController should not be setting this color.
",markkrenek,2015-07-02 17:44:45
205,2015-06-24 07:16:18,"You're right. Thanks for pointing that out. Will update soon.
",dzenbot,2015-07-02 17:44:45
204,2015-06-19 15:37:23,"we have got tab layout and SLKTextViewController class 3rd item. When we touch textfield in 1st item's class app automatically call SLKTextViewController class (3rd item) ???
",Papiroom,2015-06-24 16:15:49
204,2015-06-19 16:06:07,"Sorry, I don't understand the question.
",dzenbot,2015-06-24 16:15:49
204,2015-06-19 16:09:29,"I have got tab bar controller;
![screen shot 2015-06-19 at 19 09 15](https://cloud.githubusercontent.com/assets/10725658/8257497/b11c6eba-16b6-11e5-990f-c864ba4ce346.png)

-First class HomePage.m
-Second class  SecondPage : SLKTextViewController.

In first class have got TextField when i touch this second class viewDidLoad run instant.
",Papiroom,2015-06-24 16:15:49
203,2015-06-18 00:28:53,"Is there an easy way to hide and show the textInputbar? If I set the view to hidden, the tableView cuts off where textInputbar top would be.
",cerupcat,2015-08-25 00:13:40
203,2015-06-18 00:31:38,"There's currently no support for this. I've been thinking of doing this, similar to how `UINavigationController` does it for its toolbar.
",dzenbot,2015-08-25 00:13:40
203,2015-06-18 00:34:16,"Thanks for the quick reply! It'd make a great addition.
",cerupcat,2015-08-25 00:13:40
203,2015-06-18 00:34:46,"Want to give it a try?
",dzenbot,2015-08-25 00:13:40
203,2015-06-18 01:49:05,"If I get a chance to get back on this soon, I'll give it a go.
",cerupcat,2015-08-25 00:13:40
203,2015-08-21 21:21:33,"I tried the aryaxt-master branch with this, and it's not working for me. 
",Bluner,2015-08-25 00:13:40
202,2015-06-16 11:35:19,"…dard typingIndicatorView

By calling `-registerClassForIndicatorView:` during initialization of the view controller, you can customize the appearance and behavior of the typing indicator view.

If not called, or a subclass of `SLKTypingIndicatorView` is passed, `-typingIndicatorView` will return the typing indicator view as before. If some other subclass of `UIView` is passed, `-typingIndicatorView` will return `nil`, and you need to cast the return value of `-indicatorView` to the appropriate type in you need to interact with it directly. Setting its `hidden` property to either true or false, will automatically animate.

This closes #201 
",sveinhal,2015-07-02 17:44:45
202,2015-06-16 11:44:52,"This makes the examples work with no modification and should assure backwards compatibility. However, since the indicator view is instantiated by the view controller, and can be any `UIView` subclass, a consumer must have to cast the return value of `indicatorView` to the appropriate type. This is perhaps not optimal:

<S_CODE_TOKEN>
",sveinhal,2015-07-02 17:44:45
202,2015-06-16 11:48:37,"This also gets away with no particular protocol or subclass, since the view controller is using KVO to listen for changes to the `hidden` property, and adjust the height accordingly.
",sveinhal,2015-07-02 17:44:45
202,2015-06-18 13:46:19,"I will have a look on this real soon! Thanks!
",dzenbot,2015-07-02 17:44:45
202,2015-06-24 08:54:26,"@dzenbot Do you have time for a look at this?
",sveinhal,2015-07-02 17:44:45
201,2015-06-11 11:45:35,"Hi, @dzenbot 

I created an issue before creating a pull request, because I want to discuss solutions before submitting anything. I am willing to produce the code necessary to close this issue, once consensus has been reached.

I want to customize the typing indicators to show small avatars instead of the user name list as the current design encourages. The `SLKTextViewController` currently instantiates and hold a reference to a `SLKTypingIndicatorView`. However, except for an `isVisible` and an `canResignByTouch` property the view controller couldn't really care much what kind of `UIView` subclass this view is (and long as it knows when to show/hide the view).

I'm thinking that we could extend the view controller to also have a method called `registerClassForTypingIndicatorView:` similar to `registerClassForTextView:`. But I'm not sure it's necessary to have it be a subclass of `SLKTypingIndicatorView`? I think that the view controller can observe changes to the `hidden` property instead of relying on the custom notifications. This also uses hidden rather than visible, which is more cocoa-y. And for the `canResignByTouch` property, we can either have the custom class implement a protocol, or move the logic to be a property of the view controller instead.

Alternatively, we could require that the custom class must be a subclass, but personally, I'm not really using any of its features.

What do you think?
",sveinhal,2015-07-02 17:44:45
201,2015-06-11 11:49:11,"Hmm.. Making the `typingIndicatorView` be of type `UIView *` will break code like this:

<S_CODE_TOKEN>

Bah. Maybe a subclass must be required for backwards compatibility of the API.
",sveinhal,2015-07-02 17:44:45
201,2015-06-12 16:45:20,"Thanks @sveinhal for bringing this up. I've been wanting to decouple the `typingIndicatorView` to allow further customization too.

`registerClassForTypingIndicatorView:` sounds like a good starts, following the same pattern than `registerClassForTextView:`, and this way, opt-in for a custom view.

I don't think it would be necessary to subclass `SLKTypingIndicatorView` to allow this, since `SLKTextViewController` isn't so coupled to that class. Instead, we could create a generic protocol wrapper:

<S_CODE_TOKEN>

These would be the required accessors to conform to `SLKTypingIndicatorProtocol`:

<S_CODE_TOKEN>

I think this should make the changes pretty straightforward, and also, deliver a simple to use API to any user that would like to extend the built-in typing indicator by creating its own approach.

What do you think?
",dzenbot,2015-07-02 17:44:45
201,2015-06-14 17:36:08,"Is API backwards compatibility a requirement? If so, some people may have called `insertUsername:` directly on the return value from `typingIndicatorView` on the view controller. If we change it to have type `UIView<SLKTypingIndicatorProtocol>` it will no longer compile. The user would have to cast the return value to the appropriate implementation, or `insertUsername:` et al must be added to the protocol. 
",sveinhal,2015-07-02 17:44:45
201,2015-06-14 17:37:23,"… or we break source code compatibility.
",sveinhal,2015-07-02 17:44:45
201,2015-06-14 18:50:37,"Good point. I will think about this, since I wouldn't like to add all the properties and methods to the new protocol. Any suggestions?
",dzenbot,2015-07-02 17:44:45
201,2015-06-15 06:22:00,"+1 on this, would love to see some flexibility here. I think as this project gets more popular, it might make sense to think more about generalizing a little outside of the context of messaging, which I think might inevitably call for some breaking API changes. Though no easy answer to how to go about deprecating/breaking a new major release.

I'd like to use it as just a generic indicator view, semantically detached from a concept of user typing. So in that sense the current api of `<insert>|<remove>Username` is a more restrictively opinionated than ideal for my use case. A bit more concrete in my example -- I'd love to put something like an indicator for sound coming out of the microphone in that spot. I could see a protocol like `IndicatorView` that requires `intrinsicContentSize` (and maybe `canResignByTouch`?) working out, but really I'd be a fan of the `indicatorView` property of `SLKTextViewController` to be Plain Old `UIView`. Thoughts?
",kousun12,2015-07-02 17:44:45
201,2015-06-15 07:33:19,"Suggestion: Add a general `indicatorView` of type `UIView<SLKIndicatorView>` property of the view controller, but keep (for backwards compatibility, but possibly deprecate) a `typingIndicatorView` of type `SLKTypingIndicatorView` that uses the `indicatorView` under the hood. That is, accessing the `typingIndicatorView` will lazily load the current implementation if `indicatorView` is nil.
",sveinhal,2015-07-02 17:44:45
201,2015-06-15 18:39:56,"Sounds like a good plan!
",dzenbot,2015-07-02 17:44:45
201,2015-06-16 08:10:33,"Ok. I'll make a first take on an implementation, and create a pull request :-)
",sveinhal,2015-07-02 17:44:45
200,2015-06-09 19:53:16,"Fixes the keyboard panning gesture, broke on the latest commit.
Also simplifies the keyboard height calculation nonsense. Thanks @devladinci 😉
",dzenbot,2015-06-09 20:30:40
199,2015-06-09 15:32:50,"I'm getting a random crash, has anyone seen this before?
The version that causes the crash is '1.3.3', has this been fixed on the newest version?

<S_CODE_TOKEN>
",aryaxt,2015-08-12 16:19:05
199,2015-06-09 16:53:41,"I haven't seen that crash before. Any way to reproduce?

Since `1.3.3` a lot has been fixed and refactored. I'd give it a try with (1.5.1)[https://github.com/slackhq/SlackTextViewController/releases/tag/v1.5.1]. It's much stable now.
",dzenbot,2015-08-12 16:19:05
199,2015-06-09 18:08:21,"@dzenbot It's very random, doesn't happen all the time. I updated to 1.5.1 yesterday. I'll do some testing and see if I can reproduce.

Thanks
",aryaxt,2015-08-12 16:19:05
199,2015-06-10 00:21:03,"I can reproduce this (in version 1.5.1) on iOS 9 by inserting large amount of text and clicking send. Let me know if you need more info.

There is also another bug on iOS 9 where the textfield won't go on top of the autocorrect bar, I was able to reproduce this on the slack app as well
",aryaxt,2015-08-12 16:19:05
199,2015-06-10 00:24:59,"Were you able to repro the crash on iOS8 or 7?
We will soon test the library against iOS9. Thanks.
",dzenbot,2015-08-12 16:19:05
199,2015-06-10 00:26:25,"No, haven't been able to reproduce the crash on 7 or 8

Thanks
",aryaxt,2015-08-12 16:19:05
199,2015-08-06 18:23:15,"This might be a help `sendMessageCompletedWithResult` is the last method in the app that gets called before the crash, and the interaction between the method and SLKTextViewController is

<S_CODE_TOKEN>
",aryaxt,2015-08-12 16:19:05
199,2015-08-07 17:49:23,"This seems to be fixed on beta 5, will do more testing and check crash reports to verify
",aryaxt,2015-08-12 16:19:05
199,2015-08-07 17:50:22,"Thanks for the heads up.
We're waiting for iOS9 GM to add support, since betas are always unstable.
",dzenbot,2015-08-12 16:19:05
199,2015-08-07 23:14:38,"That’s unfortunate - that likely won’t give us enough time to submit an app with the fix in it

On Sat, Aug 8, 2015 at 3:50 AM, Ignacio Romero Zurbuchen
notifications@github.com wrote:

> Thanks for the heads up.
> 
> ## We're waiting for iOS9 GM to add support, since betas are always unstable.
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/slackhq/SlackTextViewController/issues/199#issuecomment-128776926
",lprhodes,2015-08-12 16:19:05
199,2015-08-07 23:28:29,"Odd that the Slack app itself doesn’t crash?

On Sat, Aug 8, 2015 at 9:14 AM, Luke Rhodes rhodesy22@gmail.com wrote:

> That’s unfortunate - that likely won’t give us enough time to submit an app with the fix in it
> On Sat, Aug 8, 2015 at 3:50 AM, Ignacio Romero Zurbuchen
> notifications@github.com wrote:
> 
> > Thanks for the heads up.
> > 
> > ## We're waiting for iOS9 GM to add support, since betas are always unstable.
> > 
> > Reply to this email directly or view it on GitHub:
> > https://github.com/slackhq/SlackTextViewController/issues/199#issuecomment-128776926
",lprhodes,2015-08-12 16:19:05
199,2015-08-08 00:02:17,"Don't get me wrong @urbanappetite, we've already started working on some iOS9 enhancements, but not yet on UIKit bug fixes, since most will get fixed by Apple on the GM version.

Still, if you guys are interested, I just pushed a branch I've been slowly working on: [ios9-fixes-and-improvements](https://github.com/slackhq/SlackTextViewController/tree/ios9-fixes-and-improvements). So far, it just adds support for the new external keyboard shortcut hud from iOS9, and some auto-rotation issues.

Feel free to collaborate on this one! 💪😎
",dzenbot,2015-08-12 16:19:05
199,2015-08-11 20:39:35,"I commented about this one being fixed in 5 beta, crashes are going down slowly, will close this after the number is close to 0 :)

@dzenbot Do you guys accept PRs? I need to be able to hide the textInputBar in certain cases, and I see that there is an issue open for it.

![screen shot 2015-08-11 at 1 36 37 pm](https://cloud.githubusercontent.com/assets/3460069/9209947/3ce29104-402e-11e5-9cf4-5d92b2e8a23e.png)
",aryaxt,2015-08-12 16:19:05
199,2015-08-11 21:01:45,"We do accept PRs @aryaxt. Simply have a look at [here](https://github.com/slackhq/SlackTextViewController/pulls?q=is%3Apr+is%3Aclosed).

I once attempt to implement that feature, without a great result. Looking forward to your solution.
",dzenbot,2015-08-12 16:19:05
199,2015-08-12 16:19:05,"We had 0 crashes since yesterday and we can no longer reproduce this, closing this
",aryaxt,2015-08-12 16:19:05
199,2015-08-12 16:19:53,"Beta 5 FTW 🙌
",dzenbot,2015-08-12 16:19:05
198,2015-06-03 11:45:50,"When scrolling down the table with chat messages, keyboard moves down but the accessory view stays in the same place. It follows up when the keyboard animation is complete. Tested on simulator and device (gif from simulator).

![slack_keyboard_problem](https://cloud.githubusercontent.com/assets/334875/7959128/478d2d60-09ee-11e5-901c-bc1babe7a37f.gif)
",nazywamsiepawel,2015-06-09 20:30:41
198,2015-06-06 16:06:06,"hi @nazywamsiepawel , did you find a solution for this issue ??
",koptan,2015-06-09 20:30:41
198,2015-06-09 20:31:48,"Sorry about that guys. It's all good now! 😇
",dzenbot,2015-06-09 20:30:41
197,2015-06-02 23:08:25,"I'd like to use SLKTextInputbar in a project (I want the effect of the expanding text field, but it's not a messaging app). It's too tightly coupled with SLKTextViewController. Can the text input bar be separated into a different project?

Basically, I'm looking for a project like these, but that's well-maintained and not glitchy:

https://github.com/datwelk/RDRStickyKeyboardView
https://github.com/fphilipe/PHFComposeBarView
https://github.com/danielamitay/DAKeyboardControl
https://github.com/HansPinckaers/GrowingTextView

Happy to help out on it if you're interested, but I don't know the current code base very well.
",getaaron,2015-06-08 16:10:40
197,2015-06-08 16:10:40,"This project first started like those projects you mention, but quickly shifted to a different approach, where the view controller does the work of manipulating its subviews, doing it in a more holistic and clean way. I don't think it will be ever possible to go back to the initial approach without breaking everything. Sorry.

You can still use this project using a UIScrollView as the main base container, which you can layout subviews the same way like you would with a UIView base container.
",dzenbot,2015-06-08 16:10:40
196,2015-05-28 13:55:07,"The SlackTextViewController marks itself as an AlertViewDelegate, and implements the `- (void)alertView:clickedButtonAtIndex:` method, but doesn't use any tag to identify what the alert actually is, and instead just blindly clears its text. If the subclass shows other alerts, this behavior is non-ideal, as the text is cleared at inappropriate (and to the user, seemingly random) times.
",shortstuffsushi,2015-05-28 17:47:21
196,2015-05-28 17:47:42,"Thanks for the heads up!
",dzenbot,2015-05-28 17:47:21
196,2015-05-28 17:49:48,":+1: 
",shortstuffsushi,2015-05-28 17:47:21
195,2015-05-20 13:22:01,"I have a view controller that is a subclass of SLKTextViewController, which is pushed inside of Navigation Controller. It is of UITableViewStylePlain, it is inverted and it has an unwanted content inset (of 64) on the top side of the screen (bottom of the table view).
I am using version 1.5.
",joonorbertsv,2015-11-23 02:44:35
195,2015-05-30 08:44:05,"Having similar issue. I think the problem coming from slk_topBarsHeight. Basically, it says if we wants to extend edge to top (by default **UIRectEdgeAll**), return an inset of 64. Should the logic be reversed? Also, we need take account into **extendedLayoutIncludesOpaqueBars**

<S_CODE_TOKEN>
",jiayuzhang,2015-11-23 02:44:35
195,2015-07-24 03:04:54,"Try this:

<S_CODE_TOKEN>
",jkyin,2015-11-23 02:44:35
195,2015-09-11 16:09:42,"I haven't been able to reproduce this issue.
Anyone mind to create a short sample project with this?
",dzenbot,2015-11-23 02:44:35
195,2016-02-04 08:58:02,"I use v1.9 as an embedded controller (because I need to place an additional view at the top of the screen) and I get some unwanted top content inset. Hotfixed it in the following way (thanks @jkyin!):

<S_CODE_TOKEN>

I don't know whether it's the same issue as discussed above, but it has the same visual effect.
",werediver,2015-11-23 02:44:35
194,2015-05-20 04:15:46,"- Fixed when the text was cached after auto-completing, it would present the auto-completion form when launching.
- Disabled animation in the textview placeholder's layout cycle.
",dzenbot,2015-05-20 05:15:20
193,2015-05-18 11:10:40,"Fixes the following compile error.

![screen shot 2015-05-18 at 12 07 24](https://cloud.githubusercontent.com/assets/1122291/7679657/ceda2632-fd56-11e4-975f-48d911f26242.png)
",tiagoalmeida,2015-05-18 13:58:03
193,2015-05-18 13:58:13,":+1: 
",dzenbot,2015-05-18 13:58:03
192,2015-05-14 22:13:24,"Correct name is `typingIndicatorView`
",gimenete,2015-05-14 22:16:36
192,2015-05-14 22:16:40,"Thanks!
",dzenbot,2015-05-14 22:16:36
192,2015-05-14 22:18:40,"Wow. So fast!

Thanks for this awesome component!  :smile: 
",gimenete,2015-05-14 22:16:36
192,2015-05-14 22:20:01,"We get all Github notifications directly into Slack, so can't miss anything. 😉
I'm glad you find this lib useful.
",dzenbot,2015-05-14 22:16:36
191,2015-05-13 18:25:38,"We are deprecating `shouldForceTextInputbarAdjustment` and replacing it with `-forceTextInputbarAdjustmentForResponder:`. The property hasn't been yet removed from the code base, to avoid unexpected behaviors, but will soon, in next versions.

This change allows to be more selective when picking which `UIResponder` object should force the text input bar to adjust, even when its not the first responder. In example, when presenting a popover on iPad, with a search bar, it is very inconvenient to adjust the text input there since it pushes all the content up without updating the popover anchoring position.
",dzenbot,2015-05-13 18:45:08
190,2015-05-13 10:58:33,"I notice that if I present SLKTextViewController with a modified frame (specially if height is changed), input view (where user types in her message) doesn't scroll up on keyboard appearance. 
",shuaib,2016-08-28 12:49:03
190,2015-11-22 20:31:53,"I've seen this happen too, specially when presenting SLKTVC in a custom modal container view.
Would be great if you could create a sample project reproducing this issue, since it's a race condition hard to repro.
",dzenbot,2016-08-28 12:49:03
190,2016-03-16 07:44:09,"I am seeing this same issue. I have a navigationVC and when you swipe away and back it will no longer move up when the keyboard opens. Unfortunately can't do a sample project just yet

Edit: Nevermind, I was accidentally calling unregisterFromKeyboardNotifications() from old code. I would say this is a non issue
",elmateo487,2016-08-28 12:49:03
190,2016-08-28 12:49:03,"I believe this is fixed in the latest releases. Please re-open if it's still happening for you.
",dzenbot,2016-08-28 12:49:03
189,2015-05-12 21:00:41,"I wanted to use an image without text for the right button, but needed to update the `slk_appropriateRightButtonWidth` function to support this.
",ndbroadbent,2015-09-05 15:39:40
189,2015-05-12 21:07:01,"Fixes #122
",ndbroadbent,2015-09-05 15:39:40
189,2015-05-21 06:15:21,"@dzenbot Any support for this?
",ajsharp,2015-09-05 15:39:40
189,2015-05-21 06:15:57,"I haven't had the time to properly review. Will soon.
",dzenbot,2015-09-05 15:39:40
189,2015-05-21 06:16:36,"Thanks.
",ajsharp,2015-09-05 15:39:40
189,2015-08-07 12:10:39,"I would appreciate if this will be merged with the master branch
",zigdanis,2015-09-05 15:39:40
188,2015-05-12 01:57:25,"Toggling autocorrect on Japanese keyboards breaks autocompletion.

If you try typing ""@"" on a Japanese keyboard toggling the autocomplete causes iOS to set the textView's text to an empty string.

My thought is that this is caused by the same mechanism that forces autocorrection to be committed when refreshing the first responder.

This fixes the issue. Tested on a bunch of other international keyboards and others were fine. Only `ja-JP` was affected.
",bradya,2015-05-12 02:23:16
188,2015-05-12 02:21:09,"What about Chinese and similar? Didn't happen?
",dzenbot,2015-05-12 02:23:16
188,2015-05-12 05:22:29,"Nope, didn't happen on Chinese, Russian, Arabic, etc. Only Japanese.
",bradya,2015-05-12 02:23:16
187,2015-05-07 16:02:31,"In MessageViewController (in the Examples\Shared folder) there is a BOOL 'stub' that seems like it is used to stage test data in the self.messages data structure.  When testing this with stub set to YES, the app crashes on message send because the messages array that holds all the data is never initialized in stub mode.

No offense here, but seems counterintuitive to me that stub is expected to be FALSE (NO) in order to populate the test data in the messages array. My connotation of a stub is a stand in piece of code to simulate behavior; so to me, stub should be set to TRUE (YES) if test data is desired.

a simple initiation of self.messages in the viewDidLoad method fixes the issue.

<S_CODE_TOKEN>
",ndnguru,2015-05-11 18:02:50
187,2015-05-11 18:03:26,"That `stub` flag was previously used for tests, but not anymore. I've just removed it.
Thanks.
",dzenbot,2015-05-11 18:02:50
186,2015-05-07 10:04:53,"We noticed, just like described in #57, that increasing the font size for the right button didn't update the already set constraints. That had the following effect in our case:

![ios 8 3 12f69 2015-05-07 12-01-31](https://cloud.githubusercontent.com/assets/1638459/7512950/d11368c2-f4b0-11e4-835d-b31df6d1bd46.png)

This fix uses KVO as proposed in the closed issue, but please feel free to give feedback.

Thanks a lot for this great library!
",jmreyes,2015-08-07 17:39:17
186,2015-08-07 17:39:19,"Sorry for taking so much time to merge this.
Works great and is backwards compatible. Thanks @jmreyes! 🙌 
",dzenbot,2015-08-07 17:39:17
185,2015-05-07 00:59:08,"I am seeing the frame for both textView and textInputbar is (0,0,0,0). I am wondering what I am doing wrong here. The frame of the view is not zero tho.

(lldb) po println(cvc.textView)
SLKTextView: 0x7fbc09866800; baseClass = UITextView; frame = (0 0; 0 0); text = ''; clipsToBounds = YES; gestureRecognizers = NSArray: 0x7fbc0ace7060; layer = CALayer: 0x7fbc0acea5b0; contentOffset: {0, 0}; contentSize: {0, -8}
(lldb) po println(cvc.textInputbar)
SLKTextInputbar: 0x7fbc0ad14c80; baseClass = UIToolbar; frame = (0 0; 0 0); layer = CALayer: 0x7fbc0ace7c90
(lldb) po println(cvc.view)
UIView: 0x7fbc09588a70; frame = (0 692; 414 44); autoresize = W+H; layer = CALayer: 0x7fbc0ae2ede0
",zhifeng-huang,2015-11-22 20:35:33
185,2015-05-07 01:03:19,"Since all views in SLKTVC are lay out using auto-layout, you might be calling the view's frame property too soon the time. Try logging that in your `SLKTextViewController`'s subclass `viewDidLayoutSubviews` method.
",dzenbot,2015-11-22 20:35:33
185,2015-05-07 01:08:30,"I am seeing the same output even logging in viewDidLayoutSubviews.
",zhifeng-huang,2015-11-22 20:35:33
184,2015-05-07 00:58:11,,dzenbot,2015-05-07 01:28:59
183,2015-05-06 22:19:10,"I'm seeing this issue in master but it isn't occurring in v1.5 so it was introduced recently.
1. Run the Messenger example app.
2. Type a message and tap Send.
3. The Send button stays visible and enabled. It should hide or become disabled depending on how it's configured.
",soleares,2015-05-07 00:25:53
183,2015-05-07 00:25:53,"Thanks for reporting this.

This bug was introduced in https://github.com/slackhq/SlackTextViewController/commit/38958a07283cc338e41dec7ebbbfaaea6b9f1dcb
Notice that `slk_clearText` is calling super. Doing so, avoids calling `SLKTextView` override of `setText:`, which was posting `UITextViewTextDidChangeNotification`.

The simple fix is to call `[self setText:nil];` in `slk_clearText`. Opening a PR.
",dzenbot,2015-05-07 00:25:53
182,2015-05-06 09:33:12,"There are two problems cause carthage fails to build.
- Carthage is not able to locate the SlackTextViewController.xcodeproj in Example/Builder
- Incorrect framework header and header settings in project which causes other project not able to import SlackTextViewController

I've fixed these two problems in these commits and tested with carthage in my own project.
",hankbao,2015-05-20 17:36:58
182,2015-05-20 17:37:37,"Thanks for this @hankbao :+1: 
",dzenbot,2015-05-20 17:36:58
181,2015-05-06 01:47:25,,dzenbot,2015-05-06 22:03:08
180,2015-05-04 21:24:27,"Hello. I tried to use SlackTextViewContoller in inverted mode with scrollView. Everything is good but inserting items doesn't work as excepted. 
What i did:

<S_CODE_TOKEN>

Then in cellForItemAtIndexPath

<S_CODE_TOKEN>

Then i load data and items looks good in inverted mode.
Then i'm making insert:

<S_CODE_TOKEN>

And see the cell is inverted twice. Left side changed to right side and up side changed to bottom side.

What should i do?
",avently,2015-05-04 23:17:01
180,2015-05-04 21:41:39,"The support with collection view is still incomplete.
I've been experimenting with a custom collection view layout, to be able to display cells from the bottom, and avoid using the hacky `inverted` mode. https://github.com/slackhq/SlackTextViewController/tree/swift-example

But that example is still incomplete too, and the layout needs more work.

You could still call `reloadData` directly, and avoiding that issue, but you'd loose the animation tho.
",dzenbot,2015-05-04 23:17:01
180,2015-05-04 23:15:44,"Ok, I understood. I should change my implementation to tableView:)
Is there any difference in speed or something with table or collection?
",avently,2015-05-04 23:17:01
180,2015-05-04 23:17:01,"Not really. The advantage of using collectionView is about the freedom regarding layouts, but in terms of performance, I would bet UITableView is better. Good luck!
",dzenbot,2015-05-04 23:17:01
179,2015-05-04 21:07:29,,dzenbot,2015-05-04 21:18:24
178,2015-05-04 14:37:17,,rzehan,2015-05-04 14:40:43
178,2015-05-04 14:49:19,"Double checked, but it does.
Although, it doesn't show if not at the very bottom of the tableView/collectionView. That isn't a bug really, but could be customized tho.
",dzenbot,2015-05-04 14:40:43
177,2015-04-30 14:02:30,"As stated in the title, when setting the `contentInset` property on the text view, the placeholder label does not shift its place accordingly. 
",dpgao,2015-04-30 14:07:32
177,2015-04-30 14:07:32,"Just noticed that it is a duplicate of #28. Sorry for that.
",dpgao,2015-04-30 14:07:32
176,2015-04-29 17:42:22,"I am running xCode 6.3.1 (6D1002) and Swift 1.2. I'm targetting iOS 7.0 and above with my app. 

I am using cocoapods to install/use SlackTextViewController. I am seeing two very strange Swift compiler warnings: http://cl.ly/image/1a242j412k0u

/apps/SnapSuggest/ios/SlackTextViewController.SLKTextViewController:296:14: Parameter of 'scrollViewDidScroll' has different optionality than expected by protocol 'UIScrollViewDelegate'
/apps/SnapSuggest/ios/UIKit.UIScrollViewDelegate:2:23: Requirement 'scrollViewDidScroll' declared here

and

/apps/SnapSuggest/ios/SlackTextViewController.SLKTextViewController:295:14: Parameter of 'scrollViewShouldScrollToTop' has different optionality than expected by protocol 'UIScrollViewDelegate'
/apps/SnapSuggest/ios/UIKit.UIScrollViewDelegate:16:23: Requirement 'scrollViewShouldScrollToTop' declared here

Anyone seen this or have any ideas? Googling these errors didn't turn up anything. Thanks in advance.
",blakeperdue,2015-05-06 16:37:44
176,2015-04-29 21:08:36,"@tomaskraina reported this too in https://github.com/slackhq/SlackTextViewController/issues/173
I haven't been able to see it myself tho.
",dzenbot,2015-05-06 16:37:44
176,2015-05-04 20:36:08,"@blakeperdue @tomaskraina did you find a way to get rid of it?
",dzenbot,2015-05-06 16:37:44
176,2015-05-04 20:40:41,"@dzenbot Sadly no. I ended up commenting out the two methods (`scrollViewDidScroll` and `scrollViewShouldScrollToTop`) to remove the warnings. This is obviously not a good solution but only thing that temporarily worked for me.
",blakeperdue,2015-05-06 16:37:44
176,2015-05-06 16:37:44,"See https://github.com/slackhq/SlackTextViewController/issues/173#issuecomment-99531842
",dzenbot,2015-05-06 16:37:44
175,2015-04-28 09:52:04,"Hi @dzenbot,

What would be the less hacky way to change/remove the animation applied on autoCompletionViewCell .
It's seems to be default UITableViewRowAnimationLeft and triggered by : 

<S_CODE_TOKEN>

in SLKTextViewController.m

should i hardcode this instead :  

<S_CODE_TOKEN>

I'd like to keep the cool bouncing effect when the autoCompleteView shows off so I don't want to use 

<S_CODE_TOKEN>

An override solution in my subclass would be really appreciated... Can you help me on this ?

Thanks,
François
",rosatof,2015-08-19 13:42:14
175,2015-08-07 14:55:10,"Sorry for the late response. I assume you want to disable the animation in your cells layout inherited from the superview. This happens when animating with auto-layout, the technique is to use `layoutSubviews`, but this is spread over to the subviews, and their subviews...

The best way I've found so far is to disable the cell's animation in `layoutSubviews` directly:

<S_CODE_TOKEN>

I hope this helps 💪
",dzenbot,2015-08-19 13:42:14
175,2015-08-19 08:27:20,"Thanks you@dzenbot !
",rosatof,2015-08-19 13:42:14
174,2015-04-24 16:40:36,"Hi Slack team, 

I need your help on this! how can i remove - or change the color - of the top border of the textInputbar?
I have been trying the following with no result: 

<S_CODE_TOKEN>

I have been able to customize all i needed, excepted this border.

Thank you for your help! :smiley: 
",rosatof,2015-04-24 22:55:01
174,2015-04-24 17:46:30,"The `textInputbar` is a `UIToolBar` subclass, so the simplest and non-hacky way to remove the hairline is:

<S_CODE_TOKEN>

or

<S_CODE_TOKEN>
",dzenbot,2015-04-24 22:55:01
174,2015-04-24 22:54:13,"Works like a charm ! 

Thank you :smile: 
",rosatof,2015-04-24 22:55:01
174,2015-04-24 22:55:01,"👌
",dzenbot,2015-04-24 22:55:01
173,2015-04-24 11:51:19,"Compiling SlackTextViewController, installed with CocoaPods, emits the following warning:

<S_CODE_TOKEN>

![xcode warning screenshot](https://cloud.githubusercontent.com/assets/198316/7318139/7d2e314a-ea80-11e4-9c5a-0212ab814079.png)

This warning is presented even though I don't override `scrollViewShouldScrollToTop` anywhere in my project.

Removing the following line from `SLKTextViewController.h` fixes the warning:

<S_CODE_TOKEN>
",tomaskraina,2015-04-25 03:13:46
173,2015-04-24 15:11:51,"Which version of XCode and Base SDK are you using?
",dzenbot,2015-04-25 03:13:46
173,2015-04-24 16:01:54,"`Xcode 6.3.1`, Base SDK `8.0`
",tomaskraina,2015-04-25 03:13:46
173,2015-04-25 03:13:46,"I wasn't able to repro since I only have Base SDK 8.1 and above, and all seems fine.

If you're using Swift, you should definitely upgrade to [Swift 2.0, included in XCode 6.3 and use Base SDK 8.3](https://developer.apple.com/swift/blog/?id=22).
",dzenbot,2015-04-25 03:13:46
173,2015-04-25 13:13:13,"Sorry, that was incorrect. I'm using Base SDK `8.3` and `Swift 1.2`. Only `deployment target` is `8.0`.

I'll try different settings to see if it will disappear or not.
",tomaskraina,2015-04-25 03:13:46
173,2015-04-25 22:50:40,"Keep me posted.
",dzenbot,2015-04-25 03:13:46
173,2015-04-29 21:22:31,"@tomaskraina What was the outcome of this? I'm seeing the same thing with XCode 6.3.1, Swift 1.2, and Base SDK 8.3.

Were you able to get rid of those warnings? Thanks.
",blakeperdue,2015-04-25 03:13:46
173,2015-05-06 11:23:58,"Got these two warnings also. I guess that they may relate to the NS_REQUIRES_SUPER attribute.
",hankbao,2015-04-25 03:13:46
173,2015-05-06 16:37:27,"There is no equivalent of `__attribute((objc_requires_super))` (a.k.a `NS_REQUIRES_SUPER`) in Swift.
I'm not sure how to fix this, except for waiting for Swift 1.3 and hoping that this attributes is somehow added in a compatible way with Objective-C.

This is a friendly warning from what I can tell, and it shouldn't cause any issues. Although, if you don't like having useless warnings in your projects (like I do), simply fork the repo and remove the macro on those methods. _Remember to still call for super in those methods, as it is important to assure a good functioning of the library._

It doesn't make much sense to remove it because of Swift limitations, while Objective-C users might still need the warning about requiring super in their implementations.
",dzenbot,2015-04-25 03:13:46
172,2015-04-24 07:24:07,"Hi,

The Readme says that it's _carthage_ compatible. But, when trying it build it with carthage I get the following error:

`Project ""Messenger.xcodeproj"" has no shared schemes`

Thanks
",hemantasapkota,2015-04-25 03:42:04
172,2015-04-24 10:58:48,"I need to update the README file better.
The project containing the framework target is right next to `Messenger`'s. It's called `Builder`.
Let me know how it goes.
",dzenbot,2015-04-25 03:42:04
172,2015-05-06 08:11:17,"I encountered the same `Project ""Messenger.xcodeproj"" has no shared schemes` problem. It seems that two projects in the same folder will interfere with carthage as it only finds and builds a single project according to https://github.com/Carthage/Carthage/issues/210
I guess we should put Messenger.xcodeproj in a subfolder of Example.
",hankbao,2015-04-25 03:42:04
172,2015-05-06 09:34:33,"Please see my pr #182.
",hankbao,2015-04-25 03:42:04
171,2015-04-24 00:58:26,"You made my five minutes. Why? I needed only 5 mins to understand how you library is AWESOME. I can't imaging what kind of professional the creator of this library would be. I am watching on the code, and on a number of files, and on the results... WOW. I want just tell you how is great your job for us all. Thank you!
",avently,2015-04-24 03:46:24
171,2015-04-24 03:46:24,"I'm glad you liked the library. Thanks for the kind words.
",dzenbot,2015-04-24 03:46:24
170,2015-04-20 22:11:30,"With the [Swype keyboard](https://itunes.apple.com/us/app/swype/id916365675?mt=8), pressing the backspace key to delete doesn't call `UITextView`'s delegate method `-textViewDidChangeSelection:`, causing the auto-completion processing not to take place and introducing odd behaviors in the component and a crash too.
##### Steps to Repro:
- Switch to the Swype keyboard
- Tap ""@"" or ""#"" (also happens if you type "":"" + one letter)
- Delete the ""@"" or ""#"" (note: the autocomplete table cells are still displayed)
- Tap any of the autocomplete table cells
##### Result:
- weird behaviors like not hiding the auto-completion view, or doesn't update its content when deleting.
- app crashes
##### Note:

This could be happening in other third party keyboards. Only tested with Swype.

---
##### The fix is simple:

~~Process the text for auto-completion in `-textViewDidChange:` method, only if the caret selection/movement didn't change earlier. If not, then process in `-textViewDidChangeSelection:`, since we still want to be able to process while moving the text caret manually.~~ [commit](https://github.com/slackhq/SlackTextViewController/commit/4f112a36acb5e294b5f4b760eeec69605c94b1b6)

Process the text for auto-completion when `UITextViewTextDidChangeNotification` is posted, being much more reliable than `UITextViewDelegate`'s `-textViewDidChange:`.
Also, there is a new custom notification `SLKTextViewSelectedRangeDidChangeNotification`, which listens to the `UITextView`'s setter `-setSelectedTextRange:`, making it also more reliable than `UITextViewDelegate`'s  `-textViewDidChangeSelection:` [commit](https://github.com/slackhq/SlackTextViewController/commit/844b74d885e1388e327571faf06b952bfb2bbd0c)
",dzenbot,2015-04-21 21:01:18
169,2015-04-20 20:27:58,"This will allow loading a custom view in subclasses
",stianjensen,2015-04-25 05:56:47
169,2015-04-25 05:56:47,"Included in https://github.com/slackhq/SlackTextViewController/commit/bf0e9e879411310286fd78b7fa623da5043e7986
",dzenbot,2015-04-25 05:56:47
168,2015-04-18 19:25:28,"Liked described in to https://github.com/slackhq/SlackTextViewController/issues/134, we are adding snapshot tests to SLKTVC.

This PR includes:
- Installs test tools ([Expecta+Snapshots](https://github.com/dblock/ios-snapshot-test-case-expecta), [FBSnapshotTestCase](), [Expecta](https://github.com/specta/expecta), [Specta](https://github.com/specta/specta))
- Adds basic UI snapshot test (keyboard and text input interactions) + initilization tests

It also includes minor tweaks to SLKTVC:
- Adds `slk_clearText:`
- Adds a hairline on top of the auto-completion view, to better separate the content from the control.
",dzenbot,2015-04-18 20:17:38
168,2015-04-18 19:40:51,"Thanks for the feedback @orta!
",dzenbot,2015-04-18 20:17:38
167,2015-04-18 13:48:40,"You will need to activate Travis and Coveralls for this repo to actually make this work.
",neonichu,2015-04-18 19:35:27
167,2015-04-18 19:35:20,"Thanks @neonichu!
",dzenbot,2015-04-18 19:35:27
166,2015-04-16 09:17:35,"Repro steps
1. On UINavigationController, pan about 20 pixels, and pan back without fully popping the slack view controller
2. InputView no longer moves up with the keyboard after being tapped.

iOS8.x

This bug also happens if you Push another view controller onto the stack from SLKViewController, and then come back to SLKViewController.
",weixiyen,2015-04-16 12:44:49
166,2015-04-16 12:45:16,"nevermind that only happens if I remove the keyboardWillShow event
",weixiyen,2015-04-16 12:44:49
166,2015-04-16 15:36:37,"What do you mean by ""removing the keyboardWillShow event""?
",dzenbot,2015-04-16 12:44:49
165,2015-04-15 11:11:44,"Hi, thanks for this great library. 

When I use the SlackTextVIewController in the ViewController pushed inside of Navigation Controller, the Input View doesn't show up for some reason unless I call ""[self loadView]"" in the ViewDidload or show the ViewController again by changing  the Tab of TabViewControllers.

For example,

A ViewController  with navigation controller => push => B ViewController with navigation controller.

In the B ViewController, I set the SlackTextViewController, but the InputView doesn't show up unless I call [self loadView] in the ViewDidload.

Is there any way to fix this issue?
",umekun123,2015-11-22 21:04:20
165,2015-04-15 11:32:53,"I believe that has been fixed recently in https://github.com/slackhq/SlackTextViewController/commit/460ce7d0e6eb5c64cbcc1048cc3756a33600f88a
What version of the library are you using?
",dzenbot,2015-11-22 21:04:20
165,2015-04-16 17:21:01,"We are seeing the same issue as well, with latest version from master
",tempestn,2015-11-22 21:04:20
165,2015-04-16 19:09:29,"It happens when the view of SLKTextViewController is a subview of a view from another view controller.
",zhifeng-huang,2015-11-22 21:04:20
165,2015-08-07 13:50:31,"I had a similar problem, but the issue was IQKeyboardManager I had installed, make sure you don't have any library conflicting
",andrew-frank,2015-11-22 21:04:20
165,2015-11-22 21:04:20,"Please re-open if you're still seeing this in the current versions.
",dzenbot,2015-11-22 21:04:20
164,2015-04-14 10:12:10,"#### :tophat: What? Why?

Related to yesterday's PR, `[UIApplication sharedApplication].statusBarFrame` is returning switched heigh and width in BaseSDK 7.0. That makes the scroll view to be the device width in points bigger that what it should be. Also makes the scroll indicators to not work properly.
#### :ghost: GIF

![](https://s3.amazonaws.com/giphygifs/media/l1UWxyIhsZi8g/giphy.gif)
",poolqf,2015-04-18 17:14:58
163,2015-04-13 17:19:01,"_This was initially implemented by @pfleiner and PRed by @cameronehrlich. Thanks!_

Instead of only allowing collection view controllers, the new implementation is more flexible, accepting table view controllers too. It could accept any view controller in the future, if they respond to selectors `tableView`, `collectionView` or `scrollView`, but this seems fine for now. 
A new target has also been added to the sample project, to be able to test it.

One thing to understand is that the child view controller's subviews aren't added to the view hierarchy, except for the scrollViewProxy. This is meant to decouple the implementation of the view controller's from `SlackTextViewController`.

[Snapshot tests will be added soon, in this branch](https://github.com/slackhq/SlackTextViewController/tree/snapshot-tests).
",dzenbot,2015-05-14 22:21:46
163,2015-04-18 20:18:30,"Needs to update, after https://github.com/slackhq/SlackTextViewController/pull/168 got merged.
",dzenbot,2015-05-14 22:21:46
162,2015-04-13 16:28:04,"#### :tophat: What? Why?

In Base SDK 7.0 the method `slk_appropriateKeyboardHeight` was not returning a correct value.

More info here: https://github.com/slackhq/SlackTextViewController/issues/160
#### :ghost: GIF

![](http://i.giphy.com/NHxHjzlvjEwrC.gif)
",poolqf,2015-04-13 16:35:53
161,2015-04-13 15:49:42,"I was wondering if some form of autocomplete / suggestion functionality might find it's way into the mix when interacting with bots. I have a web based interface that uses typeahead and I keep finding myself wishing I could do the same for interacting with a slack RTM bot. (Of course this would require an additional event to the RTM api along the lines of those needed to support typeahead)
",eikeon,2015-04-13 16:35:53
161,2015-04-13 16:06:19,"It seems you have the wrong project. Are you talking about [rtmbot](https://github.com/slackhq/python-rtmbot)?
",dzenbot,2015-04-13 16:35:53
161,2015-04-15 20:27:14,"Nope, I was not talking about rtmbot. Although this project could not implement such a feature without there being support for it added to the slack API – I would have posted an issue for it there instead but do not think it's being worked on in the open?
",eikeon,2015-04-13 16:35:53
161,2015-04-15 20:37:45,"This (objective-c) project is completely independent from the Slack API.
You should submit your feature request in [slack-api-docs](https://github.com/slackhq/slack-api-docs)  or [@SlackAPI](https://twitter.com/slackapi)
",dzenbot,2015-04-13 16:35:53
160,2015-04-13 15:35:48,"_Device iOS version: 8.0.2
Base SDK: 7.0_

**Problem:**

In iPad landscape, when showing the keyboard height is so big that it is impossible to see the conversation.

**Why:**

The `slk_appropriateKeyboardHeight` is returning a value related with the device width instead of its height. The SLK_IS_IOS8_AND_HIGHER macro is only taking in account the device version, so it is entering the else statement. In this case should take in account the Base SDK version to invert width and height using `SLKRectInvert(endFrame)`.

**Code related:**

<S_CODE_TOKEN>

---

Another problem I had is that when dismissing the keyboard by dragging it, at some point the endFrameConverted.origin.y is negative, and it causes the screen to turn blank for a moment.

**Easy fix:** 

<S_CODE_TOKEN>
",poolqf,2015-04-13 16:35:53
160,2015-04-13 16:14:22,"Thank you for the heads up. As this library has never been compiled with iOS7 base SDK, this would have been impossible to detect. The fix in you branch makes sense. Want to submit a PR?
",dzenbot,2015-04-13 16:35:53
160,2015-04-13 16:23:04,"Of course, submitting it in a moment. :+1: 
",poolqf,2015-04-13 16:35:53
159,2015-04-10 13:44:44,"This fixes an issue for me when the keyboard would not move the input bar correctly when the view controller was contained as a child view controller in another controller. 

I think the calculations are hard to understand, and I'm not completely sure about all the cases it tries to solve, and how every piece fits together, but as far as I can see, this still works for the included samples with the attached changes.
",sveinhal,2015-06-10 13:51:09
159,2015-04-13 16:37:19,"Thanks. Will review this soon.
",dzenbot,2015-06-10 13:51:09
159,2015-04-15 08:57:26,"Great. I'd really like this to work, so I don't have to maintain a local patch :smile: 
",sveinhal,2015-06-10 13:51:09
159,2015-04-15 11:27:10,"Why closing?
",dzenbot,2015-06-10 13:51:09
159,2015-04-20 15:30:03,"It didn't work as intended. I'll look more at it later, and either re-open or create a new pull request.
",sveinhal,2015-06-10 13:51:09
159,2015-04-20 15:31:48,"This library wasn't designed to be added as child view controller tho. It should instead, be nested inside of a navigation controller.
Could you describe your view hierarchy a bit?
",dzenbot,2015-06-10 13:51:09
159,2015-04-20 15:32:36,"Still, have a look at this PR https://github.com/slackhq/SlackTextViewController/pull/163
Which I've tested pretty much and seems to work without any issues.
",dzenbot,2015-06-10 13:51:09
159,2015-04-21 11:37:16,"#163 deals with having a child view controller inside the `SLKTextViewController`, non? I'm talking about the opposite scenario, where I'm putting the text view controller as a child view controller in some other container.

We're developing an app where chat is secondary, and we don't want the chat to modally fill the entire screen. Also, we're already using a view controller container for other secondary views. However, I find that the attached patch works if I also convert the `endFrame` to `self.view`'s coordinate system.
",sveinhal,2015-06-10 13:51:09
159,2015-04-21 11:59:36,"I don't get why the calculations are so complex. What are all the corner cases that it's trying to solve? Look at the updated patch. It only converts the keyboard's frame into the coordinate system of the view, and sets the constraint to the offset from the bottom. It should work in form sheets, child view controllers, and all other kinds of containers, no?

I'm probably missing something major?
",sveinhal,2015-06-10 13:51:09
159,2015-04-29 10:38:59,"Hi, I'm also interested in this. We're currently using it successfully as a child view controller by commenting out the following line, as mentioned in #99 (which was closed):

https://github.com/slackhq/SlackTextViewController/blob/v1.5/Source/Classes/SLKTextViewController.m#L526

Further implications of this change are unknown though.
",jmreyes,2015-06-10 13:51:09
159,2015-06-10 13:56:52,"Sorry about that @sveinhal. Your approach was actually accurate, a much simpler.
The initial calculations used to be simple, but as the lib evolved, new edge cases were discovered and those 2 funky methods start to get really complex by patching instead of refactoring them to be more efficient.

I just realized your commit is very similar to https://github.com/slackhq/SlackTextViewController/commit/db1dbd7a58e5ae4ff93410e368ce72ef817ce198

So thanks!
",dzenbot,2015-06-10 13:51:09
159,2015-06-10 14:03:59,"No problem, I just deleted my fork and are finally able to rely on your master branch again. (However, I need to explicitly put `:git => 'https://github.com/slackhq/SlackTextViewController.git'` in my `Podfile` to get 1.5.1 ¯_(ツ)_/¯
",sveinhal,2015-06-10 13:51:09
159,2015-06-10 14:11:43,"Just bumped to 1.5.2 💥
Happy coding!
",dzenbot,2015-06-10 13:51:09
159,2015-11-29 09:57:29,"Next time, @luizv please open a new issue as it's unrelated to this one.
Unfortunately, there's not much I can help you with. Even if `SLKTextViewController` should be working fine within a view controller containment, adding it as a subview of a cell is not something it was built for. You will need to fork the project and make the arrangements to fix that on your own, sorry.
",dzenbot,2015-06-10 13:51:09
159,2015-11-29 13:56:39,"@dzenbot, thank you so much for the quick feedback, sorry the misplaced post. 
I'll ask a more specific question in a new issue.
",luizv,2015-06-10 13:51:09
158,2015-04-09 22:18:19,"#### :pushpin: Related issue

https://github.com/slackhq/SlackTextViewController/issues/140
#### :tophat: What? Why?

The project I am working on has 7.0 Base SDK, and there's a macro you added on the last commit that is only available on iOS 8.
How I fixed on my project is by adding the macro if it is not defined by the Base SDK.

![](http://i.giphy.com/iNUq5rs9KSrFm.gif)
(A GIF always improves a PR :grin: )
",poolqf,2015-04-10 05:38:38
158,2015-04-10 05:41:27,"I downloaded XCode 5.1 to see this with my own eyes, and it did break.
I decided to move that macro re-definition into `SLKUIConstants` instead, and rename it so we avoid any name collision.

Thank you for reporting and for that funky GIF 😜
",dzenbot,2015-04-10 05:38:38
157,2015-04-01 08:23:58,"In previous versions of the framework the table view cell separators at the end of the table were hidden by default. But now it is shown like in the following screenshot. Are there any ways to hide them as in previous versions? Thank you!
![screen shot 2015-04-01 at 4 16 55 pm](https://cloud.githubusercontent.com/assets/9143914/6937077/2230cc00-d88b-11e4-977c-7f461f8935ac.png)
",dpgao,2015-04-02 09:09:18
157,2015-04-01 16:20:21,"I wonder how this happened. The library has never interacted with `UITableView` and `UICollectionView` APIs, specially cell separators.

This one liner should fix it tho:

<S_CODE_TOKEN>
",dzenbot,2015-04-02 09:09:18
157,2015-04-02 09:09:18,"Problem solved. Thanks a lot!
",dpgao,2015-04-02 09:09:18
156,2015-03-28 15:28:08,"Hi there. This SLKTextViewController is great and I wanna use it in my current project. But I need to achive this effect:
  When I hit the left button, the SLKTextView gone and the record button will show. When I hit the left button again, the record button hide and the textView show. Is there a specific interface here to solve this kind of problem?
",WenchaoD,2015-04-01 03:13:55
156,2015-03-28 19:02:12,"You can simply replace the image of the left button.
",dzenbot,2015-04-01 03:13:55
156,2015-03-29 00:01:42,"What about the record button? Add a subview on the tool bar?
",WenchaoD,2015-04-01 03:13:55
156,2015-04-01 03:13:55,"Simply reuse the same button, by replacing images. If that isn't enough, you might need to fork the project and create a custom behavior.
",dzenbot,2015-04-01 03:13:55
155,2015-03-27 02:26:50,"Hey there:
    The SLKTextViewController has integrated a functional that the STKToolBar and tableView will move with the Keyboard, which has a conflict with the IQKeyboardManager, the solution is to disable the keyboard manager in viewWillAppear and enable it again in viewWillDisappear. As both these two libs have a wide usage already, I think it is necessary to mention it. This is not an already-known issue, right? 
",WenchaoD,2015-03-28 19:35:04
155,2015-03-28 19:35:04,"I didn't know about `IQKeyboardManager` before, looks very interesting. Thank you for pointing out a workaround, but I wouldn't imagine a fix for this.
",dzenbot,2015-03-28 19:35:04
155,2015-03-29 00:08:18,"I don't mean to fix it. I mean to present it on the readme file to let people know. I have fixed it by add a few codes, and can send a pr for this which only add three or four lines in only the readme file, only if you think that is necessary
",WenchaoD,2015-03-28 19:35:04
155,2015-03-30 22:43:35,"Thank you, but no need to add this to the readme file.
Whoever would faces this issue, would search and find your workaround ;)
",dzenbot,2015-03-28 19:35:04
155,2015-07-04 06:56:44,"I added warning notes for third-party libraries and for other developers who uses third-party library UI with IQKeyboardManager. hackiftekhar/IQKeyboardManager@29be5f058b6f2d350b6f3527b7fb31c051459cf9
",hackiftekhar,2015-03-28 19:35:04
155,2015-07-04 07:32:25,"Thanks @hackiftekhar 
It's very useful. I've get used to disabling it for some specific UIViewController in AppDelegate. Hope other developers could get used to it quickly.
",WenchaoD,2015-03-28 19:35:04
155,2015-07-05 10:32:19,"_Third-party libraries are not responsible to handle IQKeyboardManager_ :+1: 
",dzenbot,2015-03-28 19:35:04
154,2015-03-26 01:56:52,,dzenbot,2015-03-26 17:33:39
153,2015-03-25 23:13:24,"When this is set to true, it scrolls weird while the keyboard come sup and settles to a point with the last item just scrolled down.  It'll then star there are you open and close the keyboard.

It should probably wait until the keyboard is fully open to start scrolling and then scroll to the right spot.
",solomon23,2015-04-13 16:39:57
153,2015-03-26 18:28:30,"Related to https://github.com/slackhq/SlackTextViewController/pull/144
",dzenbot,2015-04-13 16:39:57
152,2015-03-24 09:09:00,"...ible for its own collection view
",cameronehrlich,2015-04-19 03:48:54
152,2015-04-19 03:48:54,"Closing this, as https://github.com/slackhq/SlackTextViewController/pull/163 is a continuation of this PR, making it more flexible for other view controller types.
",dzenbot,2015-04-19 03:48:54
151,2015-03-22 04:29:24,,dzenbot,2015-03-22 04:30:12
151,2015-03-22 04:30:15,"Closes #150
",dzenbot,2015-03-22 04:30:12
150,2015-03-19 21:23:56,"I just added a workspace with a project containing the source and made a framework target for it.
",brsmith080,2015-03-22 04:31:06
150,2015-03-21 16:54:44,"Isn't `Carthage` supposed to fetch and create the framework on your behalf?
https://github.com/Carthage/Carthage#adding-frameworks-to-an-application
",dzenbot,2015-03-22 04:31:06
150,2015-03-21 17:28:28,"it does, but it expects the projects it fetches to have shared schemes to build the framework targets.
https://github.com/Carthage/Carthage#supporting-carthage-for-your-framework
",brsmith080,2015-03-22 04:31:06
150,2015-03-21 17:30:24,"Gotcha. Does this project need to be at the root? Can it be moved to `Examples` directory?
",dzenbot,2015-03-22 04:31:06
150,2015-03-21 17:32:55,"Im really not sure. Looks like the other things I use has the project at the root though. I used [Alamofire](https://github.com/Alamofire/Alamofire) as an example of how to get things working.
",brsmith080,2015-03-22 04:31:06
150,2015-03-21 17:36:30,"Im looking now to see if that'll work
",brsmith080,2015-03-22 04:31:06
150,2015-03-21 18:01:18,"I removed the workspace, carthage was hitting the project first after moving both to Examples. Looks like this works though.
",brsmith080,2015-03-22 04:31:06
150,2015-03-21 19:24:23,"Can you have a look at this branch and tell me if it works for you?
https://github.com/slackhq/SlackTextViewController/tree/carthage-support

Thanks!
",dzenbot,2015-03-22 04:31:06
150,2015-03-22 04:12:47,"looks good! 
",brsmith080,2015-03-22 04:31:06
150,2015-03-22 04:31:06,"Closed with #151
",dzenbot,2015-03-22 04:31:06
149,2015-03-18 18:52:58,"Removing margins in buttons and expanding tap area for much better experience
",ex3ndr,2015-05-07 12:27:57
149,2015-05-07 12:27:57,"Thanks for this, but it's now too late for merging.
The problem with this PR was that it wasn't considering the left button's content size anymore.
Will revisit this soon and include some of your tweaks.
",dzenbot,2015-05-07 12:27:57
148,2015-03-18 18:44:11,"In the Swift Example, when the text is entered it's not scrolling to the last entered row. 

I've tried modifying the slk_scrollToBottomAnimated function in ""UIScrollView+SLKAdditions.m"" and couldn't get it to work. Might be issue with contentSize.height?
- (CGRect)slk_bottomRect
  {
  return CGRectMake(0, self.contentSize.height - CGRectGetHeight(self.bounds), CGRectGetWidth(self.bounds), CGRectGetHeight(self.bounds));
  }
",maail,2015-03-27 07:04:37
148,2015-03-19 19:26:34,"I assume you have disabled `inverted` mode, I am right?
",dzenbot,2015-03-27 07:04:37
148,2015-03-19 19:33:34,"self.inverted = false
In the Swift example provided yes.
",maail,2015-03-27 07:04:37
148,2015-03-19 19:49:19,"This is related to https://github.com/slackhq/SlackTextViewController/pull/144
On `inverted = NO`, it's a bit more difficult to make the scrolling of the content at the same speed than the keyboard without having a few bugs. Give it a chance at that commit, and let me know.
From what I tested, it wasn't solving the issue consistently across all devices, and for some reason, there is a blink when starting scrolling from the bottom of the content view.
",dzenbot,2015-03-27 07:04:37
148,2015-03-20 05:01:54,"Tried at that commit. Works a bit better at the start. 

But after a row is inserted below the keyboard the last inserted is row is never shown. Have to scroll down to see. 

Tried with inverted = YES as well. Same issue. I'm using it with the Swift CollectionView Example. The objective-c examples work though. Might be issue with the custom Cell (SLKMessageViewCell) provided in the example? If so I can debug further.
",maail,2015-03-27 07:04:37
148,2015-03-20 19:38:53,"Also related to https://github.com/slackhq/SlackTextViewController/issues/94
",dzenbot,2015-03-27 07:04:37
148,2015-03-27 07:03:24,"Porting the programatic Table View example to Swift fixed the issue for me. 

The scrolling issue was due to using `self.tableView.slk_scrollToBottomAnimated(true)` in didPressRightButton function.

Instead used these as in the Programatic Table View Example for didPressRightButton function

`var scrollPosition: UITableViewScrollPosition = self.inverted ? UITableViewScrollPosition.Bottom : UITableViewScrollPosition.Top`

`self.tableView.scrollToRowAtIndexPath(idxPath, atScrollPosition: scrollPosition, animated: true)`

`self.tableView.reloadRowsAtIndexPaths([idxPath], withRowAnimation: UITableViewRowAnimation.Automatic)`
",maail,2015-03-27 07:04:37
147,2015-03-18 06:45:36,"Can I've a plain (without constraints) version of SlackViewController?
",hagile,2015-03-19 19:25:57
147,2015-03-19 19:25:56,"No, sorry. You will need to do it yourself in a fork version.
",dzenbot,2015-03-19 19:25:57
146,2015-03-18 03:51:25,"The textInput disappears after scrolling the tableView to the bottom. I want to keep the text at the bottom as the demo did. What is the problem?
Thanks,
",dg86,2015-04-15 11:25:59
146,2015-03-19 19:25:13,"Did you disable the `inverted` mode?
",dzenbot,2015-04-15 11:25:59
146,2015-03-20 01:34:56,"Yes, self.inverted = NO; and i also tried self.inverted = YES; to see how it works and both still doesn't work.
I have TabBarController->NavigationController->ViewController and then i push (Storyboard) to a ViewController which extends SLKTextViewController. Then the output is:
- The textInput doesn't appear. (see pic 1)
- Then i click on other tab and then go to the first tab again, then the textInput appears but the tabbar is in black. (see pic 2)
  
  ![1](https://cloud.githubusercontent.com/assets/4926472/6744459/352d0bc4-cedc-11e4-8b8a-9c6f5468dafc.jpg))
  ![2](https://cloud.githubusercontent.com/assets/4926472/6744460/352e628a-cedc-11e4-9288-54c6a6d3e144.jpg)
",dg86,2015-04-15 11:25:59
146,2015-04-09 21:10:55,"This may be fixed with 460ce7d
Can you please give it a try and let me know if it's fixed for you as well?
",dzenbot,2015-04-15 11:25:59
146,2015-04-15 09:13:40,"Sorry late to reply. That solved my problem. 
But i wonder one thing why need to set ""self.window.backgroundColor = [UIColor whiteColor];""?

Thanks u
",dg86,2015-04-15 11:25:59
145,2015-03-17 17:26:39,"In my view controller, I've a topbar `UIView` (in place of navigation bar) which size of 320 x 64. How to fix the `SlackTextViewController` start position and height relevant to top bar view. Can I do this?
",hagile,2015-03-18 06:32:27
145,2015-03-17 17:32:34,"This means you solved https://github.com/slackhq/SlackTextViewController/issues/142?

I guess you should subclass UINavigationController, and add your custom top view there and embed your `SlackTextViewController` subclass as a child view controller, to play nice with view hierarchies. `SlackTextViewController`'s wasn't designed to support subviews, since everything is internally layout using private view constraints.
",dzenbot,2015-03-18 06:32:27
145,2015-03-17 17:34:39,"No, not yet.

I commented this notification 
[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(slk_didChangeTextViewContentSize:) name:SLKTextViewContentSizeDidChangeNotification object:nil];

in SlackTextViewController.m class.

And everything works bad! :-1:  but at least my app is running now. Looking for some elegant soln.
",hagile,2015-03-18 06:32:27
145,2015-03-18 04:46:02,"@dzenbot , any updates on this?
",hagile,2015-03-18 06:32:27
144,2015-03-17 16:18:37,"Please see https://github.com/slackhq/SlackTextViewController/issues/139
",luzianscherrer,2016-01-03 00:58:22
144,2015-03-17 16:27:50,"Are you seeing the scrollView blinking for half a second, when the cursor is not at the bottom?
",dzenbot,2016-01-03 00:58:22
144,2015-03-17 16:39:08,"Yes. But only when the scroll position is not at the bottom and not _near_ the bottom.
",luzianscherrer,2016-01-03 00:58:22
144,2015-03-17 16:39:35,"I wonder what that is. Seems to be a UIScrollView bug...
",dzenbot,2016-01-03 00:58:22
144,2015-03-17 17:28:04,"Doesn't seem to be consistent in all devices:
On iPhone 6 and 6+, this works great
`[self.scrollViewProxy setContentOffset:CGPointMake(0, self.scrollViewProxy.contentSize.height) animated:NO];`

But in iPhone5/4 and iPad, using a integer for some reason makes the animation very odd and inaccurate, for the x axis, but this solves it:
`[self.scrollViewProxy setContentOffset:CGPointMake(0.0, self.scrollViewProxy.contentSize.height) animated:NO];`

Notice the `0` vs `0.0`. Again, all these must be a UIScrollView bug...
",dzenbot,2016-01-03 00:58:22
144,2015-03-17 18:50:08,"I cannot reproduce that odd animation. What does it look like? To me it looks good on all devices with 0 and 0.0 - but I'm only testing in the simulator.
",luzianscherrer,2016-01-03 00:58:22
143,2015-03-17 12:49:19,"Please provide exact steps for doing this !! I'm in a middle of the sea and don't know how to swim! :(

P.S. already read readme file, but with no luck :-1: 
",hagile,2015-03-17 13:11:06
143,2015-03-17 13:09:25,"Isn't this related to https://github.com/slackhq/SlackTextViewController/issues/142?
",dzenbot,2015-03-17 13:11:06
143,2015-03-17 13:11:06,"The sample project should be more than enough to get you started. Please have a look at the programatic approach (the sample project has different target examples).
",dzenbot,2015-03-17 13:11:06
143,2015-03-17 13:13:48,"Yes, I've checked it already, but this is causing an issue for me. As I've asked in https://github.com/slackhq/SlackTextViewController/issues/142 That's why I was asking for exact steps.
",hagile,2015-03-17 13:11:06
142,2015-03-17 12:31:02,"As title say, when I try to push to my view controller which subclass of `SlackTextViewController` it goes in some infinite loop and at last crashed the app at some 400+mb memory.

I'm not sure what's wrong here? 

What I'm doing to use `SlackTextViewController` into app.
1. I've installed `SlackTextViewController` through pod.
2. `#import <SlackTextViewController.h>` in a view controller, where I wants to use it.
3. make it parent for the my view controller.
4. added below method
   
   <S_CODE_TOKEN>
5. This isn't working. 

Note, my view controller's init method is getting called, however it never jump into `viewDidLoad` method.

Failed into this method, `- (void)slk_setupViewConstraints`.
",hagile,2015-03-18 06:32:58
142,2015-03-17 12:56:34,"Are you registering a custom subclass of `SLKTextView`? It seems you copy/pasted too much.
I'm talking about this line:
`[self registerClassForTextView:[MessageTextView class]];`
",dzenbot,2015-03-18 06:32:58
142,2015-03-17 12:58:46,"Yes, I’ve registered it, I thought I’ve to do this for customisation, isn’t it? Please correct me if I’m wrong. Thanks.

> On 17-Mar-2015, at 6:26 pm, Ignacio Romero Zurbuchen notifications@github.com wrote:
> 
> Are you registering a custom subclass of SLKTextView? It seems you copy/pasted too much.
> I'm talking about this line:
> [self registerClassForTextView:[MessageTextView class]];
> 
> —
> Reply to this email directly or view it on GitHub https://github.com/slackhq/SlackTextViewController/issues/142#issuecomment-82330860.
",hagile,2015-03-18 06:32:58
142,2015-03-17 13:00:04,"Try not to. Perhaps there is an issue in your custom class.
",dzenbot,2015-03-18 06:32:58
142,2015-03-17 13:01:13,"There should be no issue as I've added the same class from your demo project ! However I'm going to try it without adding that custom class. Will let you know.
",hagile,2015-03-18 06:32:58
142,2015-03-17 13:03:37,"Checked, problem isn't with those copy/pasted lines! Uncommented them back. 
",hagile,2015-03-18 06:32:58
142,2015-03-17 13:07:11,"Please create a gist, showing your view controller's implementation. I can't help much without seeing some code.
",dzenbot,2015-03-18 06:32:58
142,2015-03-17 13:07:12,"Can you answer to this issue, https://github.com/slackhq/SlackTextViewController/issues/143 ?
",hagile,2015-03-18 06:32:58
142,2015-03-17 13:20:37,"@dzenbot , please check this gist to get an idea on what I'm doing wrong? https://gist.github.com/hagile/87f77b2344165e4904a2
",hagile,2015-03-18 06:32:58
142,2015-03-17 13:25:38,"You are naming your interface `ViewController`, but your implementation is named `ConversationScreenVC`. That's probably the issue.
",dzenbot,2015-03-18 06:32:58
142,2015-03-17 13:28:02,"@dzenbot , hey sorry, that was a bad typo. I don't want to show what exactly the file name is, thought I've changed its name too. 
",hagile,2015-03-18 06:32:58
142,2015-03-17 14:10:17,"@dzenbot , I've tested it in a test project as well, there's no issue with your classes, I think something wrong in my code only! Any idea? I've tried with a plain (newly added) view controller as well, but there's still no luck. :( hope to have an answer from you.

P.S. I'm working in XCode 6.1. and target is iOS 8.1. And running on a simulator iPhone5s.
",hagile,2015-03-18 06:32:58
141,2015-03-17 06:16:08,"I've to add a header view for each section which I'll create with SlackTextViewController. It adds header into table, but it inverted because of this line in tableview's method, `cellForRowAtIndexPath`.

`cell.transform = self.tableView.transform;` //I think, this is a nightmare.

How to correct this, so it won't problem with cell and header too?

PS.
This is not working in DEMO!

I'm using this datasource methods to add a header view in table,

`- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section`
`- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section`

[See the screenshot](https://cloud.githubusercontent.com/assets/11436406/6682280/29c449a6-cc9c-11e4-8eb3-a362be1772f2.png).

Thanks!
",hagile,2015-03-17 06:32:24
141,2015-03-17 06:32:24,"Using `inverted` mode helps showing cells from the bottom. You can always disable it.

In this case, you will need to provide custom UIView for the header too. And don't forget to assign the same transform as the tableView:

<S_CODE_TOKEN>
",dzenbot,2015-03-17 06:32:24
141,2015-03-17 06:37:07,"Yes, right, I off the inverted mode now table is always showing me first row. However thanks for the tip for header view. I was able to do it too. But now, I'm taking off inverted mode and will scroll to the last row manually, I think this would be good enough! Your words please?
",hagile,2015-03-17 06:32:24
140,2015-03-16 18:30:56,"I am having an issue with the text input bar. It is being hidden when, with the keyboard hidden, it becomes first responder and it has a ""mention text"" on it (such as '@f').

I've been taking a look at the SLKTextView class, and I am pretty sure that it is a thing related to the moment when `[self refreshFirstResponder]` is called. 

I managed to avoid that in two ways, but I really don't like any of them:
- Disabling the  prediction by code on the SLKTextView.
- Always showing the prediction on it.

Here you have a gif of the problem I am having:

![](https://s3.amazonaws.com/f.cl.ly/items/143I390K1p432k1u3f3d/bloggif_55071f0f69591.gif)
",poolqf,2015-04-09 21:10:01
140,2015-03-17 12:58:22,"Is your View Controller embeded in a Navigation Controller?
",dzenbot,2015-04-09 21:10:01
140,2015-03-19 17:56:27,"Yes, it is. Does it have any impact?
",poolqf,2015-04-09 21:10:01
140,2015-03-19 17:58:31,"Could you share a gist of your demo implementation?
Also, in what version of the library and iOS are you using?
",dzenbot,2015-04-09 21:10:01
140,2015-03-20 14:03:22,"It is a bit complicated to upload the implementation. I am gonna try to explain the structure.

![](http://cl.ly/image/0Y152S3W1K1c/download/SLK.JPG)

There is a subclass of the SLKtextViewController where the mentions are managed (Table view + mention related methods). A subclass of this subclass is the one in charge of the messages related methods (also its table view).

The navigation controller is attached to the latest VC, the messages one.

SLK v1.4.1, Base SDK 7.1
",poolqf,2015-04-09 21:10:01
140,2015-03-28 19:37:42,"Try upgrading to 1.5
Many fixes have been included since 1.4.1 regarding the right positioning of the text input.
",dzenbot,2015-04-09 21:10:01
140,2015-04-08 19:09:47,"This may be fixed with https://github.com/slackhq/SlackTextViewController/commit/460ce7d0e6eb5c64cbcc1048cc3756a33600f88a
Can you please give it a try and let me know if it's fixed for you as well?
",dzenbot,2015-04-09 21:10:01
140,2015-04-09 21:01:08,"Yes, thanks! Fixed with this commit!
",poolqf,2015-04-09 21:10:01
140,2015-04-09 21:10:01,"great, thanks for the heads up!
",dzenbot,2015-04-09 21:10:01
139,2015-03-16 16:59:41,"I have to use the SlackTextViewController in non-inverted mode due to some design guidelines. 

The problem is that when the keyboard is coming up in non-inverted mode the tableview above gets resized correctly, but the scroll position does not stay at the bottom. This results in the keyboard and the textView covering the content of the bottom of the table view.

The same problem happens when the textView is vertically growing.

The only solution I could think of is this:

<S_CODE_TOKEN>

Not really pretty :( Is there a better way to handle this?
",luzianscherrer,2015-05-14 22:20:48
139,2015-03-17 13:54:31,"I dug a little deeper and found the shouldScrollToBottomAfterKeyboardShows parameter, but it's not really looking good when the scroll animation happens after the keyboard animation. A quick fix for this problem would be to add something like

<S_CODE_TOKEN>

to the slk_willShowOrHideKeyboard: method. That makes the animation look smooth.
",luzianscherrer,2015-05-14 22:20:48
139,2015-03-17 15:00:45,"Yes, I have seen this too.
Non-inverted mode has this side effect: because the content offset of a scrollView doesn't update when the view is resized from the bottom; but the content offset follows the keyboard's posititioning when the view is resized from the top (with inverted mode).
Modifying the content offset (on non-inverted) programatically is a bit clunky, and the animation speed doesn't follow the keyboard's, which makes it even worse.
Is your method `scrollToBottomAnimated:` using `setContentOffset:animated:` or are you using UITableView's APIs to scroll to indexPath? That last approach seems to perform better, but still has some delay.

But you're right, the way to handle this isn't pretty and the end result either.
Still, try using `SLKKeyboardStatusWillShow` instead.
",dzenbot,2015-05-14 22:20:48
139,2015-03-17 15:12:15,"Thanks for getting back to me.

Yes, my `scrollToBottomAnimated:` is using the UITableView's APIs to scroll to indexPath but I cannot really see any difference when using `setContentOffset:animated:`. It seems to be running at the same speed.

I've also tried to do it in `SLKKeyboardStatusWillShow` but that does not work as it is too early.

But please have a look at my other solution above, as this seems to be working fine. It's just a quick hack for my situation, but it would be great if you could integrate something along those lines, probably as an optional feature.
",luzianscherrer,2015-05-14 22:20:48
139,2015-03-17 15:21:16,"Please submit a Pull Request with this fix. The check should also include `shouldScrollToBottomAfterKeyboardShows`.
",dzenbot,2015-05-14 22:20:48
138,2015-03-16 06:07:13,"Is there an in-built way to show chats at left/right position based on users, like in WhatsApp or other messaging apps?

For e.g. If a message will send by the user (who've logged in) will be visible at right, all the other messages will be visible at left side.

Please let me know, if this is inbuilt? Or I've to integrate other 3rd party component with this?
",hagile,2015-03-16 13:36:57
138,2015-03-16 13:35:53,"This is not supported. The library combines features for text composing mainly. You will need to build that UI yourself or add another component for it.
",dzenbot,2015-03-16 13:36:57
138,2015-03-16 13:38:38,"@dzenbot , Hi, thanks for the reply. I've already implemented it by my self. =)
",hagile,2015-03-16 13:36:57
137,2015-03-15 18:40:06,"Would be great to add top constraint (at least) configurable, so that we can set it from subclasses.
e.g. I needed a top constraint of 70: 
[self.view addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@""V:|-70-[scrollView(0@750)][autoCompletionView(0@750)][typingIndicatorView(0)]-0@999-[textInputbar(>=0)]|"" options:0 metrics:nil views:views]];
",rzehan,2016-10-04 01:26:10
137,2015-03-17 16:01:01,"I wonder if that could be achieved using `topLayoutGuide` and `bottomLayoutGuide`, by including them to the view constraints configuration but defaulted to 0.
",dzenbot,2016-10-04 01:26:10
137,2015-04-19 21:16:39,"That could be a clean solution, but in my case I would need the view to be displayed at specific top position, so I don't think topLayoutGuide would help in this case.

Would be great if I could configure the top space in some manner (using a configurable top spaces or some other suggested way).
",rzehan,2016-10-04 01:26:10
137,2015-04-19 23:23:13,"Would be great to understand why you want to do this, and how does this feature apply to others.
",dzenbot,2016-10-04 01:26:10
137,2015-04-19 23:29:13,"In my case, I have a custom navigation bar with dynamic heights and the top constraint of SLKTextViewController cannot changed in this case.
",rzehan,2016-10-04 01:26:10
137,2015-06-09 17:04:46,"Did you sort it out somehow?
",dzenbot,2016-10-04 01:26:10
137,2015-09-08 17:52:53,"@rzehan could you please see if this has been fixed in [v1.7](https://github.com/slackhq/SlackTextViewController/releases/tag/untagged-795eb65f8fd29d8e2aa2)
",dzenbot,2016-10-04 01:26:10
137,2015-10-21 20:45:17,"Just chiming in on this, I have the same problem as @rzehan, and 1.7 did not fix this for me.
I have a custom navigation bar with dynamic heights and SLKTextViewController gets on top of it, and even changing the frame on viewDidLayoutSubviews I still have a few flicks that only changing the constraint to something like: ""[self.view addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@""V:|-70-[scrollView(0@750)][autoCompletionView(0@750)][typingIndicatorView(0)]-0@999-[textInputbar(>=0)]|"" options:0 metrics:nil views:views]];"" fixes it.
",gmogames,2016-10-04 01:26:10
137,2015-10-27 07:04:22,"We solved this by adding a content inset to the table view in didLayoutSubView

<S_CODE_TOKEN>

Don't know if this is a solution for you?
",askeland,2016-10-04 01:26:10
137,2016-04-06 11:44:49,"Thanks @askeland , it worked great for me!
",popei69,2016-10-04 01:26:10
137,2016-10-04 01:26:10,"Closing this for now, since there's a nicer work around.
",dzenbot,2016-10-04 01:26:10
137,2016-10-19 08:37:32,"Sorry for the delay. It works with the latest version. Thanks
",rzehan,2016-10-04 01:26:10
136,2015-03-11 08:07:34,"I'm using a `UITabBarController` with a `UINavigationController` holding a `UITableViewController` as root view controller.   

When I click on the cell and push a subclass of `SLKTextViewController` while set the `hideBottomBarWhenPushed` to yes, the text input bar locate 44 point(excatly the tab bar height) higher than the bottom fo the view and after about 1 second it suddenly go back to the real bottom.  

After research, I found it may be the issue of constraints and tab bar. Input text bar is located relate to the scollview, and it may effected by the bar bar. In  [this post](http://stackoverflow.com/questions/28724255/auto-layout-and-hide-bottom-bar-when-pushed), I found as workaround (_Select your ""Navigation Controller"" and in ""Attribute Inspector"" remove the checkmark from ""Under Bottom Bars""._), but I don't really like that.
",kukushi,2015-04-08 19:09:02
136,2015-03-25 21:58:25,"I'm also seeing a bunch of weird problems putting this in a tab control.  One of which is the textinputbar is pushed down but if you hit the home button and open it back up, it'll render in the correct place but the tab background will be animated sort of oddly.

Once it's there if you open the keyboard, the scroll position of the view isn't correct. 
",solomon23,2015-04-08 19:09:02
136,2015-04-07 14:39:38,"Same problem here: UITabBarController, UINavigationController, the text input is shown under the tab bar. Go to background and back, and it shows up in the correct place. Right now the only workaround I could find is to use

<S_CODE_TOKEN>
",kevinrenskers,2015-04-08 19:09:02
135,2015-03-11 04:31:30,,dzenbot,
134,2015-03-11 04:25:56,"Since this library consists, mainly, of custom UI elements, a great way to test it is by using _Snapshot Test Case_: it takes a configured `UIView` or `CALayer` and uses the `renderInContext:` method to get an image snapshot of its contents. It compares this snapshot to a _reference image_ stored in the source code repository and fails the test if the two images don't match. Differences are visible by using tools like [Kaleidoscope](http://www.kaleidoscopeapp.com/).

**Areas to look at:**
- [x] TextView growing mechanism and guarantee its positioning on top of the keyboard
- [x] Display of text input outlets
- [ ] Auto-correction & edit modes
- [ ] Auto-Correction & Predictive Bar states
- [ ] Undo/Redo & Copy/Cut/Paste custom mechanisms
- [ ] Multiple screen sizes support (iPhone 4, 5, 6, 6+ and iPad)
- [ ] Multiple orientations support (landscape & portrait)
- [ ] External keyboard support (very important once, which also requieres logic tests)
- More TBD

**Tools:**
- [FBSnapshotTestCase](https://github.com/facebook/ios-snapshot-test-case)
- [Specta](https://github.com/specta/specta) & [Expecta](https://github.com/specta/expecta)

**To Install:**
- [x] Install `Expecta+Snapshots`, which provides an Expecta-like API to `FBSnapshotTestCase`.<br>
  `pod 'Expecta+Snapshots', '~> 1.0'`
- [x] Install XCode plugin [Snapshots](https://github.com/orta/snapshots) (via [Alcatraz](http://alcatraz.io/)) to easily compare the success and failure images for any inline failed test in Xcode.

**Process**
- To be able to cover most [iOS fragmentations](http://www.paintcodeapp.com/news/ultimate-guide-to-iphone-resolutions), we are going to run test for multiple devices, OS and orientations.

**Reading Material:**
- http://www.objc.io/issue-15/snapshot-testing.html
",dzenbot,
133,2015-03-05 19:40:48,,nguyenhuy,2015-03-08 14:29:19
132,2015-03-05 11:21:43,"Made it possible to customize the char counter in more details.
- Introduced the concept of `SLKCounterLayoutStyle` for customizing the layout of the char counter. Implemented `SLKCounterLayoutStylePinnedToRightButton` which pins the char counter to the top of the right button but made `SLKCounterLayoutStylePinnedToTop` be the default behavior.
- Made it possible to change the colors used for the normal and limit exceeded state of the char counter.
- Exposed the charCounterLabel to make it easier to use custom fonts.
- Implemented a new `SLKCounterStyle`: `SLKCounterStyleCountdownReversed` which starts at the maxChars value and counts down to 0.
",johannth,2015-03-19 21:09:59
132,2015-03-18 16:43:48,"@dzenbot have you had time to look at this?
",johannth,2015-03-19 21:09:59
132,2015-03-18 22:21:26,"Will do this week. Sorry for the delay ;)
",dzenbot,2015-03-19 21:09:59
131,2015-03-04 11:24:29,"See the title
",Saurman,2015-03-05 01:43:53
131,2015-03-04 11:35:01,"Thanks for the heads up.
It's been fixed in https://github.com/slackhq/SlackTextViewController/pull/130
Will merge soon.
",dzenbot,2015-03-05 01:43:53
130,2015-03-03 11:20:18,"The pull requests implements additional customization hooks:
- Possible to swap out the SLKTextInputbar for a custom subclass.
- Possible to customize the char label colors.
- Possible to setup a different auto-layout system for SLKTextInputbar by replacing `- (void)slk_setupViewContraintsUsingMetrics:(NSDictionary *)metrics views:(NSDictionary *)views`
- Implemented a reversed countdown which starts by showing the max characters allowed and then counts down to zero.

I also renamed slk_limitExceeded to limitExceeded as it is part of the public API and adding the slk_ prefix seemed to break the enabled state of the send button if you exceed the character limit.
Hope this is useful! 
",johannth,2015-03-05 01:44:13
130,2015-03-03 17:25:54,"This is great!
I just have a few questions:

What is the advantage of extending `SLKTextInputbar` and register as a custom class to `SLKTextViewController`? Do you have an example or use case?

How would you thinking to replace `- (void)slk_setupViewContraintsUsingMetrics:(NSDictionary *)metrics views:(NSDictionary *)views` in you custom class? (since it's still private)
",dzenbot,2015-03-05 01:44:13
130,2015-03-04 08:25:02,"The advantage of extending SLKTextInputbar is mostly to be able to sneak into the private internals and change the auto-layout system. As an additional benefit it is also nice to be able to package the configuration of the text input bar in a class separate from the text controller because we have a couple of use cases that have the same input bar but it wouldn't make complete sense to subclass from a parent controller which handled the configuration.

This allows us to change the auto-layout system from:

![img_0140](https://cloud.githubusercontent.com/assets/38626/6480073/3cb4777a-c247-11e4-9a4c-c81daa5df279.PNG)

to:

![img_0141](https://cloud.githubusercontent.com/assets/38626/6480074/3cb47ad6-c247-11e4-8a3e-e26b7b8da83c.PNG)

Regarding the private method it was an easy way to be able to override parts of the auto-layout system (creation of constraints) but it feels pretty brittle now when you point it out it. We could declare it as a public subclass hook or define some kind of block / delegate that allows subclasses / users to override the auto-layout system. Even just making the method public and redefining it to 

<S_CODE_TOKEN>

would make for a slightly more elegant hook. In my opinion it feels slightly weird to delegate the creation of the auto-layout system to some third-object (most likely the owner of the input bar) and I would prefer a stable subclassing hook. What's your thoughts on it?
",johannth,2015-03-05 01:44:13
130,2015-03-05 01:44:13,"Adding a public API to customize the auto-layout system seems too much, specially because the control depends on many of the original constraints to work properly, Internally.

If the main idea is to layout the counter label at the bottom, we could instead expose a flag to configure that easily .

But these other implementations on your PR are definitely good:
- Possible to customize the char label colors.
- Reversed countdown which starts by showing the max characters allowed and then counts down to zero.

I fixed `slk_limitExceeded` bug, thanks.

Want to submit a new PR including only these changes, and perhaps the flag in `SLKTextInputbar` I was mentioning earlier? Something like `displayCounterAtBottom` and default NO?
",dzenbot,2015-03-05 01:44:13
130,2015-03-05 11:23:03,"Thanks for the feedback! I completely agree that this was a brittle approach. I've opened up a new PR #132.
",johannth,2015-03-05 01:44:13
129,2015-03-03 10:06:42,"Added customization hooks to override the char counter colors and the autolayout system.
",johannth,2015-03-03 10:06:50
129,2015-03-03 10:07:45,"Sorry, wasn't quite ready for the PR but Github's tendency to open the PR by default to the original source made me open it up too early. Will open a new PR later today.
",johannth,2015-03-03 10:06:50
129,2015-03-03 11:20:17,":+1:
",dzenbot,2015-03-03 10:06:50
129,2015-03-03 11:20:42,"See #130 
",johannth,2015-03-03 10:06:50
128,2015-02-24 06:21:36,"I'm using SlackTextViewController for a comments view just like Instagram's. I've implemented `tableView:didSelectRowAtIndexPath:` to go to the profile of the user who made the comment. However, if the keyboard is visible and the user tries to tap on a username/cell to go to that user's profile, the keyboard just dismisses. They have to tap again to actually go to the profile.

It would be awesome if there were a setting to disable the singleTapGesture. Happy to take a crack at adding it if it's something you'd want.
",jeffbowen,2015-02-26 22:19:36
128,2015-02-26 20:59:21,"Since `SLKTextViewController` conforms to `UIGestureRecognizerDelegate`, you could simple do:

<S_CODE_TOKEN>
",dzenbot,2015-02-26 22:19:36
128,2015-02-26 22:19:36,"Ah, that works perfectly. Thanks, @dzenbot! Got SlackTextViewController all wired up. It's awesome.
",jeffbowen,2015-02-26 22:19:36
127,2015-02-24 04:23:07,"Default `inverted` property of `SLKTextViewController` to `NO` as with an out-of-the-box install, everything will be mirrored and flipped unless you set `inverted` to `NO` or add the `cell.transform = self.tableView.transform` line to your `tableView:cellForRowAtIndexPath:` method.

Attached an image of what I was seeing. All I'd done was subclass `SLKTextViewController` and add the `[super initWithTableViewStyle:UITableViewStylePlain]` method. Thought something was severely messed up (was why I thought my typo pull request was wrong https://github.com/slackhq/SlackTextViewController/pull/125#issuecomment-75695055).

@dapenggao's comment in #114 also helped me fix the dark shadow by setting `self.window.backgroundColor = [UIColor whiteColor]` in AppDelegate.
",jeffbowen,2015-02-26 21:20:21
127,2015-02-24 04:23:19,"![ios simulator screen shot feb 23 2015 7 59 37 pm](https://cloud.githubusercontent.com/assets/272795/6343230/ccd9295e-bb99-11e4-985e-d8fc1b67a499.png)
",jeffbowen,2015-02-26 21:20:21
127,2015-02-24 04:26:11,"I hear you. I've been thinking a lot to make `inverted` to `NO` as default. The only thing is that people might already be using the library with this default value, but on the other hand, new users might get confused about this. Will think about it. Thanks for the heads-up!
",dzenbot,2015-02-26 21:20:21
127,2015-02-24 04:27:25,"No prob. Excited to get started with this. Looks awesome. Maybe you could remedy this for now by just calling this out in the README earlier on. Thanks!
",jeffbowen,2015-02-26 21:20:21
127,2015-02-26 22:22:09,"Looks great. Should save others time getting started. Thanks!
",jeffbowen,2015-02-26 21:20:21
126,2015-02-24 03:52:53,"Revert previous commit. Method `initWithTableViewStyle` doesn't belong to SLKTextViewController.
",jeffbowen,2015-02-24 03:54:20
126,2015-02-24 03:54:36,"Sounds like my typo fix was actually correct.
",jeffbowen,2015-02-24 03:54:20
126,2015-02-24 03:56:03,":+1: 
",dzenbot,2015-02-24 03:54:20
125,2015-02-24 03:47:28,"The method to init the `UITableView` version of SLKTextViewController is named `initWithTableViewStyle:`, not `initWithStyle:`.
",jeffbowen,2015-02-24 03:48:34
125,2015-02-24 03:50:27,"Whoops. dzenbot, I think I'm wrong actually. Hadn't tested. Will make a pull request to undo.
",jeffbowen,2015-02-24 03:48:34
125,2015-02-24 03:52:46,"You're right about the typo. What is there to test?
",dzenbot,2015-02-24 03:48:34
125,2015-02-24 03:54:04,"Oh really. Okay, never mind then. Just having some trouble getting up and running.
",jeffbowen,2015-02-24 03:48:34
124,2015-02-20 20:59:04,"This PR adds a constructor that takes an existing `UIScrollView` and uses it as the main content view. This allows using arbitrary classes to display your content, not just `UITableView` or `UICollectionView`. My motivation for this was to enable the use of `ASScrollView` from Facebook's [AsyncDisplayKit](http://asyncdisplaykit.org/). This method works well for that purpose and I'm sure has other uses as well. In order to make it as flexible as possible, it does very little with the UIScrollView that isn't absolutely necessary. (It doesn't wire up the delegate which actually might make sense generally speaking, but `ASScrollView` doesn't allow that.)

What I've done here has a minimum impact on the codebase, but I also tried a version that basically makes `scollViewProxy` a strong reference and `tableView`/`collectionView` just reference that. I think that does make sense to, but it ends touching a bit more code than I was comfortable doing a PR for without more testing. 
",eanagel,2015-02-24 04:08:09
124,2015-02-21 01:34:13,"This is great. We were planning to start using `Facebook's AsyncDisplayKit` ourselves. Will review soon.
Thanks!
",dzenbot,2015-02-24 04:08:09
124,2015-02-24 04:14:02,"Merged, and added minor tweaks in 1ff4f06
I need to think about a way to still support this when using Interface Builder, hopefully following the same approach for UITableView & UICollectionView.
",dzenbot,2015-02-24 04:08:09
124,2015-03-03 05:50:06,"Looks great. 
",iamabhiee,2015-02-24 04:08:09
124,2015-03-03 08:04:13,"Spolier: Shameless promotion here

I am actually working on [a responsive messages UI library](https://github.com/nguyenhuy/AsyncMessagesViewController) based on AsyncDisplayKit and SlackTextViewController. It's very young, but since you are considering using ASDK, I hope you will get a thing or two out of it. Cheers :)
",nguyenhuy,2015-02-24 04:08:09
124,2015-03-03 18:30:27,"Hey @nguyenhuy, `AsyncMessagesViewController` looks amazing! You combined the best of both libraries, to build an even better one. Impressive work; very inspiring.
",dzenbot,2015-02-24 04:08:09
124,2015-03-03 19:08:06,"Thank you, @dzenbot :dancer:. There are still many things need to be improved. Please feel free to give feedbacks. 
",nguyenhuy,2015-02-24 04:08:09
124,2015-03-04 02:32:48,"Nice job, @nguyenhuy! Love what you've done with AsyncDisplayKit + SLKTextViewController! Very cools stuff - I' glad you're tackling it!
",eanagel,2015-02-24 04:08:09
124,2015-03-04 07:44:53,"Thanks @eanagel, it wouldn't be possible without your pull request though :+1: 
",nguyenhuy,2015-02-24 04:08:09
123,2015-02-13 23:56:37,"This fixes an issue where the input bar was misaligned when presented in a tab bar controller. 

Great component by the way!
",Adlai-Holler,2015-03-11 04:30:06
123,2015-03-04 18:37:49,"@adly-holler can you please checkout the latest in master, and tell me if that fixes your issue?
",dzenbot,2015-03-11 04:30:06
122,2015-02-12 23:01:39,"Slightly related to #54, when using an image instead of text for the right button, it skews the image because the width is based on the title text. Would you be open to a patch that checks for the presence of an image, and uses the image width instead of the text? 
",ajsharp,2015-09-11 16:12:16
122,2015-03-04 11:39:26,"Definetly. Want to give it a try?
",dzenbot,2015-09-11 16:12:16
122,2015-08-10 06:49:14,"Can you please merge that to the master branch? I would really want that ability to be presented in your library:)
",zigdanis,2015-09-11 16:12:16
121,2015-02-11 14:39:56,"When I know that a certain instance of SlackTextViewController will be used to write longer pieces of text (news posts rather then chat messages) it would be nice to have the textview start off with a bigger version. That looks more inviting then the one single line. 

How can I make this work, or would it require changes in SlackTextViewController?
",kevinrenskers,2015-03-11 04:27:49
121,2015-02-24 04:31:37,"The `numberOfLines` is a dynamic value calculated with `self.contentSize.height/self.font.lineHeight`.
Although, it you have a look at `slk_minimumInputbarHeight`, you could achieve what you're looking for by returning a higher number.
This is a private method tho, so you'll need to fork and extend, and probably fix a few layout issues that will come along (ie: the counter doesn't show up when there is only 1 line of text; the text starts from the top to the bottom, this might look weird so adjusting the `textContainerInset` could look better; etc.)

PS: Sorry for the late response!

![image](https://cloud.githubusercontent.com/assets/590579/6343277/ad32fbb8-bbc4-11e4-8f5c-2d3be7178e71.png)
",dzenbot,2015-03-11 04:27:49
121,2015-03-04 10:10:42,"Alright, can I make a feature request so this would be more natively supported? :)
",kevinrenskers,2015-03-11 04:27:49
121,2015-03-11 04:27:49,"This feature is more of a specific requirement, which makes it not generic enough to be supported natively. I would recommend you to try what I suggested, but beware of rare bugs since things might get a bit messy!
",dzenbot,2015-03-11 04:27:49
120,2015-02-10 10:05:04,"I (and also Saurman) noticed that TextView calculations were incorrect when a NSTextAttachment was inserted into the attributed string. I took a look at Saurman's code he pasted and used that and also some of my own to add a clean implementation of pasting a photo. I also added adding photos from camera and library using the left button, but left it out for this PR since it was a bit overkill. This PR also added the ability to ""send"" an attachment without text while autoHideRightButton == true.
",KattMingMing,2015-05-28 22:48:38
120,2015-02-10 10:07:59,"This is great! Will have a look into this real soon.
Thanks!
",dzenbot,2015-05-28 22:48:38
120,2015-02-10 15:55:32,"No problem! Great library and I hope this is helpful :) 
",KattMingMing,2015-05-28 22:48:38
119,2015-02-01 13:02:07,"1) fixed not building storyboard related target
This target has failed to build, some files was removed from it

2) transformation support
In auto layout environment (specifically on iOS 7) application cannot handle layer transformations correctly for a view that is backed up by constraints. The workaround is having separate container view that aligns inner views using desired constraints. In this case applying custom transform matrixes to this container produces expected results.
",Saurman,2015-02-01 17:10:10
119,2015-02-01 17:10:10,"Thanks for the heads-up about the broken storyboard example. I've fixed that recently, but I didn't push it yet because tab bar usage wasn't working either. Still need to fix that.

About the left transformation support: I think it's a good idea, but it is more of an edge case and it isn't generic enough to be merged. Thanks anyway for the contribution!
",dzenbot,2015-02-01 17:10:10
118,2015-02-01 10:19:06,"I have following flow. Message-like screen (see example), push transition. Upon push transition i can see that inputView gets dismissed while keyboard stays there. As addition to that, UITableview gets resized and goes under the keyboard. When i then pop back to that view - keyboard is visible, input view is under it which is totally wrong. 

I've tried saving keyboard state in `viewWillDisappear` and restore it in `viewWillAppear`, it works but i still that inputView dismissal animation. Any ideas?
",Saurman,2015-08-07 17:37:10
118,2015-02-26 21:00:09,"What version are you using? Did you try with latest in master? Still happening?
",dzenbot,2015-08-07 17:37:10
118,2015-07-14 12:41:36,"Same here. I'm using 1.5.2 the latest version.

In my case, the table view gets resized and goes under the keyboard during edge-swiping. I hope it were not goes under the keyboard and stay as it were. 
",morizotter,2015-08-07 17:37:10
118,2015-07-14 16:25:55,"@morizotter: Can you try out with latest from master?
",dzenbot,2015-08-07 17:37:10
118,2015-07-15 17:13:03,"@dzenbot I tried Messenger-Storyboard Example and it worked well! I have to check my code. 

Thanks!

<img width=""480"" alt=""slack"" src=""https://cloud.githubusercontent.com/assets/536954/8704761/24c12c8a-2b60-11e5-9432-91726eab10b1.png"">
",morizotter,2015-08-07 17:37:10
117,2015-01-28 12:27:35,"Hello, first of all, thx for a great control! Ok, so i have an app and i need to replicate image insertion as per native Messages app (inside textView). I know your control supports image pasting but it doesn't actually paste it in a text box. So i wrote own method that inserts UIImage as NSTextAttachment to a textView. It all works except height is totally wrong. Besides, it is wrong even after text is cleared.

See screenshot:
https://dl.dropboxusercontent.com/u/12388761/iOS%20Simulator%20Screen%20Shot%20Jan%2028%2C%202015%2C%202.23.51%20PM.png
",Saurman,2015-05-14 22:20:29
117,2015-01-28 16:37:07,"This is very interesting!
My guess is that, the line count calculation is off, because of the attachment's height, causing the rest of calculations to be wrong.

Take a look at `numberOfLines` getter method, in `SLKTextView`.

The library doesn't consider NSAttributedString at this moment either, so I guess there are a few things not working because of that too.

Can you please point me out to your implementation of this, to better understand the issue.
",dzenbot,2015-05-14 22:20:29
117,2015-01-29 12:09:18,"Sure, i wrote a SLKTextView category which has following method:

<S_CODE_TOKEN>

So it calls `setAttributedText` which u override btw. I guess thats where the measurements should take place
",Saurman,2015-05-14 22:20:29
117,2015-01-29 12:35:43,"I've overridden following method in my subclass of `SLKTextViewController`. This returns correct height with image attachments. Note, i am not using edit mode so it might look a bit different in case you will decide to support images while editing

<S_CODE_TOKEN>

Another category method

<S_CODE_TOKEN>
",Saurman,2015-05-14 22:20:29
116,2015-01-26 04:09:03,"Ran into some issues when using this in a form sheet modal on an iPad, so I set out to address those problems, and ran into an external keyboard detection issue. Believe I solved the issue for iOS 7 and 8. They were different because iOS 8 started rotating the UIWindow coordinate system properly for us. The other big thing was not using `self.view` because it may be smaller than the screen size, which screws up the external keyboard detection stuff. Using the root view controller view, which is required to be full screen.

I still need to address the content inset when a keyboard is showing on iOS 7. Guessing it's related to a similar coordinate system issue, but not sure yet. I added a target for testing this.
",sprynmr,2015-03-04 18:13:08
116,2015-01-26 04:33:41,"Awesome work :+1:
",dzenbot,2015-03-04 18:13:08
115,2015-01-23 13:06:29,"Fixed documentation error.
",dpgao,2015-01-25 18:50:28
114,2015-01-23 04:34:41,"My app has the same problem as described in [this stack overflow question](http://stackoverflow.com/questions/22413193/dark-shadow-on-navigation-bar-during-segue-transition-after-upgrading-to-xcode-5). There is temporarily a dark shadow on the navigation bar during the segue. However, I cannot reproduce the problem elsewhere. What might be the cause for such problem?
",dpgao,2015-01-23 12:57:59
114,2015-01-23 04:40:12,"Which version of this library are you using?
Try installing the latest from master, and let me know.
",dzenbot,2015-01-23 12:57:59
114,2015-01-23 04:45:26,"Thanks in advance. I installed the latest version and the dark shadow is still there. 
",dpgao,2015-01-23 12:57:59
114,2015-01-23 04:52:53,"Did you try installing the latest master? Not the latest tag version.
",dzenbot,2015-01-23 12:57:59
114,2015-01-23 04:55:58,"I clicked the ""download zip"" button on the right side of the page, and it is the latest master. 
",dpgao,2015-01-23 12:57:59
114,2015-01-23 05:07:45,"I have the bottom bar set to be hidden when the view controller is pushed. The curious thing is that when I set it to be NOT hidden, the dark shadow stops to appear, but then the input bar will be UNDER the tab bar. 
",dpgao,2015-01-23 12:57:59
114,2015-01-23 12:57:00,"This was actually already answered in #39. I have to change the background color of UIWindow to white in AppDelegate. 

<S_CODE_TOKEN>
",dpgao,2015-01-23 12:57:59
113,2015-01-23 03:34:22,"<S_CODE_TOKEN>

so, in file `SLKTextView.m`  line 451 insert function

<S_CODE_TOKEN>
",khan-lau,2015-03-04 11:42:00
113,2015-01-23 03:36:22,"test env  iOS 8.1 iPhone5
",khan-lau,2015-03-04 11:42:00
113,2015-01-23 03:52:38,"What do you mean by ""invalid""?
",dzenbot,2015-03-04 11:42:00
113,2015-03-04 11:42:00,"This has now been removed. It was causing too many edge case issues regarding text deletion.
",dzenbot,2015-03-04 11:42:00
112,2015-01-23 02:24:12,"Hi @dzenbot
    I found that when I dynamicly change the placeholder for SLKTextView, the size for the placeholderLabel remain still. For example, I set ""匿名评论"" as the placeholder in viewDidLoad, but when I click a table cell, the placeholder would be changed to ""回复威震天"". Then the textLabel would not be large enough to contain the five characters, since there are only four at first. 
![image](https://cloud.githubusercontent.com/assets/5186464/5868968/9196dc26-a2ec-11e4-92e7-1ab00578a908.png)

This code can fix it:
![image](https://cloud.githubusercontent.com/assets/5186464/5868807/d814a8d4-a2e9-11e4-8643-8ecde503e890.png)

So do you think it is necessary to resize the label in both setPlaceholder and setFont which could both cause this kind of issue? 
",WenchaoD,2015-01-23 03:52:54
112,2015-01-23 03:53:27,"Calling `setNeedsLayout` is better, and fixes your issue. Thanks for reporting ;)
",dzenbot,2015-01-23 03:52:54
111,2015-01-22 19:31:23,"Sorry if opening an issue isn't the right thing to do here, wasn't sure how else to ask a question. What are the reasons to prefer `UICollectionView` over `UITableView`? It seems like you're trying to move towards `UICollectionView`. Is it just for the possibility of having a non-vertical-message-list layout? 
",chug2k,2015-01-22 20:19:09
111,2015-01-22 20:19:09,"The reason behind `UICollectionView` support is mainly to replace, someday soon, the hacky `inverted` mode when using `UITableView` to show messages from the bottom to the top.
There is a branch called `swift-example` with a custom `UICollectionViewLayout` trying to achieve this this, but it's still rusty and far from being ready to merge into master.

As for now, the best option is still using `UITableView` for traditional message app layout. I how many people as used the `UICollectionView` version so far, and why would they. Might be interesting tho know tho.

I hope this answers your question. And YES, this is the right place to ask this sorts of things ;)
",dzenbot,2015-01-22 20:19:09
111,2015-01-22 20:21:33,"thanks! i did see that inverted thing (and discussion about it in HN). thanks again for answering my question! 
",chug2k,2015-01-22 20:19:09
110,2015-01-22 17:17:10,"The documentation states that `acceptAutoCompletionWithString:` 

> ""...replaces the detected key and word with a new string.""

I'm not seeing this behavior, and when I call this method, my prefix key remains. For instance, when I type ""**@kev**"", and select _Kevin_ in the `autoCompletionView`, the result in my text view is: ""**@Kevin**. I would expect to see just **""Kevin""**.

Interestingly, if I look at the `acceptAuto...` [implementation](https://github.com/slackhq/SlackTextViewController/blob/master/Source/Classes/SLKTextViewController.m#L1456), `range` is deliberately calculated one index after the location of `self.foundPrefixRange`:

<S_CODE_TOKEN>

I can adjust this range to get the behavior described in the docs thusly:

<S_CODE_TOKEN>

However, I suspect I shouldn't need to do that. Am I missing something? Thanks in advance.
",KevinVitale,2015-01-23 03:52:54
110,2015-01-22 20:26:43,"Yes, sorry about that, the documentation is outdated! The current implementation only replaces the detected word, not the symbol.

I think it makes sense to have something like this instead:
`- (void)acceptAutoCompletionWithString:(NSString *)string keepPrefix:(BOOL)keepPrefix`

So the preservation of the prefix is optional.
",dzenbot,2015-01-23 03:52:54
110,2015-01-23 03:54:39,"This honors the outdated documentation. I've added support for prefixes longer than 1 letter too.
Thanks for the heads-up!
",dzenbot,2015-01-23 03:52:54
110,2015-01-23 04:40:55,"Wow. Thanks so much! Really appreciated.
",KevinVitale,2015-01-23 03:52:54
109,2015-01-22 13:21:00,"In solving for #107 
",dpgao,2015-01-22 13:29:44
109,2015-01-22 14:35:40,"Thanks a lot for this! I have inspired from your idea, but with a different approach, using more dynamic values instead. Everything is working great now regarding that issue, plus it solves showing content below the translucent bars too :+1: 
",dzenbot,2015-01-22 13:29:44
108,2015-01-21 16:00:53,"fix placeholder-not-hidden problem while
textInputBar.autoHideRightButton = false
",WenchaoD,2015-01-21 16:02:17
108,2015-01-21 16:02:28,":+1: 
",dzenbot,2015-01-21 16:02:17
107,2015-01-21 12:21:20,"I subclassed SlackTextViewController to create my own UITableView, but found that the table view was not extended under the top navigation bar. The user interface inspector in Xcode also confirms this. 
![screen shot 2015-01-21 at 8 19 25 pm](https://cloud.githubusercontent.com/assets/9143914/5836052/d8d5420a-a1aa-11e4-86ab-b6d98f10d41c.png)
I wonder how I can make the UITableView's edges extend under the navigation bar, so that the content on the tableview can appear through the translucent bar. 

Edit: After examining the code, I found that the problem lies in this method

<S_CODE_TOKEN>

If the inverted property is set to YES, the edgesForExtendedLayout property is automatically set to UIRectEdgeNone. If I removed this line the table view will shift upward. 
",dpgao,2015-01-22 14:34:01
106,2015-01-21 12:00:21,"When the inverted is false and the content is shorter than the height of the screen, the scroll offset is set so that it aligns with the bottom, leaving empty space on the top.
Whilst this is desired behaviour on an inverted view, where content should start at the bottom, this seems undesired otherwise.
",krzd,2015-01-22 14:34:01
105,2015-01-21 07:02:54,"There is another problem when I set autoHideRightButton = false in swift-example after issue #103 
![image](https://cloud.githubusercontent.com/assets/5186464/5832191/ea1d1a3a-a17b-11e4-8df3-89bf2d10a2e2.png)
![image](https://cloud.githubusercontent.com/assets/5186464/5832192/ea54adf6-a17b-11e4-9651-51268ce15b9d.png)
",WenchaoD,2015-01-21 16:03:25
105,2015-01-21 16:02:42,"A new clean PR #108 
",WenchaoD,2015-01-21 16:03:25
105,2015-01-21 16:03:25,"Great. Thanks!
",dzenbot,2015-01-21 16:03:25
104,2015-01-21 06:57:10,"Fix placeholder-not-hidden problem when the textInputBar.autoHideRightButton = false
",WenchaoD,2015-01-21 07:07:13
104,2015-01-21 07:07:13,"I can't merge this PR. It contains too many changes, including another branch merged in.
Please submit a new clean PR, including only the fix. Thanks!
",dzenbot,2015-01-21 07:07:13
103,2015-01-21 04:56:24,"The issue regarding bad rendering when using unicode characters (such as Chinese, Japanese, etc.) was caused by bad usage of `drawRect:`. Now, the `SLKTextView`'s placeholder layout is being configured in `layoutSubviews`.
",dzenbot,2015-01-21 04:56:38
102,2015-01-21 00:30:58,"Change the placeholder rendering method from using an extra label to
drawing a attributed text in drawRect
",WenchaoD,2015-01-21 04:56:39
102,2015-01-21 02:21:45,"Thanks! I'll take a look soon.
",dzenbot,2015-01-21 04:56:39
102,2015-01-21 04:33:07,"In fact, only drawing an attributed string in drawRect is not good. The reason why it's important to keep the extra UILabel is because the textView is animated (most of the time), and simply drawing the placeholder removes the animation capacity of the placeholder. This causes the placeholder to shrink or to extend, animatedly.

I have tested the latest from master, using the sample project. Setting Chinese text on the placeholder seems fine. Did you tested it?

![image](https://cloud.githubusercontent.com/assets/590579/5831275/cdaa878e-a10d-11e4-8117-45f90ae3aa64.png)
",dzenbot,2015-01-21 04:56:39
102,2015-01-21 04:36:08,"Sorry, I just realized it works under iOS7, but not iOS8. Weird.
",dzenbot,2015-01-21 04:56:39
102,2015-01-21 04:57:01,"I've tested it in iphone5 simulator 8.1, I commented the code in the swift sample project, and it seems fine  too. I haven't thought about the animation problem  
",WenchaoD,2015-01-21 04:56:39
102,2015-01-21 04:57:20,"Problem solved. Take a look at #103
Thanks for the help!
",dzenbot,2015-01-21 04:56:39
101,2015-01-20 16:06:29,"Hi, there

  I found that the placeholder for the SLKTextView instance can not be shown exactly, such as ""匿名评论"", there are just some black imprinting.This is the SlackTextViewController swipe example.I just change the ""message"" placeholder to ""匿名评论"", which caused this problem

![image](https://cloud.githubusercontent.com/assets/5186464/5820634/2fad078e-a101-11e4-8405-579552307c8c.png)
",WenchaoD,2015-01-21 04:56:39
101,2015-01-20 16:25:25,"Similar than #48
Try changing the font.
",dzenbot,2015-01-21 04:56:39
101,2015-01-20 16:36:38,"OK, change font fix the problem.
I also have a test that removing all placeholderLabel instance and all instances relative to it, and make SLKTextView extends SAMTextView (https://github.com/soffes/SAMTextView). It also could work fine without changing the font. U think there is any problem rendering placeholder like SAMTextView?
",WenchaoD,2015-01-21 04:56:39
101,2015-01-20 17:25:28,"Using NSAttributedString is not so convenient when you only need to change the text and color in this case.
Since others are already using `SLKTextView`'s placeholder in their implementation without any problems, I would leave the public header as is (only exposing `NSString *placeholder` and `UIColor *placeholderColor` ); but would change some things internally using NSAttributedString, like `SAMTextView` does. That should fix issues with unicode.
Want to give it a try and submit a PR?
",dzenbot,2015-01-21 04:56:39
101,2015-01-20 22:52:23,"I'll give it a shot today
",WenchaoD,2015-01-21 04:56:39
101,2015-01-21 02:21:07,"done
https://github.com/slackhq/SlackTextViewController/pull/102
",WenchaoD,2015-01-21 04:56:39
100,2015-01-19 11:08:25,"i think problem in UITextInputTraits private function that you override (keyboardInputShouldDelete - not safe) 
",populius,2015-01-20 04:42:55
100,2015-01-20 04:45:29,"You were right: calling `keyboardInputShouldDelete:` was intercepting the delegate method. Thank you for reporting.

This is indeed a private method, necessary to be able to reliably detect when the backspace is hit. I will know if this is safe soon.
",dzenbot,2015-01-20 04:42:55
99,2015-01-19 09:17:48,"My container view controller use case was broken from v1.4.1. 

This fixes the use case, but might break other cases. Please review it. :pray: 
",ikesyo,2015-03-17 06:54:41
99,2015-01-22 14:37:13,"Will have a look soon. Sorry for the delay!
",dzenbot,2015-03-17 06:54:41
99,2015-01-22 14:38:32,"Although, simply using `window.bounds` wouldn't solve the issue regarding iOS7, where the coordinate system does not update when rotating the device...
",dzenbot,2015-03-17 06:54:41
99,2015-01-26 04:09:55,"I believe I will be fixing this shortly with my iPad modal fix.
",sprynmr,2015-03-17 06:54:41
99,2015-03-04 18:37:33,"@ikesyo can you please checkout the latest in master, and tell me if that fixes your issue?
",dzenbot,2015-03-17 06:54:41
99,2015-03-06 06:11:48,"@dzenbot @sprynmr I confirmed the behavior with its latest release (v1.5), but it is still broken for our use case.

1st image: Keyboard is hidden, and the area inside the red square is a container view controller.

![keyboard_is_hidden](https://cloud.githubusercontent.com/assets/909674/6520953/54c46c18-c412-11e4-875f-e76736d8738e.png)

2nd image: Keyboard is shown, but text input bar is under the keyboard.

![keyboard_is_shown](https://cloud.githubusercontent.com/assets/909674/6520954/54cf1fdc-c412-11e4-83ff-1d8c22cfdc53.png)
",ikesyo,2015-03-17 06:54:41
99,2015-03-06 06:22:13,"If I comment out [this line](https://github.com/slackhq/SlackTextViewController/blob/e3e5b4a13b8b9a52a499a05f3c52e447f73b8af5/Source/Classes/SLKTextViewController.m#L526), it works.
",ikesyo,2015-03-17 06:54:41
99,2015-03-06 06:45:07,"Additional info: I confirmed the behaviors both in iOS 7 and iOS 8.
",ikesyo,2015-03-17 06:54:41
99,2015-03-06 12:58:52,"I'll take a look. 

Bob Spryn
Thumb Works

On Thu, Mar 5, 2015 at 10:45 PM -0800, ""Syo Ikeda"" notifications@github.com wrote:

Additional info: I confirmed the behaviors both in iOS 7 and iOS 8.

—
Reply to this email directly or view it on GitHub.
",sprynmr,2015-03-17 06:54:41
98,2015-01-17 02:37:57,,dzenbot,2015-01-20 04:42:55
97,2015-01-16 12:13:18,"![skjermbilde 2015-01-16 kl 13 14 06](https://cloud.githubusercontent.com/assets/1769314/5775973/978d805a-9d81-11e4-8fab-4e1d9466499f.png)

One of my eminent colleges found the reason for this

![image](https://cloud.githubusercontent.com/assets/1769314/5775952/4383b48e-9d81-11e4-9bf3-8fcf4c7e46e4.png)

So locally, we have fixed this for now, by doing this:

![image](https://cloud.githubusercontent.com/assets/1769314/5775966/6b7be70e-9d81-11e4-94cf-17483daccda0.png)
",heumn,2015-01-16 17:14:59
97,2015-01-16 17:15:08,"Thanks for reporting this!

PS: That's a very nice looking UI bw
",dzenbot,2015-01-16 17:14:59
97,2015-01-16 18:46:57,"You are most welcome @dzenbot. You guys are awesome. Not only is Slack a stellar app (every damn company I work with use it and love it), this controller is also a gem. Thank you so much!
",heumn,2015-01-16 17:14:59
97,2015-01-16 18:50:14,"Do not tell anyone, but that was a sneak peek of the Wake http://wake.io/ iOS application :)
",heumn,2015-01-16 17:14:59
97,2015-01-17 02:11:48,"Looks great! I love dark styles.
",dzenbot,2015-01-16 17:14:59
96,2015-01-16 01:13:43,"The ReadMe and examples don't cover the didPasteMediaContent method. A little bit of exposition about how to handle the dictionary, or some sample code, would help eliminate the need for trial an error.
",fran-sgd,2015-01-16 05:55:15
96,2015-01-16 01:14:22,":+1: Fair point! Will add one soon.
",dzenbot,2015-01-16 05:55:15
96,2015-01-16 14:40:20,"Wow! Talk about fast service! 👏

Thanks, that shows how it works quite well, and certainly saves us lazy coders a bit of work!  
",fran-sgd,2015-01-16 05:55:15
96,2015-01-16 16:50:07,"I'm glad it helps!
",dzenbot,2015-01-16 05:55:15
95,2015-01-15 10:49:25,"It only works with blank storyboard view controller (as in example).
However I have some UI components connected with code. They become broken if using ""Storyboard"" init approach of SLKTextViewController.
",4ndrey,2015-01-16 07:26:39
95,2015-01-15 12:37:11,"Subviews and constraints of SLKTextViewController are added programatically. That is the main reason why it only needs an empty representation in Storyboards. If you need to add more subviews, you'll need to do this by code.
",dzenbot,2015-01-16 07:26:39
95,2015-01-16 07:26:39,"Ok, got it. Thanks!
",4ndrey,2015-01-16 07:26:39
94,2015-01-14 14:46:50,"When you set clearColor to uitableviewcell, adding rows causes them to blink.

You can test this in the Example project:

add following line to MessageViewController.m:390

<S_CODE_TOKEN>
",Pacek,2015-01-14 17:23:06
94,2015-01-14 15:02:22,"When you remove cell.transform ""cell.transform = self.tableView.transform;"", problem goes away but cells are inverted :) That sucks
",Pacek,2015-01-14 17:23:06
94,2015-01-14 15:11:57,"When you remove the insertRowsAtIndexPaths and use simple reloadData, it works, but it's ugly since it's not animating.
",Pacek,2015-01-14 17:23:06
94,2015-01-14 15:51:58,"Besides removing cell.transform, you must set `self.inverted = NO;` so the tableView isn't inverted anymore. This is done basically to show cells from the bottom. Check the documentation for more info.

I'll try this out, and let you know how it goes.
",dzenbot,2015-01-14 17:23:06
94,2015-01-14 16:22:49,"For a moment I though this was reproducible, but then realized it just starts happening after inserting 3 rows. From that on, it blinks, not only the inserted row, but the other rows too, randomly.
This seems to be a CoreGraphics bug.
",dzenbot,2015-01-14 17:23:06
94,2015-01-14 16:29:49,"Ok, so I tried many things to diagnose the bug, and couldn't find an obvious reason.
After looking for an answer I ended up here: http://stackoverflow.com/questions/22007867/why-does-uitableviewcell-flash-on-changing-height

If the height of the cell is static, the issue doesn't happen anymore.
So I tried a few of the suggestions, and adding `[self.tableView reloadRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationAutomatic];` right after `[self.tableView endUpdates];`, solves the issue (at least in the sample project).

Give it a try and let me know. It seems a bit hacky, but yo, it works ;)
",dzenbot,2015-01-14 17:23:06
94,2015-01-15 15:54:46,"Thanks a lot, it works :) 
",Pacek,2015-01-14 17:23:06
94,2015-03-06 10:30:10,"The only problem is by updating the first row only, rows bellow are not updated (obvious). So if you do a long press on any of the newly added cell, it will always give you the latest inserted cell text to modify. I propose this solution, it wait until new inserted cell has been added to update the whole table: 

<S_CODE_TOKEN>

Other solution might exist, like changing how gesture recognizer is added to a cell, but I didn't figure out how. 
",aessig,2015-01-14 17:23:06
94,2015-03-20 12:02:31,"When the transform is done in cell -(void) layoutSubviews its solving this issue.  When more than one type of cell is used in the table your solution wasn't working it was flickering when the keyboard came up and went down. 
",davidrevmakx,2015-01-14 17:23:06
93,2015-01-13 15:22:55,"Hi there! I really like this lib, but when you bump new version to cocoapods?
",andr-ggn,2015-01-14 06:16:52
93,2015-01-14 06:16:52,"Done!
`pod 'SlackTextViewController', '1.4.1'`

[Take a look at the backlog too](https://github.com/slackhq/SlackTextViewController/releases/tag/v1.4.1)
",dzenbot,2015-01-14 06:16:52
92,2015-01-13 04:57:54,"Hello. I would like to run an example. At first, I ran `pod install` to set up the library. but I couldn't make it with the following error.
- `SlackTextViewController (from`../../SlackTextViewController.podspec`)` required by `Podfile`
- `SlackTextViewController (= 1.3.3)` required by `Podfile.lock`

How can I solve the problem?
",fullc0de,2015-01-14 13:37:02
92,2015-01-13 05:00:29,"Are you trying to run the sample project? Or your own test project?
",dzenbot,2015-01-14 13:37:02
92,2015-01-13 08:40:59,"@dzenbot I went to `SlackTextViewController/Examples/Messenger` directory and ran cocoapods with `pod install`. I also didn't make my own example. Is there any step I missed?
",fullc0de,2015-01-14 13:37:02
92,2015-01-13 15:18:46,"You shouldn't need to run `pod install`. Pod files are versioned already.
It seems the podspec file isn't located where it should.
Try download the project again.

If it still doesn't work, try installing the pod directly from remote, updating the pod file with `pod 'SlackTextViewController', '1.4'`
",dzenbot,2015-01-14 13:37:02
92,2015-01-14 12:39:35,"@dzenbot Sorry. I am too late to let you know a result. I tried to edit Podfile according to your advice and ended up making it. Thank you. 
",fullc0de,2015-01-14 13:37:02
92,2015-01-14 13:37:02,":+1: 
",dzenbot,2015-01-14 13:37:02
91,2015-01-12 03:12:46,"...to enable additional customization.
",newyorkpizza,2015-01-20 06:02:52
91,2015-01-16 18:50:02,"I will at this very soon. Sorry for the delay.
",dzenbot,2015-01-20 06:02:52
91,2015-01-20 06:03:27,"Thanks a lot for this addition! ;)
",dzenbot,2015-01-20 06:02:52
90,2015-01-11 12:43:08,"I’m trying to use https://github.com/slackhq/SlackTextViewController/ in a RubyMotion app, my controller overrides the init method with the following to use the table version:

<S_CODE_TOKEN>

 But as soon as the controller is pushed, the app crashes with the following, using rake debug=1:

<S_CODE_TOKEN>

The class SLKTypingIndicatorView at line 88 is:

<S_CODE_TOKEN>

Do you have any idea what it could be?
",chrise86,2015-01-15 12:40:15
90,2015-01-12 16:29:39,"Sorry, I wouldn't know. We don't use RubyMotion ourselves.
This is not an issue while compiling natively.

All those `_cmd=<unavailable>` messages are a bit scary. I wonder what they are about.
Also this `self=<unavailable>`

I wonder if it's a RubyMotion incompatibility.
Have you found any workarounds?
",dzenbot,2015-01-15 12:40:15
90,2015-01-16 18:42:34,"Haven't found anything :( had to give up given my current timeframe for what I'm doing :-/
",chrise86,2015-01-15 12:40:15
90,2015-02-25 10:15:58,"I ran into the same issue and found that when using the sugarcube gem in your Rubymotion app there is a problem with [UILable new] pre version 3.3.1 - see also https://github.com/rubymotion/sugarcube/issues/172. Upgrading the sugarcube gem to 3.3.1 fixes this.
",cbx,2015-01-15 12:40:15
90,2015-05-11 14:22:38,"Hey @chrise86 could you please share some bits regarding how to start playing with such integration? 

I just installed the `SlackTextViewController` using motion-cocoapods, but I just can't figure out how to actually go and load the controller. 

Thanks!
",dgilperez,2015-01-15 12:40:15
90,2015-05-13 07:03:44,"@dgilperez I pretty much just took the example here and converted to RubyMotion syntax
",chrise86,2015-01-15 12:40:15
90,2015-05-14 18:33:12,"@chrise86 thanks! I happen to have some problem compiling / linking the library with Xcode 5.1.1, but 6.0 seems to be OK.
",dgilperez,2015-01-15 12:40:15
89,2015-01-09 03:51:43,"![image1](https://cloud.githubusercontent.com/assets/8051383/5675300/c102e456-9788-11e4-98cf-11e9f9066cb8.PNG)

You can probably see what I'm talking about. I set the cell back ground to gray for reference, but when scrolled down there is a space between the text input and the cell. What could I do to fix this?
",Steven4294,2015-09-11 16:11:44
89,2015-01-09 03:55:18,"I'll be happy to help, but please share a gist of your subclass implementation.
",dzenbot,2015-09-11 16:11:44
89,2015-01-09 04:03:41,"<S_CODE_TOKEN>
",Steven4294,2015-09-11 16:11:44
89,2015-01-09 04:06:01,"That portion of code doesn't tell anything about your configuration of the `SLKTextViewController` Subclass.
",dzenbot,2015-09-11 16:11:44
89,2015-01-09 04:07:53,"I think this issue has to do with the fact that I'm also using another library which sets a sliding view controller as my root VC (TTScrollslider). It seems to have gotten rid of the navigation bar, and just replaced it with some other view. 

I feel this may be very complicated to fix, and its not an issue for the library at large, and is just a matter of finding some hack solution that suits my needs. However, I can't really think of anything at the moment that could be a quick fix. Let me know what you think!
",Steven4294,2015-09-11 16:11:44
89,2015-01-09 04:16:10,"Try setting this to your view controller:
`self.edgesForExtendedLayout = UIRectEdgeNone`
",dzenbot,2015-09-11 16:11:44
89,2015-01-09 18:53:25,"@dzenbot Unfortunately that didn't work.
",Steven4294,2015-09-11 16:11:44
89,2015-01-14 13:39:19,"Did you manage to solve it?
",dzenbot,2015-09-11 16:11:44
89,2015-01-14 18:38:54,"@dzenbot  No I was never able to figure it out. I tried the edgesForExtendedLayout, but that did not work
",Steven4294,2015-09-11 16:11:44
89,2015-01-20 05:30:14,"Which mode are you using for `inverted`? Is it enabled or disabled?
",dzenbot,2015-09-11 16:11:44
89,2015-09-11 16:11:44,"Closing this issue, since it's been a long time and since then, many things have changed.
Let's re-open it if it's still an issue in `1.7`
",dzenbot,2015-09-11 16:11:44
88,2015-01-06 15:45:09,"When I try to run the example project, using Swift, the only thing that shows up is the input bar. When inspecting the UI there isn't a table added. Is that happening to you? If so, I'd like to help track down the issue. Know anything worth pointing out?
",mcgraw,2015-01-06 16:36:48
88,2015-01-06 15:56:23,"Did you try the [swift-example](https://github.com/slackhq/SlackTextViewController/tree/swift-example) branch yet?

It's still incomplete. I have been wanting to continue working on it but I haven't had the time.
That example basically uses UICollectionView to display cells from the bottom to the top, using a _yet-not-finished_ custom UICollectionViewLayout.

Give it a test run please, and let me know what do you think.
Would really appreciate any contributions on this one!
",dzenbot,2015-01-06 16:36:48
88,2015-01-06 16:15:17,"Right on. I didn't see that! 

Tried it out and ran into the issue that I had with the collection view in my project (just using a basic flow layout).  For some reason it doesn't get initialized so we crash out in viewDidLoad. It's not immediately clear where in the the path it is failing.

Comment out those two lines in viewDidLoad and there is an interesting situation when it all loads (2 table views): 

![screen shot 2015-01-06 at 10 09 55 am](https://cloud.githubusercontent.com/assets/316090/5631442/38c88026-958c-11e4-90d1-dccac99ca756.png)

I'll try to dig into this more here in a bit.
",mcgraw,2015-01-06 16:36:48
88,2015-01-06 16:33:01,"There was a bug, when using storyboards and initializing the library with a UICollectionView. It's now fixed in https://github.com/slackhq/SlackTextViewController/commit/d468ef6

Pushing this now to the `swift-example` branch too, so you can keep going ;)
",dzenbot,2015-01-06 16:36:48
88,2015-01-06 16:36:48,"Now everything works fine, for the swift example
",dzenbot,2015-01-06 16:36:48
88,2015-01-06 16:37:42,"Excellent!
",mcgraw,2015-01-06 16:36:48
87,2015-01-05 23:59:42,"Hi there.  I encountered a problem that reproduces in the Messenger.xcodeproj sample project and the Slack app (as well as my own app).  

The repro steps are:
1.  Launch the Messenger.xcodeproj project in the iPhone 6 / iOS 8.1 simulator
2.  Add some text and create a couple messages
3.  Touch the message bar to display the keyboard
4.  Touch and pan within the scroll view to initiate a pan-to-dismiss gesture for the keyboard
5.  Continue panning down until finger/mouse is on the message bar

The problem occurs when the touch point moves from the scroll view to the message bar, and the result is an abrupt scroll/bounce in the scroll view.
![repro](https://cloud.githubusercontent.com/assets/3837849/5698944/ab3b16d6-99cf-11e4-8186-c3016e63e46c.gif)

This problem also reproduces in the Slack app on iPhone 6 / iOS 8.1.

For comparison, during a pan-to-dismiss-keyboard, the native Messages app keeps the scroll view's content anchored to the top of the screen, and seems to increase the size of the scroll view as the user pans down.

Thanks for your consideration of this issue.
",newyorkpizza,2015-01-12 17:27:20
87,2015-01-12 04:25:52,"@dzenbot Do you have any thoughts on what might be causing the abrupt movement of the content?
",newyorkpizza,2015-01-12 17:27:20
87,2015-01-12 17:26:25,"What is happening:
- when dragging the scrollView and reaching the translucent accessoryView (aka `emptyInputAccessoryView`), a notification is fired at every change of the keyboard frame.
- that notification is handled with `didChangeKeyboardFrame:` method. In there, the keyboard and scrollView height constraints constant are updated.
- at the same time, we keep the latest offset of the scrollView before the keyboard starts to move, using `_draggingOffset`, overriding the scrollView's `contentOffset` at each notification, so we keep the same offset position while scrolling (if you uncomment the `contentOffset` setter there, you will notice how the scrollView keeps scrolling while moving down and up).

Since you reported, I've been running a few experiments, and I have fixed it!
Calling `layoutIfNeeded` after the `contentOffset` overriding, was resetting the `contentOffset` value for some reason. I have also improved a little bit the calculations, cleaning some code, and it now works great, for both, inverted and non-inverted mode.

Thanks for reporting it, and sorry for the late answer.
",dzenbot,2015-01-12 17:27:20
87,2015-01-23 00:14:20,"@dzenbot Thanks, that did the trick! 
",newyorkpizza,2015-01-12 17:27:20
86,2014-12-29 15:12:26,"I am trying to add custom section headers to tableView 

My class 

<S_CODE_TOKEN>

<S_CODE_TOKEN>

<S_CODE_TOKEN>

As a result  tableView:viewForHeaderInSection: never get called. Do you have any ideas why it can happen?
",andreyslyusar,2015-01-09 09:32:26
86,2015-01-05 15:41:42,"I tried it with the sample project, and `viewForHeaderInSection:` is successfully called.
Probably best to share a gist of all your implementation to see what's wrong.

Are you using `inverted = true`?
",dzenbot,2015-01-09 09:32:26
86,2015-01-09 09:32:26,"Ignacio, thanks a lot for your time. It was my mistake in resetting delegate method by other controller. 
",andreyslyusar,2015-01-09 09:32:26
85,2014-12-25 18:11:08,"when i clicking the send button it's showing the last but one cell when content size is greater.
this occurs only when inverted is disabled. 

i tried to find the issue but, i didn't get..  

here is my working sample code:
https://www.dropbox.com/sh/nzujd8ffojasvm7/AAATa5bSoazbyLyfkRXG2FWTa?dl=0

please have a look and suggest if i did something wrong.  
",srikanthraju,2015-01-08 17:53:04
85,2014-12-29 15:35:39,"Ok, will have a look soon.
",dzenbot,2015-01-08 17:53:04
85,2015-01-06 15:28:12,"Heads up @srikanthraju, it appears that link is no longer valid. 
",mcgraw,2015-01-08 17:53:04
85,2015-01-08 15:51:56,"Thanks David for responding. I found an alternate for that.

On Tue, Jan 6, 2015 at 8:58 PM, David McGraw notifications@github.com
wrote:

> Heads up @srikanthraju https://github.com/srikanthraju, it appears that
> link is no longer valid.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/slackhq/SlackTextViewController/issues/85#issuecomment-68879510
> .

## 

Regards,
Srikanth.P
+91-9990895944
",srikanthraju,2015-01-08 17:53:04
85,2015-01-08 15:55:35,"How did you solve it?
",dzenbot,2015-01-08 17:53:04
85,2015-01-08 16:03:18,"i added a tableview instance method,
- (void)scrollToRowAtIndexPath:(NSIndexPath *)indexPath
  atScrollPosition:(UITableViewScrollPosition)scrollPosition animated:(BOOL
  )animated;

in send action.

On Thu, Jan 8, 2015 at 9:25 PM, Ignacio Romero Z. notifications@github.com
wrote:

> How did you solve it?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/slackhq/SlackTextViewController/issues/85#issuecomment-69199402
> .

## 

Regards,
Srikanth.P
+91-9990895944
",srikanthraju,2015-01-08 17:53:04
85,2015-01-08 17:53:04,":+1: 

Although the scrolling behavior should be handled internally, in `SLKTextViewController`, but using `setContentOffset:animated:` doesn't work as smoothly as `scrollToRowAtIndexPath: atScrollPosition: animated`.
",dzenbot,2015-01-08 17:53:04
84,2014-12-25 12:36:48,"If it is working with UITableView and UICollectionView, Can anyone tell me how to use directly with UIScrollView?
",iamabhiee,2014-12-25 17:37:57
84,2014-12-25 17:37:50,"UIScrollView is not supported, sorry.
",dzenbot,2014-12-25 17:37:57
83,2014-12-24 07:08:21,"@dzenbot  
",0oneo,2014-12-24 13:35:30
83,2014-12-24 07:09:57,"and How you maintain such a big viewcontroller like SLKTextViewController.m,  or don't you think a file which has a number of lines more than 1000 is a problem????
",0oneo,2014-12-24 13:35:30
83,2014-12-24 13:34:22,"UITextView's inputAccessoryView is mainly used as a translucent anchor view for enabling keyboard dragging gesture.

This library has grown very fast and most of the implementation in the view controller isn't easy to synthethize.
Yet, 2K lines of code is not so bad if things are easy to read and somehow decoupled by feature ;)
",dzenbot,2014-12-24 13:35:30
82,2014-12-21 04:28:55,"### slackhq/SlackTextViewController now has a Chat Room on Gitter

@dzenbot has just created a chat room. You can visit it here: [https://gitter.im/slackhq/SlackTextViewController](https://gitter.im/slackhq/SlackTextViewController?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&content=body_link).

This pull-request adds this badge to your README.md:

[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/slackhq/SlackTextViewController?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)

Happy chatting.

PS: [Click here](https://gitter.im/settings/badger/opt-out) if you would prefer not to receive automatic pull-requests from Gitter in future.
",gitter-badger,2015-01-05 15:35:29
81,2014-12-19 03:35:54,"In - (BOOL)detectExternalKeyboardInNotification:(NSNotification *)notification, the following line of code returns YES even there is no external keyboard:

return (maxKeyboardHeight > CGRectGetHeight(self.view.bounds));

Due to floating point error, maxKeyboardHeight may be greater than the view's height even in the cases that they should be equal. The result of this error is that the text input bar is not shifted up after the keyboard is appeared. The user cannot see the text input bar.

I propose the following fix:
return (floor(maxKeyboardHeight) > CGRectGetHeight(self.view.bounds));
",zhifeng-huang,2015-01-06 15:52:16
81,2014-12-19 03:44:05,"Interesting.
I have seen this happening a few times too. This external keyboard asumption calculation isn't very reliable, indeed.
Will try out your solution, thanks.
Which version were you using? Can you install the latest in master and see if this still happens without your fix pls?
",dzenbot,2015-01-06 15:52:16
81,2014-12-19 03:49:41,"I am using version 1.4 from cocoapods. I will try out the latest in master if the one from cocoapods is not the latest.
",zhifeng-huang,2015-01-06 15:52:16
81,2014-12-19 03:51:01,"To target the latest in master, use `:head` instead.
New pod version coming soon.
",dzenbot,2015-01-06 15:52:16
81,2014-12-19 05:22:07,"I think the latest master is worse. With the latest master, I am seeing:

maxKeyboardHeight = 389.30
self.view.bounds.size.height = 387.22

It cannot be fixed by applying floor() to maxKeyboardHeight.
",zhifeng-huang,2015-01-06 15:52:16
81,2014-12-19 05:26:37,"I saw once 390 > 386.96.
",zhifeng-huang,2015-01-06 15:52:16
81,2014-12-19 05:33:06,"This whole external keyboard detection mechanism isn't reliable at all.
I wonder if the `External Accessory` framework can help us out to make it more robust.

https://developer.apple.com/library/ios/documentation/ExternalAccessory/Reference/ExternalAccessoryFrameworkReference/index.html
",dzenbot,2015-01-06 15:52:16
81,2015-01-06 15:52:16,"I did some quick experiment using the `External Accessory` framework, and for some odd reason, an Apple external keyboard were not being detected.
I've pushed the branch in [external-keyboard-experiment](https://github.com/slackhq/SlackTextViewController/tree/external-keyboard-experiment) but I think there are very small chances to use this framework for reliably detect an external keyboard.

I know this is not answering directly the issue here, but keyboard height calculations are currently coupled with external keyboard calculations too. I have been wanting to get rid of it for a long time, but haven't yet figured a better way to do it, without breaking the external keyboard support this library already has.

If anyone has a better idea for external keyboard detection, please let us know!

Closing this for now since I cannot longer reproduce (it's hopefully fixed!)
",dzenbot,2015-01-06 15:52:16
81,2015-02-03 23:31:24,"This is happening again with SlackTextViewController (1.4.1).
",zhifeng-huang,2015-01-06 15:52:16
81,2015-02-26 20:45:17,"I have the same problem in (1.4.1). 
Just started using SlackTextViewController and also the Container View in Interface Builder so at first a thought it was a problem with that.

Downgraded to 1.4 and it works, if I get some time over I will try and debug it.

Awesome component btw!
",snorf,2015-01-06 15:52:16
80,2014-12-17 11:57:36,"Fixes compiler warning ""Code will never be executed""
",fluidsonic,2014-12-17 13:43:51
79,2014-12-15 22:08:52,"Hi.

I noticed that when you first bring up a screen with the placeholder label in use, the placeholder is off vertically by a couple of pts. I'm using a 17pt font on the textview and label. Before I type anything in the textview, the frame of the label is set to x: 0.000000, y: 0.000000,  h: 34.000000, w: 359.000000. After I type something in the textview and clear it, the frame of the label becomes x: 0.000000, y: 2.500000,  h: 34.000000, w: 359.000000.

I know this is minor, but is there any way we could get a fix for the initial frame of the placeholder label? Before it adjusts itself, it's off center vertically by just a bit, but it's noticeable.

Thanks for the great code!
",ghost,2014-12-17 06:29:21
79,2014-12-17 01:38:43,"Are you using a system font? Which one?
The text content inset might be off.
",dzenbot,2014-12-17 06:29:21
79,2014-12-17 01:45:26,"We're using the HelveticaNeue family.
",ghost,2014-12-17 06:29:21
78,2014-12-12 13:28:53,"Guys, in cocoa pods latest version is 1.3.3, How i can get latest version of this cool library with latest changes? And dont copy files to project directly
",andr-ggn,2014-12-12 16:48:04
78,2014-12-12 16:48:04,"`1.4` is now available with all the latest fixes.
http://cocoapods.org/?q=SlackTextViewController
",dzenbot,2014-12-12 16:48:04
77,2014-12-10 09:13:55,"When type  a set of Chinese and select Chinese  form  predictive typing , the textView  does not scroll to bottom finally. 

like this :
![2014-12-10 17 05 07](https://cloud.githubusercontent.com/assets/3984771/5373298/230dd4aa-808f-11e4-8012-4a7f9a28b47e.png)
",JasperYanky,2014-12-10 14:52:25
77,2014-12-10 14:52:25,"As for now, we're not really supporting any sort of localization, so I'd recommend you to fork the project and try a solution that best fits your needs for Chinese.
Please submit a PR if you manage to solve it, and we'd be happy to merge that in.
",dzenbot,2014-12-10 14:52:25
76,2014-12-09 21:12:02,"So, if you use this as a child controller and the text field is not at the bottom of the screen, it causes an issue. I did some debugging and it seems like it is getting flagged as a external keyboard. To recreate:
1. Create a UIVIewController
2. Add another UIViewController to the buttom
3. On top of the UIIVewController, add the SlackTextViewController.

Result:

The text view will never slide up.
",electic,2014-12-10 00:50:32
76,2014-12-09 22:02:06,"Which version are you using?
The recreation process is a bit confusing. It's probably best to create a sample project, and upload it somewhere so I can better understand the context.
",dzenbot,2014-12-10 00:50:32
76,2014-12-09 22:49:31,"I am using the latest version. I am using it with RDVTabBarController. The thing is that RDVTabBarController stems from a UIViewController and not a UITabViewController. So the difference in height of the view and the keyboard's max height causes it to be detected as an external keyboard. I assume this would be true if the SlackTextViewController was a childviewcontroller.
",electic,2014-12-10 00:50:32
76,2014-12-09 22:54:55,"That makes sense. Unfortunately, that's an uncommon use case, and I'd recommend you to fork `SlackTextViewController` and tweak the external keyboard assumption, to match your view hierarchy.
",dzenbot,2014-12-10 00:50:32
76,2014-12-09 23:02:37,"Makes sense. I can probably fix it permanently. Happy to invest the time. Can you give me more color on what you were thinking with this:

return (maxKeyboardHeight > CGRectGetHeight(self.view.bounds));

Any background here on how this detects the external keyboard would help.
",electic,2014-12-10 00:50:32
76,2014-12-10 00:50:32,"Nevermind, I just swapped back to the old UITabBarViewController. Thanks again tho!
",electic,2014-12-10 00:50:32
76,2014-12-10 01:23:30,"Great!
",dzenbot,2014-12-10 00:50:32
75,2014-12-03 13:17:38,"I am subclassing SlkTextViewController correctly. But I keep on getting crash where the app crashes in SLKViewController viewdidLoad => setupViewConstraints as the scrollViewProxy is nil. I can see that its getting set to _tableView correctly in init, but then when loadView gets called its back to nil and then ends up crashing the app. Not sure why its happening. Attached is crash log.

Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '**\* -[**NSPlaceholderDictionary initWithObjects:forKeys:count:]: attempt to insert nil object from objects[0]'
**\* First throw call stack:
(
    0   CoreFoundation                      0x01b71946 __exceptionPreprocess + 182
    1   libobjc.A.dylib                     0x017faa97 objc_exception_throw + 44
    2   CoreFoundation                      0x01a69af3 -[__NSPlaceholderDictionary initWithObjects:forKeys:count:] + 451
    3   CoreFoundation                      0x01a7dc5b +[NSDictionary dictionaryWithObjects:forKeys:count:] + 75
    4   PepperKitExample                    0x001a6836 -[SLKTextViewController setupViewConstraints] + 294
    5   PepperKitExample                    0x00199308 -[SLKTextViewController viewDidLoad] + 88
    6   PepperKitExample                    0x001c4f35 -[PKChatSessionViewController viewDidLoad] + 69
    7   UIKit                               0x0207c2a4 -[UIViewController loadViewIfRequired] + 771
    8   UIKit                               0x0207c595 -[UIViewController view] + 35
    9   UIKit                               0x020bd534 -[UINavigationController preferredContentSize] + 161
    10  UIKit                               0x0205744d -[UIPresentationController preferredContentSizeDidChangeForChildContentContainer:] + 122
    11  UIKit                               0x02054922 __56-[UIPresentationController runTransitionForCurrentState]_block_invoke + 156
    12  UIKit                               0x020887ab __40+[UIViewController _scheduleTransition:]_block_invoke + 18
    13  UIKit                               0x01f4e0ce ___afterCACommitHandler_block_invoke + 15
    14  UIKit                               0x01f4e079 _applyBlockToCFArrayCopiedToStack + 415
    15  UIKit                               0x01f4de8e _afterCACommitHandler + 545
    16  CoreFoundation                      0x01a949de __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION** + 30
    17  CoreFoundation                      0x01a94920 __CFRunLoopDoObservers + 400
    18  CoreFoundation                      0x01a8a35a __CFRunLoopRun + 1226
    19  CoreFoundation                      0x01a89bcb CFRunLoopRunSpecific + 443
    20  CoreFoundation                      0x01a899fb CFRunLoopRunInMode + 123
    21  GraphicsServices                    0x0591924f GSEventRunModal + 192
    22  GraphicsServices                    0x0591908c GSEventRun + 104
    23  UIKit                               0x01f248b6 UIApplicationMain + 1526
    24  PepperKitExample                    0x000bae9d main + 141
    25  libdyld.dylib                       0x03309ac9 start + 1
)
libc++abi.dylib: terminating with uncaught exception of type NSException
",hretarekar,2014-12-09 04:54:54
75,2014-12-03 13:57:53,"Shouldn't scrollViewProxy property be strong instead of weak? When it is set in initWithCoder, ARC will release the value and set it back to nil as there is nothing at this point which retains it.
",hretarekar,2014-12-09 04:54:54
75,2014-12-03 15:26:44,"Is this reproduceable in the sample project, on your end?
Doesn't happen here.

The `scrollViewProxy` property is meant to be weak since it's just referring to strong properties like `tableView` or `collectionView`. Will try to diagnose the issue soon.
",dzenbot,2014-12-09 04:54:54
75,2014-12-09 04:59:03,"Cool. Will test it and let you know if there are any issues. Thanks.
",hretarekar,2014-12-09 04:54:54
75,2015-09-13 18:49:10,"Hi @dzenbot and @hretarekar,

I'm so excited to use this pod but I'm afraid I am still experiencing this same crash as hretarekar, even on the latest release. It's the same log trace except a few of the line numbers have changed slightly. 

I cannot reproduce the problem in the sample project. Perhaps you can shed some insight based on my circumstance:
- I am programmatically instantiating my viewcontroller with a xib file.
- I have an IBOutlet from the tableview in my xib to my viewcontroller. 

I have experimented with including and tweaking the following methods but could not get anywhere:
`+ (UITableViewStyle)tableViewStyleForCoder:(NSCoder *)decoder`
`- (id)initWithCoder:(NSCoder *)aDecoder`
`- (void)commonInit`

Any advice?
",cassidyclawson,2014-12-09 04:54:54
75,2015-10-28 21:25:57,"Hit the same crash when upgrade to 1.7. 
Works fine on 1.5 and 1.6 tho.
",Fanghao,2014-12-09 04:54:54
75,2015-10-28 21:28:57,"@cassidyclawson you are not supposed to have a tablview in your xib nor liking it with an IBOutlet.
Are you doing the same @Fanghao 

The current Interface Builder is actually a trick: you can't layout outlets on it since all the subviews are created programatically.
",dzenbot,2014-12-09 04:54:54
75,2015-10-28 21:33:31,"no. I am doing it all programmatically. 

Just try 1.7.1, and it works. Really dunno what's the problem.
",Fanghao,2014-12-09 04:54:54
74,2014-12-03 07:30:48,"I just implemented everything as the docs and the examples, everything is fine except that the right button appears on the left side i don't know what's the problem.. i reviewed every line of my code and couldn't find anything.
Please advice..
",mohammad19991,2014-12-10 14:53:42
74,2014-12-03 15:29:52,"This is really strange.
Can you submit a gist with your implementation of the library? Is it happening on the sample project for you?
Also, can you submit a screenshot of the result? Thanks.
",dzenbot,2014-12-10 14:53:42
74,2014-12-04 09:38:31,"I found the problem, it's because the localization when i change the language to english everything worked as expected.
",mohammad19991,2014-12-10 14:53:42
74,2014-12-09 04:55:48,"What language were you using? Can you please share a snippet of how to reproduce this?
",dzenbot,2014-12-10 14:53:42
74,2014-12-09 09:09:58,"my app support many languages one of the is Arabic language which it caused the problem. if you want to reproduce this just make your default language Arabic and keep everything else as the example. Let me know if you need any farther informations.
",mohammad19991,2014-12-10 14:53:42
74,2014-12-10 14:53:41,"As for now, we're not really supporting any sort of localization, so I'd recommend you to fork the project and try a solution that best fits your needs for Arabic.
Please submit a PR if you manage to solve it, and we'd be happy to merge that in.
",dzenbot,2014-12-10 14:53:42
73,2014-12-03 06:12:21,"Calculate the bottom margin to its enclosing window. This unifies `appropriateTabBarHeight` consideration.
",ikesyo,2014-12-08 17:13:30
73,2014-12-08 17:04:50,"So there's no need to check for `hidesBottomBarWhenPushed` anymore?
",dzenbot,2014-12-08 17:13:30
73,2014-12-08 20:24:02,"Looks great! Thanks for this.
",dzenbot,2014-12-08 17:13:30
73,2014-12-09 03:08:27,"Thanks for accepting this :satisfied:
",ikesyo,2014-12-08 17:13:30
72,2014-11-27 23:46:47,"As far as I can tell, the problem is in `-[SLKTextViewController willShowOrHideKeyboard:]`. It is calling `scrollToBottomIfNeeded` before it updates the keyboard status causing it to decide that it does not need to scroll to the bottom.
",CraigSiemens,2014-12-09 06:09:32
71,2014-11-27 06:43:46,"How can I use it with scrollview directly ?
",iamabhiee,2014-12-10 14:54:59
71,2014-11-27 06:44:52,"Sorry, but this library doesn't support UIScrollView. Why wouldn't you use a UITableView instance?
",dzenbot,2014-12-10 14:54:59
71,2014-11-27 06:48:03,"Actually I want to use it with one data entry form which is easy to design with scrollview.
",iamabhiee,2014-12-10 14:54:59
71,2014-11-28 10:39:43,"I have added scroll view support for it, Let me send PR
",iamabhiee,2014-12-10 14:54:59
71,2014-12-10 14:54:59,"Closing this, since it's not part of the scope of the project.
",dzenbot,2014-12-10 14:54:59
71,2015-02-24 04:15:03,"Have a look here: https://github.com/slackhq/SlackTextViewController/pull/124
",dzenbot,2014-12-10 14:54:59
70,2014-11-26 17:09:47,"Hi guys,
great library!
I've a problem when the dealloc is called.

I use SlackTextViewController in a PageController. It is not the first controller i show (it is the third), so only the `init` method is called and it's live in the viewcontrollers array of the PageController.

When i push the PageController in my navigation stack and press back, the dealloc is called and cause a crash on `SLKTextViewController *controller` property of SLKTextInputbar.

![screen shot 2014-11-26 at 17 54 54](https://cloud.githubusercontent.com/assets/912252/5205267/2f59a0e4-7596-11e4-9de2-8f2fea5c44d4.png)

I don't know if it could be the problem, but it crash when, in the dealloc, the controller calls `cacheTextToDisk:` with `self.textView.text` as parameter. `self.textView` returns `self.textInputbar.textView` and `self.textInputbar` doesn't exist yet, because the loadView is not already called.

Thanks guys!
",danielebogo,2014-12-10 14:54:31
70,2014-11-26 17:20:19,"Hey there,
Please try installing the latest commit on master `359ae41`. I believe the issue you are facing is fixed with the latest changes. There isn't a pod version for those changes.
",dzenbot,2014-12-10 14:54:31
70,2014-12-10 14:52:54,"Is this still happening for you, @danielebogo ?
",dzenbot,2014-12-10 14:54:31
70,2014-12-10 14:54:31,"Sorry @dzenbot. I've tried that commit and it works! Great work! 
",danielebogo,2014-12-10 14:54:31
70,2014-12-10 14:55:36,"Great! Will push a new release soon.
",dzenbot,2014-12-10 14:54:31
70,2014-12-10 14:56:22,"Great!
",danielebogo,2014-12-10 14:54:31
69,2014-11-17 18:43:00,"Hey,

I am trying to use the input bar only but it's hard to isolate this component from all the code.

Any clue ?

Thanks
",cyril94440,2014-11-18 02:13:44
69,2014-11-18 02:13:44,"The project wasn't designed to offer decoupled components.
Take a look at https://github.com/fphilipe/PHFComposeBarView instead
",dzenbot,2014-11-18 02:13:44
68,2014-11-13 13:16:37,"When I change my UITableViewController subclass to subclass SlackTextViewController my cells no longer load properly.

Previously I was using: MessageTableViewCell *cell = [self.tableView dequeueReusableCellWithIdentifier:@""MCell""];

It worked fine while the class subclassed UITableViewController.

After changing to use SLK, (and registering the class for the reuse) it does still return a cell, but it isn't loading properly. The outlets are all nil and even the non outlet views aren't showing up at all.

Did I miss a setup step somewhere? I had assumed it was basically drop in. I did include the
    + (UITableViewStyle)tableViewStyleForCoder:(NSCoder *)decoder
method.
",owenfi,2014-11-17 04:39:39
68,2014-11-13 16:06:11,"`SLKTextViewController` isn't a `UITableViewController` subclass, so it doesn't support cell prototypes in storyboards.

Try decoupling the interface builder layout of your cell in a separate nib, and register it as a nib like so:

<S_CODE_TOKEN>

Haven't tested it, but it should work.
",dzenbot,2014-11-17 04:39:39
68,2014-11-17 04:33:37,"thanks it works!
and don't forget to use inverted mode, or the cell will go upside down.
",youweit,2014-11-17 04:39:39
67,2014-11-08 01:18:23,"It looks like on October 1st https://github.com/slackhq/SlackTextViewController/commit/f729fd9a1ea4ddd6f3e600dbb49c5dd36cdf2969 was the initial addition of the Xcode templates info to the README, and on October 7th https://github.com/slackhq/SlackTextViewController/commit/05d8a69e78042c8b33a186f66493d7cee90b14ff renamed the templates folder without fixing the accompanying reference.
",mamaral,2014-11-08 01:24:47
66,2014-11-07 17:20:35,"The current set of example projects lack a collection view sample and the readme seems to have insufficient information on how to make this mode work.
",fran-sgd,2014-11-07 17:24:38
66,2014-11-07 17:24:38,"Programatically, you only need to do this:

<S_CODE_TOKEN>

The rest is up to you: layout, display, data source.
Anyway, we are currently working on a collection view example. Seat tight!
",dzenbot,2014-11-07 17:24:38
66,2014-11-07 17:27:59,"I tried that and it failed, so I'm looking forward to the example, thanks!
",fran-sgd,2014-11-07 17:24:38
66,2014-11-07 17:28:55,"How did it fail? Perhaps you can create another issue explaining the problem you're facing. I'd happy to help! ;)
",dzenbot,2014-11-07 17:24:38
66,2014-11-22 04:25:03,"The failure was a blank view with no content. Any chance of seeing that example? :-)
",fran-sgd,2014-11-07 17:24:38
66,2014-11-22 05:14:36,"There are 2 collection view examples in the `swift-example` branch (work in progress). Take a look, and feel free to contribute ;)
https://github.com/slackhq/SlackTextViewController/tree/swift-example
",dzenbot,2014-11-07 17:24:38
66,2014-12-11 16:40:50,"Sorry to take so long to respond. This example is exactly what I thought I would get when following the instructions in the readme file, which implies that one only need add a small block of code to get the collection view version. Actually, you need to set it up as you would any collection view, creating a data model, providing cells and a method to measure the text to supply a cell height, etc. I had assumed, after reading the readme, that this component would provide that stuff under the hood for me and that I'd simply need to provide a data model and some cosmetic dressing. So, yes, it works and my failure was simply an insufficiently wired up collection view that showed nothing but a blank screen since I hadn't provided the necessaries. The readme is rather blithe on the collection view version and should perhaps point to this example and briefly mention what is required. My problem was that I was too busy to spend the time digging into the code to figure out what was going on when I first tried it out, a common problem for the busy coder. Thanks!
",fran-sgd,2014-11-07 17:24:38
66,2014-12-11 17:54:42,"Hey, thanks for explaining.
I've updated the README to avoid any further confusion: https://github.com/slackhq/SlackTextViewController/blob/master/README.md#sample-project

I wish I had more time to work on this example, but since we are still using UITableView on Slack's app, this is low prio for us now. This example combines UICollectionView case, done with Swift, using a custom collection view layout for displaying cells from the bottom. It's meant to be a more solid example and solution.
",dzenbot,2014-11-07 17:24:38
65,2014-11-05 15:32:10,"Part of the latest pre-release version of CocoaPods is a new dependency manager that isn't capable of handling circular dependencies in Podspecs. As a result, trying to install SlackTextViewController via the CocoaPods 0.35 RC results in an error. (see https://github.com/CocoaPods/CocoaPods/issues/2732)

This seems to fix the SlackTextViewController pod for me, at least when installing it with my Podfile pointed to my fork's git repo. A pod spec inherits all of its subspecs by default (see the [Podfile docs](http://guides.cocoapods.org/syntax/podspec.html#subspec)), so explicitly listing the subspec as a dependency isn't necessary.

Cheers!
",lazerwalker,2014-11-05 15:45:48
65,2014-11-05 15:33:10,"Er, the correct CocoaPods issue is actually https://github.com/CocoaPods/Molinillo/issues/6.
",lazerwalker,2014-11-05 15:45:48
65,2014-11-05 15:33:20,"Related to #64
",dzenbot,2014-11-05 15:45:48
65,2014-11-05 15:45:59,"Thank you for this!
",dzenbot,2014-11-05 15:45:48
65,2014-11-05 15:47:36,"Sure thing!

No rush, but I'd appreciate it if you could let me know when this gets pushed to the main CocoaPods spec repo; I'd like to be able to point my Podfile back to the canonical trunk pod rather than having to manually specify a git repo.
",lazerwalker,2014-11-05 15:45:48
65,2014-11-05 15:50:13,"Done! see `1.3.1`
",dzenbot,2014-11-05 15:45:48
65,2014-11-05 15:51:22,":+1: Thanks for the quick turnaround!
",lazerwalker,2014-11-05 15:45:48
65,2014-11-05 17:39:14,"@lazerwalker you said

> that isn't capable of handling circular dependencies

But the truth is, it's simply disallowed now, as it always should've been :)
",segiddins,2014-11-05 15:45:48
64,2014-11-05 15:26:30,"Cocoapods throws an error describing:

<S_CODE_TOKEN>

I've tried removing all other pods to be sure it's happening in this repository alone and the error persisted. From the error message, I assume it's an issue concerning Cocoapods and I'll report it to them too, but I'd like to leave it registered here.

Cocoapods version: 0.35.0.rc1
",fjcaetano,2014-11-05 15:45:48
64,2014-11-05 15:28:58,"With which pod version of the library is this happening? Can you reproduce this issue using other versions too?

Haven't seen this error before, but yes, it's probably an issue with Cocoapods.
`Additions` is a very simple and straightforward subspec. It shouldn't cause any issues.
",dzenbot,2014-11-05 15:45:48
64,2014-11-05 15:34:07,"@dzenbot I tried with the latest version ""1.3"". After you suggested, I tried it backwards to the ""1.2"" version and it still happened.

Since I'm using a pre-release of Cocoapods, that may be it. I've also reported it to Cocoapods, and the issue reference is above.
",fjcaetano,2014-11-05 15:45:48
64,2014-11-05 15:38:13,"@fjcaetano Great minds think alike.

I just submitted a [pull request](https://github.com/slackhq/SlackTextViewController/pull/65) that should fix it. If you want to try it out, feel free point your Podfile at my repo or a fork of your own:

<S_CODE_TOKEN>
",lazerwalker,2014-11-05 15:45:48
64,2014-11-05 15:41:19,"@lazerwalker it fixed it! Thanks! :smile: 
",fjcaetano,2014-11-05 15:45:48
63,2014-11-04 23:03:11,"I've been playing around with this great controller and loving it so far but I've had some problems with getting it to behave while using a slightly smaller custom font. I'm not sure if this is an issue or just not supported.

After a couple of experiments with various fonts (both custom and system) I can get it to barely work by making some fairly unintuitive changes to `[SLKTextView intrinsicContentSize]`, `[SLKTextInputBar intrinsicContentSize]` and `textContainerInset`. I'm guessing these are currently finely tuned to a system font size of 15? Most of the time a smaller custom font actually does the unexpected and makes the text view look bigger.

I've also observed https://github.com/slackhq/SlackTextViewController/issues/58 when the text view was slightly smaller than the text + container insets.

Are custom fonts supported or do we need to fork and do some bigger changes? Any tips on where the changes need to be made?
",johannth,2014-11-08 10:50:10
63,2014-11-05 04:14:16,"What fonts are you trying to use, and at which size. A good size for text input is about 15 pts. I can't imagine why would you try to make it smaller.
Only changing the `textContainerInset` wasn't enough?

I wonder if this is a bug in UITextView (because there is no big things happening under the hood about text rendering). I will take a look some day soon.

In the meantime, feel free to explore a solution yourself and submit a PR.
",dzenbot,2014-11-08 10:50:10
63,2014-11-08 10:50:10,"Haha, valid point on the font size. After much digging around I figured out that the issue was mostly that our custom font file was reporting a wrong line height which caused the view controller to miscount the number of lines.
",johannth,2014-11-08 10:50:10
62,2014-10-31 08:56:24,"I have problem when run sample project. as below pic
![screen shot 2014-10-31 at 3 46 24 pm](https://cloud.githubusercontent.com/assets/8262779/4858136/a0ad8c72-60da-11e4-8858-ecc1575cb8fc.png) 

Xcode : 6
Target: IOS 8
Run with : Simulator
",ghost,2014-10-31 08:57:00
62,2014-10-31 15:15:54,"I guess you fixed it by updating the pod? That should not have happend since pod files are also being versioned.
",dzenbot,2014-10-31 08:57:00
61,2014-10-31 08:49:48,"I have problem when run sample project. as below pic
![screen shot 2014-10-31 at 3 46 24 pm](https://cloud.githubusercontent.com/assets/8262779/4858136/a0ad8c72-60da-11e4-8858-ecc1575cb8fc.png) 

Xcode : 6
Target: IOS 8
Run with : Simulator
",ghost,2014-11-08 04:55:43
61,2014-11-05 04:41:50,"Did you figure it out?
Probably best to run `pod install` in the sample project, so `LoremIpsum` installs correctly in your environment. Haven't had any issues like this before with the sample project.
",dzenbot,2014-11-08 04:55:43
60,2014-10-26 14:07:45,,alexsoble,2014-10-26 14:49:55
59,2014-10-23 23:51:01,,electic,2014-10-28 06:55:44
58,2014-10-22 17:10:01,"When using a different font style/size it causes a couple of issues
- I can type 'hello' and begin to scroll the inside around
- When presenting the keyboard, the text can scroll slightly
1. Set the font to AvenirNext-Regular @ 16.0f
2. Observe the above issues
",mcgraw,2015-01-09 04:08:42
58,2014-11-05 04:23:44,"Sorry about not replying to your issue (crazy weeks!).

I managed to repro both of the issues.
When using `AvenirNext-Regular @ 16.0f` for example, the contentSize of the TextView changes to `38.0f` pts. and since the `intrinsicContentSize`'s height has a harcoded value of `34.0f`, scroll is enabled automatically by the textView.

At Slack, we use `Lato-Regular @ 15.0f` for the textView and it works just great. `AvenirNext-Regular @ 16.0f` still shows the same problems, but slightly.

I can't figure out a solution to be able to satisfy all case scenarios when using custom fonts.
Have you come across an alternative?
",dzenbot,2015-01-09 04:08:42
58,2014-11-05 04:40:22,"I just tried modifying the textView's `contentInset` by reducing the difference between the `intrinsicContentSize`'s height (34.0f) with the font's `lineHeight`. This solves the issue about allowing the textView to scroll when presenting only 1 line, but I was still seeing a few slight text jumps when typing.

Have you explored that approach?

(related to #63 too)
",dzenbot,2015-01-09 04:08:42
58,2015-01-06 15:27:11,"No apologies needed! Thanks for the help. :)

I will be using this again in a new project, but it's TBD how we'll customize things. I may do some experimentation in the future with your feedback here. I'll keep you posted.
",mcgraw,2015-01-09 04:08:42
58,2015-01-09 04:08:42,"Ok. Thanks for getting back about this issue.
Closing it for now.
",dzenbot,2015-01-09 04:08:42
57,2014-10-22 17:05:40,"Wanted to increase the button size slightly and the button text became off-center. Looks like the bar insets are not being observe for the bottom.
1. Set the right button font to AvenirNext-Medium / 17.0f
2. Observe that the button text is no longer centered
",mcgraw,2015-01-09 04:07:55
57,2014-10-22 17:58:43,"View constraints should update when changing some button configs, for both, left and right button.
KVO might be the write answer for this.
",dzenbot,2015-01-09 04:07:55
57,2015-01-06 15:25:51,"As a note, I've moved on from the project so I won't be able to reliably test / verify any fixes against that project. I will be using this again in a new project, but it's TBD how we'll customize things.
",mcgraw,2015-01-09 04:07:55
57,2015-01-09 04:07:55,"Closing this for now.
",dzenbot,2015-01-09 04:07:55
56,2014-10-20 21:22:20,"This is on an iPhone 6+ with 8.1
1. Grab the sample messenger app
2. Focus the input field
3. Begin dragging the keyboard down & slightly up (enabling the interactive dismissal, and only going back & forth ~100px)

You'll notice that the view begins to stutter (sometimes, pretty badly) UNTIL it reaches the lower 3rd of the phone screen. It doesn't seem too bad in the messenger app. The app I'm building looks dramatically worse (collection view, custom layout, more of a complex controller). 
1. Extend your pan to the lower part of the screen. Completely smooth. 

From observing this I see that the content/cells going behind the input field while dragging those first few x points. Once you reach a certain point the cells stop moving. For some reason that is making things go a little crazy.

Example from the app I'm working on: https://www.dropbox.com/s/skvtvgd6x7c0bt6/interactive-glitch.m4v?dl=0
",mcgraw,2015-01-06 15:43:30
56,2014-10-22 00:12:40,"I haven't yet tested much with complex UICollection layouts, sorry.
This only happens in iPhone6+?

The keyboard dragging is most definitely the biggest hack of this lib, which is introducing weird edge case bugs. I've been trying to solve many of those lately, but they keep arising.

Let me know if you find a work around or fix for this issue.
Great layout bw!
",dzenbot,2015-01-06 15:43:30
56,2014-10-22 02:00:25,"Its recommended not to resize the UICollectionView/UITableView frame. Instead change the contentInset.
",efremidze,2015-01-06 15:43:30
56,2014-10-22 02:02:32,"I've heard that too, but we're using auto-layout for mostly everything and it wouldn't be compatible with contentInset. Plus, contentInset doesn't look good with animations either.
",dzenbot,2015-01-06 15:43:30
56,2014-10-22 17:12:33,"I just tested this on my iPhone 5S and did not see this issue. Smooth interaction.

Let me know if you have any questions. I'll jump in and try some things when I free up some time.
",mcgraw,2015-01-06 15:43:30
56,2014-11-05 04:42:59,"Can you test this with the latest release `1.3`. Many things have been re-written since. Hopefully this is now accidentally fixed :)
",dzenbot,2015-01-06 15:43:30
56,2015-01-06 15:22:58,"Feel free to close this issue. Things have been working well.
",mcgraw,2015-01-06 15:43:30
56,2015-01-06 15:43:30,":+1: 
",dzenbot,2015-01-06 15:43:30
55,2014-10-20 15:25:26,"Not a bug, just a question that I'm hoping you guys know the answer to? So I'm using SlackTextViewController, inverted set to YES. How can this be combined with a UIRefreshControl still at the top? Right now it's at the bottom, which makes sense since the table is inverted.
",kevinrenskers,2014-10-28 20:30:31
55,2014-10-20 16:35:06,"I don't think it's possible to use the native UIRefreshControl on inverted mode. My guess is that you'll need to create a custom version, which is triggered from the bottom of the tableView.
The other work around is to use UICollectionView instead, and build a custom layout to display cells from the bottom.
I hope that helps ;)
",dzenbot,2014-10-28 20:30:31
54,2014-10-18 21:15:02,"The Left/Right Buttons are currently:

`_leftButton = [UIButton buttonWithType:UIButtonTypeSystem];` and `_rightButton = [UIButton buttonWithType:UIButtonTypeSystem];`.

However, when setting an image to the button (I am doing the left one), it actually just turns it into a colored box, as explained here: http://stackoverflow.com/questions/18133465/setting-uibutton-image-results-in-blue-button-in-ios-7

Changing the UIButton type to `UIButtonTypeCustom` fixes the issue.  I can submit a PR for this; I just haven't done extensive testing.

Edit: This disables the automatic tint coloring.
",ethanmick,2014-10-19 18:28:21
54,2014-10-19 14:59:55,"The buttons are using UIButtonTypeSystem to have a smoother transition between button states. If you have an image with no alpha and solid color, then you should change the rendering mode instead to `UIImageRenderingModeAlwaysOriginal`.

In the same question on Stackoverflow that you posted, check for this one http://stackoverflow.com/questions/18133465/setting-uibutton-image-results-in-blue-button-in-ios-7#comment30950397_18187058
",dzenbot,2014-10-19 18:28:21
54,2014-10-19 18:28:21,"Yep, that works great too, thanks!
",ethanmick,2014-10-19 18:28:21
54,2014-12-19 01:35:39,"Thanks for this!
",phaitour,2014-10-19 18:28:21
53,2014-10-16 15:10:22,"Right now the tap gesture is preventing collectionView:didSelectItemAtIndexPath from being called

The default value is YES 

<S_CODE_TOKEN>

Also, should this gesture be exposed so that we can more easily customize the gesture (like disabling it,  changing it to a double tap, etc)? 
",mcgraw,2014-10-16 19:38:37
53,2014-10-16 15:15:13,"Yes, might be a good idea to expose the gesture for customisation.
If using UIGestureRecognizerDelegate methods, your subclass will need to call super. That isn't very intuitive tho, and trying to figure out how to call a warning if it's not done...
",dzenbot,2014-10-16 19:38:37
53,2014-10-16 15:25:05,"You can create a warning by adding an attribute to the method declaration. For example -- 

<S_CODE_TOKEN>

This'll throw a warning 'Method possibly missing a [super ....] call' 
",mcgraw,2014-10-16 19:38:37
53,2014-10-16 17:27:24,"Interesting!
",dzenbot,2014-10-16 19:38:37
53,2014-10-16 19:46:27,"I used `NS_REQUIRES_SUPER` after all. Thanks for the tip!

So now that the gesture is exposed, you can easily set the `cancelsTouchesInView` to NO.
I'll leave it to YES by default tho.
",dzenbot,2014-10-16 19:38:37
52,2014-10-16 11:36:47,"Not sure in which release this started to happen, somewhere in the last week I think. Probably after the changes to add storyboard support.

![screen shot 2014-10-16 at 11 34 38](https://cloud.githubusercontent.com/assets/229384/4661785/7ba2948a-5528-11e4-8d80-e8317c2056e8.png)

Weird grey bar at the bottom. Also, the ""typing"" messages don't show up anymore, I guess it's hidden by that bar somehow?
",kevinrenskers,2014-10-17 14:01:42
52,2014-10-16 13:56:56,"Did you install 1.2.5?
",dzenbot,2014-10-17 14:01:42
52,2014-10-16 13:59:16,"Yep.
",kevinrenskers,2014-10-17 14:01:42
52,2014-10-16 14:01:57,"Try setting `keyboardPanningEnabled` to NO. Would that bar still show up?
",dzenbot,2014-10-17 14:01:42
52,2014-10-16 14:13:03,"Yes, doesn't change anything.
",kevinrenskers,2014-10-17 14:01:42
52,2014-10-16 14:32:55,"Just tried a few versions and found that 1.2.1 works fine. It starts to happen with 1.2.2.
",kevinrenskers,2014-10-17 14:01:42
52,2014-10-16 19:51:51,"I've just added a new target to the sample project, for testing the library when using storyboards.

That grey bar seems to be the autocompletion view (a UITableView instance). It seems there are some auto-layout issues. I haven't been able to fix the issue, but will retry very soon.

In the meantime, feel free to collaborate on this one ;)
",dzenbot,2014-10-17 14:01:42
52,2014-10-16 21:55:55,"Some notes -- 

Before updating to the latest branch, the heightConstrants array hold

<S_CODE_TOKEN>

After updating to the latest commit, the heightConstrants array hold these values

<S_CODE_TOKEN>

Those layout guides are breaking things since we specifically reference certain index positions (bottomConstraints also includes an extra layout guide)

Now... why are they showing up? Great question... 

![dog-has-no-idea-what-hes-doing](https://cloud.githubusercontent.com/assets/316090/4671283/2ff44144-557f-11e4-865a-c787e5f70f28.jpg)
",mcgraw,2014-10-17 14:01:42
52,2014-10-16 21:58:28,"Interesting.
Those 2 constraints are visible (but not editable) in the Storyboard. Not familiar with that either, but they must be the cause of the issue...
",dzenbot,2014-10-17 14:01:42
52,2014-10-16 22:53:15,"Looks like this issue popped up when the flow moved away from loadView (to viewDidLoad) -- https://github.com/slackhq/SlackTextViewController/commit/2f117abbd4145ce1524b040f7a2ced33ea64d00c

Makes sense. At that point the storyboard is fully loaded up, which has those default items.
",mcgraw,2014-10-17 14:01:42
52,2014-10-16 22:58:19,"You're right! I've moved back to `loadView` to test it, and it displays the right way now.

I actually moved everything to `viewDidLoad` because of Apple's documentation, when adding storyboard support:
`If you use Interface Builder to create your views and initialize the view controller, you must not override this method.`
",dzenbot,2014-10-17 14:01:42
52,2014-10-16 23:09:22,"Looks like calling `loadView` without calling super, and setting the main view programatically, solves the problem:

<S_CODE_TOKEN>

Creating the main view programatically seems like a legit fix, since the views are not created with Interface Builder. 
Any thoughts on that @kevinrenskers @mcgraw ?
",dzenbot,2014-10-17 14:01:42
52,2014-10-17 09:33:00,"Well the main view (self.view) **is** created in the storyboard in IB. It's just the tableview and all the other stuff that's created by SlackTextViewController and added to that view. It feels incorrect to create/override that view programmatically when using storyboards.
",kevinrenskers,2014-10-17 14:01:42
52,2014-10-17 20:03:52,"Gave the latest update a spin. My layout breaks (still flowing through this loadView method). I see the input area, but the collection view doesn't properly load & the other views don't load up. Likely because of not calling [super loadView]? But then I add that and the original issue above shows up. 

When loadView is called, self.view already contains a view from the storyboard so we're just blasting that one away.

Might do some more experimentation here. Not sure whats the best way to get at the original issue other than explicitly detecting if those layout guide exist before performing assignments (checking if that first item in the array is an NSLayoutConstraint or an _UILayoutSupportConstraint). Not sure the impact of that move though. 
",mcgraw,2014-10-17 14:01:42
52,2014-10-17 20:14:56,"Also, I'm seeing a red overlay showing up above the keyboard when the input field is focused. 
",mcgraw,2014-10-17 14:01:42
52,2014-10-20 17:03:20,"fyi -- back in action here! 
",mcgraw,2014-10-17 14:01:42
52,2014-10-20 17:21:07,"You mean it's solved @mcgraw?
",dzenbot,2014-10-17 14:01:42
52,2014-10-20 17:27:09,"Yep
",mcgraw,2014-10-17 14:01:42
52,2014-10-20 17:30:10,"Same here, master works great.
",kevinrenskers,2014-10-17 14:01:42
52,2014-10-20 17:30:50,"Great. Releasing shortly a new pod!
",dzenbot,2014-10-17 14:01:42
51,2014-10-15 10:42:14,"Sorry, it's me again.
Latest version 1.2.4

iPad 2 iOS 7.0.4
iPad 2 (simulator) iOS 7.1

The input bar start in the right position at the bottom on the view controller, when start editing it just jump at the very top. On the simulator things start going even more nuts with the whole controller going offscreen when switching the hardware keyboard on/off.
![ios simulator screen shot 15 oct 2014 11 22 50](https://cloud.githubusercontent.com/assets/1882080/4643999/9e8492b0-5455-11e4-81fe-60e5a23f88f8.png)

On iOS 8.0.2 appears to work fine on both simulator and device apart from one little glitch.

The inputbar has the predictive keyboard on. If you then set another textfield as first responder (which does not have a predictive keyboard) then the input bar doesn't slide down to cover that space.
![ios simulator screen shot 15 oct 2014 11 38 38](https://cloud.githubusercontent.com/assets/1882080/4644175/b7c56b80-5457-11e4-95cd-0d75d7552a1c.png)

I didn't have a look at the implementation so I may say something really stupid here, but won't be more reliable to add the input bar as accessory view of the input bar when the textview start editing and then when the keyboard disappear re add it to the view controller view?
",valeriomazzeo,2014-10-19 17:25:52
51,2014-10-19 17:25:52,"The first issue, for iPad on iOS7 landscape mode, should be fixed now, with commit 4de5393147277c873f61dd9b43dfcdc008a65ea2

I understand the cause of the second issue on iOS8 with QuickTypeBar. I'll think how to solve it. Will migrate that issue in a separate issue tho.
",dzenbot,2014-10-19 17:25:52
50,2014-10-15 07:09:14,"how to the hiding textInputbar in start view， 

if [self.textInputbar setHidden:YES]; 
there is space bar  in down view.

![screen shot 2014-10-15 at 3 08 03 pm](https://cloud.githubusercontent.com/assets/790084/4641591/12fa36f2-543a-11e4-891a-5a4e36996b1a.png)
",simdm,2014-10-20 16:36:27
50,2014-10-20 16:36:27,"This goes a bit out of the scope of the project, sorry.
You should fork the repository and build a custom version with a similar API than UINavigationController for `setToolbarHidden:animated:`. Shouldn't be too hard to make.
",dzenbot,2014-10-20 16:36:27
49,2014-10-14 14:34:42,"Reported here: https://github.com/slackhq/SlackTextViewController/issues/10#issuecomment-59017713
",dzenbot,2014-10-14 15:13:48
48,2014-10-14 10:29:52,"ex：
self.textView.placeholder = @""我要回复"";

placeholder is can't  showed.

right-down has Shadow.

![screen shot 2014-10-14 at 6 31 56 pm](https://cloud.githubusercontent.com/assets/790084/4627682/9b45a3d2-538d-11e4-9c3a-1464cdace6e0.png)
",simdm,2014-10-14 10:49:29
48,2014-10-14 10:49:21,"After set font , It's ok.

<S_CODE_TOKEN>
",simdm,2014-10-14 10:49:29
48,2014-10-14 19:29:52,"It looks like the some UIFont issue and Chinese characters. I did some tests, and everything is fine if the font used isn't system's.
",dzenbot,2014-10-14 10:49:29
48,2014-10-29 09:14:36,"Ops, I've just came up with this issue in Chinese. Well, set font works.
",DDany,2014-10-14 10:49:29
47,2014-10-14 04:43:03,,dzenbot,2014-10-14 04:43:10
46,2014-10-13 14:55:37,"There was an additional padding of 8 points left to the text view until some text was entered, when the text view suddenly jumps to the left by these 8 points.

Only happens if there is no left button because `updateConstraintConstants` was never called to ensure correct initial values.
",fluidsonic,2014-10-13 16:39:45
45,2014-10-13 14:51:39,"There are two possible causes for crashes because of `SLKInputAccessoryView`:
- The handling of adding/removing the keyPath observer was very sloppy. Try-catch?!  
  Cleaned up.
- `SLKTextViewController` used the selector `inputAccessoryView` for handling its custom input accessory. However the name collides with `UIResponder` and internal `UIViewController` logic causing a crash when leaving the screen while the keyboard is up.  
  Renamed to `slk_inputAccessoryView`.
",fluidsonic,2014-10-13 16:39:45
45,2014-10-13 14:58:32,"I've been using try-catch to be sure removing an observer doesn't crash the app, and it has been working great so far. You wouldn't recommend it?

But a weak reference to the superview is a very good idea! Will merge this soon.
",dzenbot,2014-10-13 16:39:45
45,2014-10-13 15:16:50,"Using try-catch in ObjC is discouraged by Apple (a feature not even included in Swift) and also UIKit is not exception-safe.

When key-value observing is implemented correctly then removing an observer will never throw an exception. You just have to keep track whether you added an observer earlier or not. This is exactly what I do with the weak variable.
",fluidsonic,2014-10-13 16:39:45
44,2014-10-13 09:17:58,"- `unsigned long` should use `%lu`
- `long` should use `%ld`
- added missing `long` cast to fix potential bug on 64-bit OS (also causing compiler warning)
",fluidsonic,2014-10-13 10:48:22
43,2014-10-13 04:01:42,"Many small fixes suggested by @efremidze (thanks!), related to keyboard panning offset, so the dragging gesture starts at the top of the text input bar.
",dzenbot,2014-10-13 04:02:01
42,2014-10-12 07:20:38,"Found a bug, iOS 7 Swipe back gesture not work, I tested on iOS 8, not work either.
step:
parentViewController --> push to SlackTextViewController sub viewController, swipe back to parentViewController not work.
",lukewcn,2014-10-14 05:20:22
42,2014-10-12 20:52:17,"Its works for me. There is no parentViewController in a UINavigationController.
",efremidze,2014-10-14 05:20:22
42,2014-10-12 21:49:59,"Which version are you using?
",dzenbot,2014-10-14 05:20:22
42,2014-10-13 03:42:32,"Using SlackTextViewController (1.2)
Xcode 6
iOS 8
",lukewcn,2014-10-14 05:20:22
42,2014-10-13 12:14:58,"Did you try the sample project?
",dzenbot,2014-10-14 05:20:22
42,2014-10-17 03:53:01,"tried the sample project, the same issue
",lukewcn,2014-10-14 05:20:22
41,2014-10-12 01:05:04,"Updated the inputAccessoryView to include the height of the textInputbar. This is the simplest solution, other solutions require too much hacking and maintenance. There is a slight delay on the keyboardWillShow animation since it includes the inputAccessoryView height in the keyboard notification.
",efremidze,2014-10-13 04:02:02
41,2014-10-12 03:15:57,"This is a very smart idea!
I also though your other approach was getting too hacky and introducing too many edge-case bugs, but this is great.

I've found a small issue tho: if you scroll the keyboard to the bottom, without releasing the finger, and pull up again, the text input bar doesn't follow the keyboard anymore.
My guess is: since you're creating a new inputAccessoryInput view every time, it loose its reference to keep updating it.
",dzenbot,2014-10-13 04:02:02
41,2014-10-12 06:11:36,"Yes that's sounds like what's happening. I'll look into it.
",efremidze,2014-10-13 04:02:02
41,2014-10-12 06:32:37,"Actually, this behaviour was already there before your implementation, it's just that since it didn't had any offset, the inputAccessoryView wasn't being removed just yet.
I tried a few fixes, with no success. 
",dzenbot,2014-10-13 04:02:02
41,2014-10-12 20:10:37,"Yes I noticed that. Most of it was already setup.
",efremidze,2014-10-13 04:02:02
41,2014-10-12 20:20:24,"Try this out
",efremidze,2014-10-13 04:02:02
41,2014-10-13 04:03:35,"I've submitted another PR, containing your fixes and a few other small stuff.
Your PR had a few unwanted merge commits. Next time, try rebasing instead of merging.

Thanks a lot for your help on this one!
",dzenbot,2014-10-13 04:02:02
41,2014-10-13 18:21:52,"Take a look at the last version bump (1.2.2), it includes your PR changes and many little fixes.
",dzenbot,2014-10-13 04:02:02
40,2014-10-10 17:13:52,"I already have a table view in the controller, and the controller conforms the UITableViewDelegate and I have another datasource file conforms the UITableViewDataSource, how can i handle this situation?
",lukewcn,2014-10-14 05:19:45
40,2014-10-10 17:18:07,"I guess you can simply instantiate your custom classes, keeping a strong reference to them in your SlackTextViewController subclass, and override the tableview's delegate/datasource.

<S_CODE_TOKEN>

Does this make sense?
",dzenbot,2014-10-14 05:19:45
40,2014-10-10 17:35:59,"Did not figure it out, I just not get your meanings.
Do you mean, make my custom controller subclass the SlackTextViewController, and keep my tableview and change the delegates?
",lukewcn,2014-10-14 05:19:45
40,2014-10-12 06:13:59,"I mean a tableview created by xib, I found #16 , but seems no good solution for this, did you make any change for #16 ? 
",lukewcn,2014-10-14 05:19:45
40,2014-10-12 06:30:12,"Sorry, I'm not really understanding what you are asking...
You want to use a custom tableview? or delegate/datasource?
",dzenbot,2014-10-14 05:19:45
40,2014-10-12 07:16:37,"I use storyboard to create tableView, my question is just like the #16 
",lukewcn,2014-10-14 05:19:45
40,2014-10-13 19:23:02,"@hit1983 I think what you're asking is how to connect a tableview you've already added to your storyboard via an IBOutlet? 

Right now you'll want to let the SlackTextViewController create that for you so it can create it & properly set up the constraints. In order to tell slack what you want you'll use the default table view style. You can override this if needed.

<S_CODE_TOKEN>

From there you'll just override the delegate methods in your custom controller or set the delegate & dataSource to another class. Check out the example project.

You might be asking, 'well how do I have other things in the view beside the table view?' I believe the current intent behind this implementation is to have the entire view own the tableview or collectionview in order to properly handle scrolling & moving the text field. 
",mcgraw,2014-10-14 05:19:45
40,2014-10-14 05:19:45,"Well said @mcgraw!
Closing this for now.
",dzenbot,2014-10-14 05:19:45
39,2014-10-10 16:44:19,"Related to https://github.com/slackhq/SlackTextViewController/issues/38#issuecomment-58679051
",dzenbot,2014-10-10 17:04:02
39,2014-10-10 16:45:12,"@hit1983: I just tried to reproduce that issue, with no success.
If you replace the sample project's app delegate implementation with this:

<S_CODE_TOKEN>

It works like it's supposed to.
",dzenbot,2014-10-10 17:04:02
39,2014-10-10 17:03:25,"you are correct, it is my custom tab bar controller' bug, thanks for your patient :+1: 
",lukewcn,2014-10-10 17:04:02
39,2014-10-10 17:04:02,"Great! Closing this issue then.
",dzenbot,2014-10-10 17:04:02
38,2014-10-10 15:04:01,"SlackTextViewController is awesome! 
I try to use it in my project like this:

<S_CODE_TOKEN>

The problem is the input bar not scroll with the keyboard. 

Another problem is when i push the MessageViewController with hidesBottomBarWhenPushed = YES, the input bar can not begin edit.
",lukewcn,2014-10-10 15:52:14
38,2014-10-10 15:23:21,"Thanks for reporting this.
I managed to reproduce the error, and it's a bug introduced with some latest changes. Basically, we're trying to guess if an external keyboard is being used with `isExternalKeyboard` property, which is updated with `checkForExternalKeyboardInNotification:`.
I forgot to consider the usage of UITabBars. Will fix this soon.

On the meantime, you can just uncomment `checkForExternalKeyboardInNotification:` method and it will work like it should.
",dzenbot,2014-10-10 15:52:14
38,2014-10-10 15:24:18,"I wish there was an easier way to know if the external keyboard is available. Apple is using those APIs privately :(
",dzenbot,2014-10-10 15:52:14
38,2014-10-10 15:52:58,"Give it a try @hit1983 and let me know if it's fixed for you too.
",dzenbot,2014-10-10 15:52:14
38,2014-10-10 16:37:06,"Another problem is when i push the MessageViewController with hidesBottomBarWhenPushed = YES, the input bar can not begin edit.
It just ignore the touch, and seems the ""hidden"" tab bar get the touch event.
code:

<S_CODE_TOKEN>
",lukewcn,2014-10-10 15:52:14
37,2014-10-10 08:09:21,"Added calling textView:shouldChangeTextInRange:replacementText: from delegate when pasting text (just to make it work like in default UITextView). 
",WojciechTrzasko,2014-10-13 16:39:45
37,2014-10-10 14:17:33,"Interesting idea.

I would suggest something like this instead:

<S_CODE_TOKEN>

It's a bit easier to read and we avoid having `slk_insertTextAtCaretRange:` twice. What do you think?
",dzenbot,2014-10-13 16:39:45
37,2014-10-10 14:49:53,"You are 100% right :)
",WojciechTrzasko,2014-10-13 16:39:45
37,2014-10-10 14:51:19,"Want to make that correction on your PR?
",dzenbot,2014-10-13 16:39:45
37,2014-10-10 15:40:32,"Ok. I will change that in pull request.
",WojciechTrzasko,2014-10-13 16:39:45
37,2014-10-13 07:05:34,"Sorry for late response. I've updated pull request.
",WojciechTrzasko,2014-10-13 16:39:45
36,2014-10-09 08:02:39,"we need to add initWithCoder: method if we want to support this class in storyboard 
",emilwojtaszek,2014-10-09 17:45:27
35,2014-10-08 09:05:10,"add keyboard toolbar 

example gif 
![file-list](https://github.com/khan-lau/SlackTextViewController/blob/develop/Screenshots/vk_demo.gif)

demo source:
https://github.com/khan-lau/SlackTextViewController/archive/develop.zip
",khan-lau,2014-10-08 14:15:44
35,2014-10-08 14:15:44,"This goes a bit out of the scope of the project to be merged. Thanks anyway.
",dzenbot,2014-10-08 14:15:44
34,2014-10-08 08:16:31,"![ios simulator screen shot oct 8 2014 4 18 25 pm](https://cloud.githubusercontent.com/assets/790084/4555941/d1ba55b2-4ec3-11e4-8544-47a89cb8fdb6.png)
",simdm,2014-10-08 08:39:24
34,2014-10-08 08:39:24,"You need to set inverted on `SLKTextViewController` to `NO` (https://github.com/slackhq/SlackTextViewController/blob/ef60515a13ac452e21b509de003c04ea7e788959/Source/Classes/SLKTextViewController.h#L68)

Or, if you'd like inverted mode (where cells start at the bottom of the UITableView), set the transform of your cells (https://github.com/slackhq/SlackTextViewController#inverted-mode)
",bradya,2014-10-08 08:39:24
34,2014-10-08 08:57:25,"It's ok, thanks.
",simdm,2014-10-08 08:39:24
34,2014-10-09 22:51:57,"Inverted mode is very troublesome when you have header views, footer views or both (which I use to display a custom activity indicator to support drag-to-refresh in both directions). Non-inverted mode is kind of troublesome too because the content offset isn't accounted for when the keyboard is displayed. I'll see what I can do and submit a PR.
",andrebraga,2014-10-08 08:39:24
34,2014-10-09 22:54:55,"Agreed.
At the beginning, we had support for animating content offset when the keyboard was displayed, while not inverting. But it wasn't working very well on iOS8, so we decided to drop it for now.
Would love to see what you could do for supporting that again ;)
",dzenbot,2014-10-08 08:39:24
33,2014-10-07 23:15:32,,dzenbot,2014-10-08 00:04:52
32,2014-10-07 09:30:22,"A proposed fix for Issue #10 :The textview's top will still change when hardware keyboard is connected.
",mikechan1234,2014-10-07 20:15:13
32,2014-10-07 20:15:13,"This has been fixed in be8154407ad812a2c460b478b366b495152989ff
Thanks anyway!
",dzenbot,2014-10-07 20:15:13
31,2014-10-04 21:28:05,"Incorrect Calculation of Text Input Field Distance from Bottom - #30
",ethanmick,2014-10-04 21:30:09
30,2014-10-04 21:10:42,"When presenting the SlackTextViewController with the keyboard already up, I do this:

<S_CODE_TOKEN>

However, this causes the Text Input Bar to be miscalculated when positioned. I have a Tab Bar in my application, but I hide the tab bar when I push on the message view. It's not technically ""hidden"" though, so the `appropriateKeyboardHeight:` assumes it's lower than it should be.

I've fixed it by adding in the additional check:

<S_CODE_TOKEN>

Checking `self.hidesBottomBarWhenPushed` as well as if the bar is hidden.

Thanks!
",ethanmick,2014-10-04 21:30:10
30,2014-10-04 21:12:05,"That makes total sense. Will add this soon.
",dzenbot,2014-10-04 21:30:10
30,2014-10-04 21:12:48,"Actually, want to submit a PR for this?
",dzenbot,2014-10-04 21:30:10
29,2014-10-02 16:55:37,"it would be nice if they would be available as parameters to be specified.
",valeriomazzeo,2014-10-04 05:10:53
29,2014-10-02 19:16:10,"It's using very standard padding values. Why would you change them?
",dzenbot,2014-10-04 05:10:53
29,2014-10-03 08:12:23,"because of bloody designers :disappointed: 

but, anyway it adds flexibility which is always good.

I am also having problem changing the fonts.

If I change the textview font inside `viewDidLoad` the empty text view start with the wrong size (it becomes 2 height).

Setting the autoHidesSendButton to `FALSE` in `viewDidLoad` cause the send button to have the wrong right padding and also changing the title label font of the send button cause weird behaviour.

It would be very nice if you can have a look because I can't manage to sort it even changing directly your code. damn auto layout :P
",valeriomazzeo,2014-10-04 05:10:53
29,2014-10-04 10:23:33,"thank you so much!

I will try this on monday
",valeriomazzeo,2014-10-04 05:10:53
28,2014-10-02 16:54:14,"the implementation in SAMTextView (https://github.com/soffes/SAMTextView) does and it is a simple drop in:

<S_CODE_TOKEN>
",valeriomazzeo,2014-10-02 19:09:14
28,2014-10-02 17:00:28,"We added a sort of quick patch for updating the placeholder position based on the text content inset in commit a97b68b258c1ec867083b00f81fd55394e733184, but the solution you're suggesting looks way more detailed. Will try it out, thanks!
",dzenbot,2014-10-02 19:09:14
28,2014-10-02 19:08:23,"I have been using samtextview and it always position the placeholder in the right place,.

all the credits to soffes
",valeriomazzeo,2014-10-02 19:09:14
28,2014-10-02 19:12:14,"Thanks for the suggestion. I've re-used part of it, and took a moment to refactor some code too.

We are using a UILabel instead of drawing the string, mainly because when the text input gets resized animatedly the render gets stretched too, which looks bad.
",dzenbot,2014-10-02 19:09:14
28,2014-10-03 08:06:50,"I understand. The key is in this method `(CGRect)placeholderRectForBounds:(CGRect)bounds`.
Instead of render the text in that rect, set that rect to be the frame of the label :)

just saw you did it, good job!
",valeriomazzeo,2014-10-02 19:09:14
27,2014-10-01 18:49:56,"Hey guys, love the control.

On iOS 7/8 when you do a ""pan to go back"" from the left side of the screen, the text input view slowly hides, because it gets a notification that the keyboard is going to hide. However, the TextView should not hide in such cases, á la iMessage.

I can do this myself by overriding:

<S_CODE_TOKEN>

And I set `self.isHiding = YES` in viewWillDisappear and `self.isHiding = NO` in viewDidAppear.

However, this requires making `willShowOrHideKeyboard:` public, which isn't good. Perhaps this could be implemented internally, or have a Flag somewhere that could be switched to stop it?

(Also, I think iOS 7 makes this harder because the View lifecycle events are fired in the wrong order).

Thanks!
",ethanmick,2014-10-01 19:54:25
27,2014-10-01 19:42:35,"Good catch! I didn't test it yet when the controller is pushed/popped by the navigation controller.

I was able to reproduce it and to make a clean fix using UIViewController's `isMovingFromParentViewController`.

So basically, only in `viewWillDisappear:` and `viewDidDisappear:`, the property `isMovingFromParentViewController` gets flagged to `YES` if the view controller is being ""swiped-to-pop"", so setting textView's custom property `didNotResignFirstResponder` to YES on `viewWillDisappear:` skips the keyboard from being dismissed, which fixes the odd animated dismissal.

Will push the fix in a few minutes after a few tests.
",dzenbot,2014-10-01 19:54:25
27,2014-10-02 12:41:52,":+1: Incredibly Fast response, thank you!
",ethanmick,2014-10-01 19:54:25
26,2014-10-01 04:44:30,,dzenbot,2014-10-01 04:52:28
25,2014-09-30 08:59:21,"I'm trying to get the text typed into the text view when the 'Send' button is pressed.

When I access `self.textView.text` even when there is text typed into the field it returns an empty string.

Am I accessing the text correctly?
",nfeiglin,2014-09-30 12:45:19
25,2014-09-30 12:45:19,"Got it. Needed to call `[self.textView.text copy]`.
",nfeiglin,2014-09-30 12:45:19
25,2014-09-30 14:27:46,"Yes, you must copy the string, and do it before `[super didPressRightButton:sender];`. Super will clear the text field.
",dzenbot,2014-09-30 12:45:19
24,2014-09-29 13:58:26,"I use chat in a popover and there it doesn't have sense to introduce a bottom offset to the bar. I've created a property to give the user the option to control it.
",pepibumur,2014-09-29 15:26:05
24,2014-09-29 14:36:23,"This has been addressed already in #14. Will son be available in a pod release.
Thanks anyway.
",dzenbot,2014-09-29 15:26:05
23,2014-09-29 02:41:09,"I got confused by the Readme documentation being out of date so I fixed it. Please review and ensure my edits are correct.
",nfeiglin,2014-09-29 02:44:04
22,2014-09-28 22:59:40,"The keyboard drag gesture trigger should include the input view. Witnessed on iOS 8, haven't tested on iOS 7.
",efremidze,2014-10-13 20:37:04
22,2014-09-28 23:03:24,"I agree with you on that one, but the technique used (which is kind of a hack) for the keyboard dragging doesn't really allow to include the input view.
I was thinking to combine it with a pan gesture in the text input view, but haven't figured it out yet.

PS: And this happens in iOS7 too.
",dzenbot,2014-10-13 20:37:04
22,2014-09-28 23:15:26,"To explain a bit more of how the dragging happens:
- a custom empty view is set as `accessoryView` of the `textView`
- this `accessoryView` uses KVO to detect frame/center values changes
- based on the value changes, we modify the keyboard constraint to match the keyboard position

If the text input view would be the `accessoryView` of the `textView`, it would be possible to move it all together while dragging, but it wasn't designed like so since we needed to have the text input view visible even when the keyboard was not active.
",dzenbot,2014-10-13 20:37:04
22,2014-09-28 23:35:49,"I completely agree with you. Its a hack which I don't recommend doing, but its useful.
",efremidze,2014-10-13 20:37:04
22,2014-09-28 23:37:01,"We tried different solutions, this was the most clean and less hacky, but still is. Should revisit some day and try something even less hacky.
",dzenbot,2014-10-13 20:37:04
22,2014-09-28 23:37:43,"I have done this too many times. I can make a pull request which would allow this.
",efremidze,2014-10-13 20:37:04
22,2014-09-28 23:38:11,"Go ahead! Will love to see your solution.
",dzenbot,2014-10-13 20:37:04
21,2014-09-27 14:32:27,"update to 1.1
",khan-lau,2014-09-28 01:37:27
21,2014-09-27 14:40:55,"Ignore this merge pull request!  sorry
",khan-lau,2014-09-28 01:37:27
20,2014-09-27 07:46:41,"update to 1.1
",khan-lau,2014-09-27 11:45:20
20,2014-09-27 11:45:20,"I'm guessing this PR is a mistake.
",dzenbot,2014-09-27 11:45:20
20,2014-09-27 14:33:55,"yes, sorry!!
",khan-lau,2014-09-27 11:45:20
19,2014-09-27 07:29:44,"some typo error
",squarezw,2014-09-27 11:37:52
18,2014-09-26 17:49:26,"Class extensions (aka categories) provided by libraries should always prefix their property and method names.
- Unprefixed methods and properties can collide with other libraries and cause weird behavior or crashes (usually causes a compiler warning).
- Unprefixed methods and properties can even collide with private iOS API causing weird behavior or crashes at runtime without prior warning.

In this project there was a conflict with the private iOS method [`-[NSObject safeValueForKey:]`](https://github.com/EthanArbuckle/IOS-7-Headers/blob/master/PrivateFrameworks/AccessibilityUtilities.framework/NSObject-UIAccessibilitySafeCategory.h). It was overwritten by `UIScrollView (SLKAdditions)`. iOS called this method instead of its own implementation which caused an unbalanced retain/release count leading to a crash.
",fluidsonic,2014-09-28 01:35:57
18,2014-09-26 17:52:43,"Namespaces in Obj-C!
Should have add this from the beginning. Thanks a lot!
Will review later today
",dzenbot,2014-09-28 01:35:57
18,2014-09-26 17:54:08,"Not having to prefix everything is one reason it's fun to write extensions in Swift :)
",fluidsonic,2014-09-28 01:35:57
18,2014-09-28 01:35:57,"Merged in 36c109432d2c34c1026dffe1cd6d4dd8f359a8c4
",dzenbot,2014-09-28 01:35:57
17,2014-09-26 12:38:19,"This PR fixes a minor typo in the readme file.
",nfeiglin,2014-09-26 14:23:05
17,2014-09-26 14:23:17,"Thanks!
",dzenbot,2014-09-26 14:23:05
16,2014-09-26 12:19:13,"I'd like to be able to assign the tableview as an IBOutlet from a storyboard, so I can also use prototype cells for example. 

A bigger problem however is that I'm not calling any of the init methods when the controller is instantiated from the storyboard, so it would be handy to be able to call `tableViewWithStyle:` and `commonInit` from within my `initWithCoder:` method. Or that SlackTextViewController would implement the `initWithCoder:` method?
",kevinrenskers,2014-10-09 21:04:17
16,2014-09-26 16:43:17,"We added `IBOutlet` support in 463b1cfc6c3485c4fbb7743269e919d815112ad7, but haven't yet figure how to add support for both,  `tableViewWithStyle:` and `initWithCollectionViewLayout:` from InterfaceBuilder. Any suggestion?

SlackTextViewController should implement the `initWithCoder:` but in a flexible way to be able to pick either a tableView or collectionView. In XCode6 it seems that it is possible to create custom components to be reused, any idea how?
",dzenbot,2014-10-09 21:04:17
16,2014-09-26 16:45:13,"If you simply make those 3 methods (tableViewWithStyle, initWithCollectionViewLayout and commonInit) public methods, then I can do something like this: 

<S_CODE_TOKEN>
",kevinrenskers,2014-10-09 21:04:17
16,2014-09-26 16:47:29,"Making `commonInit` public doesn't sound right.
What if we have the same implementation you're suggesting inside of `SlackTextViewController`, so when using in InterfaceBuilder, the default behaviour would be to create a tableView.

It would be nice to be able to pick which type of cell container you would like from IB tho.
",dzenbot,2014-10-09 21:04:17
16,2014-09-26 16:50:28,"Yeah, having initWithCoder always create a tableview is a bit weird when you want to use a collectionview. Maybe it would be better if SlackTextViewController internally does the commonInit, and your subclass calls the tableViewWithStyle or initWithCollectionViewLayout. I would definitely make those 2 methods public.
",kevinrenskers,2014-10-09 21:04:17
16,2014-09-26 16:53:12,"Actually you're right, no need to have a `initWithCoder:` internally, you can simply do this:

<S_CODE_TOKEN>

Since `initWithTableViewStyle:` is calling `commonInit`, so no need to expose `commonInit`.

Both `initWithTableViewStyle` or `initWithCollectionViewLayout:` are public.
",dzenbot,2014-10-09 21:04:17
16,2014-09-26 17:14:06,"Well if my subclass does this:

<S_CODE_TOKEN>

There are a couple of problems. First of all, `tableViewWithStyle:` is private. Secondly, it does not call `commonInit`.

Basically my view controller will never call one of your init methods. Only `tableViewWithStyle:` or `collectionViewWithLayout:`. So I would make those 2 methods public, and in SlackTextViewController add this:

<S_CODE_TOKEN>
",kevinrenskers,2014-10-09 21:04:17
16,2014-09-28 07:02:22,"Yes, `tableViewWithStyle:`, `collectionViewWithLayout:` and `commonInit` are private, and should stay private for many reasons.

But after thinking about it, I came up with (I think) an even better solution.

You subclass will need to override any of following 2 class methods.
If you want to configure your subclass to be using UITableView:

<S_CODE_TOKEN>

or UICollectionView:

<S_CODE_TOKEN>

You won't need to override `initWithCoder:`, and the private methods will be called depending of which configuration you assigned. If no configuration is set, by default a UITableView will be created with UITableViewStylePlain.

This is what will happen in SlackTextViewController 's `initWithCoder:`

<S_CODE_TOKEN>
",dzenbot,2014-10-09 21:04:17
16,2014-10-04 14:52:42,":+1: 
",ethanmick,2014-10-09 21:04:17
16,2014-10-07 10:49:34,"Yup, sounds like a good plan.
",kevinrenskers,2014-10-09 21:04:17
16,2014-10-09 20:07:13,"Unless I'm missing something (which would explain some difficulties I'm finding) this seems simpler:

<S_CODE_TOKEN>

Unfortunately under storyboards neither -[initWithCoder] nor -[awakeFromNib] are appropriate moments to configure views, constraints and whatnot because the earliest moment you have the view outlet set up and fully functional is when inside -[viewDidLoad]. But I think this is a step in the right direction. I'm still having a number of problems setting up the SLKTextViewController from a storyboard, but they're related to constraints and positioning.

By the way, when the VC is instantiated from a storyboard, I had to make a number of changes to -[setupViewConstraints] to conform, because otherwise the system will create a lot of constraints for you and the constraints array bring unexpected elements. Perhaps the best solution is to find something more robust than indexing the array directly. But for now this will do:

<S_CODE_TOKEN>
",andrebraga,2014-10-09 21:04:17
16,2014-10-09 21:04:15,"This is now close with 10b0b457b9e296732199a1ac2b05532198e1af9c

@andrebraga Please take a look at the latest changes, and let me know if you still facing issues with view constraints.

Now, the `initWithCoder:` isn't configuring constraints any views, just initialising the appropriate one (either a `UITableView` or `UICollectionView` instance). In `loadView`, the views are added to the view hierarchy and view constraints are configured.

Seems a bit simpler than the approach you're suggesting.
",dzenbot,2014-10-09 21:04:17
16,2014-10-09 21:45:17,"The thing is, per the documentation on `loadView`, ""If you use Interface Builder to create your views and initialize the view controller, you must not override this method."".

I'll let you know shortly about the constraints.
",andrebraga,2014-10-09 21:04:17
16,2014-10-09 22:00:34,"Now I see what you meant about the constraints. The thing is, since you're creating everything ""by hand"", I kind of lost the ability to set up headers and cells and outlets on Interface Builder, unless I drop to xibs. Which is kind of lame since the whole project is on storyboards.

Before the commit you mentioned I was only struggling with a handful of weirdnesses that I'm positive are related to how you assumed scroll view insets / extended edges are managed by the controller, which I happened to change on that particular controller. Indeed the only thing left is a 5-point gap between the text input bar and the keyboard. Seems to be a miscalculation involving the tab bar of the UITabBarController and the height of the text input bar itself (49 vs 44 points respectively). Still looking into it.
",andrebraga,2014-10-09 21:04:17
16,2014-10-09 22:03:56,"By the way, if you manage to bring back the IBOutlets, Swift will delete the setters because you declared them readonly in the public interface, making it impossible to `setValue:forKey:` them (which is what the `initWithCoder` does).
",andrebraga,2014-10-09 21:04:17
16,2014-10-09 22:05:50,"Sorry, I don't use Storyboards very often, so I'm trying my best to support it for people depending on them.

So you're saying it's good not to add the `IBOutlet` macros?
",dzenbot,2014-10-09 21:04:17
16,2014-10-09 22:47:18,"Well, it so happened that the constraint issues I was seeing was not totally constraint-related, but another component was messing with the `contentInset`; however, the 5-point gap between the bar and the keyboard is still there when using your solution ""pure"", so I'm kind of puzzled right now. Still investigating...

I decided to bite the bullet and go xib for the cells and semi-manually adding the header for the table view (I dragged it to the proxy area below the view controller and created an outlet for it). But so far there were no mysteries regarding custom table views and storyboards, only the remarks I already made.

If you end up re-adding IBOutlet, in order to still support Swift, they must be declared readwrite (i.e., not declared readonly) because they are considered stored properties, which can't have an extension redeclaring them as readwrite. And if you end up re-adding IBOutlet, there's a big fat chance those unexpected constraints will show up again, and the filter I proposed would have to be reintroduced, I think. Or something more robust.
",andrebraga,2014-10-09 21:04:17
16,2014-10-10 20:45:25,"Hi there,

Colour me puzzled but, indeed, there are situations where the constraints become messed up because the system somehow sneaked them in. It's not very consistent and the filter I proposed did solve my issues.
",andrebraga,2014-10-09 21:04:17
16,2016-09-21 05:00:25,"Sorry to dig up old bones!

But it seems that it's still no possible to instantiate a `SLKTextViewController` subclass using storyboard. Since the outlets aren't connected before `initWithCoder` initialer, the `tableViewWithStyle:` will create a table view, which later gets replaced by the storyboard table view once the outlet does get connected. This proves to be an issue once the constraints are setup (`slk_setupViewConstraints`) since the `scrollViewProxy` property is initialised with the lazy created table view, rather than the outlet connected table view...
",markst,2014-10-09 21:04:17
15,2014-09-26 10:58:13,"The designated initializer of `UIViewController` is [`initWithNibName:bundle:`](https://developer.apple.com/library/ios/Documentation/UIKit/Reference/UIViewController_Class/index.html#//apple_ref/occ/instm/UIViewController/initWithNibName:bundle:), not `init`.

When calling `[super init]` then `UIViewController` calls `[self initWithNibName:bundle:]` internally. Since it's calling on `self` the call goes back down in the inheritance hierarchy to the derived classes and then back up the hierarchy again.

This breaks the typical [initializer pattern](https://blog.twitter.com/2014/how-to-objective-c-initializer-patterns). It also crashes when deriving from `SLKTextViewController` in Swift (`fatal error: use of unimplemented initializer 'init(nibName:bundle:)' for class 'App.ChatConversationScreen'`) since the derived class has a different designated initializer and cannot be initialized twice.
",fluidsonic,2014-09-26 16:36:40
15,2014-09-26 16:36:40,"Merged in f80656ebabeaf954748e0c9efbc4608108f21122
Thanks for this! After many years using UIViewController, I never knew that `init` was calling `initWithNibName:bundle:`.
",dzenbot,2014-09-26 16:36:40
14,2014-09-25 18:14:35,"When appearing in a popover, no adjustment for a keyboard should be made.
",russbishop,2014-09-26 05:33:33
14,2014-09-26 05:34:51,"You can now set `presentedInPopover` to `YES` to stop the keyboard from moving the text input bar. This will also disable the tap gesture on the tableView/collectionView to dismiss the keyboard.
",dzenbot,2014-09-26 05:33:33
13,2014-09-25 17:50:38,"The commonInit method touches the view, which triggers viewDidLoad to fire before a subclass can finish it's init. In our case we can't run the viewDidLoad logic without the values provided to the initializer, which we don't have because it fires prematurely.

All view manipulation logic should be in viewDidLoad, never in the init path.
",russbishop,2014-09-25 17:55:39
13,2014-09-25 17:55:39,"Nevermind, I see the update, the pod spec is just out of date
",russbishop,2014-09-25 17:55:39
13,2014-09-25 17:56:52,"Yes, it's fixed now. We will release a new pod later today.
",dzenbot,2014-09-25 17:55:39
12,2014-09-25 10:25:56,"Please see comment message.
I created a demo to reproduce those issue. You can download it [here](https://github.com/VincentSit/SlackTextViewControllerDemo).
Please have a look at the Podfile.
",VincentSit,2014-09-25 14:52:49
12,2014-09-25 10:29:45,"I'm sorry I don't know how to add these pr to #5, so I submit a new pr.
",VincentSit,2014-09-25 14:52:49
12,2014-09-25 14:52:49,"I've included your fixes in separate commits (815bdc58504a59c12eac5b94cbc477268bdeb01d 7137cdc657b60cc3be480dd03ba33f60412e717c 5c7a135c4dfd871c885bc872a0458b673abaf172), since merging this might introduce more unnecessary conflicts. Thanks a lot for the help!
",dzenbot,2014-09-25 14:52:49
12,2014-09-26 09:21:43,"Thanks!
",VincentSit,2014-09-25 14:52:49
11,2014-09-25 06:49:35,"I ran into your code because I was trying to solve the same problem. Unfortunately interactive dismiss mode doesn't work on iOS7. The problem is you're relying on inputAccessoryView's superview to change its frame as the keyboard is animating, but that doesn't happen on iOS7.

On iOS7, your superview doesn't move (and neither do any of its subviews). What happens is the superview gets added to a separate window, and then its layer is animated (I can see that if I try monitoring its frame, because I get the notification once and then it contains a CASpringAnimation on position). 

That makes things difficult because you can't directly track the layer's position while it's animating. 

I tried using CADisplayLink but I can't synchronise it properly so the input view is always lagging behind the keyboard as it moves.
",ivgalic,2014-09-25 14:48:59
11,2014-09-25 06:50:56,"I meant, I tried using CADisplayLink to continously get the position of the keyboard's layer, but it's not enough. I'll probably switch to the implementation using two input fields where one acts as inputAccessoryView of the other and then switch between them.
",ivgalic,2014-09-25 14:48:59
11,2014-09-25 12:24:45,"The current keyboard panning implementation is inspired from [CVKeyboardDismiss](https://github.com/camitox/CVKeyboardDismiss).
It was working perfectly on iOS7, but then it was broken on iOS8. So I made some fixes and might have broken it on iOS7. Will have a look.
Are you compiling with iOS7 SDK?
",dzenbot,2014-09-25 14:48:59
11,2014-09-25 14:51:13,"So the fix was pretty easy:
For some reason, the acessoryView's superview's frame isn't available anymore in iOS8, so that's why we're using its center property instead. And with iOS7, we're still relying in its frame, and works well.
In iOS7, the vertical scrollview indicator does oddly resize which doesn't look very good. I have tried to fix it before without success...
",dzenbot,2014-09-25 14:48:59
11,2014-09-26 03:55:22,"Sorry, my mistake. I have an implementation of my own which is based on the same ideas as yours. When I tried your messenger example on ios7 it didn't work properly so I assumed the problem is the same.

My issue was that I was completely relying on frame change notifications - which works fine on iOS8, but not on iOS7 (where you only get them while the user is dragging the keyboard). The easiest solution is what you're already doing which is using the combination of keyboard will show / hide and observing frame changes.

Anyway, thanks for the fix!
",ivgalic,2014-09-25 14:48:59
10,2014-09-25 05:03:27,"I found that when the hardware keyboard is connected, and then touch the textfield, the textview's top will still change. 
",zengyun-programmer,2014-10-13 20:38:46
10,2014-09-25 05:31:32,"![ios simulator screen shot 2014 9 25 1 04 00](https://cloud.githubusercontent.com/assets/1861712/4399819/26bbe5ca-4475-11e4-8175-2a255b664cec.png)
The bug's screenshot is above
",zengyun-programmer,2014-10-13 20:38:46
10,2014-09-25 12:10:19,"I think this is a XCode6 simulator bug. See #8 
Have you tried on a device instead?
",dzenbot,2014-10-13 20:38:46
10,2014-09-25 14:52:12,"hi @dzenbot  
I have tried on iPhone 5s with a bluetooth keyboard, this bug appeared too. The iOS version of my iPhone is iOS 8.
",zengyun-programmer,2014-10-13 20:38:46
10,2014-09-26 05:37:39,"I've seen other apps with this issue (ie: whatsapp), and once it happens, the whole OS doesn't show the keyboard anymore (with or without external keyboard). Have you experienced something similar?
",dzenbot,2014-10-13 20:38:46
10,2014-09-26 06:16:12,"I tried this in my App. The bug didn't happen.
",zengyun-programmer,2014-10-13 20:38:46
10,2014-09-26 06:51:08,"My simulator hasn't loaded a keyboard since xcode 6 came out - works on my phone though. (for all apps)
",toadums,2014-10-13 20:38:46
10,2014-09-30 14:30:54,"Is this still happening for you @zengyun-programmer?
",dzenbot,2014-10-13 20:38:46
10,2014-10-03 15:23:53,"it happens consistently to me on iOS 7
",valeriomazzeo,2014-10-13 20:38:46
10,2014-10-03 15:26:39,"Simulator or device? Any device?
Only when using this library?

Any idea how to reproduce?
",dzenbot,2014-10-13 20:38:46
10,2014-10-03 15:44:44,"device with iOS 7
app compiled with Xcode 6 straight away into the device.

it also happens on the simulator compiled for iOS 8
",valeriomazzeo,2014-10-13 20:38:46
10,2014-10-06 14:57:53,"What worked for me is if you change the return value of keyPathForKeyboardingHandling in SCKInputAccessoryView's method to just NSStringFromSelector(@selector(centre)). This corrects the textview's top. ""SCKInputAccessoryViewKeyboardFrameDidChangeNotification"" gets called a second time in iOS 7 when the keyboard appears, so scrollViewHC in SLKTextViewController gets recalculated again.
",mikechan1234,2014-10-13 20:38:46
10,2014-10-07 20:14:52,"Fixed with be8154407ad812a2c460b478b366b495152989ff
",dzenbot,2014-10-13 20:38:46
10,2014-10-09 14:55:16,"I confirm that it is fixed on iOS 8 but it still happening on iOS 7 :(
",valeriomazzeo,2014-10-13 20:38:46
10,2014-10-09 14:57:06,"iPhone? iPad? Both?
Using a custom keyboard, or native keyboard?

Would appreciate as much info as possible to fix it properly. Thanks!
",dzenbot,2014-10-13 20:38:46
10,2014-10-09 20:02:29,"I was only able to test it on an iPad 2 running iOS 7 with native keyboard so far.
",valeriomazzeo,2014-10-13 20:38:46
10,2014-10-09 20:03:00,"Compiling with iOS8 SDK, or 7?
",dzenbot,2014-10-13 20:38:46
10,2014-10-10 03:48:32,"<S_CODE_TOKEN>
",khan-lau,2014-10-13 20:38:46
10,2014-10-10 14:11:56,"Will something like that solve the issue @valeriomazzeo?
Thanks @khan-lau 
",dzenbot,2014-10-13 20:38:46
10,2014-10-13 20:38:46,"This should be fixed now, since there's a better external keyboard detection to avoid it.
Will close for now.
",dzenbot,2014-10-13 20:38:46
10,2014-10-14 09:55:53,"compiled for iOS 8 with Xcode 6.0.1.

will have a look at the new version and see if it is fixed now.
",valeriomazzeo,2014-10-13 20:38:46
10,2014-10-14 10:08:28,"On 1.2.2 and 1.2.3 I am having the following same problem:

I have tried on iPad 2 (simulator) running iOS 7.1 compiled for iOS 8.0 with Xcode 6.0.1

When tapping on the textview I seems to get an infinite loop:

![screen shot 2014-10-14 at 11 04 53](https://cloud.githubusercontent.com/assets/1882080/4627316/f3436492-5389-11e4-8ee0-167100c4d775.png)

It happens when you tap on the text view or when you start typing as well.

The first call seems to be:

<S_CODE_TOKEN>
",valeriomazzeo,2014-10-13 20:38:46
10,2014-10-14 15:14:58,"Thanks for reporting @valeriomazzeo. This is now fixed in https://github.com/slackhq/SlackTextViewController/issues/49
Next time, please submit these things in a new issue ;)
",dzenbot,2014-10-13 20:38:46
9,2014-09-25 02:38:54,"Hi! Thanks for making this. I noticed a couple little things to tweak in the README
",douglasdollars,2014-09-25 02:40:33
9,2014-09-25 02:41:43,"Thanks a lot! Always good to have more eyes on it ;)
",dzenbot,2014-09-25 02:40:33
8,2014-09-24 22:08:31,"Just FYI, the keyboard does not appear in the simulators (just blank white space). Xcode 6, tested iPhone and iPad on 7.1 and 8.0.

Tested iPad Air real device running 8.0 and the keyboard does appear.
",russbishop,2014-09-24 23:08:33
8,2014-09-24 22:10:13,"I think this is a bug in the simulator. It looks like sometimes it automatically switches to `Software Keyboard` to ON. Try pressing `⌘+K`, that should show your keyboard.
",dzenbot,2014-09-24 23:08:33
8,2014-09-24 23:04:11,":+1: @dzenbot I've noticed this in many places with Xcode 6 and the simulator. I really hope it's a bug but it's on Apple's table, really annoying change from Xcode 5 sim.
",acrookston,2014-09-24 23:08:33
8,2014-09-24 23:08:33,"Annoying, indeed. Thanks for the heads up anyway!
",dzenbot,2014-09-24 23:08:33
7,2014-09-24 21:36:07,,dzenbot,2014-09-24 21:38:24
6,2014-09-24 11:26:57,"Because auto-correction in iOS8 will override any auto-completed text while typing something like `@allan`, we must disable auto-correction. Either hide the QuickType bar, or disable auto-correction momentarily.
",dzenbot,2014-09-24 21:38:25
5,2014-09-24 11:20:25,"Related issue: #3 
",VincentSit,2014-09-25 03:43:34
5,2014-09-24 11:51:38,"Thanks!
The reason why to change the size of `leftButton` dynamically is that after moving those code into `viewDidLoad`, when `updateConstraintConstants` of `SLKTextInputbar` is executed, `leftButton` still has no image and you couldn't get the correct size.
So this feature is got by chance by fix that bug.
",VincentSit,2014-09-25 03:43:34
5,2014-09-25 03:42:37,"This pr will cause a crash (about KVO), I will submit a new patch soon.
",VincentSit,2014-09-25 03:43:34
5,2014-09-25 03:43:34,"Merged in ce963c98f970b150b7c79a31f0b20cb51a3f0e61
",dzenbot,2014-09-25 03:43:34
5,2014-09-25 03:44:55,"Anyway of reproducing the crash? If you patch it, `pull --rebase` first for getting the latest changes.
",dzenbot,2014-09-25 03:43:34
5,2014-09-25 03:52:14,"From a viewController push to `SlackTextViewController`(subclass), and pop back.
It will crash at `[self removeObserver:self.leftButton.imageView forKeyPath:NSStringFromSelector(@selector(image))];` in `dealloc` of `SLKTextInputbar`
",VincentSit,2014-09-25 03:43:34
5,2014-09-25 04:01:32,"My solution is this, what do you think?

<S_CODE_TOKEN>
",VincentSit,2014-09-25 03:43:34
5,2014-09-25 04:06:24,"That will solve the crash, but I wonder why it still crashes when there is an image assigned to the `leftButton`
",dzenbot,2014-09-25 03:43:34
5,2014-09-25 04:11:30,"I'm sorry!  it is a mistake. Should be :
`[self.leftButton.imageView removeObserver:self forKeyPath:NSStringFromSelector(@selector(image))];`
",VincentSit,2014-09-25 03:43:34
5,2014-09-25 04:28:35,"`[_leftButton.imageView removeObserver:self forKeyPath:NSStringFromSelector(@selector(image))];` will be better.

Do you need me to patch this?
",VincentSit,2014-09-25 03:43:34
4,2014-09-24 10:31:42,,yury,2014-09-24 14:40:59
3,2014-09-24 09:54:26,"Thanks for sharing this library. 

This is a common sense, You should put that code(`commonInit`) in `viewDidLoad`

<S_CODE_TOKEN>

Normal should be 1, 2, 3. 
However, it is 1, 3, 2.
",VincentSit,2014-09-25 03:44:02
3,2014-09-24 11:23:11,"Very good point
",dzenbot,2014-09-25 03:44:02
3,2014-09-25 03:44:02,"Fixed with merge of ce963c98f970b150b7c79a31f0b20cb51a3f0e61
Thanks!
",dzenbot,2014-09-25 03:44:02
2,2014-09-24 04:27:18,,RobinChao,2014-09-27 11:46:10
2,2014-09-24 11:23:45,"Can you please describe the issue a bit more?
",dzenbot,2014-09-27 11:46:10
2,2014-09-25 09:25:04,"First,  I input more whiteSpace; then, i input one word,last, click send. U can see. Thanks.
",RobinChao,2014-09-27 11:46:10
2,2014-09-25 10:54:54,"@EvoRobin Unable to reproduce this issue, and I tested many times. Can you explain  in detail how to reproduce it? 
",VincentSit,2014-09-27 11:46:10
1,2014-09-24 02:43:30,"When i run your project in iOS7,that crash in [UIScreen mainScreen].nativeScale; case.but your readme tell this support iOS7 and iOS8.
",RobinChao,2014-09-24 03:04:10
1,2014-09-24 03:07:14,"Thanks for reporting this!
",dzenbot,2014-09-24 03:04:10
